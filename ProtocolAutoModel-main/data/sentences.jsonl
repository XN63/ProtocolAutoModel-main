{"sent_id": "1-p1-s1", "section": "1", "anchor": "#name-overview", "para_id": "1-p1", "text": "QUIC is a secure general-purpose transport protocol.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p2-s2", "section": "1", "anchor": "#name-overview", "para_id": "1-p1", "text": "This document defines version 1 of QUIC, which conforms to the version-independent properties of QUIC defined in [ QUIC-INVARIANTS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p3-s1", "section": "1", "anchor": "#name-overview", "para_id": "1-p2", "text": "QUIC is a connection-oriented protocol that creates a stateful interaction between a client and server. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1-p4-s1", "section": "1", "anchor": "#name-overview", "para_id": "1-p3", "text": "The QUIC handshake combines negotiation of cryptographic and transport parameters.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p5-s2", "section": "1", "anchor": "#name-overview", "para_id": "1-p3", "text": "QUIC integrates the TLS handshake [ TLS13 ] , although using a customized framing for protecting packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p6-s3", "section": "1", "anchor": "#name-overview", "para_id": "1-p3", "text": "The integration of TLS and QUIC is described in more detail in [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p7-s4", "section": "1", "anchor": "#name-overview", "para_id": "1-p3", "text": "The handshake is structured to permit the exchange of application data as soon as possible.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p8-s5", "section": "1", "anchor": "#name-overview", "para_id": "1-p3", "text": "This includes an option for clients to send data immediately (0-RTT), which requires some form of prior communication or configuration to enable. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1-p9-s1", "section": "1", "anchor": "#name-overview", "para_id": "1-p4", "text": "Endpoints communicate in QUIC by exchanging QUIC packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p10-s2", "section": "1", "anchor": "#name-overview", "para_id": "1-p4", "text": "Most packets contain frames, which carry control information and application data between endpoints.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1-p11-s3", "section": "1", "anchor": "#name-overview", "para_id": "1-p4", "text": "QUIC authenticates the entirety of each packet and encrypts as much of each packet as is practical.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p12-s4", "section": "1", "anchor": "#name-overview", "para_id": "1-p4", "text": "QUIC packets are carried in UDP datagrams [ UDP ] to better facilitate deployment in existing systems and networks. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p13-s1", "section": "1", "anchor": "#name-overview", "para_id": "1-p5", "text": "Application protocols exchange information over a QUIC connection via streams, which are ordered sequences of bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p14-s2", "section": "1", "anchor": "#name-overview", "para_id": "1-p5", "text": "Two types of streams can be created: bidirectional streams, which allow both endpoints to send data; and unidirectional streams, which allow a single endpoint to send data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1-p15-s3", "section": "1", "anchor": "#name-overview", "para_id": "1-p5", "text": "A credit-based scheme is used to limit stream creation and to bound the amount of data that can be sent. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1-p16-s1", "section": "1", "anchor": "#name-overview", "para_id": "1-p6", "text": "QUIC provides the necessary feedback to implement reliable delivery and congestion control.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p17-s2", "section": "1", "anchor": "#name-overview", "para_id": "1-p6", "text": "An algorithm for detecting and recovering from loss of data is described in Section 6 of [ QUIC-RECOVERY ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p18-s3", "section": "1", "anchor": "#name-overview", "para_id": "1-p6", "text": "QUIC depends on congestion control to avoid network congestion.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p19-s4", "section": "1", "anchor": "#name-overview", "para_id": "1-p6", "text": "An exemplary congestion control algorithm is described in Section 7 of [ QUIC-RECOVERY ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p20-s1", "section": "1", "anchor": "#name-overview", "para_id": "1-p7", "text": "QUIC connections are not strictly bound to a single network path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p21-s2", "section": "1", "anchor": "#name-overview", "para_id": "1-p7", "text": "Connection migration uses connection identifiers to allow connections to transfer to a new network path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p22-s3", "section": "1", "anchor": "#name-overview", "para_id": "1-p7", "text": "Only clients are able to migrate in this version of QUIC.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p23-s4", "section": "1", "anchor": "#name-overview", "para_id": "1-p7", "text": "This design also allows connections to continue after changes in network topology or address mappings, such as might be caused by NAT rebinding. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p24-s1", "section": "1", "anchor": "#name-overview", "para_id": "1-p8", "text": "Once established, multiple options are provided for connection termination.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p25-s2", "section": "1", "anchor": "#name-overview", "para_id": "1-p8", "text": "Applications can manage a graceful shutdown, endpoints can negotiate a timeout period, errors can cause immediate connection teardown, and a stateless mechanism provides for termination of connections after one endpoint has lost state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "1-p26-s1", "section": "1", "anchor": "#name-overview", "para_id": "1-p9", "text": "1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1-p27-s2", "section": "1", "anchor": "#name-overview", "para_id": "1-p9", "text": "Document Structure This document describes the core QUIC protocol and is structured as follows: ¶ Streams are the basic service abstraction that QUIC provides. ¶ Section 2 describes core concepts related to streams, ¶ Section 3 provides a reference model for stream states, and ¶ Section 4 outlines the operation of flow control. ¶ Connections are the context in which QUIC endpoints communicate. ¶ Section 5 describes core concepts related to connections, ¶ Section 6 describes version negotiation, ¶ Section 7 details the process for establishing connections, ¶ Section 8 describes address validation and critical denial-of-service mitigations, ¶ Section 9 describes how endpoints migrate a connection to a new network path, ¶ Section 10 lists the options for terminating an open connection, and ¶ Section 11 provides guidance for stream and connection error handling. ¶ Packets and frames are the basic unit used by QUIC to communicate. ¶ Section 12 describes concepts related to packets and frames, ¶ Section 13 defines models for the transmission, retransmission, and acknowledgment of data, and ¶ Section 14 specifies rules for managing the size of datagrams carrying QUIC packets. ¶ Finally, encoding details of QUIC protocol elements are described in: ¶ Section 15 (versions), ¶ Section 16 (integer encoding), ¶ Section 17 (packet headers), ¶ Section 18 (transport parameters), ¶ Section 19 (frames), and ¶ Section 20 (errors). ¶ Accompanying documents describe QUIC's loss detection and congestion control [ QUIC-RECOVERY ] , and the use of TLS and other cryptographic mechanisms [ QUIC-TLS ] . ¶ This document defines QUIC version 1, which conforms to the protocol invariants in [ QUIC-INVARIANTS ] . ¶ To refer to QUIC version 1, cite this document.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "1-p28-s3", "section": "1", "anchor": "#name-overview", "para_id": "1-p9", "text": "References to the limited set of version-independent properties of QUIC can cite [ QUIC-INVARIANTS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p29-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p10", "text": "This document describes the core QUIC protocol and is structured as follows: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p30-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p11", "text": "Streams are the basic service abstraction that QUIC provides. ¶ Section 2 describes core concepts related to streams, ¶ Section 3 provides a reference model for stream states, and ¶ Section 4 outlines the operation of flow control. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1.1-p31-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p12", "text": "Streams are the basic service abstraction that QUIC provides. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p32-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p13", "text": "Section 2 describes core concepts related to streams, ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p33-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p14", "text": "Section 3 provides a reference model for stream states, and ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1.1-p34-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p15", "text": "Section 4 outlines the operation of flow control. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1.1-p35-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p16", "text": "Connections are the context in which QUIC endpoints communicate. ¶ Section 5 describes core concepts related to connections, ¶ Section 6 describes version negotiation, ¶ Section 7 details the process for establishing connections, ¶ Section 8 describes address validation and critical denial-of-service mitigations, ¶ Section 9 describes how endpoints migrate a connection to a new network path, ¶ Section 10 lists the options for terminating an open connection, and ¶ Section 11 provides guidance for stream and connection error handling. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p36-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p17", "text": "Connections are the context in which QUIC endpoints communicate. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p37-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p18", "text": "Section 5 describes core concepts related to connections, ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p38-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p19", "text": "Section 6 describes version negotiation, ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p39-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p20", "text": "Section 7 details the process for establishing connections, ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p40-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p21", "text": "Section 8 describes address validation and critical denial-of-service mitigations, ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p41-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p22", "text": "Section 9 describes how endpoints migrate a connection to a new network path, ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p42-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p23", "text": "Section 10 lists the options for terminating an open connection, and ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p43-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p24", "text": "Section 11 provides guidance for stream and connection error handling. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p44-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p25", "text": "Packets and frames are the basic unit used by QUIC to communicate. ¶ Section 12 describes concepts related to packets and frames, ¶ Section 13 defines models for the transmission, retransmission, and acknowledgment of data, and ¶ Section 14 specifies rules for managing the size of datagrams carrying QUIC packets. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "1.1-p45-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p26", "text": "Packets and frames are the basic unit used by QUIC to communicate. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1.1-p46-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p27", "text": "Section 12 describes concepts related to packets and frames, ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1.1-p47-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p28", "text": "Section 13 defines models for the transmission, retransmission, and acknowledgment of data, and ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.1-p48-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p29", "text": "Section 14 specifies rules for managing the size of datagrams carrying QUIC packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p49-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p30", "text": "Finally, encoding details of QUIC protocol elements are described in: ¶ Section 15 (versions), ¶ Section 16 (integer encoding), ¶ Section 17 (packet headers), ¶ Section 18 (transport parameters), ¶ Section 19 (frames), and ¶ Section 20 (errors). ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1.1-p50-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p31", "text": "Finally, encoding details of QUIC protocol elements are described in: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p51-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p32", "text": "Section 15 (versions), ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p52-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p33", "text": "Section 16 (integer encoding), ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p53-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p34", "text": "Section 17 (packet headers), ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p54-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p35", "text": "Section 18 (transport parameters), ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p55-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p36", "text": "Section 19 (frames), and ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1.1-p56-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p37", "text": "Section 20 (errors). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p57-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p38", "text": "Accompanying documents describe QUIC's loss detection and congestion control [ QUIC-RECOVERY ] , and the use of TLS and other cryptographic mechanisms [ QUIC-TLS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p58-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p39", "text": "This document defines QUIC version 1, which conforms to the protocol invariants in [ QUIC-INVARIANTS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p59-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p40", "text": "To refer to QUIC version 1, cite this document.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p60-s2", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p40", "text": "References to the limited set of version-independent properties of QUIC can cite [ QUIC-INVARIANTS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p61-s1", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p62-s2", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "Terms and Definitions The key words \" MUST \", \" MUST NOT \", \" REQUIRED \", \" SHALL \", \" SHALL NOT \", \" SHOULD \", \" SHOULD NOT \", \" RECOMMENDED \", \" NOT RECOMMENDED \", \" MAY \", and \" OPTIONAL \" in this document are to be interpreted as described in BCP 14 [ RFC2119 ] [ RFC8174 ] when, and only when, they appear in all capitals, as shown here. ¶ Commonly used terms in this document are described below. ¶ QUIC:", "facet": "other", "normative": true, "modalities": ["MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", "OPTIONAL"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "1.1-p63-s3", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "The transport protocol described by this document.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p64-s4", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "QUIC is a name, not an acronym. ¶ Endpoint:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p65-s5", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "An entity that can participate in a QUIC connection by generating, receiving, and processing QUIC packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p66-s6", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "There are only two types of endpoints in QUIC: client and server. ¶ Client:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p67-s7", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "The endpoint that initiates a QUIC connection. ¶ Server:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p68-s8", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "The endpoint that accepts a QUIC connection. ¶ QUIC packet:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p69-s9", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "A complete processable unit of QUIC that can be encapsulated in a UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p70-s10", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "One or more QUIC packets can be encapsulated in a single UDP datagram. ¶ Ack-eliciting packet:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.1-p71-s11", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "A QUIC packet that contains frames other than ACK, PADDING, and CONNECTION_CLOSE.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "1.1-p72-s12", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "These cause a recipient to send an acknowledgment; see Section 13.2.1 . ¶ Frame:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "1.1-p73-s13", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "A unit of structured protocol information.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p74-s14", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "There are multiple frame types, each of which carries different information.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1.1-p75-s15", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "Frames are contained in QUIC packets. ¶ Address:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1.1-p76-s16", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "When used without qualification, the tuple of IP version, IP address, and UDP port number that represents one end of a network path. ¶ Connection ID:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.1-p77-s17", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "An identifier that is used to identify a QUIC connection at an endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p78-s18", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "Each endpoint selects one or more connection IDs for its peer to include in packets sent towards the endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p79-s19", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "This value is opaque to the peer. ¶ Stream:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p80-s20", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "A unidirectional or bidirectional channel of ordered bytes within a QUIC connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p81-s21", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "A QUIC connection can carry multiple simultaneous streams. ¶ Application:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.1-p82-s22", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "An entity that uses QUIC to send and receive data. ¶ This document uses the terms \"QUIC packets\", \"UDP datagrams\", and \"IP packets\" to refer to the units of the respective protocols.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.1-p83-s23", "section": "1.1", "anchor": "#name-document-structure", "para_id": "1.1-p41", "text": "That is, one or more QUIC packets can be encapsulated in a UDP datagram, which is in turn encapsulated in an IP packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p84-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p42", "text": "The key words \" MUST \", \" MUST NOT \", \" REQUIRED \", \" SHALL \", \" SHALL NOT \", \" SHOULD \", \" SHOULD NOT \", \" RECOMMENDED \", \" NOT RECOMMENDED \", \" MAY \", and \" OPTIONAL \" in this document are to be interpreted as described in BCP 14 [ RFC2119 ] [ RFC8174 ] when, and only when, they appear in all capitals, as shown here. ¶", "facet": "terminology", "normative": true, "modalities": ["MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", "OPTIONAL"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "1.2-p85-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p43", "text": "Commonly used terms in this document are described below. ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p86-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p44", "text": "The transport protocol described by this document.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p87-s2", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p44", "text": "QUIC is a name, not an acronym. ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p88-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p45", "text": "An entity that can participate in a QUIC connection by generating, receiving, and processing QUIC packets.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p89-s2", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p45", "text": "There are only two types of endpoints in QUIC: client and server. ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p90-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p46", "text": "The endpoint that initiates a QUIC connection. ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p91-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p47", "text": "The endpoint that accepts a QUIC connection. ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p92-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p48", "text": "A complete processable unit of QUIC that can be encapsulated in a UDP datagram.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p93-s2", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p48", "text": "One or more QUIC packets can be encapsulated in a single UDP datagram. ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p94-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p49", "text": "A QUIC packet that contains frames other than ACK, PADDING, and CONNECTION_CLOSE.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.2-p95-s2", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p49", "text": "These cause a recipient to send an acknowledgment; see Section 13.2.1 . ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.2-p96-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p50", "text": "A unit of structured protocol information.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p97-s2", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p50", "text": "There are multiple frame types, each of which carries different information.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p98-s3", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p50", "text": "Frames are contained in QUIC packets. ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p99-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p51", "text": "When used without qualification, the tuple of IP version, IP address, and UDP port number that represents one end of a network path. ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.2-p100-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p52", "text": "An identifier that is used to identify a QUIC connection at an endpoint.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p101-s2", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p52", "text": "Each endpoint selects one or more connection IDs for its peer to include in packets sent towards the endpoint.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p102-s3", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p52", "text": "This value is opaque to the peer. ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p103-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p53", "text": "A unidirectional or bidirectional channel of ordered bytes within a QUIC connection.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p104-s2", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p53", "text": "A QUIC connection can carry multiple simultaneous streams. ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p105-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p54", "text": "An entity that uses QUIC to send and receive data. ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.2-p106-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p55", "text": "This document uses the terms \"QUIC packets\", \"UDP datagrams\", and \"IP packets\" to refer to the units of the respective protocols.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p107-s2", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p55", "text": "That is, one or more QUIC packets can be encapsulated in a UDP datagram, which is in turn encapsulated in an IP packet. ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p108-s1", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "1.3.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p109-s2", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "Notational Conventions Packet and frame diagrams in this document use a custom format.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p110-s3", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "The purpose of this format is to summarize, not define, protocol elements.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p111-s4", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "Prose defines the complete semantics and details of structures. ¶ Complex fields are named and then followed by a list of fields surrounded by a pair of matching braces.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.2-p112-s5", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "Each field in this list is separated by commas. ¶ Individual fields include length information, plus indications about fixed value, optionality, or repetitions.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p113-s6", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "Individual fields use the following notational conventions, with all lengths in bits: ¶ x (A):", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p114-s7", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "Indicates that x is A bits long ¶ x (i):", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p115-s8", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "Indicates that x holds an integer value using the variable-length encoding described in Section 16 ¶ x (A..B):", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p116-s9", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "Indicates that x can be any length from A to B;", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p117-s10", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "A can be omitted to indicate a minimum of zero bits, and B can be omitted to indicate no set upper limit; values in this format always end on a byte boundary ¶ x (L) = C:", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p118-s11", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "Indicates that x has a fixed value of C; the length of x is described by L, which can use any of the length forms above ¶ x (L) = C..D:", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p119-s12", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "Indicates that x has a value in the range from C to D, inclusive, with the length described by L, as above ¶ [x (L)]:", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p120-s13", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "Indicates that x is optional and has a length of L ¶ x (L) ...:", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p121-s14", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "Indicates that x is repeated zero or more times and that each instance has a length of L ¶ This document uses network byte order (that is, big endian) values.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p122-s15", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "Fields are placed starting from the high-order bits of each byte. ¶ By convention, individual fields reference a complex field by using the name of the complex field. ¶ Figure 1 provides an example: ¶ Example Structure { One-bit Field (1), 7-bit Field with Fixed Value (7) = 61, Field with Variable-Length Integer (i), Arbitrary-Length Field (..), Variable-Length Field (8..24), Field With Minimum Length (16..), Field With Maximum Length (..128), [Optional Field (64)], Repeated Field (8) ..., } Figure 1 :", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.2-p123-s16", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "Example Format When a single-bit field is referenced in prose, the position of that field can be clarified by using the value of the byte that carries the field with the field's value set.", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.2-p124-s17", "section": "1.2", "anchor": "#name-terms-and-definitions", "para_id": "1.2-p56", "text": "For example, the value 0x80 could be used to refer to the single-bit field in the most significant bit of the byte, such as One-bit Field in Figure 1 . ¶", "facet": "terminology", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p125-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p57", "text": "Packet and frame diagrams in this document use a custom format.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1.3-p126-s2", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p57", "text": "The purpose of this format is to summarize, not define, protocol elements.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p127-s3", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p57", "text": "Prose defines the complete semantics and details of structures. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p128-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p58", "text": "Complex fields are named and then followed by a list of fields surrounded by a pair of matching braces.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.3-p129-s2", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p58", "text": "Each field in this list is separated by commas. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p130-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p59", "text": "Individual fields include length information, plus indications about fixed value, optionality, or repetitions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p131-s2", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p59", "text": "Individual fields use the following notational conventions, with all lengths in bits: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p132-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p60", "text": "Indicates that x is A bits long ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p133-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p61", "text": "Indicates that x holds an integer value using the variable-length encoding described in Section 16 ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p134-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p62", "text": "Indicates that x can be any length from A to B;", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p135-s2", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p62", "text": "A can be omitted to indicate a minimum of zero bits, and B can be omitted to indicate no set upper limit; values in this format always end on a byte boundary ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p136-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p63", "text": "Indicates that x has a fixed value of C; the length of x is described by L, which can use any of the length forms above ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p137-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p64", "text": "Indicates that x has a value in the range from C to D, inclusive, with the length described by L, as above ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p138-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p65", "text": "Indicates that x is optional and has a length of L ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p139-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p66", "text": "Indicates that x is repeated zero or more times and that each instance has a length of L ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p140-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p67", "text": "This document uses network byte order (that is, big endian) values.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p141-s2", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p67", "text": "Fields are placed starting from the high-order bits of each byte. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p142-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p68", "text": "By convention, individual fields reference a complex field by using the name of the complex field. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p143-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p69", "text": "Figure 1 provides an example: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p144-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p70", "text": "Example Structure { One-bit Field (1), 7-bit Field with Fixed Value (7) = 61, Field with Variable-Length Integer (i), Arbitrary-Length Field (..), Variable-Length Field (8..24), Field With Minimum Length (16..), Field With Maximum Length (..128), [Optional Field (64)], Repeated Field (8) ..., } Figure 1 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p145-s2", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p70", "text": "Example Format", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p146-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p71", "text": "Example Structure { One-bit Field (1), 7-bit Field with Fixed Value (7) = 61, Field with Variable-Length Integer (i), Arbitrary-Length Field (..), Variable-Length Field (8..24), Field With Minimum Length (16..), Field With Maximum Length (..128), [Optional Field (64)], Repeated Field (8) ..., }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p147-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p72", "text": "Example Structure { One-bit Field (1), 7-bit Field with Fixed Value (7) = 61, Field with Variable-Length Integer (i), Arbitrary-Length Field (..), Variable-Length Field (8..24), Field With Minimum Length (16..), Field With Maximum Length (..128), [Optional Field (64)], Repeated Field (8) ..., }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p148-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p73", "text": "Figure 1 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p149-s2", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p73", "text": "Example Format", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p150-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p74", "text": "When a single-bit field is referenced in prose, the position of that field can be clarified by using the value of the byte that carries the field with the field's value set.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.3-p151-s2", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p74", "text": "For example, the value 0x80 could be used to refer to the single-bit field in the most significant bit of the byte, such as One-bit Field in Figure 1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p152-s1", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p153-s2", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Streams Streams in QUIC provide a lightweight, ordered byte-stream abstraction to an application.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p154-s3", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Streams can be unidirectional or bidirectional. ¶ Streams can be created by sending data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p155-s4", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Other processes associated with stream management -- ending, canceling, and managing flow control -- are all designed to impose minimal overheads.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1.3-p156-s5", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "For instance, a single STREAM frame ( Section 19.8 ) can open, carry data for, and close a stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "1.3-p157-s6", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Streams can also be long-lived and can last the entire duration of a connection. ¶ Streams can be created by either endpoint, can concurrently send data interleaved with other streams, and can be canceled.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.3-p158-s7", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "QUIC does not provide any means of ensuring ordering between bytes on different streams. ¶ QUIC allows for an arbitrary number of streams to operate concurrently and for an arbitrary amount of data to be sent on any stream, subject to flow control constraints and stream limits; see Section 4 . ¶ 2.1.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1.3-p159-s8", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Stream Types and Identifiers Streams can be unidirectional or bidirectional.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p160-s9", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Unidirectional streams carry data in one direction: from the initiator of the stream to its peer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["initiator", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p161-s10", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Bidirectional streams allow for data to be sent in both directions. ¶ Streams are identified within a connection by a numeric value, referred to as the stream ID.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p162-s11", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "A stream ID is a 62-bit integer (0 to 2 62 -1) that is unique for all streams on a connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p163-s12", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Stream IDs are encoded as variable-length integers; see Section 16 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p164-s13", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "A QUIC endpoint MUST NOT reuse a stream ID within a connection. ¶ The least significant bit (0x01) of the stream ID identifies the initiator of the stream.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "initiator"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "1.3-p165-s14", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Client-initiated streams have even-numbered stream IDs (with the bit set to 0), and server-initiated streams have odd-numbered stream IDs (with the bit set to 1). ¶ The second least significant bit (0x02) of the stream ID distinguishes between bidirectional streams (with the bit set to 0) and unidirectional streams (with the bit set to 1). ¶ The two least significant bits from a stream ID therefore identify a stream as one of four types, as summarized in Table 1 . ¶ Table 1 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p166-s15", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Stream ID Types Bits Stream Type 0x00 Client-Initiated, Bidirectional 0x01 Server-Initiated, Bidirectional 0x02 Client-Initiated, Unidirectional 0x03 Server-Initiated, Unidirectional The stream space for each type begins at the minimum value (0x00 through 0x03, respectively); successive streams of each type are created with numerically increasing stream IDs.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p167-s16", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "A stream ID that is used out of order results in all streams of that type with lower-numbered stream IDs also being opened. ¶ 2.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p168-s17", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Sending and Receiving Data STREAM frames ( Section 19.8 ) encapsulate data sent by an application.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "1.3-p169-s18", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "An endpoint uses the Stream ID and Offset fields in STREAM frames to place data in order. ¶ Endpoints MUST be able to deliver stream data to an application as an ordered byte stream.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "1.3-p170-s19", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Delivering an ordered byte stream requires that an endpoint buffer any data that is received out of order, up to the advertised flow control limit. ¶ QUIC makes no specific allowances for delivery of stream data out of order.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "1.3-p171-s20", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "However, implementations MAY choose to offer the ability to deliver data out of order to a receiving application. ¶ An endpoint could receive data for a stream at the same stream offset multiple times.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "1.3-p172-s21", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Data that has already been received can be discarded.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.3-p173-s22", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "The data at a given offset MUST NOT change if it is sent multiple times; an endpoint MAY treat receipt of different data at the same offset within a stream as a connection error of type PROTOCOL_VIOLATION. ¶ Streams are an ordered byte-stream abstraction with no other structure visible to QUIC.", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "1.3-p174-s23", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "STREAM frame boundaries are not expected to be preserved when data is transmitted, retransmitted after packet loss, or delivered to the application at a receiver. ¶ An endpoint MUST NOT send data on any stream without ensuring that it is within the flow control limits set by its peer.", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint", "peer", "receiver"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "1.3-p175-s24", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Flow control is described in detail in Section 4 . ¶ 2.3.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "1.3-p176-s25", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Stream Prioritization Stream multiplexing can have a significant effect on application performance if resources allocated to streams are correctly prioritized. ¶ QUIC does not provide a mechanism for exchanging prioritization information.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.3-p177-s26", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Instead, it relies on receiving priority information from the application. ¶ A QUIC implementation SHOULD provide ways in which an application can indicate the relative priority of streams.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "1.3-p178-s27", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "An implementation uses information provided by the application to determine how to allocate resources to active streams. ¶ 2.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p179-s28", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "Operations on Streams This document does not define an API for QUIC; it instead defines a set of functions on streams that application protocols can rely upon.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "1.3-p180-s29", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "An application protocol can assume that a QUIC implementation provides an interface that includes the operations described in this section.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "1.3-p181-s30", "section": "1.3", "anchor": "#name-notational-conventions", "para_id": "1.3-p75", "text": "An implementation designed for use with a specific application protocol might provide only those operations that are used by that protocol. ¶ On the sending part of a stream, an application protocol can: ¶ write data, understanding when stream flow control credit ( Section 4.1 ) has successfully been reserved to send the written data; ¶ end the stream (clean termination), resulting in a STREAM frame ( Section 19.8 ) with the FIN bit set; and ¶ reset the stream (abrupt termination), resulting in a RESET_STREAM frame ( Section 19.4 ) if the stream was not already in a terminal state. ¶ On the receiving part of a stream, an application protocol can: ¶ read data; and ¶ abort reading of the stream and request closure, possibly resulting in a STOP_SENDING frame ( Section 19.5 ). ¶ An application protocol can also request to be informed of state changes on streams, including when the peer has opened or reset a stream, when a peer aborts reading on a stream, when new data is available, and when data can or cannot be written to the stream due to flow control. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING", "STREAM"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "2-p182-s1", "section": "2", "anchor": "#name-streams", "para_id": "2-p76", "text": "Streams in QUIC provide a lightweight, ordered byte-stream abstraction to an application.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p183-s2", "section": "2", "anchor": "#name-streams", "para_id": "2-p76", "text": "Streams can be unidirectional or bidirectional. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p184-s1", "section": "2", "anchor": "#name-streams", "para_id": "2-p77", "text": "Streams can be created by sending data.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p185-s2", "section": "2", "anchor": "#name-streams", "para_id": "2-p77", "text": "Other processes associated with stream management -- ending, canceling, and managing flow control -- are all designed to impose minimal overheads.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p186-s3", "section": "2", "anchor": "#name-streams", "para_id": "2-p77", "text": "For instance, a single STREAM frame ( Section 19.8 ) can open, carry data for, and close a stream.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2-p187-s4", "section": "2", "anchor": "#name-streams", "para_id": "2-p77", "text": "Streams can also be long-lived and can last the entire duration of a connection. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p188-s1", "section": "2", "anchor": "#name-streams", "para_id": "2-p78", "text": "Streams can be created by either endpoint, can concurrently send data interleaved with other streams, and can be canceled.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2-p189-s2", "section": "2", "anchor": "#name-streams", "para_id": "2-p78", "text": "QUIC does not provide any means of ensuring ordering between bytes on different streams. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p190-s1", "section": "2", "anchor": "#name-streams", "para_id": "2-p79", "text": "QUIC allows for an arbitrary number of streams to operate concurrently and for an arbitrary amount of data to be sent on any stream, subject to flow control constraints and stream limits; see Section 4 . ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p191-s1", "section": "2", "anchor": "#name-streams", "para_id": "2-p80", "text": "2.1.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p192-s2", "section": "2", "anchor": "#name-streams", "para_id": "2-p80", "text": "Stream Types and Identifiers Streams can be unidirectional or bidirectional.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p193-s3", "section": "2", "anchor": "#name-streams", "para_id": "2-p80", "text": "Unidirectional streams carry data in one direction: from the initiator of the stream to its peer.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["initiator", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p194-s4", "section": "2", "anchor": "#name-streams", "para_id": "2-p80", "text": "Bidirectional streams allow for data to be sent in both directions. ¶ Streams are identified within a connection by a numeric value, referred to as the stream ID.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p195-s5", "section": "2", "anchor": "#name-streams", "para_id": "2-p80", "text": "A stream ID is a 62-bit integer (0 to 2 62 -1) that is unique for all streams on a connection.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p196-s6", "section": "2", "anchor": "#name-streams", "para_id": "2-p80", "text": "Stream IDs are encoded as variable-length integers; see Section 16 .", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p197-s7", "section": "2", "anchor": "#name-streams", "para_id": "2-p80", "text": "A QUIC endpoint MUST NOT reuse a stream ID within a connection. ¶ The least significant bit (0x01) of the stream ID identifies the initiator of the stream.", "facet": "streams", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "initiator"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2-p198-s8", "section": "2", "anchor": "#name-streams", "para_id": "2-p80", "text": "Client-initiated streams have even-numbered stream IDs (with the bit set to 0), and server-initiated streams have odd-numbered stream IDs (with the bit set to 1). ¶ The second least significant bit (0x02) of the stream ID distinguishes between bidirectional streams (with the bit set to 0) and unidirectional streams (with the bit set to 1). ¶ The two least significant bits from a stream ID therefore identify a stream as one of four types, as summarized in Table 1 . ¶ Table 1 :", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p199-s9", "section": "2", "anchor": "#name-streams", "para_id": "2-p80", "text": "Stream ID Types Bits Stream Type 0x00 Client-Initiated, Bidirectional 0x01 Server-Initiated, Bidirectional 0x02 Client-Initiated, Unidirectional 0x03 Server-Initiated, Unidirectional The stream space for each type begins at the minimum value (0x00 through 0x03, respectively); successive streams of each type are created with numerically increasing stream IDs.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2-p200-s10", "section": "2", "anchor": "#name-streams", "para_id": "2-p80", "text": "A stream ID that is used out of order results in all streams of that type with lower-numbered stream IDs also being opened. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p201-s1", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p81", "text": "Streams can be unidirectional or bidirectional.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p202-s2", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p81", "text": "Unidirectional streams carry data in one direction: from the initiator of the stream to its peer.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["initiator", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p203-s3", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p81", "text": "Bidirectional streams allow for data to be sent in both directions. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p204-s1", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p82", "text": "Streams are identified within a connection by a numeric value, referred to as the stream ID.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p205-s2", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p82", "text": "A stream ID is a 62-bit integer (0 to 2 62 -1) that is unique for all streams on a connection.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p206-s3", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p82", "text": "Stream IDs are encoded as variable-length integers; see Section 16 .", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p207-s4", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p82", "text": "A QUIC endpoint MUST NOT reuse a stream ID within a connection. ¶", "facet": "streams", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.1-p208-s1", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p83", "text": "The least significant bit (0x01) of the stream ID identifies the initiator of the stream.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["initiator"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p209-s2", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p83", "text": "Client-initiated streams have even-numbered stream IDs (with the bit set to 0), and server-initiated streams have odd-numbered stream IDs (with the bit set to 1). ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p210-s1", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p84", "text": "The second least significant bit (0x02) of the stream ID distinguishes between bidirectional streams (with the bit set to 0) and unidirectional streams (with the bit set to 1). ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p211-s1", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p85", "text": "The two least significant bits from a stream ID therefore identify a stream as one of four types, as summarized in Table 1 . ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p212-s1", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p86", "text": "Table 1 :", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p213-s2", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p86", "text": "Stream ID Types Bits Stream Type 0x00 Client-Initiated, Bidirectional 0x01 Server-Initiated, Bidirectional 0x02 Client-Initiated, Unidirectional 0x03 Server-Initiated, Unidirectional", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p214-s1", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p87", "text": "Table 1 :", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p215-s2", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p87", "text": "Stream ID Types Bits Stream Type 0x00 Client-Initiated, Bidirectional 0x01 Server-Initiated, Bidirectional 0x02 Client-Initiated, Unidirectional 0x03 Server-Initiated, Unidirectional", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p216-s1", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p88", "text": "The stream space for each type begins at the minimum value (0x00 through 0x03, respectively); successive streams of each type are created with numerically increasing stream IDs.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p217-s2", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p88", "text": "A stream ID that is used out of order results in all streams of that type with lower-numbered stream IDs also being opened. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p218-s1", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p89", "text": "2.2.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.1-p219-s2", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p89", "text": "Sending and Receiving Data STREAM frames ( Section 19.8 ) encapsulate data sent by an application.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.1-p220-s3", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p89", "text": "An endpoint uses the Stream ID and Offset fields in STREAM frames to place data in order. ¶ Endpoints MUST be able to deliver stream data to an application as an ordered byte stream.", "facet": "streams", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 4}
{"sent_id": "2.1-p221-s4", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p89", "text": "Delivering an ordered byte stream requires that an endpoint buffer any data that is received out of order, up to the advertised flow control limit. ¶ QUIC makes no specific allowances for delivery of stream data out of order.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.1-p222-s5", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p89", "text": "However, implementations MAY choose to offer the ability to deliver data out of order to a receiving application. ¶ An endpoint could receive data for a stream at the same stream offset multiple times.", "facet": "streams", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.1-p223-s6", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p89", "text": "Data that has already been received can be discarded.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.1-p224-s7", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p89", "text": "The data at a given offset MUST NOT change if it is sent multiple times; an endpoint MAY treat receipt of different data at the same offset within a stream as a connection error of type PROTOCOL_VIOLATION. ¶ Streams are an ordered byte-stream abstraction with no other structure visible to QUIC.", "facet": "streams", "normative": true, "modalities": ["MUST NOT", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.1-p225-s8", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p89", "text": "STREAM frame boundaries are not expected to be preserved when data is transmitted, retransmitted after packet loss, or delivered to the application at a receiver. ¶ An endpoint MUST NOT send data on any stream without ensuring that it is within the flow control limits set by its peer.", "facet": "streams", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint", "peer", "receiver"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.1-p226-s9", "section": "2.1", "anchor": "#name-stream-types-and-identifier", "para_id": "2.1-p89", "text": "Flow control is described in detail in Section 4 . ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.2-p227-s1", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p90", "text": "STREAM frames ( Section 19.8 ) encapsulate data sent by an application.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.2-p228-s2", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p90", "text": "An endpoint uses the Stream ID and Offset fields in STREAM frames to place data in order. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.2-p229-s1", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p91", "text": "Endpoints MUST be able to deliver stream data to an application as an ordered byte stream.", "facet": "streams", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.2-p230-s2", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p91", "text": "Delivering an ordered byte stream requires that an endpoint buffer any data that is received out of order, up to the advertised flow control limit. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.2-p231-s1", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p92", "text": "QUIC makes no specific allowances for delivery of stream data out of order.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.2-p232-s2", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p92", "text": "However, implementations MAY choose to offer the ability to deliver data out of order to a receiving application. ¶", "facet": "streams", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.2-p233-s1", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p93", "text": "An endpoint could receive data for a stream at the same stream offset multiple times.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.2-p234-s2", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p93", "text": "Data that has already been received can be discarded.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.2-p235-s3", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p93", "text": "The data at a given offset MUST NOT change if it is sent multiple times; an endpoint MAY treat receipt of different data at the same offset within a stream as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "streams", "normative": true, "modalities": ["MUST NOT", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.2-p236-s1", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p94", "text": "Streams are an ordered byte-stream abstraction with no other structure visible to QUIC.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.2-p237-s2", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p94", "text": "STREAM frame boundaries are not expected to be preserved when data is transmitted, retransmitted after packet loss, or delivered to the application at a receiver. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.2-p238-s1", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p95", "text": "An endpoint MUST NOT send data on any stream without ensuring that it is within the flow control limits set by its peer.", "facet": "streams", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.2-p239-s2", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p95", "text": "Flow control is described in detail in Section 4 . ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.2-p240-s1", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p96", "text": "2.3.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.2-p241-s2", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p96", "text": "Stream Prioritization Stream multiplexing can have a significant effect on application performance if resources allocated to streams are correctly prioritized. ¶ QUIC does not provide a mechanism for exchanging prioritization information.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.2-p242-s3", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p96", "text": "Instead, it relies on receiving priority information from the application. ¶ A QUIC implementation SHOULD provide ways in which an application can indicate the relative priority of streams.", "facet": "streams", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.2-p243-s4", "section": "2.2", "anchor": "#name-sending-and-receiving-data", "para_id": "2.2-p96", "text": "An implementation uses information provided by the application to determine how to allocate resources to active streams. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.3-p244-s1", "section": "2.3", "anchor": "#name-stream-prioritization", "para_id": "2.3-p97", "text": "Stream multiplexing can have a significant effect on application performance if resources allocated to streams are correctly prioritized. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.3-p245-s1", "section": "2.3", "anchor": "#name-stream-prioritization", "para_id": "2.3-p98", "text": "QUIC does not provide a mechanism for exchanging prioritization information.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.3-p246-s2", "section": "2.3", "anchor": "#name-stream-prioritization", "para_id": "2.3-p98", "text": "Instead, it relies on receiving priority information from the application. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.3-p247-s1", "section": "2.3", "anchor": "#name-stream-prioritization", "para_id": "2.3-p99", "text": "A QUIC implementation SHOULD provide ways in which an application can indicate the relative priority of streams.", "facet": "streams", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.3-p248-s2", "section": "2.3", "anchor": "#name-stream-prioritization", "para_id": "2.3-p99", "text": "An implementation uses information provided by the application to determine how to allocate resources to active streams. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.3-p249-s1", "section": "2.3", "anchor": "#name-stream-prioritization", "para_id": "2.3-p100", "text": "2.4.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.3-p250-s2", "section": "2.3", "anchor": "#name-stream-prioritization", "para_id": "2.3-p100", "text": "Operations on Streams This document does not define an API for QUIC; it instead defines a set of functions on streams that application protocols can rely upon.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.3-p251-s3", "section": "2.3", "anchor": "#name-stream-prioritization", "para_id": "2.3-p100", "text": "An application protocol can assume that a QUIC implementation provides an interface that includes the operations described in this section.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.3-p252-s4", "section": "2.3", "anchor": "#name-stream-prioritization", "para_id": "2.3-p100", "text": "An implementation designed for use with a specific application protocol might provide only those operations that are used by that protocol. ¶ On the sending part of a stream, an application protocol can: ¶ write data, understanding when stream flow control credit ( Section 4.1 ) has successfully been reserved to send the written data; ¶ end the stream (clean termination), resulting in a STREAM frame ( Section 19.8 ) with the FIN bit set; and ¶ reset the stream (abrupt termination), resulting in a RESET_STREAM frame ( Section 19.4 ) if the stream was not already in a terminal state. ¶ On the receiving part of a stream, an application protocol can: ¶ read data; and ¶ abort reading of the stream and request closure, possibly resulting in a STOP_SENDING frame ( Section 19.5 ). ¶ An application protocol can also request to be informed of state changes on streams, including when the peer has opened or reset a stream, when a peer aborts reading on a stream, when new data is available, and when data can or cannot be written to the stream due to flow control. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING", "STREAM"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p253-s1", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p101", "text": "This document does not define an API for QUIC; it instead defines a set of functions on streams that application protocols can rely upon.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.4-p254-s2", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p101", "text": "An application protocol can assume that a QUIC implementation provides an interface that includes the operations described in this section.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p255-s3", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p101", "text": "An implementation designed for use with a specific application protocol might provide only those operations that are used by that protocol. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p256-s1", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p102", "text": "On the sending part of a stream, an application protocol can: ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p257-s1", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p103", "text": "write data, understanding when stream flow control credit ( Section 4.1 ) has successfully been reserved to send the written data; ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.4-p258-s1", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p104", "text": "end the stream (clean termination), resulting in a STREAM frame ( Section 19.8 ) with the FIN bit set; and ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p259-s1", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p105", "text": "reset the stream (abrupt termination), resulting in a RESET_STREAM frame ( Section 19.4 ) if the stream was not already in a terminal state. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p260-s1", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p106", "text": "On the receiving part of a stream, an application protocol can: ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p261-s1", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p107", "text": "read data; and ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p262-s1", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p108", "text": "abort reading of the stream and request closure, possibly resulting in a STOP_SENDING frame ( Section 19.5 ). ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.4-p263-s1", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p109", "text": "An application protocol can also request to be informed of state changes on streams, including when the peer has opened or reset a stream, when a peer aborts reading on a stream, when new data is available, and when data can or cannot be written to the stream due to flow control. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.4-p264-s1", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "3.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p265-s2", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Stream States This section describes streams in terms of their send or receive components.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.4-p266-s3", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Two state machines are described: one for the streams on which an endpoint transmits data ( Section 3.1 ) and another for streams on which an endpoint receives data ( Section 3.2 ). ¶ Unidirectional streams use either the sending or receiving state machine, depending on the stream type and endpoint role.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.4-p267-s4", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Bidirectional streams use both state machines at both endpoints.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p268-s5", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "For the most part, the use of these state machines is the same whether the stream is unidirectional or bidirectional.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p269-s6", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "The conditions for opening a stream are slightly more complex for a bidirectional stream because the opening of either the send or receive side causes the stream to open in both directions. ¶ The state machines shown in this section are largely informative.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.4-p270-s7", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "This document uses stream states to describe rules for when and how different types of frames can be sent and the reactions that are expected when different types of frames are received.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.4-p271-s8", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Though these state machines are intended to be useful in implementing QUIC, these states are not intended to constrain implementations.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p272-s9", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "An implementation can define a different state machine as long as its behavior is consistent with an implementation that implements these states. ¶ Note:", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p273-s10", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "In some cases, a single event or action can cause a transition through multiple states.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p274-s11", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "For instance, sending STREAM with a FIN bit set can cause two state transitions for a sending stream: from the \"Ready\" state to the \"Send\" state, and from the \"Send\" state to the \"Data Sent\" state. ¶ 3.1.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": ["Data Sent", "Ready", "Send"], "roles": [], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p275-s12", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Sending Stream States Figure 2 shows the states for the part of a stream that sends data to a peer. ¶ o | Create Stream (Sending) | Peer Creates Bidirectional Stream v +-------+ | Ready | Send RESET_STREAM | |-----------------------. +-------+ | | | | Send STREAM / | | STREAM_DATA_BLOCKED | v | +-------+ | | Send | Send RESET_STREAM | | |---------------------->| +-------+ | | | | Send STREAM + FIN | v v +-------+ +-------+ | Data | Send RESET_STREAM | Reset | | Sent |------------------>| Sent | +-------+ +-------+ | | | Recv All ACKs | Recv ACK v v +-------+ +-------+ | Data | | Reset | | Recvd | | Recvd | +-------+ +-------+ Figure 2 :", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Ready", "Recv", "Send"], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p276-s13", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "States for Sending Parts of Streams The sending part of a stream that the endpoint initiates (types 0 and 2 for clients, 1 and 3 for servers) is opened by the application.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p277-s14", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "The \"Ready\" state represents a newly created stream that is able to accept data from the application.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Ready"], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.4-p278-s15", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Stream data might be buffered in this state in preparation for sending. ¶ Sending the first STREAM or STREAM_DATA_BLOCKED frame causes a sending part of a stream to enter the \"Send\" state.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": ["Send"], "roles": [], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p279-s16", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "An implementation might choose to defer allocating a stream ID to a stream until it sends the first STREAM frame and enters this state, which can allow for better stream prioritization. ¶ The sending part of a bidirectional stream initiated by a peer (type 0 for a server, type 1 for a client) starts in the \"Ready\" state when the receiving part is created. ¶ In the \"Send\" state, an endpoint transmits -- and retransmits as necessary -- stream data in STREAM frames.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": ["Ready", "Send"], "roles": ["client", "endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p280-s17", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "The endpoint respects the flow control limits set by its peer and continues to accept and process MAX_STREAM_DATA frames.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.4-p281-s18", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "An endpoint in the \"Send\" state generates STREAM_DATA_BLOCKED frames if it is blocked from sending by stream flow control limits ( Section 4.1 ). ¶ After the application indicates that all stream data has been sent and a STREAM frame containing the FIN bit is sent, the sending part of the stream enters the \"Data Sent\" state.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": ["Data Sent", "Send"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p282-s19", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "From this state, the endpoint only retransmits stream data as necessary.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p283-s20", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "The endpoint does not need to check flow control limits or send STREAM_DATA_BLOCKED frames for a stream in this state.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p284-s21", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "MAX_STREAM_DATA frames might be received until the peer receives the final stream offset.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p285-s22", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "The endpoint can safely ignore any MAX_STREAM_DATA frames it receives from its peer for a stream in this state. ¶ Once all stream data has been successfully acknowledged, the sending part of the stream enters the \"Data Recvd\" state, which is a terminal state. ¶ From any state that is one of \"Ready\", \"Send\", or \"Data Sent\", an application can signal that it wishes to abandon transmission of stream data.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": ["Data Recvd", "Data Sent", "Ready", "Send"], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p286-s23", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Alternatively, an endpoint might receive a STOP_SENDING frame from its peer.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p287-s24", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "In either case, the endpoint sends a RESET_STREAM frame, which causes the stream to enter the \"Reset Sent\" state. ¶ An endpoint MAY send a RESET_STREAM as the first frame that mentions a stream; this causes the sending part of that stream to open and then immediately transition to the \"Reset Sent\" state. ¶ Once a packet containing a RESET_STREAM has been acknowledged, the sending part of the stream enters the \"Reset Recvd\" state, which is a terminal state. ¶ 3.2.", "facet": "streams", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM"], "states": ["Reset Recvd", "Reset Sent"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 7}
{"sent_id": "2.4-p288-s25", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Receiving Stream States Figure 3 shows the states for the part of a stream that receives data from a peer.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.4-p289-s26", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "The states for a receiving part of a stream mirror only some of the states of the sending part of the stream at the peer.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p290-s27", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "The receiving part of a stream does not track states on the sending part that cannot be observed, such as the \"Ready\" state.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Ready"], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.4-p291-s28", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Instead, the receiving part of a stream tracks the delivery of data to the application, some of which cannot be observed by the sender. ¶ o | Recv STREAM / STREAM_DATA_BLOCKED / RESET_STREAM | Create Bidirectional Stream (Sending) | Recv MAX_STREAM_DATA / STOP_SENDING (Bidirectional) | Create Higher-Numbered Stream v +-------+ | Recv | Recv RESET_STREAM | |-----------------------. +-------+ | | | | Recv STREAM + FIN | v | +-------+ | | Size | Recv RESET_STREAM | | Known |---------------------->| +-------+ | | | | Recv All Data | v v +-------+ Recv RESET_STREAM +-------+ | Data |--- (optional) --->| Reset | | Recvd | Recv All Data | Recvd | +-------+<-- (optional) ----+-------+ | | | App Read All Data | App Read Reset v v +-------+ +-------+ | Data | | Reset | | Read | | Read | +-------+ +-------+ Figure 3 :", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "RESET_STREAM", "STOP_SENDING", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Recv"], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p292-s29", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "States for Receiving Parts of Streams The receiving part of a stream initiated by a peer (types 1 and 3 for a client, or 0 and 2 for a server) is created when the first STREAM, STREAM_DATA_BLOCKED, or RESET_STREAM frame is received for that stream.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["client", "peer", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p293-s30", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "For bidirectional streams initiated by a peer, receipt of a MAX_STREAM_DATA or STOP_SENDING frame for the sending part of the stream also creates the receiving part.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "STOP_SENDING"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.4-p294-s31", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "The initial state for the receiving part of a stream is \"Recv\". ¶ For a bidirectional stream, the receiving part enters the \"Recv\" state when the sending part initiated by the endpoint (type 0 for a client, type 1 for a server) enters the \"Ready\" state. ¶ An endpoint opens a bidirectional stream when a MAX_STREAM_DATA or STOP_SENDING frame is received from the peer for that stream.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "STOP_SENDING"], "states": ["Ready", "Recv"], "roles": ["client", "endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p295-s32", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Receiving a MAX_STREAM_DATA frame for an unopened stream indicates that the remote peer has opened the stream and is providing flow control credit.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "2.4-p296-s33", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Receiving a STOP_SENDING frame for an unopened stream indicates that the remote peer no longer wishes to receive data on this stream.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p297-s34", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Either frame might arrive before a STREAM or STREAM_DATA_BLOCKED frame if packets are lost or reordered. ¶ Before a stream is created, all streams of the same type with lower-numbered stream IDs MUST be created.", "facet": "streams", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p298-s35", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "This ensures that the creation order for streams is consistent on both endpoints. ¶ In the \"Recv\" state, the endpoint receives STREAM and STREAM_DATA_BLOCKED frames.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": ["Recv"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p299-s36", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Incoming data is buffered and can be reassembled into the correct order for delivery to the application.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p300-s37", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "As data is consumed by the application and buffer space becomes available, the endpoint sends MAX_STREAM_DATA frames to allow the peer to send more data. ¶ When a STREAM frame with a FIN bit is received, the final size of the stream is known; see Section 4.5 .", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "STREAM"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p301-s38", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "The receiving part of the stream then enters the \"Size Known\" state.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Size Known"], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p302-s39", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "In this state, the endpoint no longer needs to send MAX_STREAM_DATA frames; it only receives any retransmissions of stream data. ¶ Once all data for the stream has been received, the receiving part enters the \"Data Recvd\" state.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": ["Data Recvd"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p303-s40", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "This might happen as a result of receiving the same STREAM frame that causes the transition to \"Size Known\".", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": ["Size Known"], "roles": [], "errors": []}, "event_cue": false, "score": 4}
{"sent_id": "2.4-p304-s41", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "After all data has been received, any STREAM or STREAM_DATA_BLOCKED frames for the stream can be discarded. ¶ The \"Data Recvd\" state persists until stream data has been delivered to the application.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": ["Data Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p305-s42", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Once stream data has been delivered, the stream enters the \"Data Read\" state, which is a terminal state. ¶ Receiving a RESET_STREAM frame in the \"Recv\" or \"Size Known\" state causes the stream to enter the \"Reset Recvd\" state.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Read", "Recv", "Reset Recvd", "Size Known"], "roles": [], "errors": []}, "event_cue": false, "score": 4}
{"sent_id": "2.4-p306-s43", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "This might cause the delivery of stream data to the application to be interrupted. ¶ It is possible that all stream data has already been received when a RESET_STREAM is received (that is, in the \"Data Recvd\" state).", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p307-s44", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Similarly, it is possible for remaining stream data to arrive after receiving a RESET_STREAM frame (the \"Reset Recvd\" state).", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Reset Recvd"], "roles": [], "errors": []}, "event_cue": false, "score": 4}
{"sent_id": "2.4-p308-s45", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "An implementation is free to manage this situation as it chooses. ¶ Sending a RESET_STREAM means that an endpoint cannot guarantee delivery of stream data; however, there is no requirement that stream data not be delivered if a RESET_STREAM is received.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p309-s46", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "An implementation MAY interrupt delivery of stream data, discard any data that was not consumed, and signal the receipt of the RESET_STREAM.", "facet": "streams", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 4}
{"sent_id": "2.4-p310-s47", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "A RESET_STREAM signal might be suppressed or withheld if stream data is completely received and is buffered to be read by the application.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p311-s48", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "If the RESET_STREAM is suppressed, the receiving part of the stream remains in \"Data Recvd\". ¶ Once the application receives the signal indicating that the stream was reset, the receiving part of the stream transitions to the \"Reset Read\" state, which is a terminal state. ¶ 3.3.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Recvd", "Reset Read"], "roles": [], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p312-s49", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Permitted Frame Types The sender of a stream sends just three frame types that affect the state of a stream at either the sender or the receiver:", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.4-p313-s50", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "STREAM ( Section 19.8 ), STREAM_DATA_BLOCKED ( Section 19.13 ), and RESET_STREAM ( Section 19.4 ). ¶ A sender MUST NOT send any of these frames from a terminal state (\"Data Recvd\" or \"Reset Recvd\").", "facet": "streams", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Data Recvd", "Reset Recvd"], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 7}
{"sent_id": "2.4-p314-s51", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "A sender MUST NOT send a STREAM or STREAM_DATA_BLOCKED frame for a stream in the \"Reset Sent\" state or any terminal state -- that is, after sending a RESET_STREAM frame.", "facet": "streams", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Reset Sent"], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 7}
{"sent_id": "2.4-p315-s52", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "A receiver could receive any of these three frames in any state, due to the possibility of delayed delivery of packets carrying them. ¶ The receiver of a stream sends MAX_STREAM_DATA frames ( Section 19.10 ) and STOP_SENDING frames ( Section 19.5 ). ¶ The receiver only sends MAX_STREAM_DATA frames in the \"Recv\" state.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "STOP_SENDING"], "states": ["Recv"], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p316-s53", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "A receiver MAY send a STOP_SENDING frame in any state where it has not received a RESET_STREAM frame -- that is, states other than \"Reset Recvd\" or \"Reset Read\".", "facet": "streams", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": ["Reset Read", "Reset Recvd"], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 7}
{"sent_id": "2.4-p317-s54", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "However, there is little value in sending a STOP_SENDING frame in the \"Data Recvd\" state, as all stream data has been received.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": ["Data Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p318-s55", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "A sender could receive either of these two types of frames in any state as a result of delayed delivery of packets. ¶ 3.4.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.4-p319-s56", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Bidirectional Stream States A bidirectional stream is composed of sending and receiving parts.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p320-s57", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Implementations can represent states of the bidirectional stream as composites of sending and receiving stream states.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p321-s58", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "The simplest model presents the stream as \"open\" when either sending or receiving parts are in a non-terminal state and \"closed\" when both sending and receiving streams are in terminal states. ¶ Table 2 shows a more complex mapping of bidirectional stream states that loosely correspond to the stream states defined in HTTP/2 [ HTTP2 ] .", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.4-p322-s59", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "This shows that multiple states on sending or receiving parts of streams are mapped to the same composite state.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "2.4-p323-s60", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Note that this is just one possibility for such a mapping; this mapping requires that data be acknowledged before the transition to a \"closed\" or \"half-closed\" state. ¶ Table 2 :", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "2.4-p324-s61", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Possible Mapping of Stream States to HTTP/2 Sending Part Receiving Part Composite State No Stream / Ready No Stream / Recv (*1) idle Ready / Send / Data Sent Recv / Size Known open Ready / Send / Data Sent Data Recvd / Data Read half-closed (remote) Ready / Send / Data Sent Reset Recvd / Reset Read half-closed (remote) Data Recvd Recv / Size Known half-closed (local) Reset Sent / Reset Recvd Recv / Size Known half-closed (local) Reset Sent / Reset Recvd Data Recvd / Data Read closed Reset Sent / Reset Recvd Reset Recvd / Reset Read closed Data Recvd Data Recvd / Data Read closed Data Recvd Reset Recvd / Reset Read closed Note (*1):", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Data Read", "Data Recvd", "Data Sent", "Ready", "Recv", "Reset Read", "Reset Recvd", "Reset Sent", "Send", "Size Known"], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p325-s62", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "A stream is considered \"idle\" if it has not yet been created or if the receiving part of the stream is in the \"Recv\" state without yet having received any frames. ¶ 3.5.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Recv"], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p326-s63", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "Solicited State Transitions If an application is no longer interested in the data it is receiving on a stream, it can abort reading the stream and specify an application error code. ¶ If the stream is in the \"Recv\" or \"Size Known\" state, the transport SHOULD signal this by sending a STOP_SENDING frame to prompt closure of the stream in the opposite direction.", "facet": "streams", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STOP_SENDING"], "states": ["Recv", "Size Known"], "roles": [], "errors": []}, "event_cue": true, "score": 7}
{"sent_id": "2.4-p327-s64", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "This typically indicates that the receiving application is no longer reading data it receives from the stream, but it is not a guarantee that incoming data will be ignored. ¶ STREAM frames received after sending a STOP_SENDING frame are still counted toward connection and stream flow control, even though these frames can be discarded upon receipt. ¶ A STOP_SENDING frame requests that the receiving endpoint send a RESET_STREAM frame.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "2.4-p328-s65", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "An endpoint that receives a STOP_SENDING frame MUST send a RESET_STREAM frame if the stream is in the \"Ready\" or \"Send\" state.", "facet": "streams", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": ["Ready", "Send"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 7}
{"sent_id": "2.4-p329-s66", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "If the stream is in the \"Data Sent\" state, the endpoint MAY defer sending the RESET_STREAM frame until the packets containing outstanding data are acknowledged or declared lost.", "facet": "streams", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Sent"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 7}
{"sent_id": "2.4-p330-s67", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "If any outstanding data is declared lost, the endpoint SHOULD send a RESET_STREAM frame instead of retransmitting the data. ¶ An endpoint SHOULD copy the error code from the STOP_SENDING frame to the RESET_STREAM frame it sends, but it can use any application error code.", "facet": "streams", "normative": true, "modalities": ["SHOULD", "SHOULD"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p331-s68", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "An endpoint that sends a STOP_SENDING frame MAY ignore the error code in any RESET_STREAM frames subsequently received for that stream. ¶ STOP_SENDING SHOULD only be sent for a stream that has not been reset by the peer.", "facet": "streams", "normative": true, "modalities": ["MAY", "SHOULD"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p332-s69", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "STOP_SENDING is most useful for streams in the \"Recv\" or \"Size Known\" state. ¶ An endpoint is expected to send another STOP_SENDING frame if a packet containing a previous STOP_SENDING is lost.", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": ["Recv", "Size Known"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "2.4-p333-s70", "section": "2.4", "anchor": "#name-operations-on-streams", "para_id": "2.4-p110", "text": "However, once either all stream data or a RESET_STREAM frame has been received for the stream -- that is, the stream is in any state other than \"Recv\" or \"Size Known\" -- sending a STOP_SENDING frame is unnecessary. ¶ An endpoint that wishes to terminate both directions of a bidirectional stream can terminate one direction by sending a RESET_STREAM frame, and it can encourage prompt termination in the opposite direction by sending a STOP_SENDING frame. ¶", "facet": "streams", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": ["Recv", "Size Known"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 5}
{"sent_id": "3-p334-s1", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p111", "text": "This section describes streams in terms of their send or receive components.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3-p335-s2", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p111", "text": "Two state machines are described: one for the streams on which an endpoint transmits data ( Section 3.1 ) and another for streams on which an endpoint receives data ( Section 3.2 ). ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3-p336-s1", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p112", "text": "Unidirectional streams use either the sending or receiving state machine, depending on the stream type and endpoint role.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3-p337-s2", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p112", "text": "Bidirectional streams use both state machines at both endpoints.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3-p338-s3", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p112", "text": "For the most part, the use of these state machines is the same whether the stream is unidirectional or bidirectional.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3-p339-s4", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p112", "text": "The conditions for opening a stream are slightly more complex for a bidirectional stream because the opening of either the send or receive side causes the stream to open in both directions. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3-p340-s1", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p113", "text": "The state machines shown in this section are largely informative.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3-p341-s2", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p113", "text": "This document uses stream states to describe rules for when and how different types of frames can be sent and the reactions that are expected when different types of frames are received.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3-p342-s3", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p113", "text": "Though these state machines are intended to be useful in implementing QUIC, these states are not intended to constrain implementations.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3-p343-s4", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p113", "text": "An implementation can define a different state machine as long as its behavior is consistent with an implementation that implements these states. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3-p344-s1", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p114", "text": "Note:", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3-p345-s2", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p114", "text": "In some cases, a single event or action can cause a transition through multiple states.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3-p346-s3", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p114", "text": "For instance, sending STREAM with a FIN bit set can cause two state transitions for a sending stream: from the \"Ready\" state to the \"Send\" state, and from the \"Send\" state to the \"Data Sent\" state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": ["Data Sent", "Ready", "Send"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3-p347-s1", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "3.1.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3-p348-s2", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "Sending Stream States Figure 2 shows the states for the part of a stream that sends data to a peer. ¶ o | Create Stream (Sending) | Peer Creates Bidirectional Stream v +-------+ | Ready | Send RESET_STREAM | |-----------------------. +-------+ | | | | Send STREAM / | | STREAM_DATA_BLOCKED | v | +-------+ | | Send | Send RESET_STREAM | | |---------------------->| +-------+ | | | | Send STREAM + FIN | v v +-------+ +-------+ | Data | Send RESET_STREAM | Reset | | Sent |------------------>| Sent | +-------+ +-------+ | | | Recv All ACKs | Recv ACK v v +-------+ +-------+ | Data | | Reset | | Recvd | | Recvd | +-------+ +-------+ Figure 2 :", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Ready", "Recv", "Send"], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3-p349-s3", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "States for Sending Parts of Streams The sending part of a stream that the endpoint initiates (types 0 and 2 for clients, 1 and 3 for servers) is opened by the application.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3-p350-s4", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "The \"Ready\" state represents a newly created stream that is able to accept data from the application.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Ready"], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3-p351-s5", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "Stream data might be buffered in this state in preparation for sending. ¶ Sending the first STREAM or STREAM_DATA_BLOCKED frame causes a sending part of a stream to enter the \"Send\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": ["Send"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3-p352-s6", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "An implementation might choose to defer allocating a stream ID to a stream until it sends the first STREAM frame and enters this state, which can allow for better stream prioritization. ¶ The sending part of a bidirectional stream initiated by a peer (type 0 for a server, type 1 for a client) starts in the \"Ready\" state when the receiving part is created. ¶ In the \"Send\" state, an endpoint transmits -- and retransmits as necessary -- stream data in STREAM frames.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": ["Ready", "Send"], "roles": ["client", "endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3-p353-s7", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "The endpoint respects the flow control limits set by its peer and continues to accept and process MAX_STREAM_DATA frames.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3-p354-s8", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "An endpoint in the \"Send\" state generates STREAM_DATA_BLOCKED frames if it is blocked from sending by stream flow control limits ( Section 4.1 ). ¶ After the application indicates that all stream data has been sent and a STREAM frame containing the FIN bit is sent, the sending part of the stream enters the \"Data Sent\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": ["Data Sent", "Send"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3-p355-s9", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "From this state, the endpoint only retransmits stream data as necessary.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3-p356-s10", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "The endpoint does not need to check flow control limits or send STREAM_DATA_BLOCKED frames for a stream in this state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3-p357-s11", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "MAX_STREAM_DATA frames might be received until the peer receives the final stream offset.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3-p358-s12", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "The endpoint can safely ignore any MAX_STREAM_DATA frames it receives from its peer for a stream in this state. ¶ Once all stream data has been successfully acknowledged, the sending part of the stream enters the \"Data Recvd\" state, which is a terminal state. ¶ From any state that is one of \"Ready\", \"Send\", or \"Data Sent\", an application can signal that it wishes to abandon transmission of stream data.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": ["Data Recvd", "Data Sent", "Ready", "Send"], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3-p359-s13", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "Alternatively, an endpoint might receive a STOP_SENDING frame from its peer.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3-p360-s14", "section": "3", "anchor": "#name-stream-states", "para_id": "3-p115", "text": "In either case, the endpoint sends a RESET_STREAM frame, which causes the stream to enter the \"Reset Sent\" state. ¶ An endpoint MAY send a RESET_STREAM as the first frame that mentions a stream; this causes the sending part of that stream to open and then immediately transition to the \"Reset Sent\" state. ¶ Once a packet containing a RESET_STREAM has been acknowledged, the sending part of the stream enters the \"Reset Recvd\" state, which is a terminal state. ¶", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM"], "states": ["Reset Recvd", "Reset Sent"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "3.1-p361-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p116", "text": "Figure 2 shows the states for the part of a stream that sends data to a peer. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.1-p362-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p117", "text": "o | Create Stream (Sending) | Peer Creates Bidirectional Stream v +-------+ | Ready | Send RESET_STREAM | |-----------------------. +-------+ | | | | Send STREAM / | | STREAM_DATA_BLOCKED | v | +-------+ | | Send | Send RESET_STREAM | | |---------------------->| +-------+ | | | | Send STREAM + FIN | v v +-------+ +-------+ | Data | Send RESET_STREAM | Reset | | Sent |------------------>| Sent | +-------+ +-------+ | | | Recv All ACKs | Recv ACK v v +-------+ +-------+ | Data | | Reset | | Recvd | | Recvd | +-------+ +-------+ Figure 2 :", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Ready", "Recv", "Send"], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p363-s2", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p117", "text": "States for Sending Parts of Streams", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.1-p364-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p118", "text": "o | Create Stream (Sending) | Peer Creates Bidirectional Stream v +-------+ | Ready | Send RESET_STREAM | |-----------------------. +-------+ | | | | Send STREAM / | | STREAM_DATA_BLOCKED | v | +-------+ | | Send | Send RESET_STREAM | | |---------------------->| +-------+ | | | | Send STREAM + FIN | v v +-------+ +-------+ | Data | Send RESET_STREAM | Reset | | Sent |------------------>| Sent | +-------+ +-------+ | | | Recv All ACKs | Recv ACK v v +-------+ +-------+ | Data | | Reset | | Recvd | | Recvd | +-------+ +-------+", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Ready", "Recv", "Send"], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p365-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p119", "text": "o | Create Stream (Sending) | Peer Creates Bidirectional Stream v +-------+ | Ready | Send RESET_STREAM | |-----------------------. +-------+ | | | | Send STREAM / | | STREAM_DATA_BLOCKED | v | +-------+ | | Send | Send RESET_STREAM | | |---------------------->| +-------+ | | | | Send STREAM + FIN | v v +-------+ +-------+ | Data | Send RESET_STREAM | Reset | | Sent |------------------>| Sent | +-------+ +-------+ | | | Recv All ACKs | Recv ACK v v +-------+ +-------+ | Data | | Reset | | Recvd | | Recvd | +-------+ +-------+", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Ready", "Recv", "Send"], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p366-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p120", "text": "Figure 2 :", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.1-p367-s2", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p120", "text": "States for Sending Parts of Streams", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.1-p368-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p121", "text": "The sending part of a stream that the endpoint initiates (types 0 and 2 for clients, 1 and 3 for servers) is opened by the application.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.1-p369-s2", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p121", "text": "The \"Ready\" state represents a newly created stream that is able to accept data from the application.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Ready"], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.1-p370-s3", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p121", "text": "Stream data might be buffered in this state in preparation for sending. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.1-p371-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p122", "text": "Sending the first STREAM or STREAM_DATA_BLOCKED frame causes a sending part of a stream to enter the \"Send\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": ["Send"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p372-s2", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p122", "text": "An implementation might choose to defer allocating a stream ID to a stream until it sends the first STREAM frame and enters this state, which can allow for better stream prioritization. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p373-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p123", "text": "The sending part of a bidirectional stream initiated by a peer (type 0 for a server, type 1 for a client) starts in the \"Ready\" state when the receiving part is created. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Ready"], "roles": ["client", "peer", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p374-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p124", "text": "In the \"Send\" state, an endpoint transmits -- and retransmits as necessary -- stream data in STREAM frames.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": ["Send"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p375-s2", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p124", "text": "The endpoint respects the flow control limits set by its peer and continues to accept and process MAX_STREAM_DATA frames.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.1-p376-s3", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p124", "text": "An endpoint in the \"Send\" state generates STREAM_DATA_BLOCKED frames if it is blocked from sending by stream flow control limits ( Section 4.1 ). ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": ["Send"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p377-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p125", "text": "After the application indicates that all stream data has been sent and a STREAM frame containing the FIN bit is sent, the sending part of the stream enters the \"Data Sent\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": ["Data Sent"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p378-s2", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p125", "text": "From this state, the endpoint only retransmits stream data as necessary.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.1-p379-s3", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p125", "text": "The endpoint does not need to check flow control limits or send STREAM_DATA_BLOCKED frames for a stream in this state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p380-s4", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p125", "text": "MAX_STREAM_DATA frames might be received until the peer receives the final stream offset.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p381-s5", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p125", "text": "The endpoint can safely ignore any MAX_STREAM_DATA frames it receives from its peer for a stream in this state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p382-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p126", "text": "Once all stream data has been successfully acknowledged, the sending part of the stream enters the \"Data Recvd\" state, which is a terminal state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Data Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p383-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p127", "text": "From any state that is one of \"Ready\", \"Send\", or \"Data Sent\", an application can signal that it wishes to abandon transmission of stream data.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Data Sent", "Ready", "Send"], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p384-s2", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p127", "text": "Alternatively, an endpoint might receive a STOP_SENDING frame from its peer.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p385-s3", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p127", "text": "In either case, the endpoint sends a RESET_STREAM frame, which causes the stream to enter the \"Reset Sent\" state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Reset Sent"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p386-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p128", "text": "An endpoint MAY send a RESET_STREAM as the first frame that mentions a stream; this causes the sending part of that stream to open and then immediately transition to the \"Reset Sent\" state. ¶", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM"], "states": ["Reset Sent"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "3.1-p387-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p129", "text": "Once a packet containing a RESET_STREAM has been acknowledged, the sending part of the stream enters the \"Reset Recvd\" state, which is a terminal state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Reset Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p388-s1", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "3.2.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.1-p389-s2", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "Receiving Stream States Figure 3 shows the states for the part of a stream that receives data from a peer.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.1-p390-s3", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "The states for a receiving part of a stream mirror only some of the states of the sending part of the stream at the peer.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.1-p391-s4", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "The receiving part of a stream does not track states on the sending part that cannot be observed, such as the \"Ready\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Ready"], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.1-p392-s5", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "Instead, the receiving part of a stream tracks the delivery of data to the application, some of which cannot be observed by the sender. ¶ o | Recv STREAM / STREAM_DATA_BLOCKED / RESET_STREAM | Create Bidirectional Stream (Sending) | Recv MAX_STREAM_DATA / STOP_SENDING (Bidirectional) | Create Higher-Numbered Stream v +-------+ | Recv | Recv RESET_STREAM | |-----------------------. +-------+ | | | | Recv STREAM + FIN | v | +-------+ | | Size | Recv RESET_STREAM | | Known |---------------------->| +-------+ | | | | Recv All Data | v v +-------+ Recv RESET_STREAM +-------+ | Data |--- (optional) --->| Reset | | Recvd | Recv All Data | Recvd | +-------+<-- (optional) ----+-------+ | | | App Read All Data | App Read Reset v v +-------+ +-------+ | Data | | Reset | | Read | | Read | +-------+ +-------+ Figure 3 :", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "RESET_STREAM", "STOP_SENDING", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Recv"], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p393-s6", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "States for Receiving Parts of Streams The receiving part of a stream initiated by a peer (types 1 and 3 for a client, or 0 and 2 for a server) is created when the first STREAM, STREAM_DATA_BLOCKED, or RESET_STREAM frame is received for that stream.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["client", "peer", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p394-s7", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "For bidirectional streams initiated by a peer, receipt of a MAX_STREAM_DATA or STOP_SENDING frame for the sending part of the stream also creates the receiving part.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "STOP_SENDING"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.1-p395-s8", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "The initial state for the receiving part of a stream is \"Recv\". ¶ For a bidirectional stream, the receiving part enters the \"Recv\" state when the sending part initiated by the endpoint (type 0 for a client, type 1 for a server) enters the \"Ready\" state. ¶ An endpoint opens a bidirectional stream when a MAX_STREAM_DATA or STOP_SENDING frame is received from the peer for that stream.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "STOP_SENDING"], "states": ["Ready", "Recv"], "roles": ["client", "endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p396-s9", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "Receiving a MAX_STREAM_DATA frame for an unopened stream indicates that the remote peer has opened the stream and is providing flow control credit.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.1-p397-s10", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "Receiving a STOP_SENDING frame for an unopened stream indicates that the remote peer no longer wishes to receive data on this stream.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p398-s11", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "Either frame might arrive before a STREAM or STREAM_DATA_BLOCKED frame if packets are lost or reordered. ¶ Before a stream is created, all streams of the same type with lower-numbered stream IDs MUST be created.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p399-s12", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "This ensures that the creation order for streams is consistent on both endpoints. ¶ In the \"Recv\" state, the endpoint receives STREAM and STREAM_DATA_BLOCKED frames.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": ["Recv"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p400-s13", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "Incoming data is buffered and can be reassembled into the correct order for delivery to the application.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.1-p401-s14", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "As data is consumed by the application and buffer space becomes available, the endpoint sends MAX_STREAM_DATA frames to allow the peer to send more data. ¶ When a STREAM frame with a FIN bit is received, the final size of the stream is known; see Section 4.5 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "STREAM"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p402-s15", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "The receiving part of the stream then enters the \"Size Known\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Size Known"], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p403-s16", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "In this state, the endpoint no longer needs to send MAX_STREAM_DATA frames; it only receives any retransmissions of stream data. ¶ Once all data for the stream has been received, the receiving part enters the \"Data Recvd\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": ["Data Recvd"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p404-s17", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "This might happen as a result of receiving the same STREAM frame that causes the transition to \"Size Known\".", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": ["Size Known"], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "3.1-p405-s18", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "After all data has been received, any STREAM or STREAM_DATA_BLOCKED frames for the stream can be discarded. ¶ The \"Data Recvd\" state persists until stream data has been delivered to the application.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": ["Data Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p406-s19", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "Once stream data has been delivered, the stream enters the \"Data Read\" state, which is a terminal state. ¶ Receiving a RESET_STREAM frame in the \"Recv\" or \"Size Known\" state causes the stream to enter the \"Reset Recvd\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Read", "Recv", "Reset Recvd", "Size Known"], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "3.1-p407-s20", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "This might cause the delivery of stream data to the application to be interrupted. ¶ It is possible that all stream data has already been received when a RESET_STREAM is received (that is, in the \"Data Recvd\" state).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.1-p408-s21", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "Similarly, it is possible for remaining stream data to arrive after receiving a RESET_STREAM frame (the \"Reset Recvd\" state).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Reset Recvd"], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "3.1-p409-s22", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "An implementation is free to manage this situation as it chooses. ¶ Sending a RESET_STREAM means that an endpoint cannot guarantee delivery of stream data; however, there is no requirement that stream data not be delivered if a RESET_STREAM is received.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p410-s23", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "An implementation MAY interrupt delivery of stream data, discard any data that was not consumed, and signal the receipt of the RESET_STREAM.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "3.1-p411-s24", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "A RESET_STREAM signal might be suppressed or withheld if stream data is completely received and is buffered to be read by the application.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.1-p412-s25", "section": "3.1", "anchor": "#name-sending-stream-states", "para_id": "3.1-p130", "text": "If the RESET_STREAM is suppressed, the receiving part of the stream remains in \"Data Recvd\". ¶ Once the application receives the signal indicating that the stream was reset, the receiving part of the stream transitions to the \"Reset Read\" state, which is a terminal state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Recvd", "Reset Read"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.2-p413-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p131", "text": "Figure 3 shows the states for the part of a stream that receives data from a peer.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.2-p414-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p131", "text": "The states for a receiving part of a stream mirror only some of the states of the sending part of the stream at the peer.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.2-p415-s3", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p131", "text": "The receiving part of a stream does not track states on the sending part that cannot be observed, such as the \"Ready\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Ready"], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.2-p416-s4", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p131", "text": "Instead, the receiving part of a stream tracks the delivery of data to the application, some of which cannot be observed by the sender. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.2-p417-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p132", "text": "o | Recv STREAM / STREAM_DATA_BLOCKED / RESET_STREAM | Create Bidirectional Stream (Sending) | Recv MAX_STREAM_DATA / STOP_SENDING (Bidirectional) | Create Higher-Numbered Stream v +-------+ | Recv | Recv RESET_STREAM | |-----------------------. +-------+ | | | | Recv STREAM + FIN | v | +-------+ | | Size | Recv RESET_STREAM | | Known |---------------------->| +-------+ | | | | Recv All Data | v v +-------+ Recv RESET_STREAM +-------+ | Data |--- (optional) --->| Reset | | Recvd | Recv All Data | Recvd | +-------+<-- (optional) ----+-------+ | | | App Read All Data | App Read Reset v v +-------+ +-------+ | Data | | Reset | | Read | | Read | +-------+ +-------+ Figure 3 :", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "RESET_STREAM", "STOP_SENDING", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Recv"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.2-p418-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p132", "text": "States for Receiving Parts of Streams", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.2-p419-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p133", "text": "o | Recv STREAM / STREAM_DATA_BLOCKED / RESET_STREAM | Create Bidirectional Stream (Sending) | Recv MAX_STREAM_DATA / STOP_SENDING (Bidirectional) | Create Higher-Numbered Stream v +-------+ | Recv | Recv RESET_STREAM | |-----------------------. +-------+ | | | | Recv STREAM + FIN | v | +-------+ | | Size | Recv RESET_STREAM | | Known |---------------------->| +-------+ | | | | Recv All Data | v v +-------+ Recv RESET_STREAM +-------+ | Data |--- (optional) --->| Reset | | Recvd | Recv All Data | Recvd | +-------+<-- (optional) ----+-------+ | | | App Read All Data | App Read Reset v v +-------+ +-------+ | Data | | Reset | | Read | | Read | +-------+ +-------+", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "RESET_STREAM", "STOP_SENDING", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Recv"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.2-p420-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p134", "text": "o | Recv STREAM / STREAM_DATA_BLOCKED / RESET_STREAM | Create Bidirectional Stream (Sending) | Recv MAX_STREAM_DATA / STOP_SENDING (Bidirectional) | Create Higher-Numbered Stream v +-------+ | Recv | Recv RESET_STREAM | |-----------------------. +-------+ | | | | Recv STREAM + FIN | v | +-------+ | | Size | Recv RESET_STREAM | | Known |---------------------->| +-------+ | | | | Recv All Data | v v +-------+ Recv RESET_STREAM +-------+ | Data |--- (optional) --->| Reset | | Recvd | Recv All Data | Recvd | +-------+<-- (optional) ----+-------+ | | | App Read All Data | App Read Reset v v +-------+ +-------+ | Data | | Reset | | Read | | Read | +-------+ +-------+", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "RESET_STREAM", "STOP_SENDING", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Recv"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.2-p421-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p135", "text": "Figure 3 :", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.2-p422-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p135", "text": "States for Receiving Parts of Streams", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.2-p423-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p136", "text": "The receiving part of a stream initiated by a peer (types 1 and 3 for a client, or 0 and 2 for a server) is created when the first STREAM, STREAM_DATA_BLOCKED, or RESET_STREAM frame is received for that stream.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["client", "peer", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p424-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p136", "text": "For bidirectional streams initiated by a peer, receipt of a MAX_STREAM_DATA or STOP_SENDING frame for the sending part of the stream also creates the receiving part.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "STOP_SENDING"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.2-p425-s3", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p136", "text": "The initial state for the receiving part of a stream is \"Recv\". ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Recv"], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.2-p426-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p137", "text": "For a bidirectional stream, the receiving part enters the \"Recv\" state when the sending part initiated by the endpoint (type 0 for a client, type 1 for a server) enters the \"Ready\" state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Ready", "Recv"], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p427-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p138", "text": "An endpoint opens a bidirectional stream when a MAX_STREAM_DATA or STOP_SENDING frame is received from the peer for that stream.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "STOP_SENDING"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p428-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p138", "text": "Receiving a MAX_STREAM_DATA frame for an unopened stream indicates that the remote peer has opened the stream and is providing flow control credit.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.2-p429-s3", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p138", "text": "Receiving a STOP_SENDING frame for an unopened stream indicates that the remote peer no longer wishes to receive data on this stream.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p430-s4", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p138", "text": "Either frame might arrive before a STREAM or STREAM_DATA_BLOCKED frame if packets are lost or reordered. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p431-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p139", "text": "Before a stream is created, all streams of the same type with lower-numbered stream IDs MUST be created.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.2-p432-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p139", "text": "This ensures that the creation order for streams is consistent on both endpoints. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.2-p433-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p140", "text": "In the \"Recv\" state, the endpoint receives STREAM and STREAM_DATA_BLOCKED frames.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": ["Recv"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.2-p434-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p140", "text": "Incoming data is buffered and can be reassembled into the correct order for delivery to the application.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.2-p435-s3", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p140", "text": "As data is consumed by the application and buffer space becomes available, the endpoint sends MAX_STREAM_DATA frames to allow the peer to send more data. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p436-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p141", "text": "When a STREAM frame with a FIN bit is received, the final size of the stream is known; see Section 4.5 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p437-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p141", "text": "The receiving part of the stream then enters the \"Size Known\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Size Known"], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p438-s3", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p141", "text": "In this state, the endpoint no longer needs to send MAX_STREAM_DATA frames; it only receives any retransmissions of stream data. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p439-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p142", "text": "Once all data for the stream has been received, the receiving part enters the \"Data Recvd\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Data Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p440-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p142", "text": "This might happen as a result of receiving the same STREAM frame that causes the transition to \"Size Known\".", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": ["Size Known"], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "3.2-p441-s3", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p142", "text": "After all data has been received, any STREAM or STREAM_DATA_BLOCKED frames for the stream can be discarded. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p442-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p143", "text": "The \"Data Recvd\" state persists until stream data has been delivered to the application.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Data Recvd"], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.2-p443-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p143", "text": "Once stream data has been delivered, the stream enters the \"Data Read\" state, which is a terminal state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Data Read"], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.2-p444-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p144", "text": "Receiving a RESET_STREAM frame in the \"Recv\" or \"Size Known\" state causes the stream to enter the \"Reset Recvd\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Recv", "Reset Recvd", "Size Known"], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "3.2-p445-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p144", "text": "This might cause the delivery of stream data to the application to be interrupted. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.2-p446-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p145", "text": "It is possible that all stream data has already been received when a RESET_STREAM is received (that is, in the \"Data Recvd\" state).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.2-p447-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p145", "text": "Similarly, it is possible for remaining stream data to arrive after receiving a RESET_STREAM frame (the \"Reset Recvd\" state).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Reset Recvd"], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "3.2-p448-s3", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p145", "text": "An implementation is free to manage this situation as it chooses. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.2-p449-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p146", "text": "Sending a RESET_STREAM means that an endpoint cannot guarantee delivery of stream data; however, there is no requirement that stream data not be delivered if a RESET_STREAM is received.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p450-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p146", "text": "An implementation MAY interrupt delivery of stream data, discard any data that was not consumed, and signal the receipt of the RESET_STREAM.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "3.2-p451-s3", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p146", "text": "A RESET_STREAM signal might be suppressed or withheld if stream data is completely received and is buffered to be read by the application.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p452-s4", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p146", "text": "If the RESET_STREAM is suppressed, the receiving part of the stream remains in \"Data Recvd\". ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.2-p453-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p147", "text": "Once the application receives the signal indicating that the stream was reset, the receiving part of the stream transitions to the \"Reset Read\" state, which is a terminal state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Reset Read"], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.2-p454-s1", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p148", "text": "3.3.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.2-p455-s2", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p148", "text": "Permitted Frame Types The sender of a stream sends just three frame types that affect the state of a stream at either the sender or the receiver:", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.2-p456-s3", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p148", "text": "STREAM ( Section 19.8 ), STREAM_DATA_BLOCKED ( Section 19.13 ), and RESET_STREAM ( Section 19.4 ). ¶ A sender MUST NOT send any of these frames from a terminal state (\"Data Recvd\" or \"Reset Recvd\").", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Data Recvd", "Reset Recvd"], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "3.2-p457-s4", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p148", "text": "A sender MUST NOT send a STREAM or STREAM_DATA_BLOCKED frame for a stream in the \"Reset Sent\" state or any terminal state -- that is, after sending a RESET_STREAM frame.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Reset Sent"], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "3.2-p458-s5", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p148", "text": "A receiver could receive any of these three frames in any state, due to the possibility of delayed delivery of packets carrying them. ¶ The receiver of a stream sends MAX_STREAM_DATA frames ( Section 19.10 ) and STOP_SENDING frames ( Section 19.5 ). ¶ The receiver only sends MAX_STREAM_DATA frames in the \"Recv\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "STOP_SENDING"], "states": ["Recv"], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.2-p459-s6", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p148", "text": "A receiver MAY send a STOP_SENDING frame in any state where it has not received a RESET_STREAM frame -- that is, states other than \"Reset Recvd\" or \"Reset Read\".", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": ["Reset Read", "Reset Recvd"], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "3.2-p460-s7", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p148", "text": "However, there is little value in sending a STOP_SENDING frame in the \"Data Recvd\" state, as all stream data has been received.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": ["Data Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.2-p461-s8", "section": "3.2", "anchor": "#name-receiving-stream-states", "para_id": "3.2-p148", "text": "A sender could receive either of these two types of frames in any state as a result of delayed delivery of packets. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.3-p462-s1", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p149", "text": "The sender of a stream sends just three frame types that affect the state of a stream at either the sender or the receiver:", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.3-p463-s2", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p149", "text": "STREAM ( Section 19.8 ), STREAM_DATA_BLOCKED ( Section 19.13 ), and RESET_STREAM ( Section 19.4 ). ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.3-p464-s1", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p150", "text": "A sender MUST NOT send any of these frames from a terminal state (\"Data Recvd\" or \"Reset Recvd\").", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": ["Data Recvd", "Reset Recvd"], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.3-p465-s2", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p150", "text": "A sender MUST NOT send a STREAM or STREAM_DATA_BLOCKED frame for a stream in the \"Reset Sent\" state or any terminal state -- that is, after sending a RESET_STREAM frame.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["RESET_STREAM", "STREAM", "STREAM_DATA_BLOCKED"], "states": ["Reset Sent"], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "3.3-p466-s3", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p150", "text": "A receiver could receive any of these three frames in any state, due to the possibility of delayed delivery of packets carrying them. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.3-p467-s1", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p151", "text": "The receiver of a stream sends MAX_STREAM_DATA frames ( Section 19.10 ) and STOP_SENDING frames ( Section 19.5 ). ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA", "STOP_SENDING"], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.3-p468-s1", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p152", "text": "The receiver only sends MAX_STREAM_DATA frames in the \"Recv\" state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": ["Recv"], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.3-p469-s2", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p152", "text": "A receiver MAY send a STOP_SENDING frame in any state where it has not received a RESET_STREAM frame -- that is, states other than \"Reset Recvd\" or \"Reset Read\".", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": ["Reset Read", "Reset Recvd"], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "3.3-p470-s3", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p152", "text": "However, there is little value in sending a STOP_SENDING frame in the \"Data Recvd\" state, as all stream data has been received.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": ["Data Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.3-p471-s4", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p152", "text": "A sender could receive either of these two types of frames in any state as a result of delayed delivery of packets. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.3-p472-s1", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p153", "text": "3.4.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.3-p473-s2", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p153", "text": "Bidirectional Stream States A bidirectional stream is composed of sending and receiving parts.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.3-p474-s3", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p153", "text": "Implementations can represent states of the bidirectional stream as composites of sending and receiving stream states.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.3-p475-s4", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p153", "text": "The simplest model presents the stream as \"open\" when either sending or receiving parts are in a non-terminal state and \"closed\" when both sending and receiving streams are in terminal states. ¶ Table 2 shows a more complex mapping of bidirectional stream states that loosely correspond to the stream states defined in HTTP/2 [ HTTP2 ] .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.3-p476-s5", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p153", "text": "This shows that multiple states on sending or receiving parts of streams are mapped to the same composite state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.3-p477-s6", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p153", "text": "Note that this is just one possibility for such a mapping; this mapping requires that data be acknowledged before the transition to a \"closed\" or \"half-closed\" state. ¶ Table 2 :", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.3-p478-s7", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p153", "text": "Possible Mapping of Stream States to HTTP/2 Sending Part Receiving Part Composite State No Stream / Ready No Stream / Recv (*1) idle Ready / Send / Data Sent Recv / Size Known open Ready / Send / Data Sent Data Recvd / Data Read half-closed (remote) Ready / Send / Data Sent Reset Recvd / Reset Read half-closed (remote) Data Recvd Recv / Size Known half-closed (local) Reset Sent / Reset Recvd Recv / Size Known half-closed (local) Reset Sent / Reset Recvd Data Recvd / Data Read closed Reset Sent / Reset Recvd Reset Recvd / Reset Read closed Data Recvd Data Recvd / Data Read closed Data Recvd Reset Recvd / Reset Read closed Note (*1):", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Data Read", "Data Recvd", "Data Sent", "Ready", "Recv", "Reset Read", "Reset Recvd", "Reset Sent", "Send", "Size Known"], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.3-p479-s8", "section": "3.3", "anchor": "#name-permitted-frame-types", "para_id": "3.3-p153", "text": "A stream is considered \"idle\" if it has not yet been created or if the receiving part of the stream is in the \"Recv\" state without yet having received any frames. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Recv"], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.4-p480-s1", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p154", "text": "A bidirectional stream is composed of sending and receiving parts.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.4-p481-s2", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p154", "text": "Implementations can represent states of the bidirectional stream as composites of sending and receiving stream states.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.4-p482-s3", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p154", "text": "The simplest model presents the stream as \"open\" when either sending or receiving parts are in a non-terminal state and \"closed\" when both sending and receiving streams are in terminal states. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.4-p483-s1", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p155", "text": "Table 2 shows a more complex mapping of bidirectional stream states that loosely correspond to the stream states defined in HTTP/2 [ HTTP2 ] .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.4-p484-s2", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p155", "text": "This shows that multiple states on sending or receiving parts of streams are mapped to the same composite state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.4-p485-s3", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p155", "text": "Note that this is just one possibility for such a mapping; this mapping requires that data be acknowledged before the transition to a \"closed\" or \"half-closed\" state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.4-p486-s1", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p156", "text": "Table 2 :", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.4-p487-s2", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p156", "text": "Possible Mapping of Stream States to HTTP/2 Sending Part Receiving Part Composite State No Stream / Ready No Stream / Recv (*1) idle Ready / Send / Data Sent Recv / Size Known open Ready / Send / Data Sent Data Recvd / Data Read half-closed (remote) Ready / Send / Data Sent Reset Recvd / Reset Read half-closed (remote) Data Recvd Recv / Size Known half-closed (local) Reset Sent / Reset Recvd Recv / Size Known half-closed (local) Reset Sent / Reset Recvd Data Recvd / Data Read closed Reset Sent / Reset Recvd Reset Recvd / Reset Read closed Data Recvd Data Recvd / Data Read closed Data Recvd Reset Recvd / Reset Read closed", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Data Read", "Data Recvd", "Data Sent", "Ready", "Recv", "Reset Read", "Reset Recvd", "Reset Sent", "Send", "Size Known"], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.4-p488-s1", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p157", "text": "Table 2 :", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.4-p489-s2", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p157", "text": "Possible Mapping of Stream States to HTTP/2 Sending Part Receiving Part Composite State No Stream / Ready No Stream / Recv (*1) idle Ready / Send / Data Sent Recv / Size Known open Ready / Send / Data Sent Data Recvd / Data Read half-closed (remote) Ready / Send / Data Sent Reset Recvd / Reset Read half-closed (remote) Data Recvd Recv / Size Known half-closed (local) Reset Sent / Reset Recvd Recv / Size Known half-closed (local) Reset Sent / Reset Recvd Data Recvd / Data Read closed Reset Sent / Reset Recvd Reset Recvd / Reset Read closed Data Recvd Data Recvd / Data Read closed Data Recvd Reset Recvd / Reset Read closed", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Data Read", "Data Recvd", "Data Sent", "Ready", "Recv", "Reset Read", "Reset Recvd", "Reset Sent", "Send", "Size Known"], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.4-p490-s1", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p158", "text": "Note (*1):", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.4-p491-s2", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p158", "text": "A stream is considered \"idle\" if it has not yet been created or if the receiving part of the stream is in the \"Recv\" state without yet having received any frames. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Recv"], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.4-p492-s1", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p159", "text": "3.5.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.4-p493-s2", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p159", "text": "Solicited State Transitions If an application is no longer interested in the data it is receiving on a stream, it can abort reading the stream and specify an application error code. ¶ If the stream is in the \"Recv\" or \"Size Known\" state, the transport SHOULD signal this by sending a STOP_SENDING frame to prompt closure of the stream in the opposite direction.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STOP_SENDING"], "states": ["Recv", "Size Known"], "roles": [], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "3.4-p494-s3", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p159", "text": "This typically indicates that the receiving application is no longer reading data it receives from the stream, but it is not a guarantee that incoming data will be ignored. ¶ STREAM frames received after sending a STOP_SENDING frame are still counted toward connection and stream flow control, even though these frames can be discarded upon receipt. ¶ A STOP_SENDING frame requests that the receiving endpoint send a RESET_STREAM frame.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.4-p495-s4", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p159", "text": "An endpoint that receives a STOP_SENDING frame MUST send a RESET_STREAM frame if the stream is in the \"Ready\" or \"Send\" state.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": ["Ready", "Send"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "3.4-p496-s5", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p159", "text": "If the stream is in the \"Data Sent\" state, the endpoint MAY defer sending the RESET_STREAM frame until the packets containing outstanding data are acknowledged or declared lost.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Sent"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "3.4-p497-s6", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p159", "text": "If any outstanding data is declared lost, the endpoint SHOULD send a RESET_STREAM frame instead of retransmitting the data. ¶ An endpoint SHOULD copy the error code from the STOP_SENDING frame to the RESET_STREAM frame it sends, but it can use any application error code.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD", "SHOULD"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.4-p498-s7", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p159", "text": "An endpoint that sends a STOP_SENDING frame MAY ignore the error code in any RESET_STREAM frames subsequently received for that stream. ¶ STOP_SENDING SHOULD only be sent for a stream that has not been reset by the peer.", "facet": "state_machine", "normative": true, "modalities": ["MAY", "SHOULD"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.4-p499-s8", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p159", "text": "STOP_SENDING is most useful for streams in the \"Recv\" or \"Size Known\" state. ¶ An endpoint is expected to send another STOP_SENDING frame if a packet containing a previous STOP_SENDING is lost.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": ["Recv", "Size Known"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.4-p500-s9", "section": "3.4", "anchor": "#name-bidirectional-stream-states", "para_id": "3.4-p159", "text": "However, once either all stream data or a RESET_STREAM frame has been received for the stream -- that is, the stream is in any state other than \"Recv\" or \"Size Known\" -- sending a STOP_SENDING frame is unnecessary. ¶ An endpoint that wishes to terminate both directions of a bidirectional stream can terminate one direction by sending a RESET_STREAM frame, and it can encourage prompt termination in the opposite direction by sending a STOP_SENDING frame. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": ["Recv", "Size Known"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p501-s1", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p160", "text": "If an application is no longer interested in the data it is receiving on a stream, it can abort reading the stream and specify an application error code. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.5-p502-s1", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p161", "text": "If the stream is in the \"Recv\" or \"Size Known\" state, the transport SHOULD signal this by sending a STOP_SENDING frame to prompt closure of the stream in the opposite direction.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STOP_SENDING"], "states": ["Recv", "Size Known"], "roles": [], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "3.5-p503-s2", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p161", "text": "This typically indicates that the receiving application is no longer reading data it receives from the stream, but it is not a guarantee that incoming data will be ignored. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.5-p504-s1", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p162", "text": "STREAM frames received after sending a STOP_SENDING frame are still counted toward connection and stream flow control, even though these frames can be discarded upon receipt. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING", "STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.5-p505-s1", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p163", "text": "A STOP_SENDING frame requests that the receiving endpoint send a RESET_STREAM frame.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.5-p506-s2", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p163", "text": "An endpoint that receives a STOP_SENDING frame MUST send a RESET_STREAM frame if the stream is in the \"Ready\" or \"Send\" state.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": ["Ready", "Send"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "3.5-p507-s3", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p163", "text": "If the stream is in the \"Data Sent\" state, the endpoint MAY defer sending the RESET_STREAM frame until the packets containing outstanding data are acknowledged or declared lost.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Sent"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "3.5-p508-s4", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p163", "text": "If any outstanding data is declared lost, the endpoint SHOULD send a RESET_STREAM frame instead of retransmitting the data. ¶", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p509-s1", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p164", "text": "An endpoint SHOULD copy the error code from the STOP_SENDING frame to the RESET_STREAM frame it sends, but it can use any application error code.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p510-s2", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p164", "text": "An endpoint that sends a STOP_SENDING frame MAY ignore the error code in any RESET_STREAM frames subsequently received for that stream. ¶", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p511-s1", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p165", "text": "STOP_SENDING SHOULD only be sent for a stream that has not been reset by the peer.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "3.5-p512-s2", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p165", "text": "STOP_SENDING is most useful for streams in the \"Recv\" or \"Size Known\" state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": ["Recv", "Size Known"], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "3.5-p513-s1", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p166", "text": "An endpoint is expected to send another STOP_SENDING frame if a packet containing a previous STOP_SENDING is lost.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.5-p514-s2", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p166", "text": "However, once either all stream data or a RESET_STREAM frame has been received for the stream -- that is, the stream is in any state other than \"Recv\" or \"Size Known\" -- sending a STOP_SENDING frame is unnecessary. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": ["Recv", "Size Known"], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p515-s1", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p167", "text": "An endpoint that wishes to terminate both directions of a bidirectional stream can terminate one direction by sending a RESET_STREAM frame, and it can encourage prompt termination in the opposite direction by sending a STOP_SENDING frame. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.5-p516-s1", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "4.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.5-p517-s2", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Flow Control Receivers need to limit the amount of data that they are required to buffer, in order to prevent a fast sender from overwhelming them or a malicious sender from consuming a large amount of memory.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.5-p518-s3", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "To enable a receiver to limit memory commitments for a connection, streams are flow controlled both individually and across a connection as a whole.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.5-p519-s4", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "A QUIC receiver controls the maximum amount of data the sender can send on a stream as well as across all streams at any time, as described in Sections 4.1 and 4.2 . ¶ Similarly, to limit concurrency within a connection, a QUIC endpoint controls the maximum cumulative number of streams that its peer can initiate, as described in Section 4.6 . ¶ Data sent in CRYPTO frames is not flow controlled in the same way as stream data.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.5-p520-s5", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "QUIC relies on the cryptographic protocol implementation to avoid excessive buffering of data; see [ QUIC-TLS ] .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.5-p521-s6", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "To avoid excessive buffering at multiple layers, QUIC implementations SHOULD provide an interface for the cryptographic protocol implementation to communicate its buffering limits. ¶ 4.1.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.5-p522-s7", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Data Flow Control QUIC employs a limit-based flow control scheme where a receiver advertises the limit of total bytes it is prepared to receive on a given stream or for the entire connection.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.5-p523-s8", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "This leads to two levels of data flow control in QUIC: ¶ Stream flow control, which prevents a single stream from consuming the entire receive buffer for a connection by limiting the amount of data that can be sent on each stream. ¶ Connection flow control, which prevents senders from exceeding a receiver's buffer capacity for the connection by limiting the total bytes of stream data sent in STREAM frames on all streams. ¶ Senders MUST NOT send data in excess of either limit. ¶ A receiver sets initial limits for all streams through transport parameters during the handshake ( Section 7.4 ).", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["STREAM"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p524-s9", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Subsequently, a receiver sends MAX_STREAM_DATA frames ( Section 19.10 ) or MAX_DATA frames ( Section 19.9 ) to the sender to advertise larger limits. ¶ A receiver can advertise a larger limit for a stream by sending a MAX_STREAM_DATA frame with the corresponding stream ID.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.5-p525-s10", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "A MAX_STREAM_DATA frame indicates the maximum absolute byte offset of a stream.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.5-p526-s11", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "A receiver could determine the flow control offset to be advertised based on the current offset of data consumed on that stream. ¶ A receiver can advertise a larger limit for a connection by sending a MAX_DATA frame, which indicates the maximum of the sum of the absolute byte offsets of all streams.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.5-p527-s12", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "A receiver maintains a cumulative sum of bytes received on all streams, which is used to check for violations of the advertised connection or stream data limits.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.5-p528-s13", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "A receiver could determine the maximum data limit to be advertised based on the sum of bytes consumed on all streams. ¶ Once a receiver advertises a limit for the connection or a stream, it is not an error to advertise a smaller limit, but the smaller limit has no effect. ¶ A receiver MUST close the connection with an error of type FLOW_CONTROL_ERROR if the sender violates the advertised connection or stream data limits; see Section 11 for details on error handling. ¶ A sender MUST ignore any MAX_STREAM_DATA or MAX_DATA frames that do not increase flow control limits. ¶ If a sender has sent data up to the limit, it will be unable to send new data and is considered blocked.", "facet": "state_machine", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": ["receiver", "sender"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p529-s14", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "A sender SHOULD send a STREAM_DATA_BLOCKED or DATA_BLOCKED frame to indicate to the receiver that it has data to write but is blocked by flow control limits.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["DATA_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p530-s15", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "If a sender is blocked for a period longer than the idle timeout ( Section 10.1 ), the receiver might close the connection even when the sender has data that is available for transmission.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.5-p531-s16", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "To keep the connection from closing, a sender that is flow control limited SHOULD periodically send a STREAM_DATA_BLOCKED or DATA_BLOCKED frame when it has no ack-eliciting packets in flight. ¶ 4.2.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["DATA_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p532-s17", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Increasing Flow Control Limits Implementations decide when and how much credit to advertise in MAX_STREAM_DATA and MAX_DATA frames, but this section offers a few considerations. ¶ To avoid blocking a sender, a receiver MAY send a MAX_STREAM_DATA or MAX_DATA frame multiple times within a round trip or send it early enough to allow time for loss of the frame and subsequent recovery. ¶ Control frames contribute to connection overhead.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p533-s18", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Therefore, frequently sending MAX_STREAM_DATA and MAX_DATA frames with small changes is undesirable.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.5-p534-s19", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "On the other hand, if updates are less frequent, larger increments to limits are necessary to avoid blocking a sender, requiring larger resource commitments at the receiver.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.5-p535-s20", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "There is a trade-off between resource commitment and overhead when determining how large a limit is advertised. ¶ A receiver can use an autotuning mechanism to tune the frequency and amount of advertised additional credit based on a round-trip time estimate and the rate at which the receiving application consumes data, similar to common TCP implementations.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.5-p536-s21", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "As an optimization, an endpoint could send frames related to flow control only when there are other frames to send, ensuring that flow control does not cause extra packets to be sent. ¶ A blocked sender is not required to send STREAM_DATA_BLOCKED or DATA_BLOCKED frames.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.5-p537-s22", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Therefore, a receiver MUST NOT wait for a STREAM_DATA_BLOCKED or DATA_BLOCKED frame before sending a MAX_STREAM_DATA or MAX_DATA frame; doing so could result in the sender being blocked for the rest of the connection.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["DATA_BLOCKED", "MAX_DATA", "MAX_STREAM_DATA", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "3.5-p538-s23", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Even if the sender sends these frames, waiting for them will result in the sender being blocked for at least an entire round trip. ¶ When a sender receives credit after being blocked, it might be able to send a large amount of data in response, resulting in short-term congestion; see Section 7.7 of [ QUIC-RECOVERY ] for a discussion of how a sender can avoid this congestion. ¶ 4.3.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.5-p539-s24", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Flow Control Performance If an endpoint cannot ensure that its peer always has available flow control credit that is greater than the peer's bandwidth-delay product on this connection, its receive throughput will be limited by flow control. ¶ Packet loss can cause gaps in the receive buffer, preventing the application from consuming data and freeing up receive buffer space. ¶ Sending timely updates of flow control limits can improve performance.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.5-p540-s25", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Sending packets only to provide flow control updates can increase network load and adversely affect performance.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.5-p541-s26", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Sending flow control updates along with other frames, such as ACK frames, reduces the cost of those updates. ¶ 4.4.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.5-p542-s27", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Handling Stream Cancellation Endpoints need to eventually agree on the amount of flow control credit that has been consumed on every stream, to be able to account for all bytes for connection-level flow control. ¶ On receipt of a RESET_STREAM frame, an endpoint will tear down state for the matching stream and ignore further data arriving on that stream. ¶ RESET_STREAM terminates one direction of a stream abruptly.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.5-p543-s28", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "For a bidirectional stream, RESET_STREAM has no effect on data flow in the opposite direction.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.5-p544-s29", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Both endpoints MUST maintain flow control state for the stream in the unterminated direction until that direction enters a terminal state. ¶ 4.5.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.5-p545-s30", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Stream Final Size The final size is the amount of flow control credit that is consumed by a stream.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.5-p546-s31", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Assuming that every contiguous byte on the stream was sent once, the final size is the number of bytes sent.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.5-p547-s32", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "More generally, this is one higher than the offset of the byte with the largest offset sent on the stream, or zero if no bytes were sent. ¶ A sender always communicates the final size of a stream to the receiver reliably, no matter how the stream is terminated.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "3.5-p548-s33", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "The final size is the sum of the Offset and Length fields of a STREAM frame with a FIN flag, noting that these fields might be implicit.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.5-p549-s34", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Alternatively, the Final Size field of a RESET_STREAM frame carries this value.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.5-p550-s35", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "This guarantees that both endpoints agree on how much flow control credit was consumed by the sender on that stream. ¶ An endpoint will know the final size for a stream when the receiving part of the stream enters the \"Size Known\" or \"Reset Recvd\" state ( Section 3 ).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Reset Recvd", "Size Known"], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.5-p551-s36", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "The receiver MUST use the final size of the stream to account for all bytes sent on the stream in its connection-level flow controller. ¶ An endpoint MUST NOT send data on a stream at or beyond the final size. ¶ Once a final size for a stream is known, it cannot change.", "facet": "state_machine", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.5-p552-s37", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "If a RESET_STREAM or STREAM frame is received indicating a change in the final size for the stream, an endpoint SHOULD respond with an error of type FINAL_SIZE_ERROR; see Section 11 for details on error handling.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": ["FINAL_SIZE_ERROR"]}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p553-s38", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "A receiver SHOULD treat receipt of data at or beyond the final size as an error of type FINAL_SIZE_ERROR, even after a stream is closed.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": ["FINAL_SIZE_ERROR"]}, "event_cue": false, "score": 3}
{"sent_id": "3.5-p554-s39", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Generating these errors is not mandatory, because requiring that an endpoint generate these errors also means that the endpoint needs to maintain the final size state for closed streams, which could mean a significant state commitment. ¶ 4.6.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.5-p555-s40", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Controlling Concurrency An endpoint limits the cumulative number of incoming streams a peer can open.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.5-p556-s41", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Only streams with a stream ID less than (max_streams * 4 + first_stream_id_of_type) can be opened; see Table 1 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.5-p557-s42", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Initial limits are set in the transport parameters; see Section 18.2 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.5-p558-s43", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Subsequent limits are advertised using MAX_STREAMS frames; see Section 19.11 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "3.5-p559-s44", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Separate limits apply to unidirectional and bidirectional streams. ¶ If a max_streams transport parameter or a MAX_STREAMS frame is received with a value greater than 2 60 , this would allow a maximum stream ID that cannot be expressed as a variable-length integer; see Section 16 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.5-p560-s45", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "If either is received, the connection MUST be closed immediately with a connection error of type TRANSPORT_PARAMETER_ERROR if the offending value was received in a transport parameter or of type FRAME_ENCODING_ERROR if it was received in a frame; see Section 10.2 . ¶ Endpoints MUST NOT exceed the limit set by their peer.", "facet": "state_machine", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "3.5-p561-s46", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "An endpoint that receives a frame with a stream ID exceeding the limit it has sent MUST treat this as a connection error of type STREAM_LIMIT_ERROR; see Section 11 for details on error handling. ¶ Once a receiver advertises a stream limit using the MAX_STREAMS frame, advertising a smaller limit has no effect.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p562-s47", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "MAX_STREAMS frames that do not increase the stream limit MUST be ignored. ¶ As with stream and connection flow control, this document leaves implementations to decide when and how many streams should be advertised to a peer via MAX_STREAMS.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p563-s48", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "Implementations might choose to increase limits as streams are closed, to keep the number of streams available to peers roughly consistent. ¶ An endpoint that is unable to open a new stream due to the peer's limits SHOULD send a STREAMS_BLOCKED frame ( Section 19.14 ).", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "3.5-p564-s49", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "This signal is considered useful for debugging.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "3.5-p565-s50", "section": "3.5", "anchor": "#name-solicited-state-transitions", "para_id": "3.5-p168", "text": "An endpoint MUST NOT wait to receive this signal before advertising additional credit, since doing so will mean that the peer will be blocked for at least an entire round trip, and potentially indefinitely if the peer chooses not to send STREAMS_BLOCKED frames. ¶", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4-p566-s1", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p169", "text": "Receivers need to limit the amount of data that they are required to buffer, in order to prevent a fast sender from overwhelming them or a malicious sender from consuming a large amount of memory.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4-p567-s2", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p169", "text": "To enable a receiver to limit memory commitments for a connection, streams are flow controlled both individually and across a connection as a whole.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4-p568-s3", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p169", "text": "A QUIC receiver controls the maximum amount of data the sender can send on a stream as well as across all streams at any time, as described in Sections 4.1 and 4.2 . ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4-p569-s1", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p170", "text": "Similarly, to limit concurrency within a connection, a QUIC endpoint controls the maximum cumulative number of streams that its peer can initiate, as described in Section 4.6 . ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4-p570-s1", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p171", "text": "Data sent in CRYPTO frames is not flow controlled in the same way as stream data.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4-p571-s2", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p171", "text": "QUIC relies on the cryptographic protocol implementation to avoid excessive buffering of data; see [ QUIC-TLS ] .", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4-p572-s3", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p171", "text": "To avoid excessive buffering at multiple layers, QUIC implementations SHOULD provide an interface for the cryptographic protocol implementation to communicate its buffering limits. ¶", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4-p573-s1", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p172", "text": "4.1.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4-p574-s2", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p172", "text": "Data Flow Control QUIC employs a limit-based flow control scheme where a receiver advertises the limit of total bytes it is prepared to receive on a given stream or for the entire connection.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4-p575-s3", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p172", "text": "This leads to two levels of data flow control in QUIC: ¶ Stream flow control, which prevents a single stream from consuming the entire receive buffer for a connection by limiting the amount of data that can be sent on each stream. ¶ Connection flow control, which prevents senders from exceeding a receiver's buffer capacity for the connection by limiting the total bytes of stream data sent in STREAM frames on all streams. ¶ Senders MUST NOT send data in excess of either limit. ¶ A receiver sets initial limits for all streams through transport parameters during the handshake ( Section 7.4 ).", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["STREAM"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4-p576-s4", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p172", "text": "Subsequently, a receiver sends MAX_STREAM_DATA frames ( Section 19.10 ) or MAX_DATA frames ( Section 19.9 ) to the sender to advertise larger limits. ¶ A receiver can advertise a larger limit for a stream by sending a MAX_STREAM_DATA frame with the corresponding stream ID.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4-p577-s5", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p172", "text": "A MAX_STREAM_DATA frame indicates the maximum absolute byte offset of a stream.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4-p578-s6", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p172", "text": "A receiver could determine the flow control offset to be advertised based on the current offset of data consumed on that stream. ¶ A receiver can advertise a larger limit for a connection by sending a MAX_DATA frame, which indicates the maximum of the sum of the absolute byte offsets of all streams.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4-p579-s7", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p172", "text": "A receiver maintains a cumulative sum of bytes received on all streams, which is used to check for violations of the advertised connection or stream data limits.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4-p580-s8", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p172", "text": "A receiver could determine the maximum data limit to be advertised based on the sum of bytes consumed on all streams. ¶ Once a receiver advertises a limit for the connection or a stream, it is not an error to advertise a smaller limit, but the smaller limit has no effect. ¶ A receiver MUST close the connection with an error of type FLOW_CONTROL_ERROR if the sender violates the advertised connection or stream data limits; see Section 11 for details on error handling. ¶ A sender MUST ignore any MAX_STREAM_DATA or MAX_DATA frames that do not increase flow control limits. ¶ If a sender has sent data up to the limit, it will be unable to send new data and is considered blocked.", "facet": "flow_control", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": ["receiver", "sender"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 6}
{"sent_id": "4-p581-s9", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p172", "text": "A sender SHOULD send a STREAM_DATA_BLOCKED or DATA_BLOCKED frame to indicate to the receiver that it has data to write but is blocked by flow control limits.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["DATA_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4-p582-s10", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p172", "text": "If a sender is blocked for a period longer than the idle timeout ( Section 10.1 ), the receiver might close the connection even when the sender has data that is available for transmission.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4-p583-s11", "section": "4", "anchor": "#name-flow-control", "para_id": "4-p172", "text": "To keep the connection from closing, a sender that is flow control limited SHOULD periodically send a STREAM_DATA_BLOCKED or DATA_BLOCKED frame when it has no ack-eliciting packets in flight. ¶", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["DATA_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4.1-p584-s1", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p173", "text": "QUIC employs a limit-based flow control scheme where a receiver advertises the limit of total bytes it is prepared to receive on a given stream or for the entire connection.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.1-p585-s2", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p173", "text": "This leads to two levels of data flow control in QUIC: ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.1-p586-s1", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p174", "text": "Stream flow control, which prevents a single stream from consuming the entire receive buffer for a connection by limiting the amount of data that can be sent on each stream. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.1-p587-s1", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p175", "text": "Connection flow control, which prevents senders from exceeding a receiver's buffer capacity for the connection by limiting the total bytes of stream data sent in STREAM frames on all streams. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.1-p588-s1", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p176", "text": "Senders MUST NOT send data in excess of either limit. ¶", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.1-p589-s1", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p177", "text": "A receiver sets initial limits for all streams through transport parameters during the handshake ( Section 7.4 ).", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.1-p590-s2", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p177", "text": "Subsequently, a receiver sends MAX_STREAM_DATA frames ( Section 19.10 ) or MAX_DATA frames ( Section 19.9 ) to the sender to advertise larger limits. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.1-p591-s1", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p178", "text": "A receiver can advertise a larger limit for a stream by sending a MAX_STREAM_DATA frame with the corresponding stream ID.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.1-p592-s2", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p178", "text": "A MAX_STREAM_DATA frame indicates the maximum absolute byte offset of a stream.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.1-p593-s3", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p178", "text": "A receiver could determine the flow control offset to be advertised based on the current offset of data consumed on that stream. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.1-p594-s1", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p179", "text": "A receiver can advertise a larger limit for a connection by sending a MAX_DATA frame, which indicates the maximum of the sum of the absolute byte offsets of all streams.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.1-p595-s2", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p179", "text": "A receiver maintains a cumulative sum of bytes received on all streams, which is used to check for violations of the advertised connection or stream data limits.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.1-p596-s3", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p179", "text": "A receiver could determine the maximum data limit to be advertised based on the sum of bytes consumed on all streams. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.1-p597-s1", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p180", "text": "Once a receiver advertises a limit for the connection or a stream, it is not an error to advertise a smaller limit, but the smaller limit has no effect. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.1-p598-s1", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p181", "text": "A receiver MUST close the connection with an error of type FLOW_CONTROL_ERROR if the sender violates the advertised connection or stream data limits; see Section 11 for details on error handling. ¶", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 4}
{"sent_id": "4.1-p599-s1", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p182", "text": "A sender MUST ignore any MAX_STREAM_DATA or MAX_DATA frames that do not increase flow control limits. ¶", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "4.1-p600-s1", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p183", "text": "If a sender has sent data up to the limit, it will be unable to send new data and is considered blocked.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.1-p601-s2", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p183", "text": "A sender SHOULD send a STREAM_DATA_BLOCKED or DATA_BLOCKED frame to indicate to the receiver that it has data to write but is blocked by flow control limits.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["DATA_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4.1-p602-s3", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p183", "text": "If a sender is blocked for a period longer than the idle timeout ( Section 10.1 ), the receiver might close the connection even when the sender has data that is available for transmission.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.1-p603-s4", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p183", "text": "To keep the connection from closing, a sender that is flow control limited SHOULD periodically send a STREAM_DATA_BLOCKED or DATA_BLOCKED frame when it has no ack-eliciting packets in flight. ¶", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["DATA_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4.1-p604-s1", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p184", "text": "4.2.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.1-p605-s2", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p184", "text": "Increasing Flow Control Limits Implementations decide when and how much credit to advertise in MAX_STREAM_DATA and MAX_DATA frames, but this section offers a few considerations. ¶ To avoid blocking a sender, a receiver MAY send a MAX_STREAM_DATA or MAX_DATA frame multiple times within a round trip or send it early enough to allow time for loss of the frame and subsequent recovery. ¶ Control frames contribute to connection overhead.", "facet": "flow_control", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4.1-p606-s3", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p184", "text": "Therefore, frequently sending MAX_STREAM_DATA and MAX_DATA frames with small changes is undesirable.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.1-p607-s4", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p184", "text": "On the other hand, if updates are less frequent, larger increments to limits are necessary to avoid blocking a sender, requiring larger resource commitments at the receiver.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.1-p608-s5", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p184", "text": "There is a trade-off between resource commitment and overhead when determining how large a limit is advertised. ¶ A receiver can use an autotuning mechanism to tune the frequency and amount of advertised additional credit based on a round-trip time estimate and the rate at which the receiving application consumes data, similar to common TCP implementations.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.1-p609-s6", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p184", "text": "As an optimization, an endpoint could send frames related to flow control only when there are other frames to send, ensuring that flow control does not cause extra packets to be sent. ¶ A blocked sender is not required to send STREAM_DATA_BLOCKED or DATA_BLOCKED frames.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.1-p610-s7", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p184", "text": "Therefore, a receiver MUST NOT wait for a STREAM_DATA_BLOCKED or DATA_BLOCKED frame before sending a MAX_STREAM_DATA or MAX_DATA frame; doing so could result in the sender being blocked for the rest of the connection.", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["DATA_BLOCKED", "MAX_DATA", "MAX_STREAM_DATA", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "4.1-p611-s8", "section": "4.1", "anchor": "#name-data-flow-control", "para_id": "4.1-p184", "text": "Even if the sender sends these frames, waiting for them will result in the sender being blocked for at least an entire round trip. ¶ When a sender receives credit after being blocked, it might be able to send a large amount of data in response, resulting in short-term congestion; see Section 7.7 of [ QUIC-RECOVERY ] for a discussion of how a sender can avoid this congestion. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.2-p612-s1", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p185", "text": "Implementations decide when and how much credit to advertise in MAX_STREAM_DATA and MAX_DATA frames, but this section offers a few considerations. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.2-p613-s1", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p186", "text": "To avoid blocking a sender, a receiver MAY send a MAX_STREAM_DATA or MAX_DATA frame multiple times within a round trip or send it early enough to allow time for loss of the frame and subsequent recovery. ¶", "facet": "flow_control", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4.2-p614-s1", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p187", "text": "Control frames contribute to connection overhead.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.2-p615-s2", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p187", "text": "Therefore, frequently sending MAX_STREAM_DATA and MAX_DATA frames with small changes is undesirable.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.2-p616-s3", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p187", "text": "On the other hand, if updates are less frequent, larger increments to limits are necessary to avoid blocking a sender, requiring larger resource commitments at the receiver.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.2-p617-s4", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p187", "text": "There is a trade-off between resource commitment and overhead when determining how large a limit is advertised. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.2-p618-s1", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p188", "text": "A receiver can use an autotuning mechanism to tune the frequency and amount of advertised additional credit based on a round-trip time estimate and the rate at which the receiving application consumes data, similar to common TCP implementations.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.2-p619-s2", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p188", "text": "As an optimization, an endpoint could send frames related to flow control only when there are other frames to send, ensuring that flow control does not cause extra packets to be sent. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.2-p620-s1", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p189", "text": "A blocked sender is not required to send STREAM_DATA_BLOCKED or DATA_BLOCKED frames.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.2-p621-s2", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p189", "text": "Therefore, a receiver MUST NOT wait for a STREAM_DATA_BLOCKED or DATA_BLOCKED frame before sending a MAX_STREAM_DATA or MAX_DATA frame; doing so could result in the sender being blocked for the rest of the connection.", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["DATA_BLOCKED", "MAX_DATA", "MAX_STREAM_DATA", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "4.2-p622-s3", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p189", "text": "Even if the sender sends these frames, waiting for them will result in the sender being blocked for at least an entire round trip. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.2-p623-s1", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p190", "text": "When a sender receives credit after being blocked, it might be able to send a large amount of data in response, resulting in short-term congestion; see Section 7.7 of [ QUIC-RECOVERY ] for a discussion of how a sender can avoid this congestion. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.2-p624-s1", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p191", "text": "4.3.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.2-p625-s2", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p191", "text": "Flow Control Performance If an endpoint cannot ensure that its peer always has available flow control credit that is greater than the peer's bandwidth-delay product on this connection, its receive throughput will be limited by flow control. ¶ Packet loss can cause gaps in the receive buffer, preventing the application from consuming data and freeing up receive buffer space. ¶ Sending timely updates of flow control limits can improve performance.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.2-p626-s3", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p191", "text": "Sending packets only to provide flow control updates can increase network load and adversely affect performance.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.2-p627-s4", "section": "4.2", "anchor": "#name-increasing-flow-control-lim", "para_id": "4.2-p191", "text": "Sending flow control updates along with other frames, such as ACK frames, reduces the cost of those updates. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.3-p628-s1", "section": "4.3", "anchor": "#name-flow-control-performance", "para_id": "4.3-p192", "text": "If an endpoint cannot ensure that its peer always has available flow control credit that is greater than the peer's bandwidth-delay product on this connection, its receive throughput will be limited by flow control. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.3-p629-s1", "section": "4.3", "anchor": "#name-flow-control-performance", "para_id": "4.3-p193", "text": "Packet loss can cause gaps in the receive buffer, preventing the application from consuming data and freeing up receive buffer space. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.3-p630-s1", "section": "4.3", "anchor": "#name-flow-control-performance", "para_id": "4.3-p194", "text": "Sending timely updates of flow control limits can improve performance.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.3-p631-s2", "section": "4.3", "anchor": "#name-flow-control-performance", "para_id": "4.3-p194", "text": "Sending packets only to provide flow control updates can increase network load and adversely affect performance.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.3-p632-s3", "section": "4.3", "anchor": "#name-flow-control-performance", "para_id": "4.3-p194", "text": "Sending flow control updates along with other frames, such as ACK frames, reduces the cost of those updates. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.3-p633-s1", "section": "4.3", "anchor": "#name-flow-control-performance", "para_id": "4.3-p195", "text": "4.4.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.3-p634-s2", "section": "4.3", "anchor": "#name-flow-control-performance", "para_id": "4.3-p195", "text": "Handling Stream Cancellation Endpoints need to eventually agree on the amount of flow control credit that has been consumed on every stream, to be able to account for all bytes for connection-level flow control. ¶ On receipt of a RESET_STREAM frame, an endpoint will tear down state for the matching stream and ignore further data arriving on that stream. ¶ RESET_STREAM terminates one direction of a stream abruptly.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.3-p635-s3", "section": "4.3", "anchor": "#name-flow-control-performance", "para_id": "4.3-p195", "text": "For a bidirectional stream, RESET_STREAM has no effect on data flow in the opposite direction.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.3-p636-s4", "section": "4.3", "anchor": "#name-flow-control-performance", "para_id": "4.3-p195", "text": "Both endpoints MUST maintain flow control state for the stream in the unterminated direction until that direction enters a terminal state. ¶", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.4-p637-s1", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p196", "text": "Endpoints need to eventually agree on the amount of flow control credit that has been consumed on every stream, to be able to account for all bytes for connection-level flow control. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.4-p638-s1", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p197", "text": "On receipt of a RESET_STREAM frame, an endpoint will tear down state for the matching stream and ignore further data arriving on that stream. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.4-p639-s1", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p198", "text": "RESET_STREAM terminates one direction of a stream abruptly.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.4-p640-s2", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p198", "text": "For a bidirectional stream, RESET_STREAM has no effect on data flow in the opposite direction.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.4-p641-s3", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p198", "text": "Both endpoints MUST maintain flow control state for the stream in the unterminated direction until that direction enters a terminal state. ¶", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.4-p642-s1", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p199", "text": "4.5.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.4-p643-s2", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p199", "text": "Stream Final Size The final size is the amount of flow control credit that is consumed by a stream.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.4-p644-s3", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p199", "text": "Assuming that every contiguous byte on the stream was sent once, the final size is the number of bytes sent.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.4-p645-s4", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p199", "text": "More generally, this is one higher than the offset of the byte with the largest offset sent on the stream, or zero if no bytes were sent. ¶ A sender always communicates the final size of a stream to the receiver reliably, no matter how the stream is terminated.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.4-p646-s5", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p199", "text": "The final size is the sum of the Offset and Length fields of a STREAM frame with a FIN flag, noting that these fields might be implicit.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.4-p647-s6", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p199", "text": "Alternatively, the Final Size field of a RESET_STREAM frame carries this value.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.4-p648-s7", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p199", "text": "This guarantees that both endpoints agree on how much flow control credit was consumed by the sender on that stream. ¶ An endpoint will know the final size for a stream when the receiving part of the stream enters the \"Size Known\" or \"Reset Recvd\" state ( Section 3 ).", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Reset Recvd", "Size Known"], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.4-p649-s8", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p199", "text": "The receiver MUST use the final size of the stream to account for all bytes sent on the stream in its connection-level flow controller. ¶ An endpoint MUST NOT send data on a stream at or beyond the final size. ¶ Once a final size for a stream is known, it cannot change.", "facet": "flow_control", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.4-p650-s9", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p199", "text": "If a RESET_STREAM or STREAM frame is received indicating a change in the final size for the stream, an endpoint SHOULD respond with an error of type FINAL_SIZE_ERROR; see Section 11 for details on error handling.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": ["FINAL_SIZE_ERROR"]}, "event_cue": true, "score": 6}
{"sent_id": "4.4-p651-s10", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p199", "text": "A receiver SHOULD treat receipt of data at or beyond the final size as an error of type FINAL_SIZE_ERROR, even after a stream is closed.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": ["FINAL_SIZE_ERROR"]}, "event_cue": false, "score": 3}
{"sent_id": "4.4-p652-s11", "section": "4.4", "anchor": "#name-handling-stream-cancellatio", "para_id": "4.4-p199", "text": "Generating these errors is not mandatory, because requiring that an endpoint generate these errors also means that the endpoint needs to maintain the final size state for closed streams, which could mean a significant state commitment. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.5-p653-s1", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p200", "text": "The final size is the amount of flow control credit that is consumed by a stream.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.5-p654-s2", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p200", "text": "Assuming that every contiguous byte on the stream was sent once, the final size is the number of bytes sent.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.5-p655-s3", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p200", "text": "More generally, this is one higher than the offset of the byte with the largest offset sent on the stream, or zero if no bytes were sent. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.5-p656-s1", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p201", "text": "A sender always communicates the final size of a stream to the receiver reliably, no matter how the stream is terminated.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.5-p657-s2", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p201", "text": "The final size is the sum of the Offset and Length fields of a STREAM frame with a FIN flag, noting that these fields might be implicit.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.5-p658-s3", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p201", "text": "Alternatively, the Final Size field of a RESET_STREAM frame carries this value.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.5-p659-s4", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p201", "text": "This guarantees that both endpoints agree on how much flow control credit was consumed by the sender on that stream. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.5-p660-s1", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p202", "text": "An endpoint will know the final size for a stream when the receiving part of the stream enters the \"Size Known\" or \"Reset Recvd\" state ( Section 3 ).", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": ["Reset Recvd", "Size Known"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.5-p661-s2", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p202", "text": "The receiver MUST use the final size of the stream to account for all bytes sent on the stream in its connection-level flow controller. ¶", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.5-p662-s1", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p203", "text": "An endpoint MUST NOT send data on a stream at or beyond the final size. ¶", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.5-p663-s1", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p204", "text": "Once a final size for a stream is known, it cannot change.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.5-p664-s2", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p204", "text": "If a RESET_STREAM or STREAM frame is received indicating a change in the final size for the stream, an endpoint SHOULD respond with an error of type FINAL_SIZE_ERROR; see Section 11 for details on error handling.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": ["FINAL_SIZE_ERROR"]}, "event_cue": true, "score": 6}
{"sent_id": "4.5-p665-s3", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p204", "text": "A receiver SHOULD treat receipt of data at or beyond the final size as an error of type FINAL_SIZE_ERROR, even after a stream is closed.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": ["FINAL_SIZE_ERROR"]}, "event_cue": false, "score": 3}
{"sent_id": "4.5-p666-s4", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p204", "text": "Generating these errors is not mandatory, because requiring that an endpoint generate these errors also means that the endpoint needs to maintain the final size state for closed streams, which could mean a significant state commitment. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.5-p667-s1", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p205", "text": "4.6.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.5-p668-s2", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p205", "text": "Controlling Concurrency An endpoint limits the cumulative number of incoming streams a peer can open.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.5-p669-s3", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p205", "text": "Only streams with a stream ID less than (max_streams * 4 + first_stream_id_of_type) can be opened; see Table 1 .", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.5-p670-s4", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p205", "text": "Initial limits are set in the transport parameters; see Section 18.2 .", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.5-p671-s5", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p205", "text": "Subsequent limits are advertised using MAX_STREAMS frames; see Section 19.11 .", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.5-p672-s6", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p205", "text": "Separate limits apply to unidirectional and bidirectional streams. ¶ If a max_streams transport parameter or a MAX_STREAMS frame is received with a value greater than 2 60 , this would allow a maximum stream ID that cannot be expressed as a variable-length integer; see Section 16 .", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.5-p673-s7", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p205", "text": "If either is received, the connection MUST be closed immediately with a connection error of type TRANSPORT_PARAMETER_ERROR if the offending value was received in a transport parameter or of type FRAME_ENCODING_ERROR if it was received in a frame; see Section 10.2 . ¶ Endpoints MUST NOT exceed the limit set by their peer.", "facet": "flow_control", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.5-p674-s8", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p205", "text": "An endpoint that receives a frame with a stream ID exceeding the limit it has sent MUST treat this as a connection error of type STREAM_LIMIT_ERROR; see Section 11 for details on error handling. ¶ Once a receiver advertises a stream limit using the MAX_STREAMS frame, advertising a smaller limit has no effect.", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4.5-p675-s9", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p205", "text": "MAX_STREAMS frames that do not increase the stream limit MUST be ignored. ¶ As with stream and connection flow control, this document leaves implementations to decide when and how many streams should be advertised to a peer via MAX_STREAMS.", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4.5-p676-s10", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p205", "text": "Implementations might choose to increase limits as streams are closed, to keep the number of streams available to peers roughly consistent. ¶ An endpoint that is unable to open a new stream due to the peer's limits SHOULD send a STREAMS_BLOCKED frame ( Section 19.14 ).", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4.5-p677-s11", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p205", "text": "This signal is considered useful for debugging.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.5-p678-s12", "section": "4.5", "anchor": "#name-stream-final-size", "para_id": "4.5-p205", "text": "An endpoint MUST NOT wait to receive this signal before advertising additional credit, since doing so will mean that the peer will be blocked for at least an entire round trip, and potentially indefinitely if the peer chooses not to send STREAMS_BLOCKED frames. ¶", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4.6-p679-s1", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p206", "text": "An endpoint limits the cumulative number of incoming streams a peer can open.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p680-s2", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p206", "text": "Only streams with a stream ID less than (max_streams * 4 + first_stream_id_of_type) can be opened; see Table 1 .", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p681-s3", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p206", "text": "Initial limits are set in the transport parameters; see Section 18.2 .", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p682-s4", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p206", "text": "Subsequent limits are advertised using MAX_STREAMS frames; see Section 19.11 .", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p683-s5", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p206", "text": "Separate limits apply to unidirectional and bidirectional streams. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p684-s1", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p207", "text": "If a max_streams transport parameter or a MAX_STREAMS frame is received with a value greater than 2 60 , this would allow a maximum stream ID that cannot be expressed as a variable-length integer; see Section 16 .", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p685-s2", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p207", "text": "If either is received, the connection MUST be closed immediately with a connection error of type TRANSPORT_PARAMETER_ERROR if the offending value was received in a transport parameter or of type FRAME_ENCODING_ERROR if it was received in a frame; see Section 10.2 . ¶", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p686-s1", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p208", "text": "Endpoints MUST NOT exceed the limit set by their peer.", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p687-s2", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p208", "text": "An endpoint that receives a frame with a stream ID exceeding the limit it has sent MUST treat this as a connection error of type STREAM_LIMIT_ERROR; see Section 11 for details on error handling. ¶", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p688-s1", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p209", "text": "Once a receiver advertises a stream limit using the MAX_STREAMS frame, advertising a smaller limit has no effect.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p689-s2", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p209", "text": "MAX_STREAMS frames that do not increase the stream limit MUST be ignored. ¶", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "4.6-p690-s1", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p210", "text": "As with stream and connection flow control, this document leaves implementations to decide when and how many streams should be advertised to a peer via MAX_STREAMS.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p691-s2", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p210", "text": "Implementations might choose to increase limits as streams are closed, to keep the number of streams available to peers roughly consistent. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p692-s1", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p211", "text": "An endpoint that is unable to open a new stream due to the peer's limits SHOULD send a STREAMS_BLOCKED frame ( Section 19.14 ).", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4.6-p693-s2", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p211", "text": "This signal is considered useful for debugging.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p694-s3", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p211", "text": "An endpoint MUST NOT wait to receive this signal before advertising additional credit, since doing so will mean that the peer will be blocked for at least an entire round trip, and potentially indefinitely if the peer chooses not to send STREAMS_BLOCKED frames. ¶", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "4.6-p695-s1", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "5.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p696-s2", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Connections A QUIC connection is shared state between a client and a server. ¶ Each connection starts with a handshake phase, during which the two endpoints establish a shared secret using the cryptographic handshake protocol [ QUIC-TLS ] and negotiate the application protocol.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p697-s3", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "The handshake ( Section 7 ) confirms that both endpoints are willing to communicate ( Section 8.1 ) and establishes parameters for the connection ( Section 7.4 ). ¶ An application protocol can use the connection during the handshake phase with some limitations. 0-RTT allows application data to be sent by a client before receiving a response from the server.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p698-s4", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "However, 0-RTT provides no protection against replay attacks; see Section 9.2 of [ QUIC-TLS ] .", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p699-s5", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "A server can also send application data to a client before it receives the final cryptographic handshake messages that allow it to confirm the identity and liveness of the client.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p700-s6", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "These capabilities allow an application protocol to offer the option of trading some security guarantees for reduced latency. ¶ The use of connection IDs ( Section 5.1 ) allows connections to migrate to a new network path, both as a direct choice of an endpoint and when forced by a change in a middlebox.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p701-s7", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Section 9 describes mitigations for the security and privacy issues associated with migration. ¶ For connections that are no longer needed or desired, there are several ways for a client and server to terminate a connection, as described in Section 10 . ¶ 5.1.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p702-s8", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Connection ID Each connection possesses a set of connection identifiers, or connection IDs, each of which can identify the connection.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p703-s9", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Connection IDs are independently selected by endpoints; each endpoint selects the connection IDs that its peer uses. ¶ The primary function of a connection ID is to ensure that changes in addressing at lower protocol layers (UDP, IP) do not cause packets for a QUIC connection to be delivered to the wrong endpoint.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p704-s10", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Each endpoint selects connection IDs using an implementation-specific (and perhaps deployment-specific) method that will allow packets with that connection ID to be routed back to the endpoint and to be identified by the endpoint upon receipt. ¶ Multiple connection IDs are used so that endpoints can send packets that cannot be identified by an observer as being for the same connection without cooperation from an endpoint; see Section 9.5 . ¶ Connection IDs MUST NOT contain any information that can be used by an external observer (that is, one that does not cooperate with the issuer) to correlate them with other connection IDs for the same connection.", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p705-s11", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "As a trivial example, this means the same connection ID MUST NOT be issued more than once on the same connection. ¶ Packets with long headers include Source Connection ID and Destination Connection ID fields.", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p706-s12", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "These fields are used to set the connection IDs for new connections; see Section 7.2 for details. ¶ Packets with short headers ( Section 17.3 ) only include the Destination Connection ID and omit the explicit length.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p707-s13", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "The length of the Destination Connection ID field is expected to be known to endpoints.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p708-s14", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Endpoints using a load balancer that routes based on connection ID could agree with the load balancer on a fixed length for connection IDs or agree on an encoding scheme.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p709-s15", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "A fixed portion could encode an explicit length, which allows the entire connection ID to vary in length and still be used by the load balancer. ¶ A Version Negotiation ( Section 17.2.1 ) packet echoes the connection IDs selected by the client, both to ensure correct routing toward the client and to demonstrate that the packet is in response to a packet sent by the client. ¶ A zero-length connection ID can be used when a connection ID is not needed to route to the correct endpoint.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p710-s16", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "However, multiplexing connections on the same local IP address and port while using zero-length connection IDs will cause failures in the presence of peer connection migration, NAT rebinding, and client port reuse.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p711-s17", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "An endpoint MUST NOT use the same IP address and port for multiple concurrent connections with zero-length connection IDs, unless it is certain that those protocol features are not in use. ¶ When an endpoint uses a non-zero-length connection ID, it needs to ensure that the peer has a supply of connection IDs from which to choose for packets sent to the endpoint.", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p712-s18", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "These connection IDs are supplied by the endpoint using the NEW_CONNECTION_ID frame ( Section 19.15 ). ¶ 5.1.1.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p713-s19", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Issuing Connection IDs Each connection ID has an associated sequence number to assist in detecting when NEW_CONNECTION_ID or RETIRE_CONNECTION_ID frames refer to the same value.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p714-s20", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "The initial connection ID issued by an endpoint is sent in the Source Connection ID field of the long packet header ( Section 17.2 ) during the handshake.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p715-s21", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "The sequence number of the initial connection ID is 0.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p716-s22", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "If the preferred_address transport parameter is sent, the sequence number of the supplied connection ID is 1. ¶ Additional connection IDs are communicated to the peer using NEW_CONNECTION_ID frames ( Section 19.15 ).", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p717-s23", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "The sequence number on each newly issued connection ID MUST increase by 1.", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p718-s24", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "The connection ID that a client selects for the first Destination Connection ID field it sends and any connection ID provided by a Retry packet are not assigned sequence numbers. ¶ When an endpoint issues a connection ID, it MUST accept packets that carry this connection ID for the duration of the connection or until its peer invalidates the connection ID via a RETIRE_CONNECTION_ID frame ( Section 19.16 ).", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p719-s25", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Connection IDs that are issued and not retired are considered active; any active connection ID is valid for use with the current connection at any time, in any packet type.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p720-s26", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "This includes the connection ID issued by the server via the preferred_address transport parameter. ¶ An endpoint SHOULD ensure that its peer has a sufficient number of available and unused connection IDs.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p721-s27", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Endpoints advertise the number of active connection IDs they are willing to maintain using the active_connection_id_limit transport parameter.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p722-s28", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "An endpoint MUST NOT provide more connection IDs than the peer's limit.", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p723-s29", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "An endpoint MAY send connection IDs that temporarily exceed a peer's limit if the NEW_CONNECTION_ID frame also requires the retirement of any excess, by including a sufficiently large value in the Retire Prior To field. ¶ A NEW_CONNECTION_ID frame might cause an endpoint to add some active connection IDs and retire others based on the value of the Retire Prior To field.", "facet": "flow_control", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p724-s30", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "After processing a NEW_CONNECTION_ID frame and adding and retiring active connection IDs, if the number of active connection IDs exceeds the value advertised in its active_connection_id_limit transport parameter, an endpoint MUST close the connection with an error of type CONNECTION_ID_LIMIT_ERROR. ¶ An endpoint SHOULD supply a new connection ID when the peer retires a connection ID.", "facet": "flow_control", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p725-s31", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "If an endpoint provided fewer connection IDs than the peer's active_connection_id_limit, it MAY supply a new connection ID when it receives a packet with a previously unused connection ID.", "facet": "flow_control", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p726-s32", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "An endpoint MAY limit the total number of connection IDs issued for each connection to avoid the risk of running out of connection IDs; see Section 10.3.2 .", "facet": "flow_control", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p727-s33", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "An endpoint MAY also limit the issuance of connection IDs to reduce the amount of per-path state it maintains, such as path validation status, as its peer might interact with it over as many paths as there are issued connection IDs. ¶ An endpoint that initiates migration and requires non-zero-length connection IDs SHOULD ensure that the pool of connection IDs available to its peer allows the peer to use a new connection ID on migration, as the peer will be unable to respond if the pool is exhausted. ¶ An endpoint that selects a zero-length connection ID during the handshake cannot issue a new connection ID.", "facet": "flow_control", "normative": true, "modalities": ["MAY", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p728-s34", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "A zero-length Destination Connection ID field is used in all packets sent toward such an endpoint over any network path. ¶ 5.1.2.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p729-s35", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Consuming and Retiring Connection IDs An endpoint can change the connection ID it uses for a peer to another available one at any time during the connection.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p730-s36", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "An endpoint consumes connection IDs in response to a migrating peer; see Section 9.5 for more details. ¶ An endpoint maintains a set of connection IDs received from its peer, any of which it can use when sending packets.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p731-s37", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "When the endpoint wishes to remove a connection ID from use, it sends a RETIRE_CONNECTION_ID frame to its peer.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p732-s38", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Sending a RETIRE_CONNECTION_ID frame indicates that the connection ID will not be used again and requests that the peer replace it with a new connection ID using a NEW_CONNECTION_ID frame. ¶ As discussed in Section 9.5 , endpoints limit the use of a connection ID to packets sent from a single local address to a single destination address.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p733-s39", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Endpoints SHOULD retire connection IDs when they are no longer actively using either the local or destination address for which the connection ID was used. ¶ An endpoint might need to stop accepting previously issued connection IDs in certain circumstances.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p734-s40", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Such an endpoint can cause its peer to retire connection IDs by sending a NEW_CONNECTION_ID frame with an increased Retire Prior To field.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p735-s41", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "The endpoint SHOULD continue to accept the previously issued connection IDs until they are retired by the peer.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p736-s42", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "If the endpoint can no longer process the indicated connection IDs, it MAY close the connection. ¶ Upon receipt of an increased Retire Prior To field, the peer MUST stop using the corresponding connection IDs and retire them with RETIRE_CONNECTION_ID frames before adding the newly provided connection ID to the set of active connection IDs.", "facet": "flow_control", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p737-s43", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "This ordering allows an endpoint to replace all active connection IDs without the possibility of a peer having no available connection IDs and without exceeding the limit the peer sets in the active_connection_id_limit transport parameter; see Section 18.2 .", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p738-s44", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Failure to cease using the connection IDs when requested can result in connection failures, as the issuing endpoint might be unable to continue using the connection IDs with the active connection. ¶ An endpoint SHOULD limit the number of connection IDs it has retired locally for which RETIRE_CONNECTION_ID frames have not yet been acknowledged.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p739-s45", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "An endpoint SHOULD allow for sending and tracking a number of RETIRE_CONNECTION_ID frames of at least twice the value of the active_connection_id_limit transport parameter.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p740-s46", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "An endpoint MUST NOT forget a connection ID without retiring it, though it MAY choose to treat having connection IDs in need of retirement that exceed this limit as a connection error of type CONNECTION_ID_LIMIT_ERROR. ¶ Endpoints SHOULD NOT issue updates of the Retire Prior To field before receiving RETIRE_CONNECTION_ID frames that retire all connection IDs indicated by the previous Retire Prior To value. ¶ 5.2.", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT", "MAY", "SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p741-s47", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Matching Packets to Connections Incoming packets are classified on receipt.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p742-s48", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Packets can either be associated with an existing connection or -- for servers -- potentially create a new connection. ¶ Endpoints try to associate a packet with an existing connection.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p743-s49", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "If the packet has a non-zero-length Destination Connection ID corresponding to an existing connection, QUIC processes that packet accordingly.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p744-s50", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Note that more than one connection ID can be associated with a connection; see Section 5.1 . ¶ If the Destination Connection ID is zero length and the addressing information in the packet matches the addressing information the endpoint uses to identify a connection with a zero-length connection ID, QUIC processes the packet as part of that connection.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p745-s51", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "An endpoint can use just destination IP and port or both source and destination addresses for identification, though this makes connections fragile as described in Section 5.1 . ¶ Endpoints can send a Stateless Reset ( Section 10.3 ) for any packets that cannot be attributed to an existing connection.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p746-s52", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "A Stateless Reset allows a peer to more quickly identify when a connection becomes unusable. ¶ Packets that are matched to an existing connection are discarded if the packets are inconsistent with the state of that connection.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p747-s53", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "For example, packets are discarded if they indicate a different protocol version than that of the connection or if the removal of packet protection is unsuccessful once the expected keys are available. ¶ Invalid packets that lack strong integrity protection, such as Initial, Retry, or Version Negotiation, MAY be discarded.", "facet": "flow_control", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p748-s54", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "An endpoint MUST generate a connection error if processing the contents of these packets prior to discovering an error, or fully revert any changes made during that processing. ¶ 5.2.1.", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p749-s55", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Client Packet Handling Valid packets sent to clients always include a Destination Connection ID that matches a value the client selects.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p750-s56", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Clients that choose to receive zero-length connection IDs can use the local address and port to identify a connection.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p751-s57", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Packets that do not match an existing connection -- based on Destination Connection ID or, if this value is zero length, local IP address and port -- are discarded. ¶ Due to packet reordering or loss, a client might receive packets for a connection that are encrypted with a key it has not yet computed.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p752-s58", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "The client MAY drop these packets, or it MAY buffer them in anticipation of later packets that allow it to compute the key. ¶ If a client receives a packet that uses a different version than it initially selected, it MUST discard that packet. ¶ 5.2.2.", "facet": "flow_control", "normative": true, "modalities": ["MAY", "MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p753-s59", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Server Packet Handling If a server receives a packet that indicates an unsupported version and if the packet is large enough to initiate a new connection for any supported version, the server SHOULD send a Version Negotiation packet as described in Section 6.1 .", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p754-s60", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "A server MAY limit the number of packets to which it responds with a Version Negotiation packet.", "facet": "flow_control", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p755-s61", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Servers MUST drop smaller packets that specify unsupported versions. ¶ The first packet for an unsupported version can use different semantics and encodings for any version-specific field.", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p756-s62", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "In particular, different packet protection keys might be used for different versions.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p757-s63", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Servers that do not support a particular version are unlikely to be able to decrypt the payload of the packet or properly interpret the result.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p758-s64", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Servers SHOULD respond with a Version Negotiation packet, provided that the datagram is sufficiently long. ¶ Packets with a supported version, or no Version field, are matched to a connection using the connection ID or -- for packets with zero-length connection IDs -- the local address and port.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p759-s65", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "These packets are processed using the selected connection; otherwise, the server continues as described below. ¶ If the packet is an Initial packet fully conforming with the specification, the server proceeds with the handshake ( Section 7 ).", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p760-s66", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "This commits the server to the version that the client selected. ¶ If a server refuses to accept a new connection, it SHOULD send an Initial packet containing a CONNECTION_CLOSE frame with error code CONNECTION_REFUSED. ¶ If the packet is a 0-RTT packet, the server MAY buffer a limited number of these packets in anticipation of a late-arriving Initial packet.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD", "MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p761-s67", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Clients are not able to send Handshake packets prior to receiving a server response, so servers SHOULD ignore any such packets. ¶ Servers MUST drop incoming packets under all other circumstances. ¶ 5.2.3.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p762-s68", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Considerations for Simple Load Balancers A server deployment could load-balance among servers using only source and destination IP addresses and ports.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p763-s69", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Changes to the client's IP address or port could result in packets being forwarded to the wrong server.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p764-s70", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Such a server deployment could use one of the following methods for connection continuity when a client's address changes. ¶ Servers could use an out-of-band mechanism to forward packets to the correct server based on connection ID. ¶ If servers can use a dedicated server IP address or port, other than the one that the client initially connects to, they could use the preferred_address transport parameter to request that clients move connections to that dedicated address.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p765-s71", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Note that clients could choose not to use the preferred address. ¶ A server in a deployment that does not implement a solution to maintain connection continuity when the client address changes SHOULD indicate that migration is not supported by using the disable_active_migration transport parameter.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "4.6-p766-s72", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "The disable_active_migration transport parameter does not prohibit connection migration after a client has acted on a preferred_address transport parameter. ¶ Server deployments that use this simple form of load balancing MUST avoid the creation of a stateless reset oracle; see Section 21.11 . ¶ 5.3.", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "4.6-p767-s73", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "Operations on Connections This document does not define an API for QUIC; it instead defines a set of functions for QUIC connections that application protocols can rely upon.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "4.6-p768-s74", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "An application protocol can assume that an implementation of QUIC provides an interface that includes the operations described in this section.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "4.6-p769-s75", "section": "4.6", "anchor": "#name-controlling-concurrency", "para_id": "4.6-p212", "text": "An implementation designed for use with a specific application protocol might provide only those operations that are used by that protocol. ¶ When implementing the client role, an application protocol can: ¶ open a connection, which begins the exchange described in Section 7 ; ¶ enable Early Data when available; and ¶ be informed when Early Data has been accepted or rejected by a server. ¶ When implementing the server role, an application protocol can: ¶ listen for incoming connections, which prepares for the exchange described in Section 7 ; ¶ if Early Data is supported, embed application-controlled data in the TLS resumption ticket sent to the client; and ¶ if Early Data is supported, retrieve application-controlled data from the client's resumption ticket and accept or reject Early Data based on that information. ¶ In either role, an application protocol can: ¶ configure minimum values for the initial number of permitted streams of each type, as communicated in the transport parameters ( Section 7.4 ); ¶ control resource allocation for receive buffers by setting flow control limits both for streams and for the connection; ¶ identify whether the handshake has completed successfully or is still ongoing; ¶ keep a connection from silently closing, by either generating PING frames ( Section 19.2 ) or requesting that the transport send additional frames before the idle timeout expires ( Section 10.1 ); and ¶ immediately close ( Section 10.2 ) the connection. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5-p770-s1", "section": "5", "anchor": "#name-connections", "para_id": "5-p213", "text": "A QUIC connection is shared state between a client and a server. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "5-p771-s1", "section": "5", "anchor": "#name-connections", "para_id": "5-p214", "text": "Each connection starts with a handshake phase, during which the two endpoints establish a shared secret using the cryptographic handshake protocol [ QUIC-TLS ] and negotiate the application protocol.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p772-s2", "section": "5", "anchor": "#name-connections", "para_id": "5-p214", "text": "The handshake ( Section 7 ) confirms that both endpoints are willing to communicate ( Section 8.1 ) and establishes parameters for the connection ( Section 7.4 ). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p773-s1", "section": "5", "anchor": "#name-connections", "para_id": "5-p215", "text": "An application protocol can use the connection during the handshake phase with some limitations. 0-RTT allows application data to be sent by a client before receiving a response from the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p774-s2", "section": "5", "anchor": "#name-connections", "para_id": "5-p215", "text": "However, 0-RTT provides no protection against replay attacks; see Section 9.2 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p775-s3", "section": "5", "anchor": "#name-connections", "para_id": "5-p215", "text": "A server can also send application data to a client before it receives the final cryptographic handshake messages that allow it to confirm the identity and liveness of the client.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5-p776-s4", "section": "5", "anchor": "#name-connections", "para_id": "5-p215", "text": "These capabilities allow an application protocol to offer the option of trading some security guarantees for reduced latency. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p777-s1", "section": "5", "anchor": "#name-connections", "para_id": "5-p216", "text": "The use of connection IDs ( Section 5.1 ) allows connections to migrate to a new network path, both as a direct choice of an endpoint and when forced by a change in a middlebox.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5-p778-s2", "section": "5", "anchor": "#name-connections", "para_id": "5-p216", "text": "Section 9 describes mitigations for the security and privacy issues associated with migration. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p779-s1", "section": "5", "anchor": "#name-connections", "para_id": "5-p217", "text": "For connections that are no longer needed or desired, there are several ways for a client and server to terminate a connection, as described in Section 10 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p780-s1", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "5.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p781-s2", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "Connection ID Each connection possesses a set of connection identifiers, or connection IDs, each of which can identify the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p782-s3", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "Connection IDs are independently selected by endpoints; each endpoint selects the connection IDs that its peer uses. ¶ The primary function of a connection ID is to ensure that changes in addressing at lower protocol layers (UDP, IP) do not cause packets for a QUIC connection to be delivered to the wrong endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p783-s4", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "Each endpoint selects connection IDs using an implementation-specific (and perhaps deployment-specific) method that will allow packets with that connection ID to be routed back to the endpoint and to be identified by the endpoint upon receipt. ¶ Multiple connection IDs are used so that endpoints can send packets that cannot be identified by an observer as being for the same connection without cooperation from an endpoint; see Section 9.5 . ¶ Connection IDs MUST NOT contain any information that can be used by an external observer (that is, one that does not cooperate with the issuer) to correlate them with other connection IDs for the same connection.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5-p784-s5", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "As a trivial example, this means the same connection ID MUST NOT be issued more than once on the same connection. ¶ Packets with long headers include Source Connection ID and Destination Connection ID fields.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5-p785-s6", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "These fields are used to set the connection IDs for new connections; see Section 7.2 for details. ¶ Packets with short headers ( Section 17.3 ) only include the Destination Connection ID and omit the explicit length.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p786-s7", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "The length of the Destination Connection ID field is expected to be known to endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p787-s8", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "Endpoints using a load balancer that routes based on connection ID could agree with the load balancer on a fixed length for connection IDs or agree on an encoding scheme.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p788-s9", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "A fixed portion could encode an explicit length, which allows the entire connection ID to vary in length and still be used by the load balancer. ¶ A Version Negotiation ( Section 17.2.1 ) packet echoes the connection IDs selected by the client, both to ensure correct routing toward the client and to demonstrate that the packet is in response to a packet sent by the client. ¶ A zero-length connection ID can be used when a connection ID is not needed to route to the correct endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5-p789-s10", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "However, multiplexing connections on the same local IP address and port while using zero-length connection IDs will cause failures in the presence of peer connection migration, NAT rebinding, and client port reuse.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p790-s11", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "An endpoint MUST NOT use the same IP address and port for multiple concurrent connections with zero-length connection IDs, unless it is certain that those protocol features are not in use. ¶ When an endpoint uses a non-zero-length connection ID, it needs to ensure that the peer has a supply of connection IDs from which to choose for packets sent to the endpoint.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5-p791-s12", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "These connection IDs are supplied by the endpoint using the NEW_CONNECTION_ID frame ( Section 19.15 ). ¶ 5.1.1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "5-p792-s13", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "Issuing Connection IDs Each connection ID has an associated sequence number to assist in detecting when NEW_CONNECTION_ID or RETIRE_CONNECTION_ID frames refer to the same value.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5-p793-s14", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "The initial connection ID issued by an endpoint is sent in the Source Connection ID field of the long packet header ( Section 17.2 ) during the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p794-s15", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "The sequence number of the initial connection ID is 0.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p795-s16", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "If the preferred_address transport parameter is sent, the sequence number of the supplied connection ID is 1. ¶ Additional connection IDs are communicated to the peer using NEW_CONNECTION_ID frames ( Section 19.15 ).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5-p796-s17", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "The sequence number on each newly issued connection ID MUST increase by 1.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5-p797-s18", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "The connection ID that a client selects for the first Destination Connection ID field it sends and any connection ID provided by a Retry packet are not assigned sequence numbers. ¶ When an endpoint issues a connection ID, it MUST accept packets that carry this connection ID for the duration of the connection or until its peer invalidates the connection ID via a RETIRE_CONNECTION_ID frame ( Section 19.16 ).", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5-p798-s19", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "Connection IDs that are issued and not retired are considered active; any active connection ID is valid for use with the current connection at any time, in any packet type.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p799-s20", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "This includes the connection ID issued by the server via the preferred_address transport parameter. ¶ An endpoint SHOULD ensure that its peer has a sufficient number of available and unused connection IDs.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5-p800-s21", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "Endpoints advertise the number of active connection IDs they are willing to maintain using the active_connection_id_limit transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p801-s22", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "An endpoint MUST NOT provide more connection IDs than the peer's limit.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5-p802-s23", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "An endpoint MAY send connection IDs that temporarily exceed a peer's limit if the NEW_CONNECTION_ID frame also requires the retirement of any excess, by including a sufficiently large value in the Retire Prior To field. ¶ A NEW_CONNECTION_ID frame might cause an endpoint to add some active connection IDs and retire others based on the value of the Retire Prior To field.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5-p803-s24", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "After processing a NEW_CONNECTION_ID frame and adding and retiring active connection IDs, if the number of active connection IDs exceeds the value advertised in its active_connection_id_limit transport parameter, an endpoint MUST close the connection with an error of type CONNECTION_ID_LIMIT_ERROR. ¶ An endpoint SHOULD supply a new connection ID when the peer retires a connection ID.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5-p804-s25", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "If an endpoint provided fewer connection IDs than the peer's active_connection_id_limit, it MAY supply a new connection ID when it receives a packet with a previously unused connection ID.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5-p805-s26", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "An endpoint MAY limit the total number of connection IDs issued for each connection to avoid the risk of running out of connection IDs; see Section 10.3.2 .", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5-p806-s27", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "An endpoint MAY also limit the issuance of connection IDs to reduce the amount of per-path state it maintains, such as path validation status, as its peer might interact with it over as many paths as there are issued connection IDs. ¶ An endpoint that initiates migration and requires non-zero-length connection IDs SHOULD ensure that the pool of connection IDs available to its peer allows the peer to use a new connection ID on migration, as the peer will be unable to respond if the pool is exhausted. ¶ An endpoint that selects a zero-length connection ID during the handshake cannot issue a new connection ID.", "facet": "state_machine", "normative": true, "modalities": ["MAY", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5-p807-s28", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "A zero-length Destination Connection ID field is used in all packets sent toward such an endpoint over any network path. ¶ 5.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p808-s29", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "Consuming and Retiring Connection IDs An endpoint can change the connection ID it uses for a peer to another available one at any time during the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p809-s30", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "An endpoint consumes connection IDs in response to a migrating peer; see Section 9.5 for more details. ¶ An endpoint maintains a set of connection IDs received from its peer, any of which it can use when sending packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5-p810-s31", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "When the endpoint wishes to remove a connection ID from use, it sends a RETIRE_CONNECTION_ID frame to its peer.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5-p811-s32", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "Sending a RETIRE_CONNECTION_ID frame indicates that the connection ID will not be used again and requests that the peer replace it with a new connection ID using a NEW_CONNECTION_ID frame. ¶ As discussed in Section 9.5 , endpoints limit the use of a connection ID to packets sent from a single local address to a single destination address.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "5-p812-s33", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "Endpoints SHOULD retire connection IDs when they are no longer actively using either the local or destination address for which the connection ID was used. ¶ An endpoint might need to stop accepting previously issued connection IDs in certain circumstances.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5-p813-s34", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "Such an endpoint can cause its peer to retire connection IDs by sending a NEW_CONNECTION_ID frame with an increased Retire Prior To field.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "5-p814-s35", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "The endpoint SHOULD continue to accept the previously issued connection IDs until they are retired by the peer.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5-p815-s36", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "If the endpoint can no longer process the indicated connection IDs, it MAY close the connection. ¶ Upon receipt of an increased Retire Prior To field, the peer MUST stop using the corresponding connection IDs and retire them with RETIRE_CONNECTION_ID frames before adding the newly provided connection ID to the set of active connection IDs.", "facet": "frames", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5-p816-s37", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "This ordering allows an endpoint to replace all active connection IDs without the possibility of a peer having no available connection IDs and without exceeding the limit the peer sets in the active_connection_id_limit transport parameter; see Section 18.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5-p817-s38", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "Failure to cease using the connection IDs when requested can result in connection failures, as the issuing endpoint might be unable to continue using the connection IDs with the active connection. ¶ An endpoint SHOULD limit the number of connection IDs it has retired locally for which RETIRE_CONNECTION_ID frames have not yet been acknowledged.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5-p818-s39", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "An endpoint SHOULD allow for sending and tracking a number of RETIRE_CONNECTION_ID frames of at least twice the value of the active_connection_id_limit transport parameter.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "5-p819-s40", "section": "5", "anchor": "#name-connections", "para_id": "5-p218", "text": "An endpoint MUST NOT forget a connection ID without retiring it, though it MAY choose to treat having connection IDs in need of retirement that exceed this limit as a connection error of type CONNECTION_ID_LIMIT_ERROR. ¶ Endpoints SHOULD NOT issue updates of the Retire Prior To field before receiving RETIRE_CONNECTION_ID frames that retire all connection IDs indicated by the previous Retire Prior To value. ¶", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "MAY", "SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "5.1-p820-s1", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p219", "text": "Each connection possesses a set of connection identifiers, or connection IDs, each of which can identify the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p821-s2", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p219", "text": "Connection IDs are independently selected by endpoints; each endpoint selects the connection IDs that its peer uses. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p822-s1", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p220", "text": "The primary function of a connection ID is to ensure that changes in addressing at lower protocol layers (UDP, IP) do not cause packets for a QUIC connection to be delivered to the wrong endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p823-s2", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p220", "text": "Each endpoint selects connection IDs using an implementation-specific (and perhaps deployment-specific) method that will allow packets with that connection ID to be routed back to the endpoint and to be identified by the endpoint upon receipt. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1-p824-s1", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p221", "text": "Multiple connection IDs are used so that endpoints can send packets that cannot be identified by an observer as being for the same connection without cooperation from an endpoint; see Section 9.5 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1-p825-s1", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p222", "text": "Connection IDs MUST NOT contain any information that can be used by an external observer (that is, one that does not cooperate with the issuer) to correlate them with other connection IDs for the same connection.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1-p826-s2", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p222", "text": "As a trivial example, this means the same connection ID MUST NOT be issued more than once on the same connection. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1-p827-s1", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p223", "text": "Packets with long headers include Source Connection ID and Destination Connection ID fields.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p828-s2", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p223", "text": "These fields are used to set the connection IDs for new connections; see Section 7.2 for details. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p829-s1", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p224", "text": "Packets with short headers ( Section 17.3 ) only include the Destination Connection ID and omit the explicit length.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p830-s2", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p224", "text": "The length of the Destination Connection ID field is expected to be known to endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p831-s3", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p224", "text": "Endpoints using a load balancer that routes based on connection ID could agree with the load balancer on a fixed length for connection IDs or agree on an encoding scheme.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p832-s4", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p224", "text": "A fixed portion could encode an explicit length, which allows the entire connection ID to vary in length and still be used by the load balancer. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p833-s1", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p225", "text": "A Version Negotiation ( Section 17.2.1 ) packet echoes the connection IDs selected by the client, both to ensure correct routing toward the client and to demonstrate that the packet is in response to a packet sent by the client. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p834-s1", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p226", "text": "A zero-length connection ID can be used when a connection ID is not needed to route to the correct endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1-p835-s2", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p226", "text": "However, multiplexing connections on the same local IP address and port while using zero-length connection IDs will cause failures in the presence of peer connection migration, NAT rebinding, and client port reuse.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p836-s3", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p226", "text": "An endpoint MUST NOT use the same IP address and port for multiple concurrent connections with zero-length connection IDs, unless it is certain that those protocol features are not in use. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1-p837-s1", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p227", "text": "When an endpoint uses a non-zero-length connection ID, it needs to ensure that the peer has a supply of connection IDs from which to choose for packets sent to the endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1-p838-s2", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p227", "text": "These connection IDs are supplied by the endpoint using the NEW_CONNECTION_ID frame ( Section 19.15 ). ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "5.1-p839-s1", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "5.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p840-s2", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "Issuing Connection IDs Each connection ID has an associated sequence number to assist in detecting when NEW_CONNECTION_ID or RETIRE_CONNECTION_ID frames refer to the same value.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5.1-p841-s3", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "The initial connection ID issued by an endpoint is sent in the Source Connection ID field of the long packet header ( Section 17.2 ) during the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p842-s4", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "The sequence number of the initial connection ID is 0.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p843-s5", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "If the preferred_address transport parameter is sent, the sequence number of the supplied connection ID is 1. ¶ Additional connection IDs are communicated to the peer using NEW_CONNECTION_ID frames ( Section 19.15 ).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5.1-p844-s6", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "The sequence number on each newly issued connection ID MUST increase by 1.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1-p845-s7", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "The connection ID that a client selects for the first Destination Connection ID field it sends and any connection ID provided by a Retry packet are not assigned sequence numbers. ¶ When an endpoint issues a connection ID, it MUST accept packets that carry this connection ID for the duration of the connection or until its peer invalidates the connection ID via a RETIRE_CONNECTION_ID frame ( Section 19.16 ).", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.1-p846-s8", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "Connection IDs that are issued and not retired are considered active; any active connection ID is valid for use with the current connection at any time, in any packet type.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p847-s9", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "This includes the connection ID issued by the server via the preferred_address transport parameter. ¶ An endpoint SHOULD ensure that its peer has a sufficient number of available and unused connection IDs.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1-p848-s10", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "Endpoints advertise the number of active connection IDs they are willing to maintain using the active_connection_id_limit transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1-p849-s11", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "An endpoint MUST NOT provide more connection IDs than the peer's limit.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1-p850-s12", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "An endpoint MAY send connection IDs that temporarily exceed a peer's limit if the NEW_CONNECTION_ID frame also requires the retirement of any excess, by including a sufficiently large value in the Retire Prior To field. ¶ A NEW_CONNECTION_ID frame might cause an endpoint to add some active connection IDs and retire others based on the value of the Retire Prior To field.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.1-p851-s13", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "After processing a NEW_CONNECTION_ID frame and adding and retiring active connection IDs, if the number of active connection IDs exceeds the value advertised in its active_connection_id_limit transport parameter, an endpoint MUST close the connection with an error of type CONNECTION_ID_LIMIT_ERROR. ¶ An endpoint SHOULD supply a new connection ID when the peer retires a connection ID.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.1-p852-s14", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "If an endpoint provided fewer connection IDs than the peer's active_connection_id_limit, it MAY supply a new connection ID when it receives a packet with a previously unused connection ID.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.1-p853-s15", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "An endpoint MAY limit the total number of connection IDs issued for each connection to avoid the risk of running out of connection IDs; see Section 10.3.2 .", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1-p854-s16", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "An endpoint MAY also limit the issuance of connection IDs to reduce the amount of per-path state it maintains, such as path validation status, as its peer might interact with it over as many paths as there are issued connection IDs. ¶ An endpoint that initiates migration and requires non-zero-length connection IDs SHOULD ensure that the pool of connection IDs available to its peer allows the peer to use a new connection ID on migration, as the peer will be unable to respond if the pool is exhausted. ¶ An endpoint that selects a zero-length connection ID during the handshake cannot issue a new connection ID.", "facet": "state_machine", "normative": true, "modalities": ["MAY", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.1-p855-s17", "section": "5.1", "anchor": "#name-connection-id", "para_id": "5.1-p228", "text": "A zero-length Destination Connection ID field is used in all packets sent toward such an endpoint over any network path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.1-p856-s1", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p229", "text": "Each connection ID has an associated sequence number to assist in detecting when NEW_CONNECTION_ID or RETIRE_CONNECTION_ID frames refer to the same value.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5.1.1-p857-s2", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p229", "text": "The initial connection ID issued by an endpoint is sent in the Source Connection ID field of the long packet header ( Section 17.2 ) during the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.1-p858-s3", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p229", "text": "The sequence number of the initial connection ID is 0.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.1-p859-s4", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p229", "text": "If the preferred_address transport parameter is sent, the sequence number of the supplied connection ID is 1. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1.1-p860-s1", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p230", "text": "Additional connection IDs are communicated to the peer using NEW_CONNECTION_ID frames ( Section 19.15 ).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "5.1.1-p861-s2", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p230", "text": "The sequence number on each newly issued connection ID MUST increase by 1.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1.1-p862-s3", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p230", "text": "The connection ID that a client selects for the first Destination Connection ID field it sends and any connection ID provided by a Retry packet are not assigned sequence numbers. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1.1-p863-s1", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p231", "text": "When an endpoint issues a connection ID, it MUST accept packets that carry this connection ID for the duration of the connection or until its peer invalidates the connection ID via a RETIRE_CONNECTION_ID frame ( Section 19.16 ).", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.1.1-p864-s2", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p231", "text": "Connection IDs that are issued and not retired are considered active; any active connection ID is valid for use with the current connection at any time, in any packet type.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.1-p865-s3", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p231", "text": "This includes the connection ID issued by the server via the preferred_address transport parameter. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.1-p866-s1", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p232", "text": "An endpoint SHOULD ensure that its peer has a sufficient number of available and unused connection IDs.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1.1-p867-s2", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p232", "text": "Endpoints advertise the number of active connection IDs they are willing to maintain using the active_connection_id_limit transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.1-p868-s3", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p232", "text": "An endpoint MUST NOT provide more connection IDs than the peer's limit.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1.1-p869-s4", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p232", "text": "An endpoint MAY send connection IDs that temporarily exceed a peer's limit if the NEW_CONNECTION_ID frame also requires the retirement of any excess, by including a sufficiently large value in the Retire Prior To field. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.1.1-p870-s1", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p233", "text": "A NEW_CONNECTION_ID frame might cause an endpoint to add some active connection IDs and retire others based on the value of the Retire Prior To field.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "5.1.1-p871-s2", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p233", "text": "After processing a NEW_CONNECTION_ID frame and adding and retiring active connection IDs, if the number of active connection IDs exceeds the value advertised in its active_connection_id_limit transport parameter, an endpoint MUST close the connection with an error of type CONNECTION_ID_LIMIT_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.1.1-p872-s1", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p234", "text": "An endpoint SHOULD supply a new connection ID when the peer retires a connection ID.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.1.1-p873-s2", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p234", "text": "If an endpoint provided fewer connection IDs than the peer's active_connection_id_limit, it MAY supply a new connection ID when it receives a packet with a previously unused connection ID.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.1.1-p874-s3", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p234", "text": "An endpoint MAY limit the total number of connection IDs issued for each connection to avoid the risk of running out of connection IDs; see Section 10.3.2 .", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1.1-p875-s4", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p234", "text": "An endpoint MAY also limit the issuance of connection IDs to reduce the amount of per-path state it maintains, such as path validation status, as its peer might interact with it over as many paths as there are issued connection IDs. ¶", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "5.1.1-p876-s1", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p235", "text": "An endpoint that initiates migration and requires non-zero-length connection IDs SHOULD ensure that the pool of connection IDs available to its peer allows the peer to use a new connection ID on migration, as the peer will be unable to respond if the pool is exhausted. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.1.1-p877-s1", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p236", "text": "An endpoint that selects a zero-length connection ID during the handshake cannot issue a new connection ID.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.1-p878-s2", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p236", "text": "A zero-length Destination Connection ID field is used in all packets sent toward such an endpoint over any network path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.1-p879-s1", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p237", "text": "5.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.1-p880-s2", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p237", "text": "Consuming and Retiring Connection IDs An endpoint can change the connection ID it uses for a peer to another available one at any time during the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.1-p881-s3", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p237", "text": "An endpoint consumes connection IDs in response to a migrating peer; see Section 9.5 for more details. ¶ An endpoint maintains a set of connection IDs received from its peer, any of which it can use when sending packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1.1-p882-s4", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p237", "text": "When the endpoint wishes to remove a connection ID from use, it sends a RETIRE_CONNECTION_ID frame to its peer.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5.1.1-p883-s5", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p237", "text": "Sending a RETIRE_CONNECTION_ID frame indicates that the connection ID will not be used again and requests that the peer replace it with a new connection ID using a NEW_CONNECTION_ID frame. ¶ As discussed in Section 9.5 , endpoints limit the use of a connection ID to packets sent from a single local address to a single destination address.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "5.1.1-p884-s6", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p237", "text": "Endpoints SHOULD retire connection IDs when they are no longer actively using either the local or destination address for which the connection ID was used. ¶ An endpoint might need to stop accepting previously issued connection IDs in certain circumstances.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.1.1-p885-s7", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p237", "text": "Such an endpoint can cause its peer to retire connection IDs by sending a NEW_CONNECTION_ID frame with an increased Retire Prior To field.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "5.1.1-p886-s8", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p237", "text": "The endpoint SHOULD continue to accept the previously issued connection IDs until they are retired by the peer.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1.1-p887-s9", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p237", "text": "If the endpoint can no longer process the indicated connection IDs, it MAY close the connection. ¶ Upon receipt of an increased Retire Prior To field, the peer MUST stop using the corresponding connection IDs and retire them with RETIRE_CONNECTION_ID frames before adding the newly provided connection ID to the set of active connection IDs.", "facet": "frames", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.1.1-p888-s10", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p237", "text": "This ordering allows an endpoint to replace all active connection IDs without the possibility of a peer having no available connection IDs and without exceeding the limit the peer sets in the active_connection_id_limit transport parameter; see Section 18.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.1-p889-s11", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p237", "text": "Failure to cease using the connection IDs when requested can result in connection failures, as the issuing endpoint might be unable to continue using the connection IDs with the active connection. ¶ An endpoint SHOULD limit the number of connection IDs it has retired locally for which RETIRE_CONNECTION_ID frames have not yet been acknowledged.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.1.1-p890-s12", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p237", "text": "An endpoint SHOULD allow for sending and tracking a number of RETIRE_CONNECTION_ID frames of at least twice the value of the active_connection_id_limit transport parameter.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "5.1.1-p891-s13", "section": "5.1.1", "anchor": "#name-issuing-connection-ids", "para_id": "5.1.1-p237", "text": "An endpoint MUST NOT forget a connection ID without retiring it, though it MAY choose to treat having connection IDs in need of retirement that exceed this limit as a connection error of type CONNECTION_ID_LIMIT_ERROR. ¶ Endpoints SHOULD NOT issue updates of the Retire Prior To field before receiving RETIRE_CONNECTION_ID frames that retire all connection IDs indicated by the previous Retire Prior To value. ¶", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "MAY", "SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "5.1.2-p892-s1", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p238", "text": "An endpoint can change the connection ID it uses for a peer to another available one at any time during the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.2-p893-s2", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p238", "text": "An endpoint consumes connection IDs in response to a migrating peer; see Section 9.5 for more details. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.2-p894-s1", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p239", "text": "An endpoint maintains a set of connection IDs received from its peer, any of which it can use when sending packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1.2-p895-s2", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p239", "text": "When the endpoint wishes to remove a connection ID from use, it sends a RETIRE_CONNECTION_ID frame to its peer.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5.1.2-p896-s3", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p239", "text": "Sending a RETIRE_CONNECTION_ID frame indicates that the connection ID will not be used again and requests that the peer replace it with a new connection ID using a NEW_CONNECTION_ID frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "5.1.2-p897-s1", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p240", "text": "As discussed in Section 9.5 , endpoints limit the use of a connection ID to packets sent from a single local address to a single destination address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.2-p898-s2", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p240", "text": "Endpoints SHOULD retire connection IDs when they are no longer actively using either the local or destination address for which the connection ID was used. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.1.2-p899-s1", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p241", "text": "An endpoint might need to stop accepting previously issued connection IDs in certain circumstances.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.2-p900-s2", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p241", "text": "Such an endpoint can cause its peer to retire connection IDs by sending a NEW_CONNECTION_ID frame with an increased Retire Prior To field.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "5.1.2-p901-s3", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p241", "text": "The endpoint SHOULD continue to accept the previously issued connection IDs until they are retired by the peer.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1.2-p902-s4", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p241", "text": "If the endpoint can no longer process the indicated connection IDs, it MAY close the connection. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.1.2-p903-s1", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p242", "text": "Upon receipt of an increased Retire Prior To field, the peer MUST stop using the corresponding connection IDs and retire them with RETIRE_CONNECTION_ID frames before adding the newly provided connection ID to the set of active connection IDs.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.1.2-p904-s2", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p242", "text": "This ordering allows an endpoint to replace all active connection IDs without the possibility of a peer having no available connection IDs and without exceeding the limit the peer sets in the active_connection_id_limit transport parameter; see Section 18.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.2-p905-s3", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p242", "text": "Failure to cease using the connection IDs when requested can result in connection failures, as the issuing endpoint might be unable to continue using the connection IDs with the active connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1.2-p906-s1", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p243", "text": "An endpoint SHOULD limit the number of connection IDs it has retired locally for which RETIRE_CONNECTION_ID frames have not yet been acknowledged.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.1.2-p907-s2", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p243", "text": "An endpoint SHOULD allow for sending and tracking a number of RETIRE_CONNECTION_ID frames of at least twice the value of the active_connection_id_limit transport parameter.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "5.1.2-p908-s3", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p243", "text": "An endpoint MUST NOT forget a connection ID without retiring it, though it MAY choose to treat having connection IDs in need of retirement that exceed this limit as a connection error of type CONNECTION_ID_LIMIT_ERROR. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1.2-p909-s1", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p244", "text": "Endpoints SHOULD NOT issue updates of the Retire Prior To field before receiving RETIRE_CONNECTION_ID frames that retire all connection IDs indicated by the previous Retire Prior To value. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "5.1.2-p910-s1", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "5.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.2-p911-s2", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Matching Packets to Connections Incoming packets are classified on receipt.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.2-p912-s3", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Packets can either be associated with an existing connection or -- for servers -- potentially create a new connection. ¶ Endpoints try to associate a packet with an existing connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.2-p913-s4", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "If the packet has a non-zero-length Destination Connection ID corresponding to an existing connection, QUIC processes that packet accordingly.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1.2-p914-s5", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Note that more than one connection ID can be associated with a connection; see Section 5.1 . ¶ If the Destination Connection ID is zero length and the addressing information in the packet matches the addressing information the endpoint uses to identify a connection with a zero-length connection ID, QUIC processes the packet as part of that connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1.2-p915-s6", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "An endpoint can use just destination IP and port or both source and destination addresses for identification, though this makes connections fragile as described in Section 5.1 . ¶ Endpoints can send a Stateless Reset ( Section 10.3 ) for any packets that cannot be attributed to an existing connection.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5.1.2-p916-s7", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "A Stateless Reset allows a peer to more quickly identify when a connection becomes unusable. ¶ Packets that are matched to an existing connection are discarded if the packets are inconsistent with the state of that connection.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5.1.2-p917-s8", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "For example, packets are discarded if they indicate a different protocol version than that of the connection or if the removal of packet protection is unsuccessful once the expected keys are available. ¶ Invalid packets that lack strong integrity protection, such as Initial, Retry, or Version Negotiation, MAY be discarded.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.1.2-p918-s9", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "An endpoint MUST generate a connection error if processing the contents of these packets prior to discovering an error, or fully revert any changes made during that processing. ¶ 5.2.1.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.1.2-p919-s10", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Client Packet Handling Valid packets sent to clients always include a Destination Connection ID that matches a value the client selects.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.2-p920-s11", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Clients that choose to receive zero-length connection IDs can use the local address and port to identify a connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1.2-p921-s12", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Packets that do not match an existing connection -- based on Destination Connection ID or, if this value is zero length, local IP address and port -- are discarded. ¶ Due to packet reordering or loss, a client might receive packets for a connection that are encrypted with a key it has not yet computed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1.2-p922-s13", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "The client MAY drop these packets, or it MAY buffer them in anticipation of later packets that allow it to compute the key. ¶ If a client receives a packet that uses a different version than it initially selected, it MUST discard that packet. ¶ 5.2.2.", "facet": "other", "normative": true, "modalities": ["MAY", "MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.1.2-p923-s14", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Server Packet Handling If a server receives a packet that indicates an unsupported version and if the packet is large enough to initiate a new connection for any supported version, the server SHOULD send a Version Negotiation packet as described in Section 6.1 .", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.1.2-p924-s15", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "A server MAY limit the number of packets to which it responds with a Version Negotiation packet.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1.2-p925-s16", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Servers MUST drop smaller packets that specify unsupported versions. ¶ The first packet for an unsupported version can use different semantics and encodings for any version-specific field.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1.2-p926-s17", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "In particular, different packet protection keys might be used for different versions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.2-p927-s18", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Servers that do not support a particular version are unlikely to be able to decrypt the payload of the packet or properly interpret the result.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.2-p928-s19", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Servers SHOULD respond with a Version Negotiation packet, provided that the datagram is sufficiently long. ¶ Packets with a supported version, or no Version field, are matched to a connection using the connection ID or -- for packets with zero-length connection IDs -- the local address and port.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.1.2-p929-s20", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "These packets are processed using the selected connection; otherwise, the server continues as described below. ¶ If the packet is an Initial packet fully conforming with the specification, the server proceeds with the handshake ( Section 7 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1.2-p930-s21", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "This commits the server to the version that the client selected. ¶ If a server refuses to accept a new connection, it SHOULD send an Initial packet containing a CONNECTION_CLOSE frame with error code CONNECTION_REFUSED. ¶ If the packet is a 0-RTT packet, the server MAY buffer a limited number of these packets in anticipation of a late-arriving Initial packet.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.1.2-p931-s22", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Clients are not able to send Handshake packets prior to receiving a server response, so servers SHOULD ignore any such packets. ¶ Servers MUST drop incoming packets under all other circumstances. ¶ 5.2.3.", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.1.2-p932-s23", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Considerations for Simple Load Balancers A server deployment could load-balance among servers using only source and destination IP addresses and ports.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.2-p933-s24", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Changes to the client's IP address or port could result in packets being forwarded to the wrong server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.1.2-p934-s25", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Such a server deployment could use one of the following methods for connection continuity when a client's address changes. ¶ Servers could use an out-of-band mechanism to forward packets to the correct server based on connection ID. ¶ If servers can use a dedicated server IP address or port, other than the one that the client initially connects to, they could use the preferred_address transport parameter to request that clients move connections to that dedicated address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.1.2-p935-s26", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "Note that clients could choose not to use the preferred address. ¶ A server in a deployment that does not implement a solution to maintain connection continuity when the client address changes SHOULD indicate that migration is not supported by using the disable_active_migration transport parameter.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.1.2-p936-s27", "section": "5.1.2", "anchor": "#name-consuming-and-retiring-conn", "para_id": "5.1.2-p245", "text": "The disable_active_migration transport parameter does not prohibit connection migration after a client has acted on a preferred_address transport parameter. ¶ Server deployments that use this simple form of load balancing MUST avoid the creation of a stateless reset oracle; see Section 21.11 . ¶", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "5.2-p937-s1", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p246", "text": "Incoming packets are classified on receipt.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2-p938-s2", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p246", "text": "Packets can either be associated with an existing connection or -- for servers -- potentially create a new connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2-p939-s1", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p247", "text": "Endpoints try to associate a packet with an existing connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2-p940-s2", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p247", "text": "If the packet has a non-zero-length Destination Connection ID corresponding to an existing connection, QUIC processes that packet accordingly.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2-p941-s3", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p247", "text": "Note that more than one connection ID can be associated with a connection; see Section 5.1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2-p942-s1", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p248", "text": "If the Destination Connection ID is zero length and the addressing information in the packet matches the addressing information the endpoint uses to identify a connection with a zero-length connection ID, QUIC processes the packet as part of that connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2-p943-s2", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p248", "text": "An endpoint can use just destination IP and port or both source and destination addresses for identification, though this makes connections fragile as described in Section 5.1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2-p944-s1", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p249", "text": "Endpoints can send a Stateless Reset ( Section 10.3 ) for any packets that cannot be attributed to an existing connection.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5.2-p945-s2", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p249", "text": "A Stateless Reset allows a peer to more quickly identify when a connection becomes unusable. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5.2-p946-s1", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p250", "text": "Packets that are matched to an existing connection are discarded if the packets are inconsistent with the state of that connection.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5.2-p947-s2", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p250", "text": "For example, packets are discarded if they indicate a different protocol version than that of the connection or if the removal of packet protection is unsuccessful once the expected keys are available. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2-p948-s1", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p251", "text": "Invalid packets that lack strong integrity protection, such as Initial, Retry, or Version Negotiation, MAY be discarded.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.2-p949-s2", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p251", "text": "An endpoint MUST generate a connection error if processing the contents of these packets prior to discovering an error, or fully revert any changes made during that processing. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.2-p950-s1", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p252", "text": "5.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2-p951-s2", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p252", "text": "Client Packet Handling Valid packets sent to clients always include a Destination Connection ID that matches a value the client selects.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2-p952-s3", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p252", "text": "Clients that choose to receive zero-length connection IDs can use the local address and port to identify a connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2-p953-s4", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p252", "text": "Packets that do not match an existing connection -- based on Destination Connection ID or, if this value is zero length, local IP address and port -- are discarded. ¶ Due to packet reordering or loss, a client might receive packets for a connection that are encrypted with a key it has not yet computed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2-p954-s5", "section": "5.2", "anchor": "#name-matching-packets-to-connect", "para_id": "5.2-p252", "text": "The client MAY drop these packets, or it MAY buffer them in anticipation of later packets that allow it to compute the key. ¶ If a client receives a packet that uses a different version than it initially selected, it MUST discard that packet. ¶", "facet": "other", "normative": true, "modalities": ["MAY", "MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.2.1-p955-s1", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p253", "text": "Valid packets sent to clients always include a Destination Connection ID that matches a value the client selects.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.1-p956-s2", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p253", "text": "Clients that choose to receive zero-length connection IDs can use the local address and port to identify a connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2.1-p957-s3", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p253", "text": "Packets that do not match an existing connection -- based on Destination Connection ID or, if this value is zero length, local IP address and port -- are discarded. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2.1-p958-s1", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p254", "text": "Due to packet reordering or loss, a client might receive packets for a connection that are encrypted with a key it has not yet computed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2.1-p959-s2", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p254", "text": "The client MAY drop these packets, or it MAY buffer them in anticipation of later packets that allow it to compute the key. ¶", "facet": "other", "normative": true, "modalities": ["MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.2.1-p960-s1", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p255", "text": "If a client receives a packet that uses a different version than it initially selected, it MUST discard that packet. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.2.1-p961-s1", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p256", "text": "5.2.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.1-p962-s2", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p256", "text": "Server Packet Handling If a server receives a packet that indicates an unsupported version and if the packet is large enough to initiate a new connection for any supported version, the server SHOULD send a Version Negotiation packet as described in Section 6.1 .", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.2.1-p963-s3", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p256", "text": "A server MAY limit the number of packets to which it responds with a Version Negotiation packet.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.2.1-p964-s4", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p256", "text": "Servers MUST drop smaller packets that specify unsupported versions. ¶ The first packet for an unsupported version can use different semantics and encodings for any version-specific field.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.2.1-p965-s5", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p256", "text": "In particular, different packet protection keys might be used for different versions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.1-p966-s6", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p256", "text": "Servers that do not support a particular version are unlikely to be able to decrypt the payload of the packet or properly interpret the result.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.1-p967-s7", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p256", "text": "Servers SHOULD respond with a Version Negotiation packet, provided that the datagram is sufficiently long. ¶ Packets with a supported version, or no Version field, are matched to a connection using the connection ID or -- for packets with zero-length connection IDs -- the local address and port.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.2.1-p968-s8", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p256", "text": "These packets are processed using the selected connection; otherwise, the server continues as described below. ¶ If the packet is an Initial packet fully conforming with the specification, the server proceeds with the handshake ( Section 7 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2.1-p969-s9", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p256", "text": "This commits the server to the version that the client selected. ¶ If a server refuses to accept a new connection, it SHOULD send an Initial packet containing a CONNECTION_CLOSE frame with error code CONNECTION_REFUSED. ¶ If the packet is a 0-RTT packet, the server MAY buffer a limited number of these packets in anticipation of a late-arriving Initial packet.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.2.1-p970-s10", "section": "5.2.1", "anchor": "#name-client-packet-handling", "para_id": "5.2.1-p256", "text": "Clients are not able to send Handshake packets prior to receiving a server response, so servers SHOULD ignore any such packets. ¶ Servers MUST drop incoming packets under all other circumstances. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.2.2-p971-s1", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p257", "text": "If a server receives a packet that indicates an unsupported version and if the packet is large enough to initiate a new connection for any supported version, the server SHOULD send a Version Negotiation packet as described in Section 6.1 .", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.2.2-p972-s2", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p257", "text": "A server MAY limit the number of packets to which it responds with a Version Negotiation packet.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.2.2-p973-s3", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p257", "text": "Servers MUST drop smaller packets that specify unsupported versions. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.2.2-p974-s1", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p258", "text": "The first packet for an unsupported version can use different semantics and encodings for any version-specific field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.2-p975-s2", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p258", "text": "In particular, different packet protection keys might be used for different versions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.2-p976-s3", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p258", "text": "Servers that do not support a particular version are unlikely to be able to decrypt the payload of the packet or properly interpret the result.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.2-p977-s4", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p258", "text": "Servers SHOULD respond with a Version Negotiation packet, provided that the datagram is sufficiently long. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.2.2-p978-s1", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p259", "text": "Packets with a supported version, or no Version field, are matched to a connection using the connection ID or -- for packets with zero-length connection IDs -- the local address and port.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.2-p979-s2", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p259", "text": "These packets are processed using the selected connection; otherwise, the server continues as described below. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.2-p980-s1", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p260", "text": "If the packet is an Initial packet fully conforming with the specification, the server proceeds with the handshake ( Section 7 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2.2-p981-s2", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p260", "text": "This commits the server to the version that the client selected. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.2-p982-s1", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p261", "text": "If a server refuses to accept a new connection, it SHOULD send an Initial packet containing a CONNECTION_CLOSE frame with error code CONNECTION_REFUSED. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.2.2-p983-s1", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p262", "text": "If the packet is a 0-RTT packet, the server MAY buffer a limited number of these packets in anticipation of a late-arriving Initial packet.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.2.2-p984-s2", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p262", "text": "Clients are not able to send Handshake packets prior to receiving a server response, so servers SHOULD ignore any such packets. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.2.2-p985-s1", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p263", "text": "Servers MUST drop incoming packets under all other circumstances. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.2.2-p986-s1", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p264", "text": "5.2.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.2-p987-s2", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p264", "text": "Considerations for Simple Load Balancers A server deployment could load-balance among servers using only source and destination IP addresses and ports.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.2-p988-s3", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p264", "text": "Changes to the client's IP address or port could result in packets being forwarded to the wrong server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.2-p989-s4", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p264", "text": "Such a server deployment could use one of the following methods for connection continuity when a client's address changes. ¶ Servers could use an out-of-band mechanism to forward packets to the correct server based on connection ID. ¶ If servers can use a dedicated server IP address or port, other than the one that the client initially connects to, they could use the preferred_address transport parameter to request that clients move connections to that dedicated address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2.2-p990-s5", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p264", "text": "Note that clients could choose not to use the preferred address. ¶ A server in a deployment that does not implement a solution to maintain connection continuity when the client address changes SHOULD indicate that migration is not supported by using the disable_active_migration transport parameter.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.2.2-p991-s6", "section": "5.2.2", "anchor": "#name-server-packet-handling", "para_id": "5.2.2-p264", "text": "The disable_active_migration transport parameter does not prohibit connection migration after a client has acted on a preferred_address transport parameter. ¶ Server deployments that use this simple form of load balancing MUST avoid the creation of a stateless reset oracle; see Section 21.11 . ¶", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "5.2.3-p992-s1", "section": "5.2.3", "anchor": "#name-considerations-for-simple-l", "para_id": "5.2.3-p265", "text": "A server deployment could load-balance among servers using only source and destination IP addresses and ports.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.3-p993-s2", "section": "5.2.3", "anchor": "#name-considerations-for-simple-l", "para_id": "5.2.3-p265", "text": "Changes to the client's IP address or port could result in packets being forwarded to the wrong server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.3-p994-s3", "section": "5.2.3", "anchor": "#name-considerations-for-simple-l", "para_id": "5.2.3-p265", "text": "Such a server deployment could use one of the following methods for connection continuity when a client's address changes. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2.3-p995-s1", "section": "5.2.3", "anchor": "#name-considerations-for-simple-l", "para_id": "5.2.3-p266", "text": "Servers could use an out-of-band mechanism to forward packets to the correct server based on connection ID. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.3-p996-s1", "section": "5.2.3", "anchor": "#name-considerations-for-simple-l", "para_id": "5.2.3-p267", "text": "If servers can use a dedicated server IP address or port, other than the one that the client initially connects to, they could use the preferred_address transport parameter to request that clients move connections to that dedicated address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2.3-p997-s2", "section": "5.2.3", "anchor": "#name-considerations-for-simple-l", "para_id": "5.2.3-p267", "text": "Note that clients could choose not to use the preferred address. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.3-p998-s1", "section": "5.2.3", "anchor": "#name-considerations-for-simple-l", "para_id": "5.2.3-p268", "text": "A server in a deployment that does not implement a solution to maintain connection continuity when the client address changes SHOULD indicate that migration is not supported by using the disable_active_migration transport parameter.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.2.3-p999-s2", "section": "5.2.3", "anchor": "#name-considerations-for-simple-l", "para_id": "5.2.3-p268", "text": "The disable_active_migration transport parameter does not prohibit connection migration after a client has acted on a preferred_address transport parameter. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.3-p1000-s1", "section": "5.2.3", "anchor": "#name-considerations-for-simple-l", "para_id": "5.2.3-p269", "text": "Server deployments that use this simple form of load balancing MUST avoid the creation of a stateless reset oracle; see Section 21.11 . ¶", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "5.2.3-p1001-s1", "section": "5.2.3", "anchor": "#name-considerations-for-simple-l", "para_id": "5.2.3-p270", "text": "5.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.3-p1002-s2", "section": "5.2.3", "anchor": "#name-considerations-for-simple-l", "para_id": "5.2.3-p270", "text": "Operations on Connections This document does not define an API for QUIC; it instead defines a set of functions for QUIC connections that application protocols can rely upon.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.2.3-p1003-s3", "section": "5.2.3", "anchor": "#name-considerations-for-simple-l", "para_id": "5.2.3-p270", "text": "An application protocol can assume that an implementation of QUIC provides an interface that includes the operations described in this section.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.2.3-p1004-s4", "section": "5.2.3", "anchor": "#name-considerations-for-simple-l", "para_id": "5.2.3-p270", "text": "An implementation designed for use with a specific application protocol might provide only those operations that are used by that protocol. ¶ When implementing the client role, an application protocol can: ¶ open a connection, which begins the exchange described in Section 7 ; ¶ enable Early Data when available; and ¶ be informed when Early Data has been accepted or rejected by a server. ¶ When implementing the server role, an application protocol can: ¶ listen for incoming connections, which prepares for the exchange described in Section 7 ; ¶ if Early Data is supported, embed application-controlled data in the TLS resumption ticket sent to the client; and ¶ if Early Data is supported, retrieve application-controlled data from the client's resumption ticket and accept or reject Early Data based on that information. ¶ In either role, an application protocol can: ¶ configure minimum values for the initial number of permitted streams of each type, as communicated in the transport parameters ( Section 7.4 ); ¶ control resource allocation for receive buffers by setting flow control limits both for streams and for the connection; ¶ identify whether the handshake has completed successfully or is still ongoing; ¶ keep a connection from silently closing, by either generating PING frames ( Section 19.2 ) or requesting that the transport send additional frames before the idle timeout expires ( Section 10.1 ); and ¶ immediately close ( Section 10.2 ) the connection. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5.3-p1005-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p271", "text": "This document does not define an API for QUIC; it instead defines a set of functions for QUIC connections that application protocols can rely upon.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.3-p1006-s2", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p271", "text": "An application protocol can assume that an implementation of QUIC provides an interface that includes the operations described in this section.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1007-s3", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p271", "text": "An implementation designed for use with a specific application protocol might provide only those operations that are used by that protocol. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1008-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p272", "text": "When implementing the client role, an application protocol can: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.3-p1009-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p273", "text": "open a connection, which begins the exchange described in Section 7 ; ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1010-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p274", "text": "enable Early Data when available; and ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.3-p1011-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p275", "text": "be informed when Early Data has been accepted or rejected by a server. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.3-p1012-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p276", "text": "When implementing the server role, an application protocol can: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.3-p1013-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p277", "text": "listen for incoming connections, which prepares for the exchange described in Section 7 ; ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1014-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p278", "text": "if Early Data is supported, embed application-controlled data in the TLS resumption ticket sent to the client; and ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.3-p1015-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p279", "text": "if Early Data is supported, retrieve application-controlled data from the client's resumption ticket and accept or reject Early Data based on that information. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.3-p1016-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p280", "text": "In either role, an application protocol can: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1017-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p281", "text": "configure minimum values for the initial number of permitted streams of each type, as communicated in the transport parameters ( Section 7.4 ); ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1018-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p282", "text": "control resource allocation for receive buffers by setting flow control limits both for streams and for the connection; ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5.3-p1019-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p283", "text": "identify whether the handshake has completed successfully or is still ongoing; ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1020-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p284", "text": "keep a connection from silently closing, by either generating PING frames ( Section 19.2 ) or requesting that the transport send additional frames before the idle timeout expires ( Section 10.1 ); and ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "5.3-p1021-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p285", "text": "immediately close ( Section 10.2 ) the connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1022-s1", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1023-s2", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "Version Negotiation Version negotiation allows a server to indicate that it does not support the version the client used.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1024-s3", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "A server sends a Version Negotiation packet in response to each packet that might initiate a new connection; see Section 5.2 for details. ¶ The size of the first packet sent by a client will determine whether a server sends a Version Negotiation packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.3-p1025-s4", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "Clients that support multiple QUIC versions SHOULD ensure that the first UDP datagram they send is sized to the largest of the minimum datagram sizes from all versions they support, using PADDING frames ( Section 19.1 ) as necessary.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.3-p1026-s5", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "This ensures that the server responds if there is a mutually supported version.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.3-p1027-s6", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "A server might not send a Version Negotiation packet if the datagram it receives is smaller than the minimum size specified in a different version; see Section 14.1 . ¶ 6.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.3-p1028-s7", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "Sending Version Negotiation Packets If the version selected by the client is not acceptable to the server, the server responds with a Version Negotiation packet; see Section 17.2.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.3-p1029-s8", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "This includes a list of versions that the server will accept.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1030-s9", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "An endpoint MUST NOT send a Version Negotiation packet in response to receiving a Version Negotiation packet. ¶ This system allows a server to process packets with unsupported versions without retaining state.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "5.3-p1031-s10", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "Though either the Initial packet or the Version Negotiation packet that is sent in response could be lost, the client will send new packets until it successfully receives a response or it abandons the connection attempt. ¶ A server MAY limit the number of Version Negotiation packets it sends.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.3-p1032-s11", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "For instance, a server that is able to recognize packets as 0-RTT might choose not to send Version Negotiation packets in response to 0-RTT packets with the expectation that it will eventually receive an Initial packet. ¶ 6.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "5.3-p1033-s12", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "Handling Version Negotiation Packets Version Negotiation packets are designed to allow for functionality to be defined in the future that allows QUIC to negotiate the version of QUIC to use for a connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1034-s13", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "Future Standards Track specifications might change how implementations that support multiple versions of QUIC react to Version Negotiation packets received in response to an attempt to establish a connection using this version. ¶ A client that supports only this version of QUIC MUST abandon the current connection attempt if it receives a Version Negotiation packet, with the following two exceptions.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.3-p1035-s14", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "A client MUST discard any Version Negotiation packet if it has received and successfully processed any other packet, including an earlier Version Negotiation packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "5.3-p1036-s15", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "A client MUST discard a Version Negotiation packet that lists the QUIC version selected by the client. ¶ How to perform version negotiation is left as future work defined by future Standards Track specifications.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.3-p1037-s16", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "In particular, that future work will ensure robustness against version downgrade attacks; see Section 21.12 . ¶ 6.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1038-s17", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "Using Reserved Versions For a server to use a new version in the future, clients need to correctly handle unsupported versions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1039-s18", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "Some version numbers (0x?a?a?a?a, as defined in Section 15 ) are reserved for inclusion in fields that contain version numbers. ¶ Endpoints MAY add reserved versions to any field where unknown or unsupported versions are ignored to test that a peer correctly ignores the value.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "5.3-p1040-s19", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "For instance, an endpoint could include a reserved version in a Version Negotiation packet; see Section 17.2.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "5.3-p1041-s20", "section": "5.3", "anchor": "#name-operations-on-connections", "para_id": "5.3-p286", "text": "Endpoints MAY send packets with a reserved version to test that a peer correctly discards the packet. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6-p1042-s1", "section": "6", "anchor": "#name-version-negotiation", "para_id": "6-p287", "text": "Version negotiation allows a server to indicate that it does not support the version the client used.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6-p1043-s2", "section": "6", "anchor": "#name-version-negotiation", "para_id": "6-p287", "text": "A server sends a Version Negotiation packet in response to each packet that might initiate a new connection; see Section 5.2 for details. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6-p1044-s1", "section": "6", "anchor": "#name-version-negotiation", "para_id": "6-p288", "text": "The size of the first packet sent by a client will determine whether a server sends a Version Negotiation packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6-p1045-s2", "section": "6", "anchor": "#name-version-negotiation", "para_id": "6-p288", "text": "Clients that support multiple QUIC versions SHOULD ensure that the first UDP datagram they send is sized to the largest of the minimum datagram sizes from all versions they support, using PADDING frames ( Section 19.1 ) as necessary.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "6-p1046-s3", "section": "6", "anchor": "#name-version-negotiation", "para_id": "6-p288", "text": "This ensures that the server responds if there is a mutually supported version.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6-p1047-s4", "section": "6", "anchor": "#name-version-negotiation", "para_id": "6-p288", "text": "A server might not send a Version Negotiation packet if the datagram it receives is smaller than the minimum size specified in a different version; see Section 14.1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6-p1048-s1", "section": "6", "anchor": "#name-version-negotiation", "para_id": "6-p289", "text": "6.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6-p1049-s2", "section": "6", "anchor": "#name-version-negotiation", "para_id": "6-p289", "text": "Sending Version Negotiation Packets If the version selected by the client is not acceptable to the server, the server responds with a Version Negotiation packet; see Section 17.2.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6-p1050-s3", "section": "6", "anchor": "#name-version-negotiation", "para_id": "6-p289", "text": "This includes a list of versions that the server will accept.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6-p1051-s4", "section": "6", "anchor": "#name-version-negotiation", "para_id": "6-p289", "text": "An endpoint MUST NOT send a Version Negotiation packet in response to receiving a Version Negotiation packet. ¶ This system allows a server to process packets with unsupported versions without retaining state.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "6-p1052-s5", "section": "6", "anchor": "#name-version-negotiation", "para_id": "6-p289", "text": "Though either the Initial packet or the Version Negotiation packet that is sent in response could be lost, the client will send new packets until it successfully receives a response or it abandons the connection attempt. ¶ A server MAY limit the number of Version Negotiation packets it sends.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6-p1053-s6", "section": "6", "anchor": "#name-version-negotiation", "para_id": "6-p289", "text": "For instance, a server that is able to recognize packets as 0-RTT might choose not to send Version Negotiation packets in response to 0-RTT packets with the expectation that it will eventually receive an Initial packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.1-p1054-s1", "section": "6.1", "anchor": "#name-sending-version-negotiation", "para_id": "6.1-p290", "text": "If the version selected by the client is not acceptable to the server, the server responds with a Version Negotiation packet; see Section 17.2.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.1-p1055-s2", "section": "6.1", "anchor": "#name-sending-version-negotiation", "para_id": "6.1-p290", "text": "This includes a list of versions that the server will accept.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.1-p1056-s3", "section": "6.1", "anchor": "#name-sending-version-negotiation", "para_id": "6.1-p290", "text": "An endpoint MUST NOT send a Version Negotiation packet in response to receiving a Version Negotiation packet. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.1-p1057-s1", "section": "6.1", "anchor": "#name-sending-version-negotiation", "para_id": "6.1-p291", "text": "This system allows a server to process packets with unsupported versions without retaining state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "6.1-p1058-s2", "section": "6.1", "anchor": "#name-sending-version-negotiation", "para_id": "6.1-p291", "text": "Though either the Initial packet or the Version Negotiation packet that is sent in response could be lost, the client will send new packets until it successfully receives a response or it abandons the connection attempt. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.1-p1059-s1", "section": "6.1", "anchor": "#name-sending-version-negotiation", "para_id": "6.1-p292", "text": "A server MAY limit the number of Version Negotiation packets it sends.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.1-p1060-s2", "section": "6.1", "anchor": "#name-sending-version-negotiation", "para_id": "6.1-p292", "text": "For instance, a server that is able to recognize packets as 0-RTT might choose not to send Version Negotiation packets in response to 0-RTT packets with the expectation that it will eventually receive an Initial packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.1-p1061-s1", "section": "6.1", "anchor": "#name-sending-version-negotiation", "para_id": "6.1-p293", "text": "6.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.1-p1062-s2", "section": "6.1", "anchor": "#name-sending-version-negotiation", "para_id": "6.1-p293", "text": "Handling Version Negotiation Packets Version Negotiation packets are designed to allow for functionality to be defined in the future that allows QUIC to negotiate the version of QUIC to use for a connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.1-p1063-s3", "section": "6.1", "anchor": "#name-sending-version-negotiation", "para_id": "6.1-p293", "text": "Future Standards Track specifications might change how implementations that support multiple versions of QUIC react to Version Negotiation packets received in response to an attempt to establish a connection using this version. ¶ A client that supports only this version of QUIC MUST abandon the current connection attempt if it receives a Version Negotiation packet, with the following two exceptions.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.1-p1064-s4", "section": "6.1", "anchor": "#name-sending-version-negotiation", "para_id": "6.1-p293", "text": "A client MUST discard any Version Negotiation packet if it has received and successfully processed any other packet, including an earlier Version Negotiation packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.1-p1065-s5", "section": "6.1", "anchor": "#name-sending-version-negotiation", "para_id": "6.1-p293", "text": "A client MUST discard a Version Negotiation packet that lists the QUIC version selected by the client. ¶ How to perform version negotiation is left as future work defined by future Standards Track specifications.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.1-p1066-s6", "section": "6.1", "anchor": "#name-sending-version-negotiation", "para_id": "6.1-p293", "text": "In particular, that future work will ensure robustness against version downgrade attacks; see Section 21.12 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.2-p1067-s1", "section": "6.2", "anchor": "#name-handling-version-negotiatio", "para_id": "6.2-p294", "text": "Version Negotiation packets are designed to allow for functionality to be defined in the future that allows QUIC to negotiate the version of QUIC to use for a connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.2-p1068-s2", "section": "6.2", "anchor": "#name-handling-version-negotiatio", "para_id": "6.2-p294", "text": "Future Standards Track specifications might change how implementations that support multiple versions of QUIC react to Version Negotiation packets received in response to an attempt to establish a connection using this version. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.2-p1069-s1", "section": "6.2", "anchor": "#name-handling-version-negotiatio", "para_id": "6.2-p295", "text": "A client that supports only this version of QUIC MUST abandon the current connection attempt if it receives a Version Negotiation packet, with the following two exceptions.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.2-p1070-s2", "section": "6.2", "anchor": "#name-handling-version-negotiatio", "para_id": "6.2-p295", "text": "A client MUST discard any Version Negotiation packet if it has received and successfully processed any other packet, including an earlier Version Negotiation packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.2-p1071-s3", "section": "6.2", "anchor": "#name-handling-version-negotiatio", "para_id": "6.2-p295", "text": "A client MUST discard a Version Negotiation packet that lists the QUIC version selected by the client. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.2-p1072-s1", "section": "6.2", "anchor": "#name-handling-version-negotiatio", "para_id": "6.2-p296", "text": "How to perform version negotiation is left as future work defined by future Standards Track specifications.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.2-p1073-s2", "section": "6.2", "anchor": "#name-handling-version-negotiatio", "para_id": "6.2-p296", "text": "In particular, that future work will ensure robustness against version downgrade attacks; see Section 21.12 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.2-p1074-s1", "section": "6.2", "anchor": "#name-handling-version-negotiatio", "para_id": "6.2-p297", "text": "6.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.2-p1075-s2", "section": "6.2", "anchor": "#name-handling-version-negotiatio", "para_id": "6.2-p297", "text": "Using Reserved Versions For a server to use a new version in the future, clients need to correctly handle unsupported versions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.2-p1076-s3", "section": "6.2", "anchor": "#name-handling-version-negotiatio", "para_id": "6.2-p297", "text": "Some version numbers (0x?a?a?a?a, as defined in Section 15 ) are reserved for inclusion in fields that contain version numbers. ¶ Endpoints MAY add reserved versions to any field where unknown or unsupported versions are ignored to test that a peer correctly ignores the value.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.2-p1077-s4", "section": "6.2", "anchor": "#name-handling-version-negotiatio", "para_id": "6.2-p297", "text": "For instance, an endpoint could include a reserved version in a Version Negotiation packet; see Section 17.2.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.2-p1078-s5", "section": "6.2", "anchor": "#name-handling-version-negotiatio", "para_id": "6.2-p297", "text": "Endpoints MAY send packets with a reserved version to test that a peer correctly discards the packet. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1079-s1", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p298", "text": "For a server to use a new version in the future, clients need to correctly handle unsupported versions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1080-s2", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p298", "text": "Some version numbers (0x?a?a?a?a, as defined in Section 15 ) are reserved for inclusion in fields that contain version numbers. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1081-s1", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p299", "text": "Endpoints MAY add reserved versions to any field where unknown or unsupported versions are ignored to test that a peer correctly ignores the value.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.3-p1082-s2", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p299", "text": "For instance, an endpoint could include a reserved version in a Version Negotiation packet; see Section 17.2.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1083-s3", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p299", "text": "Endpoints MAY send packets with a reserved version to test that a peer correctly discards the packet. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1084-s1", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "7.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1085-s2", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Cryptographic and Transport Handshake QUIC relies on a combined cryptographic and transport handshake to minimize connection establishment latency.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1086-s3", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "QUIC uses the CRYPTO frame ( Section 19.6 ) to transmit the cryptographic handshake.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "6.3-p1087-s4", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "The version of QUIC defined in this document is identified as 0x00000001 and uses TLS as described in [ QUIC-TLS ] ; a different QUIC version could indicate that a different cryptographic handshake protocol is in use. ¶ QUIC provides reliable, ordered delivery of the cryptographic handshake data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1088-s5", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "QUIC packet protection is used to encrypt as much of the handshake protocol as possible.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1089-s6", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "The cryptographic handshake MUST provide the following properties: ¶ authenticated key exchange, where ¶ a server is always authenticated, ¶ a client is optionally authenticated, ¶ every connection produces distinct and unrelated keys, and ¶ keying material is usable for packet protection for both 0-RTT and 1-RTT packets. ¶ authenticated exchange of values for transport parameters of both endpoints, and confidentiality protection for server transport parameters (see Section 7.4 ). ¶ authenticated negotiation of an application protocol (TLS uses Application-Layer Protocol Negotiation (ALPN) [ ALPN ] for this purpose). ¶ The CRYPTO frame can be sent in different packet number spaces ( Section 12.3 ).", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "6.3-p1090-s7", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "The offsets used by CRYPTO frames to ensure ordered delivery of cryptographic handshake data start from zero in each packet number space. ¶ Figure 4 shows a simplified handshake and the exchange of packets and frames that are used to advance the handshake.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "6.3-p1091-s8", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Exchange of application data during the handshake is enabled where possible, shown with an asterisk (\"*\").", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1092-s9", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Once the handshake is complete, endpoints are able to exchange application data freely. ¶ Client Server Initial (CRYPTO) 0-RTT (*) ----------> Initial (CRYPTO) Handshake (CRYPTO) <---------- 1-RTT (*) Handshake (CRYPTO) 1-RTT (*) ----------> <---------- 1-RTT (HANDSHAKE_DONE) 1-RTT <=========> 1-RTT Figure 4 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1093-s10", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Simplified QUIC Handshake Endpoints can use packets sent during the handshake to test for Explicit Congestion Notification (ECN) support; see Section 13.4 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1094-s11", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "An endpoint validates support for ECN by observing whether the ACK frames acknowledging the first packets it sends carry ECN counts, as described in Section 13.4.2 . ¶ Endpoints MUST explicitly negotiate an application protocol.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "6.3-p1095-s12", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "This avoids situations where there is a disagreement about the protocol that is in use. ¶ 7.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1096-s13", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Example Handshake Flows Details of how TLS is integrated with QUIC are provided in [ QUIC-TLS ] , but some examples are provided here.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1097-s14", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "An extension of this exchange to support client address validation is shown in Section 8.1.2 . ¶ Once any address validation exchanges are complete, the cryptographic handshake is used to agree on cryptographic keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1098-s15", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "The cryptographic handshake is carried in Initial ( Section 17.2.2 ) and Handshake ( Section 17.2.4 ) packets. ¶ Figure 5 provides an overview of the 1-RTT handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1099-s16", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Each line shows a QUIC packet with the packet type and packet number shown first, followed by the frames that are typically contained in those packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "6.3-p1100-s17", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "For instance, the first packet is of type Initial, with packet number 0, and contains a CRYPTO frame carrying the ClientHello. ¶ Multiple QUIC packets -- even of different packet types -- can be coalesced into a single UDP datagram; see Section 12.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "6.3-p1101-s18", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "As a result, this handshake could consist of as few as four UDP datagrams, or any number more (subject to limits inherent to the protocol, such as congestion control and anti-amplification).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1102-s19", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "For instance, the server's first flight contains Initial packets, Handshake packets, and \"0.5-RTT data\" in 1-RTT packets. ¶ Client Server Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1103-s20", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "CRYPTO[CH] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1104-s21", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "CRYPTO[SH] ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1105-s22", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "CRYPTO[EE, CERT, CV, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1106-s23", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "STREAM[1, \"...\"] Initial[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.3-p1107-s24", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1108-s25", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "CRYPTO[FIN], ACK[0] 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1109-s26", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "STREAM[0, \"...\"], ACK[0] -> Handshake[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1110-s27", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "ACK[0] <- 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1111-s28", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "HANDSHAKE_DONE, STREAM[3, \"...\"], ACK[0] Figure 5 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1112-s29", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Example 1-RTT Handshake Figure 6 shows an example of a connection with a 0-RTT handshake and a single packet of 0-RTT data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1113-s30", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Note that as described in Section 12.3 , the server acknowledges 0-RTT data in 1-RTT packets, and the client sends 1-RTT packets in the same packet number space. ¶ Client Server Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1114-s31", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "CRYPTO[CH] 0-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1115-s32", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "STREAM[0, \"...\"] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.3-p1116-s33", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "CRYPTO[SH] ACK[0] Handshake[0] CRYPTO[EE, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1117-s34", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "STREAM[1, \"...\"] ACK[0] Initial[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1118-s35", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1119-s36", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "CRYPTO[FIN], ACK[0] 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1120-s37", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "STREAM[0, \"...\"] ACK[0] -> Handshake[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1121-s38", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "ACK[0] <- 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1122-s39", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "HANDSHAKE_DONE, STREAM[3, \"...\"], ACK[1] Figure 6 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1123-s40", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Example 0-RTT Handshake 7.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1124-s41", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Negotiating Connection IDs A connection ID is used to ensure consistent routing of packets, as described in Section 5.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1125-s42", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "The long header contains two connection IDs: the Destination Connection ID is chosen by the recipient of the packet and is used to provide consistent routing; the Source Connection ID is used to set the Destination Connection ID used by the peer. ¶ During the handshake, packets with the long header ( Section 17.2 ) are used to establish the connection IDs used by both endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1126-s43", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Each endpoint uses the Source Connection ID field to specify the connection ID that is used in the Destination Connection ID field of packets being sent to them.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1127-s44", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "After processing the first Initial packet, each endpoint sets the Destination Connection ID field in subsequent packets it sends to the value of the Source Connection ID field that it received. ¶ When an Initial packet is sent by a client that has not previously received an Initial or Retry packet from the server, the client populates the Destination Connection ID field with an unpredictable value.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1128-s45", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "This Destination Connection ID MUST be at least 8 bytes in length.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.3-p1129-s46", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Until a packet is received from the server, the client MUST use the same Destination Connection ID value on all packets in this connection. ¶ The Destination Connection ID field from the first Initial packet sent by a client is used to determine packet protection keys for Initial packets.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1130-s47", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "These keys change after receiving a Retry packet; see Section 5.2 of [ QUIC-TLS ] . ¶ The client populates the Source Connection ID field with a value of its choosing and sets the Source Connection ID Length field to indicate the length. ¶ 0-RTT packets in the first flight use the same Destination Connection ID and Source Connection ID values as the client's first Initial packet. ¶ Upon first receiving an Initial or Retry packet from the server, the client uses the Source Connection ID supplied by the server as the Destination Connection ID for subsequent packets, including any 0-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1131-s48", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "This means that a client might have to change the connection ID it sets in the Destination Connection ID field twice during connection establishment: once in response to a Retry packet and once in response to an Initial packet from the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1132-s49", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Once a client has received a valid Initial packet from the server, it MUST discard any subsequent packet it receives on that connection with a different Source Connection ID. ¶ A client MUST change the Destination Connection ID it uses for sending packets in response to only the first received Initial or Retry packet.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1133-s50", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "A server MUST set the Destination Connection ID it uses for sending packets based on the first received Initial packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1134-s51", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Any further changes to the Destination Connection ID are only permitted if the values are taken from NEW_CONNECTION_ID frames; if subsequent Initial packets include a different Source Connection ID, they MUST be discarded.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "6.3-p1135-s52", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "This avoids unpredictable outcomes that might otherwise result from stateless processing of multiple Initial packets with different Source Connection IDs. ¶ The Destination Connection ID that an endpoint sends can change over the lifetime of a connection, especially in response to connection migration ( Section 9 ); see Section 5.1.1 for details. ¶ 7.3.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "6.3-p1136-s53", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Authenticating Connection IDs The choice each endpoint makes about connection IDs during the handshake is authenticated by including all values in transport parameters; see Section 7.4 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1137-s54", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "This ensures that all connection IDs used for the handshake are also authenticated by the cryptographic handshake. ¶ Each endpoint includes the value of the Source Connection ID field from the first Initial packet it sent in the initial_source_connection_id transport parameter; see Section 18.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1138-s55", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "A server includes the Destination Connection ID field from the first Initial packet it received from the client in the original_destination_connection_id transport parameter; if the server sent a Retry packet, this refers to the first Initial packet received before sending the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1139-s56", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "If it sends a Retry packet, a server also includes the Source Connection ID field from the Retry packet in the retry_source_connection_id transport parameter. ¶ The values provided by a peer for these transport parameters MUST match the values that an endpoint used in the Destination and Source Connection ID fields of Initial packets that it sent (and received, for servers).", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1140-s57", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Endpoints MUST validate that received transport parameters match received connection ID values.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1141-s58", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Including connection ID values in transport parameters and verifying them ensures that an attacker cannot influence the choice of connection ID for a successful connection by injecting packets carrying attacker-chosen connection IDs during the handshake. ¶ An endpoint MUST treat the absence of the initial_source_connection_id transport parameter from either endpoint or the absence of the original_destination_connection_id transport parameter from the server as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶ An endpoint MUST treat the following as a connection error of type TRANSPORT_PARAMETER_ERROR or PROTOCOL_VIOLATION: ¶ absence of the retry_source_connection_id transport parameter from the server after receiving a Retry packet, ¶ presence of the retry_source_connection_id transport parameter when no Retry packet was received, or ¶ a mismatch between values received from a peer in these transport parameters and the value sent in the corresponding Destination or Source Connection ID fields of Initial packets. ¶ If a zero-length connection ID is selected, the corresponding transport parameter is included with a zero-length value. ¶ Figure 7 shows the connection IDs (with DCID=Destination Connection ID, SCID=Source Connection ID) that are used in a complete handshake.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1142-s59", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "The exchange of Initial packets is shown, plus the later exchange of 1-RTT packets that includes the connection ID established during the handshake. ¶ Client Server Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1143-s60", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "DCID=S1, SCID=C1 -> <- Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1144-s61", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "DCID=C1, SCID=S3 ... 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1145-s62", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "DCID=S3 -> <- 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1146-s63", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "DCID=C1 Figure 7 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1147-s64", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Use of Connection IDs in a Handshake Figure 8 shows a similar handshake that includes a Retry packet. ¶ Client Server Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1148-s65", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "DCID=S1, SCID=C1 -> <- Retry:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1149-s66", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "DCID=C1, SCID=S2 Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1150-s67", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "DCID=S2, SCID=C1 -> <- Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1151-s68", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "DCID=C1, SCID=S3 ... 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1152-s69", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "DCID=S3 -> <- 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1153-s70", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "DCID=C1 Figure 8 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1154-s71", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Use of Connection IDs in a Handshake with Retry In both cases (Figures 7 and 8 ), the client sets the value of the initial_source_connection_id transport parameter to C1 . ¶ When the handshake does not include a Retry ( Figure 7 ), the server sets original_destination_connection_id to S1 (note that this value is chosen by the client) and initial_source_connection_id to S3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1155-s72", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "In this case, the server does not include a retry_source_connection_id transport parameter. ¶ When the handshake includes a Retry ( Figure 8 ), the server sets original_destination_connection_id to S1 , retry_source_connection_id to S2 , and initial_source_connection_id to S3 . ¶ 7.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1156-s73", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Transport Parameters During connection establishment, both endpoints make authenticated declarations of their transport parameters.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1157-s74", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Endpoints are required to comply with the restrictions that each parameter defines; the description of each parameter includes rules for its handling. ¶ Transport parameters are declarations that are made unilaterally by each endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1158-s75", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Each endpoint can choose values for transport parameters independent of the values chosen by its peer. ¶ The encoding of the transport parameters is detailed in Section 18 . ¶ QUIC includes the encoded transport parameters in the cryptographic handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1159-s76", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Once the handshake completes, the transport parameters declared by the peer are available.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1160-s77", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Each endpoint validates the values provided by its peer. ¶ Definitions for each of the defined transport parameters are included in Section 18.2 . ¶ An endpoint MUST treat receipt of a transport parameter with an invalid value as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶ An endpoint MUST NOT send a parameter more than once in a given transport parameters extension.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1161-s78", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "An endpoint SHOULD treat receipt of duplicate transport parameters as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶ Endpoints use transport parameters to authenticate the negotiation of connection IDs during the handshake; see Section 7.3 . ¶ ALPN (see [ ALPN ] ) allows clients to offer multiple application protocols during connection establishment.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.3-p1162-s79", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "The transport parameters that a client includes during the handshake apply to all application protocols that the client offers.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1163-s80", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Application protocols can recommend values for transport parameters, such as the initial flow control limits.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "6.3-p1164-s81", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "However, application protocols that set constraints on values for transport parameters could make it impossible for a client to offer multiple application protocols if these constraints conflict. ¶ 7.4.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1165-s82", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Values of Transport Parameters for 0-RTT Using 0-RTT depends on both client and server using protocol parameters that were negotiated from a previous connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1166-s83", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "To enable 0-RTT, endpoints store the values of the server transport parameters with any session tickets it receives on the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1167-s84", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Endpoints also store any information required by the application protocol or cryptographic handshake; see Section 4.6 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1168-s85", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "The values of stored transport parameters are used when attempting 0-RTT using the session tickets. ¶ Remembered transport parameters apply to the new connection until the handshake completes and the client starts sending 1-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1169-s86", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Once the handshake completes, the client uses the transport parameters established in the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1170-s87", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Not all transport parameters are remembered, as some do not apply to future connections or they have no effect on the use of 0-RTT. ¶ The definition of a new transport parameter ( Section 7.4.2 ) MUST specify whether storing the transport parameter for 0-RTT is mandatory, optional, or prohibited.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.3-p1171-s88", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "A client need not store a transport parameter it cannot process. ¶ A client MUST NOT use remembered values for the following parameters: ack_delay_exponent, max_ack_delay, initial_source_connection_id, original_destination_connection_id, preferred_address, retry_source_connection_id, and stateless_reset_token.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "6.3-p1172-s89", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "The client MUST use the server's new values in the handshake instead; if the server does not provide new values, the default values are used. ¶ A client that attempts to send 0-RTT data MUST remember all other transport parameters used by the server that it is able to process.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1173-s90", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "The server can remember these transport parameters or can store an integrity-protected copy of the values in the ticket and recover the information when accepting 0-RTT data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1174-s91", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "A server uses the transport parameters in determining whether to accept 0-RTT data. ¶ If 0-RTT data is accepted by the server, the server MUST NOT reduce any limits or alter any values that might be violated by the client with its 0-RTT data.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "6.3-p1175-s92", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "In particular, a server that accepts 0-RTT data MUST NOT set values for the following parameters ( Section 18.2 ) that are smaller than the remembered values of the parameters. ¶ active_connection_id_limit ¶ initial_max_data ¶ initial_max_stream_data_bidi_local ¶ initial_max_stream_data_bidi_remote ¶ initial_max_stream_data_uni ¶ initial_max_streams_bidi ¶ initial_max_streams_uni ¶ Omitting or setting a zero value for certain transport parameters can result in 0-RTT data being enabled but not usable.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.3-p1176-s93", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "The applicable subset of transport parameters that permit the sending of application data SHOULD be set to non-zero values for 0-RTT.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.3-p1177-s94", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "This includes initial_max_data and either (1) initial_max_streams_bidi and initial_max_stream_data_bidi_remote or (2) initial_max_streams_uni and initial_max_stream_data_uni. ¶ A server might provide larger initial stream flow control limits for streams than the remembered values that a client applies when sending 0-RTT.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "6.3-p1178-s95", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Once the handshake completes, the client updates the flow control limits on all sending streams using the updated values of initial_max_stream_data_bidi_remote and initial_max_stream_data_uni. ¶ A server MAY store and recover the previously sent values of the max_idle_timeout, max_udp_payload_size, and disable_active_migration parameters and reject 0-RTT if it selects smaller values.", "facet": "flow_control", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "6.3-p1179-s96", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Lowering the values of these parameters while also accepting 0-RTT data could degrade the performance of the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1180-s97", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Specifically, lowering the max_udp_payload_size could result in dropped packets, leading to worse performance compared to rejecting 0-RTT data outright. ¶ A server MUST reject 0-RTT data if the restored values for transport parameters cannot be supported. ¶ When sending frames in 0-RTT packets, a client MUST only use remembered transport parameters; importantly, it MUST NOT use updated values that it learns from the server's updated transport parameters or from frames received in 1-RTT packets.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "6.3-p1181-s98", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Updated values of transport parameters from the handshake apply only to 1-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1182-s99", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "For instance, flow control limits from remembered transport parameters apply to all 0-RTT packets even if those values are increased by the handshake or by frames sent in 1-RTT packets.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "6.3-p1183-s100", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "A server MAY treat the use of updated transport parameters in 0-RTT as a connection error of type PROTOCOL_VIOLATION. ¶ 7.4.2.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.3-p1184-s101", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "New Transport Parameters New transport parameters can be used to negotiate new protocol behavior.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1185-s102", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "An endpoint MUST ignore transport parameters that it does not support.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.3-p1186-s103", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "The absence of a transport parameter therefore disables any optional protocol feature that is negotiated using the parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1187-s104", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "As described in Section 18.1 , some identifiers are reserved in order to exercise this requirement. ¶ A client that does not understand a transport parameter can discard it and attempt 0-RTT on subsequent connections.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1188-s105", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "However, if the client adds support for a discarded transport parameter, it risks violating the constraints that the transport parameter establishes if it attempts 0-RTT.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1189-s106", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "New transport parameters can avoid this problem by setting a default of the most conservative value.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1190-s107", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Clients can avoid this problem by remembering all parameters, even those not currently supported. ¶ New transport parameters can be registered according to the rules in Section 22.3 . ¶ 7.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1191-s108", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Cryptographic Message Buffering Implementations need to maintain a buffer of CRYPTO data received out of order.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1192-s109", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Because there is no flow control of CRYPTO frames, an endpoint could potentially force its peer to buffer an unbounded amount of data. ¶ Implementations MUST support buffering at least 4096 bytes of data received in out-of-order CRYPTO frames.", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "6.3-p1193-s110", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Endpoints MAY choose to allow more data to be buffered during the handshake.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "6.3-p1194-s111", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "A larger limit during the handshake could allow for larger keys or credentials to be exchanged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "6.3-p1195-s112", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "An endpoint's buffer size does not need to remain constant during the life of the connection. ¶ Being unable to buffer CRYPTO frames during the handshake can lead to a connection failure.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "6.3-p1196-s113", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "If an endpoint's buffer is exceeded during the handshake, it can expand its buffer temporarily to complete the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "6.3-p1197-s114", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "If an endpoint does not expand its buffer, it MUST close the connection with a CRYPTO_BUFFER_EXCEEDED error code. ¶ Once the handshake completes, if an endpoint is unable to buffer all data in a CRYPTO frame, it MAY discard that CRYPTO frame and all CRYPTO frames received in the future, or it MAY close the connection with a CRYPTO_BUFFER_EXCEEDED error code.", "facet": "frames", "normative": true, "modalities": ["MUST", "MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "6.3-p1198-s115", "section": "6.3", "anchor": "#name-using-reserved-versions", "para_id": "6.3-p300", "text": "Packets containing discarded CRYPTO frames MUST be acknowledged because the packet has been received and processed by the transport even though the CRYPTO frame was discarded. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7-p1199-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p301", "text": "QUIC relies on a combined cryptographic and transport handshake to minimize connection establishment latency.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1200-s2", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p301", "text": "QUIC uses the CRYPTO frame ( Section 19.6 ) to transmit the cryptographic handshake.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7-p1201-s3", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p301", "text": "The version of QUIC defined in this document is identified as 0x00000001 and uses TLS as described in [ QUIC-TLS ] ; a different QUIC version could indicate that a different cryptographic handshake protocol is in use. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1202-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p302", "text": "QUIC provides reliable, ordered delivery of the cryptographic handshake data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1203-s2", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p302", "text": "QUIC packet protection is used to encrypt as much of the handshake protocol as possible.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1204-s3", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p302", "text": "The cryptographic handshake MUST provide the following properties: ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7-p1205-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p303", "text": "authenticated key exchange, where ¶ a server is always authenticated, ¶ a client is optionally authenticated, ¶ every connection produces distinct and unrelated keys, and ¶ keying material is usable for packet protection for both 0-RTT and 1-RTT packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1206-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p304", "text": "authenticated key exchange, where ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1207-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p305", "text": "a server is always authenticated, ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1208-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p306", "text": "a client is optionally authenticated, ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1209-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p307", "text": "every connection produces distinct and unrelated keys, and ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1210-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p308", "text": "keying material is usable for packet protection for both 0-RTT and 1-RTT packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1211-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p309", "text": "authenticated exchange of values for transport parameters of both endpoints, and confidentiality protection for server transport parameters (see Section 7.4 ). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1212-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p310", "text": "authenticated negotiation of an application protocol (TLS uses Application-Layer Protocol Negotiation (ALPN) [ ALPN ] for this purpose). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1213-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p311", "text": "The CRYPTO frame can be sent in different packet number spaces ( Section 12.3 ).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7-p1214-s2", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p311", "text": "The offsets used by CRYPTO frames to ensure ordered delivery of cryptographic handshake data start from zero in each packet number space. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7-p1215-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p312", "text": "Figure 4 shows a simplified handshake and the exchange of packets and frames that are used to advance the handshake.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7-p1216-s2", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p312", "text": "Exchange of application data during the handshake is enabled where possible, shown with an asterisk (\"*\").", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1217-s3", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p312", "text": "Once the handshake is complete, endpoints are able to exchange application data freely. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1218-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p313", "text": "Client Server Initial (CRYPTO) 0-RTT (*) ----------> Initial (CRYPTO) Handshake (CRYPTO) <---------- 1-RTT (*) Handshake (CRYPTO) 1-RTT (*) ----------> <---------- 1-RTT (HANDSHAKE_DONE) 1-RTT <=========> 1-RTT Figure 4 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1219-s2", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p313", "text": "Simplified QUIC Handshake", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1220-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p314", "text": "Client Server Initial (CRYPTO) 0-RTT (*) ----------> Initial (CRYPTO) Handshake (CRYPTO) <---------- 1-RTT (*) Handshake (CRYPTO) 1-RTT (*) ----------> <---------- 1-RTT (HANDSHAKE_DONE) 1-RTT <=========> 1-RTT", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1221-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p315", "text": "Client Server Initial (CRYPTO) 0-RTT (*) ----------> Initial (CRYPTO) Handshake (CRYPTO) <---------- 1-RTT (*) Handshake (CRYPTO) 1-RTT (*) ----------> <---------- 1-RTT (HANDSHAKE_DONE) 1-RTT <=========> 1-RTT", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1222-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p316", "text": "Figure 4 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1223-s2", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p316", "text": "Simplified QUIC Handshake", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1224-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p317", "text": "Endpoints can use packets sent during the handshake to test for Explicit Congestion Notification (ECN) support; see Section 13.4 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1225-s2", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p317", "text": "An endpoint validates support for ECN by observing whether the ACK frames acknowledging the first packets it sends carry ECN counts, as described in Section 13.4.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7-p1226-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p318", "text": "Endpoints MUST explicitly negotiate an application protocol.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7-p1227-s2", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p318", "text": "This avoids situations where there is a disagreement about the protocol that is in use. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1228-s1", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "7.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1229-s2", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "Example Handshake Flows Details of how TLS is integrated with QUIC are provided in [ QUIC-TLS ] , but some examples are provided here.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1230-s3", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "An extension of this exchange to support client address validation is shown in Section 8.1.2 . ¶ Once any address validation exchanges are complete, the cryptographic handshake is used to agree on cryptographic keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1231-s4", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "The cryptographic handshake is carried in Initial ( Section 17.2.2 ) and Handshake ( Section 17.2.4 ) packets. ¶ Figure 5 provides an overview of the 1-RTT handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1232-s5", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "Each line shows a QUIC packet with the packet type and packet number shown first, followed by the frames that are typically contained in those packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7-p1233-s6", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "For instance, the first packet is of type Initial, with packet number 0, and contains a CRYPTO frame carrying the ClientHello. ¶ Multiple QUIC packets -- even of different packet types -- can be coalesced into a single UDP datagram; see Section 12.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7-p1234-s7", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "As a result, this handshake could consist of as few as four UDP datagrams, or any number more (subject to limits inherent to the protocol, such as congestion control and anti-amplification).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1235-s8", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "For instance, the server's first flight contains Initial packets, Handshake packets, and \"0.5-RTT data\" in 1-RTT packets. ¶ Client Server Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1236-s9", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "CRYPTO[CH] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1237-s10", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "CRYPTO[SH] ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7-p1238-s11", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "CRYPTO[EE, CERT, CV, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7-p1239-s12", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "STREAM[1, \"...\"] Initial[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7-p1240-s13", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7-p1241-s14", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "CRYPTO[FIN], ACK[0] 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7-p1242-s15", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "STREAM[0, \"...\"], ACK[0] -> Handshake[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7-p1243-s16", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "ACK[0] <- 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7-p1244-s17", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "HANDSHAKE_DONE, STREAM[3, \"...\"], ACK[0] Figure 5 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7-p1245-s18", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "Example 1-RTT Handshake Figure 6 shows an example of a connection with a 0-RTT handshake and a single packet of 0-RTT data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1246-s19", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "Note that as described in Section 12.3 , the server acknowledges 0-RTT data in 1-RTT packets, and the client sends 1-RTT packets in the same packet number space. ¶ Client Server Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7-p1247-s20", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "CRYPTO[CH] 0-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7-p1248-s21", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "STREAM[0, \"...\"] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7-p1249-s22", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "CRYPTO[SH] ACK[0] Handshake[0] CRYPTO[EE, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7-p1250-s23", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "STREAM[1, \"...\"] ACK[0] Initial[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7-p1251-s24", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7-p1252-s25", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "CRYPTO[FIN], ACK[0] 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7-p1253-s26", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "STREAM[0, \"...\"] ACK[0] -> Handshake[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7-p1254-s27", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "ACK[0] <- 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7-p1255-s28", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "HANDSHAKE_DONE, STREAM[3, \"...\"], ACK[1] Figure 6 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7-p1256-s29", "section": "7", "anchor": "#name-cryptographic-and-transport", "para_id": "7-p319", "text": "Example 0-RTT Handshake", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1257-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p320", "text": "Details of how TLS is integrated with QUIC are provided in [ QUIC-TLS ] , but some examples are provided here.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1258-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p320", "text": "An extension of this exchange to support client address validation is shown in Section 8.1.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1259-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p321", "text": "Once any address validation exchanges are complete, the cryptographic handshake is used to agree on cryptographic keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1260-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p321", "text": "The cryptographic handshake is carried in Initial ( Section 17.2.2 ) and Handshake ( Section 17.2.4 ) packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1261-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p322", "text": "Figure 5 provides an overview of the 1-RTT handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1262-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p322", "text": "Each line shows a QUIC packet with the packet type and packet number shown first, followed by the frames that are typically contained in those packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7.1-p1263-s3", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p322", "text": "For instance, the first packet is of type Initial, with packet number 0, and contains a CRYPTO frame carrying the ClientHello. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7.1-p1264-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p323", "text": "Multiple QUIC packets -- even of different packet types -- can be coalesced into a single UDP datagram; see Section 12.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1265-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p323", "text": "As a result, this handshake could consist of as few as four UDP datagrams, or any number more (subject to limits inherent to the protocol, such as congestion control and anti-amplification).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1266-s3", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p323", "text": "For instance, the server's first flight contains Initial packets, Handshake packets, and \"0.5-RTT data\" in 1-RTT packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1267-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p324", "text": "Client Server Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1268-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p324", "text": "CRYPTO[CH] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1269-s3", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p324", "text": "CRYPTO[SH] ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1270-s4", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p324", "text": "CRYPTO[EE, CERT, CV, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1271-s5", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p324", "text": "STREAM[1, \"...\"] Initial[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.1-p1272-s6", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p324", "text": "ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1273-s7", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p324", "text": "CRYPTO[FIN], ACK[0] 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1274-s8", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p324", "text": "STREAM[0, \"...\"], ACK[0] -> Handshake[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1275-s9", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p324", "text": "ACK[0] <- 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1276-s10", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p324", "text": "HANDSHAKE_DONE, STREAM[3, \"...\"], ACK[0] Figure 5 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1277-s11", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p324", "text": "Example 1-RTT Handshake", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1278-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p325", "text": "Client Server Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1279-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p325", "text": "CRYPTO[CH] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1280-s3", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p325", "text": "CRYPTO[SH] ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1281-s4", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p325", "text": "CRYPTO[EE, CERT, CV, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1282-s5", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p325", "text": "STREAM[1, \"...\"] Initial[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.1-p1283-s6", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p325", "text": "ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1284-s7", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p325", "text": "CRYPTO[FIN], ACK[0] 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1285-s8", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p325", "text": "STREAM[0, \"...\"], ACK[0] -> Handshake[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1286-s9", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p325", "text": "ACK[0] <- 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1287-s10", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p325", "text": "HANDSHAKE_DONE, STREAM[3, \"...\"], ACK[0]", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1288-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p326", "text": "Client Server Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1289-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p326", "text": "CRYPTO[CH] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1290-s3", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p326", "text": "CRYPTO[SH] ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1291-s4", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p326", "text": "CRYPTO[EE, CERT, CV, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1292-s5", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p326", "text": "STREAM[1, \"...\"] Initial[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.1-p1293-s6", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p326", "text": "ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1294-s7", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p326", "text": "CRYPTO[FIN], ACK[0] 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1295-s8", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p326", "text": "STREAM[0, \"...\"], ACK[0] -> Handshake[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1296-s9", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p326", "text": "ACK[0] <- 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1297-s10", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p326", "text": "HANDSHAKE_DONE, STREAM[3, \"...\"], ACK[0]", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1298-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p327", "text": "Figure 5 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1299-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p327", "text": "Example 1-RTT Handshake", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1300-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p328", "text": "Figure 6 shows an example of a connection with a 0-RTT handshake and a single packet of 0-RTT data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1301-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p328", "text": "Note that as described in Section 12.3 , the server acknowledges 0-RTT data in 1-RTT packets, and the client sends 1-RTT packets in the same packet number space. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1302-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p329", "text": "Client Server Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1303-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p329", "text": "CRYPTO[CH] 0-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1304-s3", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p329", "text": "STREAM[0, \"...\"] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.1-p1305-s4", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p329", "text": "CRYPTO[SH] ACK[0] Handshake[0] CRYPTO[EE, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1306-s5", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p329", "text": "STREAM[1, \"...\"] ACK[0] Initial[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1307-s6", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p329", "text": "ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1308-s7", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p329", "text": "CRYPTO[FIN], ACK[0] 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1309-s8", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p329", "text": "STREAM[0, \"...\"] ACK[0] -> Handshake[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1310-s9", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p329", "text": "ACK[0] <- 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1311-s10", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p329", "text": "HANDSHAKE_DONE, STREAM[3, \"...\"], ACK[1] Figure 6 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1312-s11", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p329", "text": "Example 0-RTT Handshake", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1313-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p330", "text": "Client Server Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1314-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p330", "text": "CRYPTO[CH] 0-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1315-s3", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p330", "text": "STREAM[0, \"...\"] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.1-p1316-s4", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p330", "text": "CRYPTO[SH] ACK[0] Handshake[0] CRYPTO[EE, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1317-s5", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p330", "text": "STREAM[1, \"...\"] ACK[0] Initial[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1318-s6", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p330", "text": "ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1319-s7", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p330", "text": "CRYPTO[FIN], ACK[0] 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1320-s8", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p330", "text": "STREAM[0, \"...\"] ACK[0] -> Handshake[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1321-s9", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p330", "text": "ACK[0] <- 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1322-s10", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p330", "text": "HANDSHAKE_DONE, STREAM[3, \"...\"], ACK[1]", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1323-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p331", "text": "Client Server Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1324-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p331", "text": "CRYPTO[CH] 0-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1325-s3", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p331", "text": "STREAM[0, \"...\"] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.1-p1326-s4", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p331", "text": "CRYPTO[SH] ACK[0] Handshake[0] CRYPTO[EE, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1327-s5", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p331", "text": "STREAM[1, \"...\"] ACK[0] Initial[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1328-s6", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p331", "text": "ACK[0] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1329-s7", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p331", "text": "CRYPTO[FIN], ACK[0] 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1330-s8", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p331", "text": "STREAM[0, \"...\"] ACK[0] -> Handshake[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1331-s9", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p331", "text": "ACK[0] <- 1-RTT[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1332-s10", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p331", "text": "HANDSHAKE_DONE, STREAM[3, \"...\"], ACK[1]", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1333-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p332", "text": "Figure 6 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1334-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p332", "text": "Example 0-RTT Handshake", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1335-s1", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p333", "text": "7.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1336-s2", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p333", "text": "Negotiating Connection IDs A connection ID is used to ensure consistent routing of packets, as described in Section 5.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1337-s3", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p333", "text": "The long header contains two connection IDs: the Destination Connection ID is chosen by the recipient of the packet and is used to provide consistent routing; the Source Connection ID is used to set the Destination Connection ID used by the peer. ¶ During the handshake, packets with the long header ( Section 17.2 ) are used to establish the connection IDs used by both endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1338-s4", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p333", "text": "Each endpoint uses the Source Connection ID field to specify the connection ID that is used in the Destination Connection ID field of packets being sent to them.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1339-s5", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p333", "text": "After processing the first Initial packet, each endpoint sets the Destination Connection ID field in subsequent packets it sends to the value of the Source Connection ID field that it received. ¶ When an Initial packet is sent by a client that has not previously received an Initial or Retry packet from the server, the client populates the Destination Connection ID field with an unpredictable value.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1340-s6", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p333", "text": "This Destination Connection ID MUST be at least 8 bytes in length.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.1-p1341-s7", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p333", "text": "Until a packet is received from the server, the client MUST use the same Destination Connection ID value on all packets in this connection. ¶ The Destination Connection ID field from the first Initial packet sent by a client is used to determine packet protection keys for Initial packets.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1342-s8", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p333", "text": "These keys change after receiving a Retry packet; see Section 5.2 of [ QUIC-TLS ] . ¶ The client populates the Source Connection ID field with a value of its choosing and sets the Source Connection ID Length field to indicate the length. ¶ 0-RTT packets in the first flight use the same Destination Connection ID and Source Connection ID values as the client's first Initial packet. ¶ Upon first receiving an Initial or Retry packet from the server, the client uses the Source Connection ID supplied by the server as the Destination Connection ID for subsequent packets, including any 0-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.1-p1343-s9", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p333", "text": "This means that a client might have to change the connection ID it sets in the Destination Connection ID field twice during connection establishment: once in response to a Retry packet and once in response to an Initial packet from the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.1-p1344-s10", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p333", "text": "Once a client has received a valid Initial packet from the server, it MUST discard any subsequent packet it receives on that connection with a different Source Connection ID. ¶ A client MUST change the Destination Connection ID it uses for sending packets in response to only the first received Initial or Retry packet.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1345-s11", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p333", "text": "A server MUST set the Destination Connection ID it uses for sending packets based on the first received Initial packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.1-p1346-s12", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p333", "text": "Any further changes to the Destination Connection ID are only permitted if the values are taken from NEW_CONNECTION_ID frames; if subsequent Initial packets include a different Source Connection ID, they MUST be discarded.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.1-p1347-s13", "section": "7.1", "anchor": "#name-example-handshake-flows", "para_id": "7.1-p333", "text": "This avoids unpredictable outcomes that might otherwise result from stateless processing of multiple Initial packets with different Source Connection IDs. ¶ The Destination Connection ID that an endpoint sends can change over the lifetime of a connection, especially in response to connection migration ( Section 9 ); see Section 5.1.1 for details. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.2-p1348-s1", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p334", "text": "A connection ID is used to ensure consistent routing of packets, as described in Section 5.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1349-s2", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p334", "text": "The long header contains two connection IDs: the Destination Connection ID is chosen by the recipient of the packet and is used to provide consistent routing; the Source Connection ID is used to set the Destination Connection ID used by the peer. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1350-s1", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p335", "text": "During the handshake, packets with the long header ( Section 17.2 ) are used to establish the connection IDs used by both endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1351-s2", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p335", "text": "Each endpoint uses the Source Connection ID field to specify the connection ID that is used in the Destination Connection ID field of packets being sent to them.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1352-s3", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p335", "text": "After processing the first Initial packet, each endpoint sets the Destination Connection ID field in subsequent packets it sends to the value of the Source Connection ID field that it received. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.2-p1353-s1", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p336", "text": "When an Initial packet is sent by a client that has not previously received an Initial or Retry packet from the server, the client populates the Destination Connection ID field with an unpredictable value.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.2-p1354-s2", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p336", "text": "This Destination Connection ID MUST be at least 8 bytes in length.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.2-p1355-s3", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p336", "text": "Until a packet is received from the server, the client MUST use the same Destination Connection ID value on all packets in this connection. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.2-p1356-s1", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p337", "text": "The Destination Connection ID field from the first Initial packet sent by a client is used to determine packet protection keys for Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1357-s2", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p337", "text": "These keys change after receiving a Retry packet; see Section 5.2 of [ QUIC-TLS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1358-s1", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p338", "text": "The client populates the Source Connection ID field with a value of its choosing and sets the Source Connection ID Length field to indicate the length. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1359-s1", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p339", "text": "0-RTT packets in the first flight use the same Destination Connection ID and Source Connection ID values as the client's first Initial packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1360-s1", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p340", "text": "Upon first receiving an Initial or Retry packet from the server, the client uses the Source Connection ID supplied by the server as the Destination Connection ID for subsequent packets, including any 0-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.2-p1361-s2", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p340", "text": "This means that a client might have to change the connection ID it sets in the Destination Connection ID field twice during connection establishment: once in response to a Retry packet and once in response to an Initial packet from the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1362-s3", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p340", "text": "Once a client has received a valid Initial packet from the server, it MUST discard any subsequent packet it receives on that connection with a different Source Connection ID. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.2-p1363-s1", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p341", "text": "A client MUST change the Destination Connection ID it uses for sending packets in response to only the first received Initial or Retry packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.2-p1364-s2", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p341", "text": "A server MUST set the Destination Connection ID it uses for sending packets based on the first received Initial packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.2-p1365-s3", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p341", "text": "Any further changes to the Destination Connection ID are only permitted if the values are taken from NEW_CONNECTION_ID frames; if subsequent Initial packets include a different Source Connection ID, they MUST be discarded.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.2-p1366-s4", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p341", "text": "This avoids unpredictable outcomes that might otherwise result from stateless processing of multiple Initial packets with different Source Connection IDs. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7.2-p1367-s1", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p342", "text": "The Destination Connection ID that an endpoint sends can change over the lifetime of a connection, especially in response to connection migration ( Section 9 ); see Section 5.1.1 for details. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.2-p1368-s1", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "7.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1369-s2", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "Authenticating Connection IDs The choice each endpoint makes about connection IDs during the handshake is authenticated by including all values in transport parameters; see Section 7.4 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1370-s3", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "This ensures that all connection IDs used for the handshake are also authenticated by the cryptographic handshake. ¶ Each endpoint includes the value of the Source Connection ID field from the first Initial packet it sent in the initial_source_connection_id transport parameter; see Section 18.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1371-s4", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "A server includes the Destination Connection ID field from the first Initial packet it received from the client in the original_destination_connection_id transport parameter; if the server sent a Retry packet, this refers to the first Initial packet received before sending the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.2-p1372-s5", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "If it sends a Retry packet, a server also includes the Source Connection ID field from the Retry packet in the retry_source_connection_id transport parameter. ¶ The values provided by a peer for these transport parameters MUST match the values that an endpoint used in the Destination and Source Connection ID fields of Initial packets that it sent (and received, for servers).", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.2-p1373-s6", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "Endpoints MUST validate that received transport parameters match received connection ID values.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.2-p1374-s7", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "Including connection ID values in transport parameters and verifying them ensures that an attacker cannot influence the choice of connection ID for a successful connection by injecting packets carrying attacker-chosen connection IDs during the handshake. ¶ An endpoint MUST treat the absence of the initial_source_connection_id transport parameter from either endpoint or the absence of the original_destination_connection_id transport parameter from the server as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶ An endpoint MUST treat the following as a connection error of type TRANSPORT_PARAMETER_ERROR or PROTOCOL_VIOLATION: ¶ absence of the retry_source_connection_id transport parameter from the server after receiving a Retry packet, ¶ presence of the retry_source_connection_id transport parameter when no Retry packet was received, or ¶ a mismatch between values received from a peer in these transport parameters and the value sent in the corresponding Destination or Source Connection ID fields of Initial packets. ¶ If a zero-length connection ID is selected, the corresponding transport parameter is included with a zero-length value. ¶ Figure 7 shows the connection IDs (with DCID=Destination Connection ID, SCID=Source Connection ID) that are used in a complete handshake.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.2-p1375-s8", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "The exchange of Initial packets is shown, plus the later exchange of 1-RTT packets that includes the connection ID established during the handshake. ¶ Client Server Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1376-s9", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "DCID=S1, SCID=C1 -> <- Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1377-s10", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "DCID=C1, SCID=S3 ... 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1378-s11", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "DCID=S3 -> <- 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1379-s12", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "DCID=C1 Figure 7 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1380-s13", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "Use of Connection IDs in a Handshake Figure 8 shows a similar handshake that includes a Retry packet. ¶ Client Server Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1381-s14", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "DCID=S1, SCID=C1 -> <- Retry:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1382-s15", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "DCID=C1, SCID=S2 Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1383-s16", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "DCID=S2, SCID=C1 -> <- Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1384-s17", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "DCID=C1, SCID=S3 ... 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1385-s18", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "DCID=S3 -> <- 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1386-s19", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "DCID=C1 Figure 8 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.2-p1387-s20", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "Use of Connection IDs in a Handshake with Retry In both cases (Figures 7 and 8 ), the client sets the value of the initial_source_connection_id transport parameter to C1 . ¶ When the handshake does not include a Retry ( Figure 7 ), the server sets original_destination_connection_id to S1 (note that this value is chosen by the client) and initial_source_connection_id to S3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.2-p1388-s21", "section": "7.2", "anchor": "#name-negotiating-connection-ids", "para_id": "7.2-p343", "text": "In this case, the server does not include a retry_source_connection_id transport parameter. ¶ When the handshake includes a Retry ( Figure 8 ), the server sets original_destination_connection_id to S1 , retry_source_connection_id to S2 , and initial_source_connection_id to S3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.3-p1389-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p344", "text": "The choice each endpoint makes about connection IDs during the handshake is authenticated by including all values in transport parameters; see Section 7.4 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1390-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p344", "text": "This ensures that all connection IDs used for the handshake are also authenticated by the cryptographic handshake. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1391-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p345", "text": "Each endpoint includes the value of the Source Connection ID field from the first Initial packet it sent in the initial_source_connection_id transport parameter; see Section 18.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1392-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p345", "text": "A server includes the Destination Connection ID field from the first Initial packet it received from the client in the original_destination_connection_id transport parameter; if the server sent a Retry packet, this refers to the first Initial packet received before sending the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.3-p1393-s3", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p345", "text": "If it sends a Retry packet, a server also includes the Source Connection ID field from the Retry packet in the retry_source_connection_id transport parameter. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.3-p1394-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p346", "text": "The values provided by a peer for these transport parameters MUST match the values that an endpoint used in the Destination and Source Connection ID fields of Initial packets that it sent (and received, for servers).", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.3-p1395-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p346", "text": "Endpoints MUST validate that received transport parameters match received connection ID values.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.3-p1396-s3", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p346", "text": "Including connection ID values in transport parameters and verifying them ensures that an attacker cannot influence the choice of connection ID for a successful connection by injecting packets carrying attacker-chosen connection IDs during the handshake. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1397-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p347", "text": "An endpoint MUST treat the absence of the initial_source_connection_id transport parameter from either endpoint or the absence of the original_destination_connection_id transport parameter from the server as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.3-p1398-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p348", "text": "An endpoint MUST treat the following as a connection error of type TRANSPORT_PARAMETER_ERROR or PROTOCOL_VIOLATION: ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.3-p1399-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p349", "text": "absence of the retry_source_connection_id transport parameter from the server after receiving a Retry packet, ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1400-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p350", "text": "presence of the retry_source_connection_id transport parameter when no Retry packet was received, or ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.3-p1401-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p351", "text": "a mismatch between values received from a peer in these transport parameters and the value sent in the corresponding Destination or Source Connection ID fields of Initial packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.3-p1402-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p352", "text": "If a zero-length connection ID is selected, the corresponding transport parameter is included with a zero-length value. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.3-p1403-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p353", "text": "Figure 7 shows the connection IDs (with DCID=Destination Connection ID, SCID=Source Connection ID) that are used in a complete handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1404-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p353", "text": "The exchange of Initial packets is shown, plus the later exchange of 1-RTT packets that includes the connection ID established during the handshake. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1405-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p354", "text": "Client Server Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1406-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p354", "text": "DCID=S1, SCID=C1 -> <- Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1407-s3", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p354", "text": "DCID=C1, SCID=S3 ... 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1408-s4", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p354", "text": "DCID=S3 -> <- 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1409-s5", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p354", "text": "DCID=C1 Figure 7 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1410-s6", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p354", "text": "Use of Connection IDs in a Handshake", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1411-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p355", "text": "Client Server Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1412-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p355", "text": "DCID=S1, SCID=C1 -> <- Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1413-s3", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p355", "text": "DCID=C1, SCID=S3 ... 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1414-s4", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p355", "text": "DCID=S3 -> <- 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1415-s5", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p355", "text": "DCID=C1", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1416-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p356", "text": "Client Server Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1417-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p356", "text": "DCID=S1, SCID=C1 -> <- Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1418-s3", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p356", "text": "DCID=C1, SCID=S3 ... 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1419-s4", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p356", "text": "DCID=S3 -> <- 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1420-s5", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p356", "text": "DCID=C1", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1421-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p357", "text": "Figure 7 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1422-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p357", "text": "Use of Connection IDs in a Handshake", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1423-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p358", "text": "Figure 8 shows a similar handshake that includes a Retry packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1424-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p359", "text": "Client Server Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1425-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p359", "text": "DCID=S1, SCID=C1 -> <- Retry:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1426-s3", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p359", "text": "DCID=C1, SCID=S2 Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1427-s4", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p359", "text": "DCID=S2, SCID=C1 -> <- Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1428-s5", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p359", "text": "DCID=C1, SCID=S3 ... 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1429-s6", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p359", "text": "DCID=S3 -> <- 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1430-s7", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p359", "text": "DCID=C1 Figure 8 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1431-s8", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p359", "text": "Use of Connection IDs in a Handshake with Retry", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1432-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p360", "text": "Client Server Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1433-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p360", "text": "DCID=S1, SCID=C1 -> <- Retry:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1434-s3", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p360", "text": "DCID=C1, SCID=S2 Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1435-s4", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p360", "text": "DCID=S2, SCID=C1 -> <- Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1436-s5", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p360", "text": "DCID=C1, SCID=S3 ... 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1437-s6", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p360", "text": "DCID=S3 -> <- 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1438-s7", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p360", "text": "DCID=C1", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1439-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p361", "text": "Client Server Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1440-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p361", "text": "DCID=S1, SCID=C1 -> <- Retry:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1441-s3", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p361", "text": "DCID=C1, SCID=S2 Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1442-s4", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p361", "text": "DCID=S2, SCID=C1 -> <- Initial:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1443-s5", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p361", "text": "DCID=C1, SCID=S3 ... 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1444-s6", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p361", "text": "DCID=S3 -> <- 1-RTT:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1445-s7", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p361", "text": "DCID=C1", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1446-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p362", "text": "Figure 8 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1447-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p362", "text": "Use of Connection IDs in a Handshake with Retry", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1448-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p363", "text": "In both cases (Figures 7 and 8 ), the client sets the value of the initial_source_connection_id transport parameter to C1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1449-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p364", "text": "When the handshake does not include a Retry ( Figure 7 ), the server sets original_destination_connection_id to S1 (note that this value is chosen by the client) and initial_source_connection_id to S3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.3-p1450-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p364", "text": "In this case, the server does not include a retry_source_connection_id transport parameter. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1451-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p365", "text": "When the handshake includes a Retry ( Figure 8 ), the server sets original_destination_connection_id to S1 , retry_source_connection_id to S2 , and initial_source_connection_id to S3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.3-p1452-s1", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "7.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1453-s2", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Transport Parameters During connection establishment, both endpoints make authenticated declarations of their transport parameters.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1454-s3", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Endpoints are required to comply with the restrictions that each parameter defines; the description of each parameter includes rules for its handling. ¶ Transport parameters are declarations that are made unilaterally by each endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1455-s4", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Each endpoint can choose values for transport parameters independent of the values chosen by its peer. ¶ The encoding of the transport parameters is detailed in Section 18 . ¶ QUIC includes the encoded transport parameters in the cryptographic handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1456-s5", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Once the handshake completes, the transport parameters declared by the peer are available.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1457-s6", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Each endpoint validates the values provided by its peer. ¶ Definitions for each of the defined transport parameters are included in Section 18.2 . ¶ An endpoint MUST treat receipt of a transport parameter with an invalid value as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶ An endpoint MUST NOT send a parameter more than once in a given transport parameters extension.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.3-p1458-s7", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "An endpoint SHOULD treat receipt of duplicate transport parameters as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶ Endpoints use transport parameters to authenticate the negotiation of connection IDs during the handshake; see Section 7.3 . ¶ ALPN (see [ ALPN ] ) allows clients to offer multiple application protocols during connection establishment.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.3-p1459-s8", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "The transport parameters that a client includes during the handshake apply to all application protocols that the client offers.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1460-s9", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Application protocols can recommend values for transport parameters, such as the initial flow control limits.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7.3-p1461-s10", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "However, application protocols that set constraints on values for transport parameters could make it impossible for a client to offer multiple application protocols if these constraints conflict. ¶ 7.4.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.3-p1462-s11", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Values of Transport Parameters for 0-RTT Using 0-RTT depends on both client and server using protocol parameters that were negotiated from a previous connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1463-s12", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "To enable 0-RTT, endpoints store the values of the server transport parameters with any session tickets it receives on the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.3-p1464-s13", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Endpoints also store any information required by the application protocol or cryptographic handshake; see Section 4.6 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1465-s14", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "The values of stored transport parameters are used when attempting 0-RTT using the session tickets. ¶ Remembered transport parameters apply to the new connection until the handshake completes and the client starts sending 1-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.3-p1466-s15", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Once the handshake completes, the client uses the transport parameters established in the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1467-s16", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Not all transport parameters are remembered, as some do not apply to future connections or they have no effect on the use of 0-RTT. ¶ The definition of a new transport parameter ( Section 7.4.2 ) MUST specify whether storing the transport parameter for 0-RTT is mandatory, optional, or prohibited.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.3-p1468-s17", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "A client need not store a transport parameter it cannot process. ¶ A client MUST NOT use remembered values for the following parameters: ack_delay_exponent, max_ack_delay, initial_source_connection_id, original_destination_connection_id, preferred_address, retry_source_connection_id, and stateless_reset_token.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "7.3-p1469-s18", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "The client MUST use the server's new values in the handshake instead; if the server does not provide new values, the default values are used. ¶ A client that attempts to send 0-RTT data MUST remember all other transport parameters used by the server that it is able to process.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.3-p1470-s19", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "The server can remember these transport parameters or can store an integrity-protected copy of the values in the ticket and recover the information when accepting 0-RTT data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.3-p1471-s20", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "A server uses the transport parameters in determining whether to accept 0-RTT data. ¶ If 0-RTT data is accepted by the server, the server MUST NOT reduce any limits or alter any values that might be violated by the client with its 0-RTT data.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.3-p1472-s21", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "In particular, a server that accepts 0-RTT data MUST NOT set values for the following parameters ( Section 18.2 ) that are smaller than the remembered values of the parameters. ¶ active_connection_id_limit ¶ initial_max_data ¶ initial_max_stream_data_bidi_local ¶ initial_max_stream_data_bidi_remote ¶ initial_max_stream_data_uni ¶ initial_max_streams_bidi ¶ initial_max_streams_uni ¶ Omitting or setting a zero value for certain transport parameters can result in 0-RTT data being enabled but not usable.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.3-p1473-s22", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "The applicable subset of transport parameters that permit the sending of application data SHOULD be set to non-zero values for 0-RTT.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.3-p1474-s23", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "This includes initial_max_data and either (1) initial_max_streams_bidi and initial_max_stream_data_bidi_remote or (2) initial_max_streams_uni and initial_max_stream_data_uni. ¶ A server might provide larger initial stream flow control limits for streams than the remembered values that a client applies when sending 0-RTT.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.3-p1475-s24", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Once the handshake completes, the client updates the flow control limits on all sending streams using the updated values of initial_max_stream_data_bidi_remote and initial_max_stream_data_uni. ¶ A server MAY store and recover the previously sent values of the max_idle_timeout, max_udp_payload_size, and disable_active_migration parameters and reject 0-RTT if it selects smaller values.", "facet": "flow_control", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.3-p1476-s25", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Lowering the values of these parameters while also accepting 0-RTT data could degrade the performance of the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1477-s26", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Specifically, lowering the max_udp_payload_size could result in dropped packets, leading to worse performance compared to rejecting 0-RTT data outright. ¶ A server MUST reject 0-RTT data if the restored values for transport parameters cannot be supported. ¶ When sending frames in 0-RTT packets, a client MUST only use remembered transport parameters; importantly, it MUST NOT use updated values that it learns from the server's updated transport parameters or from frames received in 1-RTT packets.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.3-p1478-s27", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Updated values of transport parameters from the handshake apply only to 1-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1479-s28", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "For instance, flow control limits from remembered transport parameters apply to all 0-RTT packets even if those values are increased by the handshake or by frames sent in 1-RTT packets.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.3-p1480-s29", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "A server MAY treat the use of updated transport parameters in 0-RTT as a connection error of type PROTOCOL_VIOLATION. ¶ 7.4.2.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.3-p1481-s30", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "New Transport Parameters New transport parameters can be used to negotiate new protocol behavior.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1482-s31", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "An endpoint MUST ignore transport parameters that it does not support.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.3-p1483-s32", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "The absence of a transport parameter therefore disables any optional protocol feature that is negotiated using the parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1484-s33", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "As described in Section 18.1 , some identifiers are reserved in order to exercise this requirement. ¶ A client that does not understand a transport parameter can discard it and attempt 0-RTT on subsequent connections.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1485-s34", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "However, if the client adds support for a discarded transport parameter, it risks violating the constraints that the transport parameter establishes if it attempts 0-RTT.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.3-p1486-s35", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "New transport parameters can avoid this problem by setting a default of the most conservative value.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.3-p1487-s36", "section": "7.3", "anchor": "#name-authenticating-connection-i", "para_id": "7.3-p366", "text": "Clients can avoid this problem by remembering all parameters, even those not currently supported. ¶ New transport parameters can be registered according to the rules in Section 22.3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1488-s1", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p367", "text": "During connection establishment, both endpoints make authenticated declarations of their transport parameters.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1489-s2", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p367", "text": "Endpoints are required to comply with the restrictions that each parameter defines; the description of each parameter includes rules for its handling. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1490-s1", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p368", "text": "Transport parameters are declarations that are made unilaterally by each endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1491-s2", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p368", "text": "Each endpoint can choose values for transport parameters independent of the values chosen by its peer. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1492-s1", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p369", "text": "The encoding of the transport parameters is detailed in Section 18 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1493-s1", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p370", "text": "QUIC includes the encoded transport parameters in the cryptographic handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1494-s2", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p370", "text": "Once the handshake completes, the transport parameters declared by the peer are available.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1495-s3", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p370", "text": "Each endpoint validates the values provided by its peer. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1496-s1", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p371", "text": "Definitions for each of the defined transport parameters are included in Section 18.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1497-s1", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p372", "text": "An endpoint MUST treat receipt of a transport parameter with an invalid value as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.4-p1498-s1", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p373", "text": "An endpoint MUST NOT send a parameter more than once in a given transport parameters extension.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.4-p1499-s2", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p373", "text": "An endpoint SHOULD treat receipt of duplicate transport parameters as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.4-p1500-s1", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p374", "text": "Endpoints use transport parameters to authenticate the negotiation of connection IDs during the handshake; see Section 7.3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1501-s1", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p375", "text": "ALPN (see [ ALPN ] ) allows clients to offer multiple application protocols during connection establishment.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1502-s2", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p375", "text": "The transport parameters that a client includes during the handshake apply to all application protocols that the client offers.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1503-s3", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p375", "text": "Application protocols can recommend values for transport parameters, such as the initial flow control limits.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7.4-p1504-s4", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p375", "text": "However, application protocols that set constraints on values for transport parameters could make it impossible for a client to offer multiple application protocols if these constraints conflict. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.4-p1505-s1", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "7.4.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1506-s2", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "Values of Transport Parameters for 0-RTT Using 0-RTT depends on both client and server using protocol parameters that were negotiated from a previous connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1507-s3", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "To enable 0-RTT, endpoints store the values of the server transport parameters with any session tickets it receives on the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.4-p1508-s4", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "Endpoints also store any information required by the application protocol or cryptographic handshake; see Section 4.6 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1509-s5", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "The values of stored transport parameters are used when attempting 0-RTT using the session tickets. ¶ Remembered transport parameters apply to the new connection until the handshake completes and the client starts sending 1-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.4-p1510-s6", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "Once the handshake completes, the client uses the transport parameters established in the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1511-s7", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "Not all transport parameters are remembered, as some do not apply to future connections or they have no effect on the use of 0-RTT. ¶ The definition of a new transport parameter ( Section 7.4.2 ) MUST specify whether storing the transport parameter for 0-RTT is mandatory, optional, or prohibited.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.4-p1512-s8", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "A client need not store a transport parameter it cannot process. ¶ A client MUST NOT use remembered values for the following parameters: ack_delay_exponent, max_ack_delay, initial_source_connection_id, original_destination_connection_id, preferred_address, retry_source_connection_id, and stateless_reset_token.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "7.4-p1513-s9", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "The client MUST use the server's new values in the handshake instead; if the server does not provide new values, the default values are used. ¶ A client that attempts to send 0-RTT data MUST remember all other transport parameters used by the server that it is able to process.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.4-p1514-s10", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "The server can remember these transport parameters or can store an integrity-protected copy of the values in the ticket and recover the information when accepting 0-RTT data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.4-p1515-s11", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "A server uses the transport parameters in determining whether to accept 0-RTT data. ¶ If 0-RTT data is accepted by the server, the server MUST NOT reduce any limits or alter any values that might be violated by the client with its 0-RTT data.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.4-p1516-s12", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "In particular, a server that accepts 0-RTT data MUST NOT set values for the following parameters ( Section 18.2 ) that are smaller than the remembered values of the parameters. ¶ active_connection_id_limit ¶ initial_max_data ¶ initial_max_stream_data_bidi_local ¶ initial_max_stream_data_bidi_remote ¶ initial_max_stream_data_uni ¶ initial_max_streams_bidi ¶ initial_max_streams_uni ¶ Omitting or setting a zero value for certain transport parameters can result in 0-RTT data being enabled but not usable.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.4-p1517-s13", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "The applicable subset of transport parameters that permit the sending of application data SHOULD be set to non-zero values for 0-RTT.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.4-p1518-s14", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "This includes initial_max_data and either (1) initial_max_streams_bidi and initial_max_stream_data_bidi_remote or (2) initial_max_streams_uni and initial_max_stream_data_uni. ¶ A server might provide larger initial stream flow control limits for streams than the remembered values that a client applies when sending 0-RTT.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.4-p1519-s15", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "Once the handshake completes, the client updates the flow control limits on all sending streams using the updated values of initial_max_stream_data_bidi_remote and initial_max_stream_data_uni. ¶ A server MAY store and recover the previously sent values of the max_idle_timeout, max_udp_payload_size, and disable_active_migration parameters and reject 0-RTT if it selects smaller values.", "facet": "flow_control", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.4-p1520-s16", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "Lowering the values of these parameters while also accepting 0-RTT data could degrade the performance of the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1521-s17", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "Specifically, lowering the max_udp_payload_size could result in dropped packets, leading to worse performance compared to rejecting 0-RTT data outright. ¶ A server MUST reject 0-RTT data if the restored values for transport parameters cannot be supported. ¶ When sending frames in 0-RTT packets, a client MUST only use remembered transport parameters; importantly, it MUST NOT use updated values that it learns from the server's updated transport parameters or from frames received in 1-RTT packets.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.4-p1522-s18", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "Updated values of transport parameters from the handshake apply only to 1-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4-p1523-s19", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "For instance, flow control limits from remembered transport parameters apply to all 0-RTT packets even if those values are increased by the handshake or by frames sent in 1-RTT packets.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.4-p1524-s20", "section": "7.4", "anchor": "#name-transport-parameters", "para_id": "7.4-p376", "text": "A server MAY treat the use of updated transport parameters in 0-RTT as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.4.1-p1525-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p377", "text": "Using 0-RTT depends on both client and server using protocol parameters that were negotiated from a previous connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1526-s2", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p377", "text": "To enable 0-RTT, endpoints store the values of the server transport parameters with any session tickets it receives on the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.4.1-p1527-s3", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p377", "text": "Endpoints also store any information required by the application protocol or cryptographic handshake; see Section 4.6 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1528-s4", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p377", "text": "The values of stored transport parameters are used when attempting 0-RTT using the session tickets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.4.1-p1529-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p378", "text": "Remembered transport parameters apply to the new connection until the handshake completes and the client starts sending 1-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1530-s2", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p378", "text": "Once the handshake completes, the client uses the transport parameters established in the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1531-s3", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p378", "text": "Not all transport parameters are remembered, as some do not apply to future connections or they have no effect on the use of 0-RTT. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1532-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p379", "text": "The definition of a new transport parameter ( Section 7.4.2 ) MUST specify whether storing the transport parameter for 0-RTT is mandatory, optional, or prohibited.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.4.1-p1533-s2", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p379", "text": "A client need not store a transport parameter it cannot process. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1534-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p380", "text": "A client MUST NOT use remembered values for the following parameters: ack_delay_exponent, max_ack_delay, initial_source_connection_id, original_destination_connection_id, preferred_address, retry_source_connection_id, and stateless_reset_token.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "7.4.1-p1535-s2", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p380", "text": "The client MUST use the server's new values in the handshake instead; if the server does not provide new values, the default values are used. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.4.1-p1536-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p381", "text": "A client that attempts to send 0-RTT data MUST remember all other transport parameters used by the server that it is able to process.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.4.1-p1537-s2", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p381", "text": "The server can remember these transport parameters or can store an integrity-protected copy of the values in the ticket and recover the information when accepting 0-RTT data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.4.1-p1538-s3", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p381", "text": "A server uses the transport parameters in determining whether to accept 0-RTT data. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1539-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p382", "text": "If 0-RTT data is accepted by the server, the server MUST NOT reduce any limits or alter any values that might be violated by the client with its 0-RTT data.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.4.1-p1540-s2", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p382", "text": "In particular, a server that accepts 0-RTT data MUST NOT set values for the following parameters ( Section 18.2 ) that are smaller than the remembered values of the parameters. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.4.1-p1541-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p383", "text": "active_connection_id_limit ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1542-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p384", "text": "initial_max_data ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1543-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p385", "text": "initial_max_stream_data_bidi_local ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1544-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p386", "text": "initial_max_stream_data_bidi_remote ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1545-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p387", "text": "initial_max_stream_data_uni ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1546-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p388", "text": "initial_max_streams_bidi ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1547-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p389", "text": "initial_max_streams_uni ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1548-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p390", "text": "Omitting or setting a zero value for certain transport parameters can result in 0-RTT data being enabled but not usable.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1549-s2", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p390", "text": "The applicable subset of transport parameters that permit the sending of application data SHOULD be set to non-zero values for 0-RTT.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.4.1-p1550-s3", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p390", "text": "This includes initial_max_data and either (1) initial_max_streams_bidi and initial_max_stream_data_bidi_remote or (2) initial_max_streams_uni and initial_max_stream_data_uni. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1551-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p391", "text": "A server might provide larger initial stream flow control limits for streams than the remembered values that a client applies when sending 0-RTT.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.4.1-p1552-s2", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p391", "text": "Once the handshake completes, the client updates the flow control limits on all sending streams using the updated values of initial_max_stream_data_bidi_remote and initial_max_stream_data_uni. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7.4.1-p1553-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p392", "text": "A server MAY store and recover the previously sent values of the max_idle_timeout, max_udp_payload_size, and disable_active_migration parameters and reject 0-RTT if it selects smaller values.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.4.1-p1554-s2", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p392", "text": "Lowering the values of these parameters while also accepting 0-RTT data could degrade the performance of the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1555-s3", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p392", "text": "Specifically, lowering the max_udp_payload_size could result in dropped packets, leading to worse performance compared to rejecting 0-RTT data outright. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1556-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p393", "text": "A server MUST reject 0-RTT data if the restored values for transport parameters cannot be supported. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.4.1-p1557-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p394", "text": "When sending frames in 0-RTT packets, a client MUST only use remembered transport parameters; importantly, it MUST NOT use updated values that it learns from the server's updated transport parameters or from frames received in 1-RTT packets.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.4.1-p1558-s2", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p394", "text": "Updated values of transport parameters from the handshake apply only to 1-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1559-s3", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p394", "text": "For instance, flow control limits from remembered transport parameters apply to all 0-RTT packets even if those values are increased by the handshake or by frames sent in 1-RTT packets.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.4.1-p1560-s4", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p394", "text": "A server MAY treat the use of updated transport parameters in 0-RTT as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.4.1-p1561-s1", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p395", "text": "7.4.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1562-s2", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p395", "text": "New Transport Parameters New transport parameters can be used to negotiate new protocol behavior.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1563-s3", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p395", "text": "An endpoint MUST ignore transport parameters that it does not support.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.4.1-p1564-s4", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p395", "text": "The absence of a transport parameter therefore disables any optional protocol feature that is negotiated using the parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1565-s5", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p395", "text": "As described in Section 18.1 , some identifiers are reserved in order to exercise this requirement. ¶ A client that does not understand a transport parameter can discard it and attempt 0-RTT on subsequent connections.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1566-s6", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p395", "text": "However, if the client adds support for a discarded transport parameter, it risks violating the constraints that the transport parameter establishes if it attempts 0-RTT.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.4.1-p1567-s7", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p395", "text": "New transport parameters can avoid this problem by setting a default of the most conservative value.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.1-p1568-s8", "section": "7.4.1", "anchor": "#name-values-of-transport-paramet", "para_id": "7.4.1-p395", "text": "Clients can avoid this problem by remembering all parameters, even those not currently supported. ¶ New transport parameters can be registered according to the rules in Section 22.3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.2-p1569-s1", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p396", "text": "New transport parameters can be used to negotiate new protocol behavior.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.2-p1570-s2", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p396", "text": "An endpoint MUST ignore transport parameters that it does not support.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.4.2-p1571-s3", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p396", "text": "The absence of a transport parameter therefore disables any optional protocol feature that is negotiated using the parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.2-p1572-s4", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p396", "text": "As described in Section 18.1 , some identifiers are reserved in order to exercise this requirement. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.2-p1573-s1", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p397", "text": "A client that does not understand a transport parameter can discard it and attempt 0-RTT on subsequent connections.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.2-p1574-s2", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p397", "text": "However, if the client adds support for a discarded transport parameter, it risks violating the constraints that the transport parameter establishes if it attempts 0-RTT.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.4.2-p1575-s3", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p397", "text": "New transport parameters can avoid this problem by setting a default of the most conservative value.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.2-p1576-s4", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p397", "text": "Clients can avoid this problem by remembering all parameters, even those not currently supported. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.2-p1577-s1", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p398", "text": "New transport parameters can be registered according to the rules in Section 22.3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.2-p1578-s1", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p399", "text": "7.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.2-p1579-s2", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p399", "text": "Cryptographic Message Buffering Implementations need to maintain a buffer of CRYPTO data received out of order.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.4.2-p1580-s3", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p399", "text": "Because there is no flow control of CRYPTO frames, an endpoint could potentially force its peer to buffer an unbounded amount of data. ¶ Implementations MUST support buffering at least 4096 bytes of data received in out-of-order CRYPTO frames.", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.4.2-p1581-s4", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p399", "text": "Endpoints MAY choose to allow more data to be buffered during the handshake.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.4.2-p1582-s5", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p399", "text": "A larger limit during the handshake could allow for larger keys or credentials to be exchanged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.4.2-p1583-s6", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p399", "text": "An endpoint's buffer size does not need to remain constant during the life of the connection. ¶ Being unable to buffer CRYPTO frames during the handshake can lead to a connection failure.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7.4.2-p1584-s7", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p399", "text": "If an endpoint's buffer is exceeded during the handshake, it can expand its buffer temporarily to complete the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.4.2-p1585-s8", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p399", "text": "If an endpoint does not expand its buffer, it MUST close the connection with a CRYPTO_BUFFER_EXCEEDED error code. ¶ Once the handshake completes, if an endpoint is unable to buffer all data in a CRYPTO frame, it MAY discard that CRYPTO frame and all CRYPTO frames received in the future, or it MAY close the connection with a CRYPTO_BUFFER_EXCEEDED error code.", "facet": "frames", "normative": true, "modalities": ["MUST", "MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.4.2-p1586-s9", "section": "7.4.2", "anchor": "#name-new-transport-parameters", "para_id": "7.4.2-p399", "text": "Packets containing discarded CRYPTO frames MUST be acknowledged because the packet has been received and processed by the transport even though the CRYPTO frame was discarded. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1587-s1", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p400", "text": "Implementations need to maintain a buffer of CRYPTO data received out of order.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1588-s2", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p400", "text": "Because there is no flow control of CRYPTO frames, an endpoint could potentially force its peer to buffer an unbounded amount of data. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7.5-p1589-s1", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p401", "text": "Implementations MUST support buffering at least 4096 bytes of data received in out-of-order CRYPTO frames.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1590-s2", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p401", "text": "Endpoints MAY choose to allow more data to be buffered during the handshake.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1591-s3", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p401", "text": "A larger limit during the handshake could allow for larger keys or credentials to be exchanged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1592-s4", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p401", "text": "An endpoint's buffer size does not need to remain constant during the life of the connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1593-s1", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p402", "text": "Being unable to buffer CRYPTO frames during the handshake can lead to a connection failure.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7.5-p1594-s2", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p402", "text": "If an endpoint's buffer is exceeded during the handshake, it can expand its buffer temporarily to complete the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1595-s3", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p402", "text": "If an endpoint does not expand its buffer, it MUST close the connection with a CRYPTO_BUFFER_EXCEEDED error code. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1596-s1", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p403", "text": "Once the handshake completes, if an endpoint is unable to buffer all data in a CRYPTO frame, it MAY discard that CRYPTO frame and all CRYPTO frames received in the future, or it MAY close the connection with a CRYPTO_BUFFER_EXCEEDED error code.", "facet": "frames", "normative": true, "modalities": ["MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1597-s2", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p403", "text": "Packets containing discarded CRYPTO frames MUST be acknowledged because the packet has been received and processed by the transport even though the CRYPTO frame was discarded. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1598-s1", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "8.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1599-s2", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Address Validation Address validation ensures that an endpoint cannot be used for a traffic amplification attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1600-s3", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "In such an attack, a packet is sent to a server with spoofed source address information that identifies a victim.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1601-s4", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "If a server generates more or larger packets in response to that packet, the attacker can use the server to send more data toward the victim than it would be able to send on its own. ¶ The primary defense against amplification attacks is verifying that a peer is able to receive packets at the transport address that it claims.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1602-s5", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Therefore, after receiving packets from an address that is not yet validated, an endpoint MUST limit the amount of data it sends to the unvalidated address to three times the amount of data received from that address.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1603-s6", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "This limit on the size of responses is known as the anti-amplification limit. ¶ Address validation is performed both during connection establishment (see Section 8.1 ) and during connection migration (see Section 8.2 ). ¶ 8.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1604-s7", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Address Validation during Connection Establishment Connection establishment implicitly provides address validation for both endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1605-s8", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "In particular, receipt of a packet protected with Handshake keys confirms that the peer successfully processed an Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1606-s9", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Once an endpoint has successfully processed a Handshake packet from the peer, it can consider the peer address to have been validated. ¶ Additionally, an endpoint MAY consider the peer address validated if the peer uses a connection ID chosen by the endpoint and the connection ID contains at least 64 bits of entropy. ¶ For the client, the value of the Destination Connection ID field in its first Initial packet allows it to validate the server address as a part of successfully processing any packet.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1607-s10", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Initial packets from the server are protected with keys that are derived from this value (see Section 5.2 of [ QUIC-TLS ] ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1608-s11", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Alternatively, the value is echoed by the server in Version Negotiation packets ( Section 6 ) or included in the Integrity Tag in Retry packets ( Section 5.8 of [ QUIC-TLS ] ). ¶ Prior to validating the client address, servers MUST NOT send more than three times as many bytes as the number of bytes they have received.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1609-s12", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "This limits the magnitude of any amplification attack that can be mounted using spoofed source addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1610-s13", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "For the purposes of avoiding amplification prior to address validation, servers MUST count all of the payload bytes received in datagrams that are uniquely attributed to a single connection.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1611-s14", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "This includes datagrams that contain packets that are successfully processed and datagrams that contain packets that are all discarded. ¶ Clients MUST ensure that UDP datagrams containing Initial packets have UDP payloads of at least 1200 bytes, adding PADDING frames as necessary.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "7.5-p1612-s15", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "A client that sends padded datagrams allows the server to send more data prior to completing address validation. ¶ Loss of an Initial or Handshake packet from the server can cause a deadlock if the client does not send additional Initial or Handshake packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1613-s16", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "A deadlock could occur when the server reaches its anti-amplification limit and the client has received acknowledgments for all the data it has sent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1614-s17", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "In this case, when the client has no reason to send additional packets, the server will be unable to send more data because it has not validated the client's address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1615-s18", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "To prevent this deadlock, clients MUST send a packet on a Probe Timeout (PTO); see Section 6.2 of [ QUIC-RECOVERY ] .", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1616-s19", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Specifically, the client MUST send an Initial packet in a UDP datagram that contains at least 1200 bytes if it does not have Handshake keys, and otherwise send a Handshake packet. ¶ A server might wish to validate the client address before starting the cryptographic handshake.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1617-s20", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "QUIC uses a token in the Initial packet to provide address validation prior to completing the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1618-s21", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "This token is delivered to the client during connection establishment with a Retry packet (see Section 8.1.2 ) or in a previous connection using the NEW_TOKEN frame (see Section 8.1.3 ). ¶ In addition to sending limits imposed prior to address validation, servers are also constrained in what they can send by the limits set by the congestion controller.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.5-p1619-s22", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Clients are only constrained by the congestion controller. ¶ 8.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1620-s23", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Token Construction A token sent in a NEW_TOKEN frame or a Retry packet MUST be constructed in a way that allows the server to identify how it was provided to a client.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "7.5-p1621-s24", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "These tokens are carried in the same field but require different handling from servers. ¶ 8.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1622-s25", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Address Validation Using Retry Packets Upon receiving the client's Initial packet, the server can request address validation by sending a Retry packet ( Section 17.2.5 ) containing a token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1623-s26", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "This token MUST be repeated by the client in all Initial packets it sends for that connection after it receives the Retry packet. ¶ In response to processing an Initial packet containing a token that was provided in a Retry packet, a server cannot send another Retry packet; it can only refuse the connection or permit it to proceed. ¶ As long as it is not possible for an attacker to generate a valid token for its own address (see Section 8.1.4 ) and the client is able to return that token, it proves to the server that it received the token. ¶ A server can also use a Retry packet to defer the state and processing costs of connection establishment.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1624-s27", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Requiring the server to provide a different connection ID, along with the original_destination_connection_id transport parameter defined in Section 18.2 , forces the server to demonstrate that it, or an entity it cooperates with, received the original Initial packet from the client.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1625-s28", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Providing a different connection ID also grants a server some control over how subsequent packets are routed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1626-s29", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "This can be used to direct connections to a different server instance. ¶ If a server receives a client Initial that contains an invalid Retry token but is otherwise valid, it knows the client will not accept another Retry token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1627-s30", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "The server can discard such a packet and allow the client to time out to detect handshake failure, but that could impose a significant latency penalty on the client.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1628-s31", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Instead, the server SHOULD immediately close ( Section 10.2 ) the connection with an INVALID_TOKEN error.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1629-s32", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Note that a server has not established any state for the connection at this point and so does not enter the closing period. ¶ A flow showing the use of a Retry packet is shown in Figure 9 . ¶ Client Server Initial[0]:", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7.5-p1630-s33", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "CRYPTO[CH] -> <- Retry+Token Initial+Token[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1631-s34", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "CRYPTO[CH] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1632-s35", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "CRYPTO[SH] ACK[1] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1633-s36", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "CRYPTO[EE, CERT, CV, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1634-s37", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "STREAM[1, \"...\"] Figure 9 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1635-s38", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Example Handshake with Retry 8.1.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1636-s39", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Address Validation for Future Connections A server MAY provide clients with an address validation token during one connection that can be used on a subsequent connection.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1637-s40", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Address validation is especially important with 0-RTT because a server potentially sends a significant amount of data to a client in response to 0-RTT data. ¶ The server uses the NEW_TOKEN frame ( Section 19.7 ) to provide the client with an address validation token that can be used to validate future connections.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.5-p1638-s41", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "In a future connection, the client includes this token in Initial packets to provide address validation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1639-s42", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "The client MUST include the token in all Initial packets it sends, unless a Retry replaces the token with a newer one.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1640-s43", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "The client MUST NOT use the token provided in a Retry for future connections.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1641-s44", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Servers MAY discard any Initial packet that does not carry the expected token. ¶ Unlike the token that is created for a Retry packet, which is used immediately, the token sent in the NEW_TOKEN frame can be used after some period of time has passed.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "7.5-p1642-s45", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Thus, a token SHOULD have an expiration time, which could be either an explicit expiration time or an issued timestamp that can be used to dynamically calculate the expiration time.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1643-s46", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "A server can store the expiration time or include it in an encrypted form in the token. ¶ A token issued with NEW_TOKEN MUST NOT include information that would allow values to be linked by an observer to the connection on which it was issued.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1644-s47", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "For example, it cannot include the previous connection ID or addressing information, unless the values are encrypted.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1645-s48", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "A server MUST ensure that every NEW_TOKEN frame it sends is unique across all clients, with the exception of those sent to repair losses of previously sent NEW_TOKEN frames.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1646-s49", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Information that allows the server to distinguish between tokens from Retry and NEW_TOKEN MAY be accessible to entities other than the server. ¶ It is unlikely that the client port number is the same on two different connections; validating the port is therefore unlikely to be successful. ¶ A token received in a NEW_TOKEN frame is applicable to any server that the connection is considered authoritative for (e.g., server names included in the certificate).", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1647-s50", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "When connecting to a server for which the client retains an applicable and unused token, it SHOULD include that token in the Token field of its Initial packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1648-s51", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Including a token might allow the server to validate the client address without an additional round trip.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1649-s52", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "A client MUST NOT include a token that is not applicable to the server that it is connecting to, unless the client has the knowledge that the server that issued the token and the server the client is connecting to are jointly managing the tokens.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1650-s53", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "A client MAY use a token from any previous connection to that server. ¶ A token allows a server to correlate activity between the connection where the token was issued and any connection where it is used.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1651-s54", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Clients that want to break continuity of identity with a server can discard tokens provided using the NEW_TOKEN frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7.5-p1652-s55", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "In comparison, a token obtained in a Retry packet MUST be used immediately during the connection attempt and cannot be used in subsequent connection attempts. ¶ A client SHOULD NOT reuse a token from a NEW_TOKEN frame for different connection attempts.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "7.5-p1653-s56", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Reusing a token allows connections to be linked by entities on the network path; see Section 9.5 . ¶ Clients might receive multiple tokens on a single connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1654-s57", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Aside from preventing linkability, any token can be used in any connection attempt.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1655-s58", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Servers can send additional tokens to either enable address validation for multiple connection attempts or replace older tokens that might become invalid.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1656-s59", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "For a client, this ambiguity means that sending the most recent unused token is most likely to be effective.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1657-s60", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Though saving and using older tokens have no negative consequences, clients can regard older tokens as being less likely to be useful to the server for address validation. ¶ When a server receives an Initial packet with an address validation token, it MUST attempt to validate the token, unless it has already completed address validation.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1658-s61", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "If the token is invalid, then the server SHOULD proceed as if the client did not have a validated address, including potentially sending a Retry packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1659-s62", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Tokens provided with NEW_TOKEN frames and Retry packets can be distinguished by servers (see Section 8.1.1 ), and the latter can be validated more strictly.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7.5-p1660-s63", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "If the validation succeeds, the server SHOULD then allow the handshake to proceed. ¶ Note:", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1661-s64", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "The rationale for treating the client as unvalidated rather than discarding the packet is that the client might have received the token in a previous connection using the NEW_TOKEN frame, and if the server has lost state, it might be unable to validate the token at all, leading to connection failure if the packet is discarded. ¶ In a stateless design, a server can use encrypted and authenticated tokens to pass information to clients that the server can later recover and use to validate a client address.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.5-p1662-s65", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Tokens are not integrated into the cryptographic handshake, and so they are not authenticated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1663-s66", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "For instance, a client might be able to reuse a token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1664-s67", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "To avoid attacks that exploit this property, a server can limit its use of tokens to only the information needed to validate client addresses. ¶ Clients MAY use tokens obtained on one connection for any connection attempt using the same version.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1665-s68", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "When selecting a token to use, clients do not need to consider other properties of the connection that is being attempted, including the choice of possible application protocols, session tickets, or other connection properties. ¶ 8.1.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1666-s69", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Address Validation Token Integrity An address validation token MUST be difficult to guess.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1667-s70", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Including a random value with at least 128 bits of entropy in the token would be sufficient, but this depends on the server remembering the value it sends to clients. ¶ A token-based scheme allows the server to offload any state associated with validation to the client.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.5-p1668-s71", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "For this design to work, the token MUST be covered by integrity protection against modification or falsification by clients.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1669-s72", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Without integrity protection, malicious clients could generate or guess values for tokens that would be accepted by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1670-s73", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Only the server requires access to the integrity protection key for tokens. ¶ There is no need for a single well-defined format for the token because the server that generates the token also consumes it.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1671-s74", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Tokens sent in Retry packets SHOULD include information that allows the server to verify that the source IP address and port in client packets remain constant. ¶ Tokens sent in NEW_TOKEN frames MUST include information that allows the server to verify that the client IP address has not changed from when the token was issued.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1672-s75", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Servers can use tokens from NEW_TOKEN frames in deciding not to send a Retry packet, even if the client address has changed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.5-p1673-s76", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "If the client IP address has changed, the server MUST adhere to the anti-amplification limit; see Section 8 .", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1674-s77", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Note that in the presence of NAT, this requirement might be insufficient to protect other hosts that share the NAT from amplification attacks. ¶ Attackers could replay tokens to use servers as amplifiers in DDoS attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1675-s78", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "To protect against such attacks, servers MUST ensure that replay of tokens is prevented or limited.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1676-s79", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Servers SHOULD ensure that tokens sent in Retry packets are only accepted for a short time, as they are returned immediately by clients.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "7.5-p1677-s80", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Tokens that are provided in NEW_TOKEN frames ( Section 19.7 ) need to be valid for longer but SHOULD NOT be accepted multiple times.", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "7.5-p1678-s81", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Servers are encouraged to allow tokens to be used only once, if possible; tokens MAY include additional information about clients to further narrow applicability or reuse. ¶ 8.2.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1679-s82", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Path Validation Path validation is used by both peers during connection migration (see Section 9 ) to verify reachability after a change of address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1680-s83", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "In path validation, endpoints test reachability between a specific local address and a specific peer address, where an address is the 2-tuple of IP address and port. ¶ Path validation tests that packets sent on a path to a peer are received by that peer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1681-s84", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Path validation is used to ensure that packets received from a migrating peer do not carry a spoofed source address. ¶ Path validation does not validate that a peer can send in the return direction.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1682-s85", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Acknowledgments cannot be used for return path validation because they contain insufficient entropy and might be spoofed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1683-s86", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Endpoints independently determine reachability on each direction of a path, and therefore return reachability can only be established by the peer. ¶ Path validation can be used at any time by either endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1684-s87", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "For instance, an endpoint might check that a peer is still in possession of its address after a period of quiescence. ¶ Path validation is not designed as a NAT traversal mechanism.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1685-s88", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Though the mechanism described here might be effective for the creation of NAT bindings that support NAT traversal, the expectation is that one endpoint is able to receive packets without first having sent a packet on that path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1686-s89", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Effective NAT traversal needs additional synchronization mechanisms that are not provided here. ¶ An endpoint MAY include other frames with the PATH_CHALLENGE and PATH_RESPONSE frames used for path validation.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "7.5-p1687-s90", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "In particular, an endpoint can include PADDING frames with a PATH_CHALLENGE frame for Path Maximum Transmission Unit Discovery (PMTUD); see Section 14.2.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "7.5-p1688-s91", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "An endpoint can also include its own PATH_CHALLENGE frame when sending a PATH_RESPONSE frame. ¶ An endpoint uses a new connection ID for probes sent from a new local address; see Section 9.5 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.5-p1689-s92", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "When probing a new path, an endpoint can ensure that its peer has an unused connection ID available for responses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1690-s93", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Sending NEW_CONNECTION_ID and PATH_CHALLENGE frames in the same packet, if the peer's active_connection_id_limit permits, ensures that an unused connection ID will be available to the peer when sending a response. ¶ An endpoint can choose to simultaneously probe multiple paths.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.5-p1691-s94", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "The number of simultaneous paths used for probes is limited by the number of extra connection IDs its peer has previously supplied, since each new local address used for a probe requires a previously unused connection ID. ¶ 8.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1692-s95", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Initiating Path Validation To initiate path validation, an endpoint sends a PATH_CHALLENGE frame containing an unpredictable payload on the path to be validated. ¶ An endpoint MAY send multiple PATH_CHALLENGE frames to guard against packet loss.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1693-s96", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "However, an endpoint SHOULD NOT send multiple PATH_CHALLENGE frames in a single packet. ¶ An endpoint SHOULD NOT probe a new path with packets containing a PATH_CHALLENGE frame more frequently than it would send an Initial packet.", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT", "SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1694-s97", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "This ensures that connection migration is no more load on a new path than establishing a new connection. ¶ The endpoint MUST use unpredictable data in every PATH_CHALLENGE frame so that it can associate the peer's response with the corresponding PATH_CHALLENGE. ¶ An endpoint MUST expand datagrams that contain a PATH_CHALLENGE frame to at least the smallest allowed maximum datagram size of 1200 bytes, unless the anti-amplification limit for the path does not permit sending a datagram of this size.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "7.5-p1695-s98", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Sending UDP datagrams of this size ensures that the network path from the endpoint to the peer can be used for QUIC; see Section 14 . ¶ When an endpoint is unable to expand the datagram size to 1200 bytes due to the anti-amplification limit, the path MTU will not be validated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1696-s99", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "To ensure that the path MTU is large enough, the endpoint MUST perform a second path validation by sending a PATH_CHALLENGE frame in a datagram of at least 1200 bytes.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "7.5-p1697-s100", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "This additional validation can be performed after a PATH_RESPONSE is successfully received or when enough bytes have been received on the path that sending the larger datagram will not result in exceeding the anti-amplification limit. ¶ Unlike other cases where datagrams are expanded, endpoints MUST NOT discard datagrams that appear to be too small when they contain PATH_CHALLENGE or PATH_RESPONSE. ¶ 8.2.2.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1698-s101", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Path Validation Responses On receiving a PATH_CHALLENGE frame, an endpoint MUST respond by echoing the data contained in the PATH_CHALLENGE frame in a PATH_RESPONSE frame.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "7.5-p1699-s102", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "An endpoint MUST NOT delay transmission of a packet containing a PATH_RESPONSE frame unless constrained by congestion control. ¶ A PATH_RESPONSE frame MUST be sent on the network path where the PATH_CHALLENGE frame was received.", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1700-s103", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "This ensures that path validation by a peer only succeeds if the path is functional in both directions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1701-s104", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "This requirement MUST NOT be enforced by the endpoint that initiates path validation, as that would enable an attack on migration; see Section 9.3.3 . ¶ An endpoint MUST expand datagrams that contain a PATH_RESPONSE frame to at least the smallest allowed maximum datagram size of 1200 bytes.", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "7.5-p1702-s105", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "This verifies that the path is able to carry datagrams of this size in both directions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1703-s106", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "However, an endpoint MUST NOT expand the datagram containing the PATH_RESPONSE if the resulting data exceeds the anti-amplification limit.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1704-s107", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "This is expected to only occur if the received PATH_CHALLENGE was not sent in an expanded datagram. ¶ An endpoint MUST NOT send more than one PATH_RESPONSE frame in response to one PATH_CHALLENGE frame; see Section 13.3 .", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1705-s108", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "The peer is expected to send more PATH_CHALLENGE frames as necessary to evoke additional PATH_RESPONSE frames. ¶ 8.2.3.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.5-p1706-s109", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Successful Path Validation Path validation succeeds when a PATH_RESPONSE frame is received that contains the data that was sent in a previous PATH_CHALLENGE frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.5-p1707-s110", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "A PATH_RESPONSE frame received on any network path validates the path on which the PATH_CHALLENGE was sent. ¶ If an endpoint sends a PATH_CHALLENGE frame in a datagram that is not expanded to at least 1200 bytes and if the response to it validates the peer address, the path is validated but not the path MTU.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "7.5-p1708-s111", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "As a result, the endpoint can now send more than three times the amount of data that has been received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1709-s112", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "However, the endpoint MUST initiate another path validation with an expanded datagram to verify that the path supports the required MTU. ¶ Receipt of an acknowledgment for a packet containing a PATH_CHALLENGE frame is not adequate validation, since the acknowledgment can be spoofed by a malicious peer. ¶ 8.2.4.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1710-s113", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Failed Path Validation Path validation only fails when the endpoint attempting to validate the path abandons its attempt to validate the path. ¶ Endpoints SHOULD abandon path validation based on a timer.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1711-s114", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "When setting this timer, implementations are cautioned that the new path could have a longer round-trip time than the original.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1712-s115", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "A value of three times the larger of the current PTO or the PTO for the new path (using kInitialRtt, as defined in [ QUIC-RECOVERY ] ) is RECOMMENDED . ¶ This timeout allows for multiple PTOs to expire prior to failing path validation, so that loss of a single PATH_CHALLENGE or PATH_RESPONSE frame does not cause path validation failure. ¶ Note that the endpoint might receive packets containing other frames on the new path, but a PATH_RESPONSE frame with appropriate data is required for path validation to succeed. ¶ When an endpoint abandons path validation, it determines that the path is unusable.", "facet": "frames", "normative": true, "modalities": ["RECOMMENDED"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "7.5-p1713-s116", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "This does not necessarily imply a failure of the connection -- endpoints can continue sending packets over other paths as appropriate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "7.5-p1714-s117", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "If no paths are available, an endpoint can wait for a new path to become available or close the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "7.5-p1715-s118", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "An endpoint that has no valid network path to its peer MAY signal this using the NO_VIABLE_PATH connection error, noting that this is only possible if the network path exists but does not support the required MTU ( Section 14 ). ¶ A path validation might be abandoned for other reasons besides failure.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "7.5-p1716-s119", "section": "7.5", "anchor": "#name-cryptographic-message-buffe", "para_id": "7.5-p404", "text": "Primarily, this happens if a connection migration to a new path is initiated while a path validation on the old path is in progress. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1717-s1", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p405", "text": "Address validation ensures that an endpoint cannot be used for a traffic amplification attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1718-s2", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p405", "text": "In such an attack, a packet is sent to a server with spoofed source address information that identifies a victim.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1719-s3", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p405", "text": "If a server generates more or larger packets in response to that packet, the attacker can use the server to send more data toward the victim than it would be able to send on its own. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1720-s1", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p406", "text": "The primary defense against amplification attacks is verifying that a peer is able to receive packets at the transport address that it claims.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1721-s2", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p406", "text": "Therefore, after receiving packets from an address that is not yet validated, an endpoint MUST limit the amount of data it sends to the unvalidated address to three times the amount of data received from that address.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8-p1722-s3", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p406", "text": "This limit on the size of responses is known as the anti-amplification limit. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1723-s1", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p407", "text": "Address validation is performed both during connection establishment (see Section 8.1 ) and during connection migration (see Section 8.2 ). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1724-s1", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "8.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1725-s2", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Address Validation during Connection Establishment Connection establishment implicitly provides address validation for both endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1726-s3", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "In particular, receipt of a packet protected with Handshake keys confirms that the peer successfully processed an Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1727-s4", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Once an endpoint has successfully processed a Handshake packet from the peer, it can consider the peer address to have been validated. ¶ Additionally, an endpoint MAY consider the peer address validated if the peer uses a connection ID chosen by the endpoint and the connection ID contains at least 64 bits of entropy. ¶ For the client, the value of the Destination Connection ID field in its first Initial packet allows it to validate the server address as a part of successfully processing any packet.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8-p1728-s5", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Initial packets from the server are protected with keys that are derived from this value (see Section 5.2 of [ QUIC-TLS ] ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1729-s6", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Alternatively, the value is echoed by the server in Version Negotiation packets ( Section 6 ) or included in the Integrity Tag in Retry packets ( Section 5.8 of [ QUIC-TLS ] ). ¶ Prior to validating the client address, servers MUST NOT send more than three times as many bytes as the number of bytes they have received.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8-p1730-s7", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "This limits the magnitude of any amplification attack that can be mounted using spoofed source addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1731-s8", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "For the purposes of avoiding amplification prior to address validation, servers MUST count all of the payload bytes received in datagrams that are uniquely attributed to a single connection.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8-p1732-s9", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "This includes datagrams that contain packets that are successfully processed and datagrams that contain packets that are all discarded. ¶ Clients MUST ensure that UDP datagrams containing Initial packets have UDP payloads of at least 1200 bytes, adding PADDING frames as necessary.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8-p1733-s10", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "A client that sends padded datagrams allows the server to send more data prior to completing address validation. ¶ Loss of an Initial or Handshake packet from the server can cause a deadlock if the client does not send additional Initial or Handshake packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1734-s11", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "A deadlock could occur when the server reaches its anti-amplification limit and the client has received acknowledgments for all the data it has sent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1735-s12", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "In this case, when the client has no reason to send additional packets, the server will be unable to send more data because it has not validated the client's address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1736-s13", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "To prevent this deadlock, clients MUST send a packet on a Probe Timeout (PTO); see Section 6.2 of [ QUIC-RECOVERY ] .", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8-p1737-s14", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Specifically, the client MUST send an Initial packet in a UDP datagram that contains at least 1200 bytes if it does not have Handshake keys, and otherwise send a Handshake packet. ¶ A server might wish to validate the client address before starting the cryptographic handshake.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8-p1738-s15", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "QUIC uses a token in the Initial packet to provide address validation prior to completing the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1739-s16", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "This token is delivered to the client during connection establishment with a Retry packet (see Section 8.1.2 ) or in a previous connection using the NEW_TOKEN frame (see Section 8.1.3 ). ¶ In addition to sending limits imposed prior to address validation, servers are also constrained in what they can send by the limits set by the congestion controller.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8-p1740-s17", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Clients are only constrained by the congestion controller. ¶ 8.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1741-s18", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Token Construction A token sent in a NEW_TOKEN frame or a Retry packet MUST be constructed in a way that allows the server to identify how it was provided to a client.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8-p1742-s19", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "These tokens are carried in the same field but require different handling from servers. ¶ 8.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1743-s20", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Address Validation Using Retry Packets Upon receiving the client's Initial packet, the server can request address validation by sending a Retry packet ( Section 17.2.5 ) containing a token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1744-s21", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "This token MUST be repeated by the client in all Initial packets it sends for that connection after it receives the Retry packet. ¶ In response to processing an Initial packet containing a token that was provided in a Retry packet, a server cannot send another Retry packet; it can only refuse the connection or permit it to proceed. ¶ As long as it is not possible for an attacker to generate a valid token for its own address (see Section 8.1.4 ) and the client is able to return that token, it proves to the server that it received the token. ¶ A server can also use a Retry packet to defer the state and processing costs of connection establishment.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8-p1745-s22", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Requiring the server to provide a different connection ID, along with the original_destination_connection_id transport parameter defined in Section 18.2 , forces the server to demonstrate that it, or an entity it cooperates with, received the original Initial packet from the client.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1746-s23", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Providing a different connection ID also grants a server some control over how subsequent packets are routed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1747-s24", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "This can be used to direct connections to a different server instance. ¶ If a server receives a client Initial that contains an invalid Retry token but is otherwise valid, it knows the client will not accept another Retry token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1748-s25", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "The server can discard such a packet and allow the client to time out to detect handshake failure, but that could impose a significant latency penalty on the client.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1749-s26", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Instead, the server SHOULD immediately close ( Section 10.2 ) the connection with an INVALID_TOKEN error.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8-p1750-s27", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Note that a server has not established any state for the connection at this point and so does not enter the closing period. ¶ A flow showing the use of a Retry packet is shown in Figure 9 . ¶ Client Server Initial[0]:", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8-p1751-s28", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "CRYPTO[CH] -> <- Retry+Token Initial+Token[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1752-s29", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "CRYPTO[CH] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1753-s30", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "CRYPTO[SH] ACK[1] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1754-s31", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "CRYPTO[EE, CERT, CV, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1755-s32", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "STREAM[1, \"...\"] Figure 9 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8-p1756-s33", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Example Handshake with Retry 8.1.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1757-s34", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Address Validation for Future Connections A server MAY provide clients with an address validation token during one connection that can be used on a subsequent connection.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8-p1758-s35", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Address validation is especially important with 0-RTT because a server potentially sends a significant amount of data to a client in response to 0-RTT data. ¶ The server uses the NEW_TOKEN frame ( Section 19.7 ) to provide the client with an address validation token that can be used to validate future connections.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8-p1759-s36", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "In a future connection, the client includes this token in Initial packets to provide address validation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1760-s37", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "The client MUST include the token in all Initial packets it sends, unless a Retry replaces the token with a newer one.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8-p1761-s38", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "The client MUST NOT use the token provided in a Retry for future connections.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8-p1762-s39", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Servers MAY discard any Initial packet that does not carry the expected token. ¶ Unlike the token that is created for a Retry packet, which is used immediately, the token sent in the NEW_TOKEN frame can be used after some period of time has passed.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8-p1763-s40", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Thus, a token SHOULD have an expiration time, which could be either an explicit expiration time or an issued timestamp that can be used to dynamically calculate the expiration time.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8-p1764-s41", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "A server can store the expiration time or include it in an encrypted form in the token. ¶ A token issued with NEW_TOKEN MUST NOT include information that would allow values to be linked by an observer to the connection on which it was issued.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8-p1765-s42", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "For example, it cannot include the previous connection ID or addressing information, unless the values are encrypted.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1766-s43", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "A server MUST ensure that every NEW_TOKEN frame it sends is unique across all clients, with the exception of those sent to repair losses of previously sent NEW_TOKEN frames.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8-p1767-s44", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Information that allows the server to distinguish between tokens from Retry and NEW_TOKEN MAY be accessible to entities other than the server. ¶ It is unlikely that the client port number is the same on two different connections; validating the port is therefore unlikely to be successful. ¶ A token received in a NEW_TOKEN frame is applicable to any server that the connection is considered authoritative for (e.g., server names included in the certificate).", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8-p1768-s45", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "When connecting to a server for which the client retains an applicable and unused token, it SHOULD include that token in the Token field of its Initial packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8-p1769-s46", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Including a token might allow the server to validate the client address without an additional round trip.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1770-s47", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "A client MUST NOT include a token that is not applicable to the server that it is connecting to, unless the client has the knowledge that the server that issued the token and the server the client is connecting to are jointly managing the tokens.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8-p1771-s48", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "A client MAY use a token from any previous connection to that server. ¶ A token allows a server to correlate activity between the connection where the token was issued and any connection where it is used.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8-p1772-s49", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Clients that want to break continuity of identity with a server can discard tokens provided using the NEW_TOKEN frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8-p1773-s50", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "In comparison, a token obtained in a Retry packet MUST be used immediately during the connection attempt and cannot be used in subsequent connection attempts. ¶ A client SHOULD NOT reuse a token from a NEW_TOKEN frame for different connection attempts.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8-p1774-s51", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Reusing a token allows connections to be linked by entities on the network path; see Section 9.5 . ¶ Clients might receive multiple tokens on a single connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1775-s52", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Aside from preventing linkability, any token can be used in any connection attempt.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1776-s53", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Servers can send additional tokens to either enable address validation for multiple connection attempts or replace older tokens that might become invalid.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1777-s54", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "For a client, this ambiguity means that sending the most recent unused token is most likely to be effective.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1778-s55", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Though saving and using older tokens have no negative consequences, clients can regard older tokens as being less likely to be useful to the server for address validation. ¶ When a server receives an Initial packet with an address validation token, it MUST attempt to validate the token, unless it has already completed address validation.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8-p1779-s56", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "If the token is invalid, then the server SHOULD proceed as if the client did not have a validated address, including potentially sending a Retry packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8-p1780-s57", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Tokens provided with NEW_TOKEN frames and Retry packets can be distinguished by servers (see Section 8.1.1 ), and the latter can be validated more strictly.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8-p1781-s58", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "If the validation succeeds, the server SHOULD then allow the handshake to proceed. ¶ Note:", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8-p1782-s59", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "The rationale for treating the client as unvalidated rather than discarding the packet is that the client might have received the token in a previous connection using the NEW_TOKEN frame, and if the server has lost state, it might be unable to validate the token at all, leading to connection failure if the packet is discarded. ¶ In a stateless design, a server can use encrypted and authenticated tokens to pass information to clients that the server can later recover and use to validate a client address.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8-p1783-s60", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Tokens are not integrated into the cryptographic handshake, and so they are not authenticated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1784-s61", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "For instance, a client might be able to reuse a token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1785-s62", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "To avoid attacks that exploit this property, a server can limit its use of tokens to only the information needed to validate client addresses. ¶ Clients MAY use tokens obtained on one connection for any connection attempt using the same version.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8-p1786-s63", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "When selecting a token to use, clients do not need to consider other properties of the connection that is being attempted, including the choice of possible application protocols, session tickets, or other connection properties. ¶ 8.1.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8-p1787-s64", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Address Validation Token Integrity An address validation token MUST be difficult to guess.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8-p1788-s65", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Including a random value with at least 128 bits of entropy in the token would be sufficient, but this depends on the server remembering the value it sends to clients. ¶ A token-based scheme allows the server to offload any state associated with validation to the client.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8-p1789-s66", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "For this design to work, the token MUST be covered by integrity protection against modification or falsification by clients.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8-p1790-s67", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Without integrity protection, malicious clients could generate or guess values for tokens that would be accepted by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1791-s68", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Only the server requires access to the integrity protection key for tokens. ¶ There is no need for a single well-defined format for the token because the server that generates the token also consumes it.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1792-s69", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Tokens sent in Retry packets SHOULD include information that allows the server to verify that the source IP address and port in client packets remain constant. ¶ Tokens sent in NEW_TOKEN frames MUST include information that allows the server to verify that the client IP address has not changed from when the token was issued.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8-p1793-s70", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Servers can use tokens from NEW_TOKEN frames in deciding not to send a Retry packet, even if the client address has changed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8-p1794-s71", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "If the client IP address has changed, the server MUST adhere to the anti-amplification limit; see Section 8 .", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8-p1795-s72", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Note that in the presence of NAT, this requirement might be insufficient to protect other hosts that share the NAT from amplification attacks. ¶ Attackers could replay tokens to use servers as amplifiers in DDoS attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8-p1796-s73", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "To protect against such attacks, servers MUST ensure that replay of tokens is prevented or limited.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8-p1797-s74", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Servers SHOULD ensure that tokens sent in Retry packets are only accepted for a short time, as they are returned immediately by clients.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8-p1798-s75", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Tokens that are provided in NEW_TOKEN frames ( Section 19.7 ) need to be valid for longer but SHOULD NOT be accepted multiple times.", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8-p1799-s76", "section": "8", "anchor": "#name-address-validation", "para_id": "8-p408", "text": "Servers are encouraged to allow tokens to be used only once, if possible; tokens MAY include additional information about clients to further narrow applicability or reuse. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1-p1800-s1", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p409", "text": "Connection establishment implicitly provides address validation for both endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1-p1801-s2", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p409", "text": "In particular, receipt of a packet protected with Handshake keys confirms that the peer successfully processed an Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1-p1802-s3", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p409", "text": "Once an endpoint has successfully processed a Handshake packet from the peer, it can consider the peer address to have been validated. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1-p1803-s1", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p410", "text": "Additionally, an endpoint MAY consider the peer address validated if the peer uses a connection ID chosen by the endpoint and the connection ID contains at least 64 bits of entropy. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1-p1804-s1", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p411", "text": "For the client, the value of the Destination Connection ID field in its first Initial packet allows it to validate the server address as a part of successfully processing any packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1-p1805-s2", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p411", "text": "Initial packets from the server are protected with keys that are derived from this value (see Section 5.2 of [ QUIC-TLS ] ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1-p1806-s3", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p411", "text": "Alternatively, the value is echoed by the server in Version Negotiation packets ( Section 6 ) or included in the Integrity Tag in Retry packets ( Section 5.8 of [ QUIC-TLS ] ). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1-p1807-s1", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p412", "text": "Prior to validating the client address, servers MUST NOT send more than three times as many bytes as the number of bytes they have received.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1-p1808-s2", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p412", "text": "This limits the magnitude of any amplification attack that can be mounted using spoofed source addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1-p1809-s3", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p412", "text": "For the purposes of avoiding amplification prior to address validation, servers MUST count all of the payload bytes received in datagrams that are uniquely attributed to a single connection.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1-p1810-s4", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p412", "text": "This includes datagrams that contain packets that are successfully processed and datagrams that contain packets that are all discarded. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1-p1811-s1", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p413", "text": "Clients MUST ensure that UDP datagrams containing Initial packets have UDP payloads of at least 1200 bytes, adding PADDING frames as necessary.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.1-p1812-s2", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p413", "text": "A client that sends padded datagrams allows the server to send more data prior to completing address validation. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1-p1813-s1", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p414", "text": "Loss of an Initial or Handshake packet from the server can cause a deadlock if the client does not send additional Initial or Handshake packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1-p1814-s2", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p414", "text": "A deadlock could occur when the server reaches its anti-amplification limit and the client has received acknowledgments for all the data it has sent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1-p1815-s3", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p414", "text": "In this case, when the client has no reason to send additional packets, the server will be unable to send more data because it has not validated the client's address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1-p1816-s4", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p414", "text": "To prevent this deadlock, clients MUST send a packet on a Probe Timeout (PTO); see Section 6.2 of [ QUIC-RECOVERY ] .", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1-p1817-s5", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p414", "text": "Specifically, the client MUST send an Initial packet in a UDP datagram that contains at least 1200 bytes if it does not have Handshake keys, and otherwise send a Handshake packet. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1-p1818-s1", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p415", "text": "A server might wish to validate the client address before starting the cryptographic handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1-p1819-s2", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p415", "text": "QUIC uses a token in the Initial packet to provide address validation prior to completing the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1-p1820-s3", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p415", "text": "This token is delivered to the client during connection establishment with a Retry packet (see Section 8.1.2 ) or in a previous connection using the NEW_TOKEN frame (see Section 8.1.3 ). ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.1-p1821-s1", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p416", "text": "In addition to sending limits imposed prior to address validation, servers are also constrained in what they can send by the limits set by the congestion controller.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1-p1822-s2", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p416", "text": "Clients are only constrained by the congestion controller. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1-p1823-s1", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p417", "text": "8.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1-p1824-s2", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p417", "text": "Token Construction A token sent in a NEW_TOKEN frame or a Retry packet MUST be constructed in a way that allows the server to identify how it was provided to a client.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.1-p1825-s3", "section": "8.1", "anchor": "#name-address-validation-during-c", "para_id": "8.1-p417", "text": "These tokens are carried in the same field but require different handling from servers. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.1-p1826-s1", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p418", "text": "A token sent in a NEW_TOKEN frame or a Retry packet MUST be constructed in a way that allows the server to identify how it was provided to a client.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.1.1-p1827-s2", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p418", "text": "These tokens are carried in the same field but require different handling from servers. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.1-p1828-s1", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "8.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.1-p1829-s2", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "Address Validation Using Retry Packets Upon receiving the client's Initial packet, the server can request address validation by sending a Retry packet ( Section 17.2.5 ) containing a token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.1-p1830-s3", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "This token MUST be repeated by the client in all Initial packets it sends for that connection after it receives the Retry packet. ¶ In response to processing an Initial packet containing a token that was provided in a Retry packet, a server cannot send another Retry packet; it can only refuse the connection or permit it to proceed. ¶ As long as it is not possible for an attacker to generate a valid token for its own address (see Section 8.1.4 ) and the client is able to return that token, it proves to the server that it received the token. ¶ A server can also use a Retry packet to defer the state and processing costs of connection establishment.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.1.1-p1831-s4", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "Requiring the server to provide a different connection ID, along with the original_destination_connection_id transport parameter defined in Section 18.2 , forces the server to demonstrate that it, or an entity it cooperates with, received the original Initial packet from the client.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.1-p1832-s5", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "Providing a different connection ID also grants a server some control over how subsequent packets are routed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.1-p1833-s6", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "This can be used to direct connections to a different server instance. ¶ If a server receives a client Initial that contains an invalid Retry token but is otherwise valid, it knows the client will not accept another Retry token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.1-p1834-s7", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "The server can discard such a packet and allow the client to time out to detect handshake failure, but that could impose a significant latency penalty on the client.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.1-p1835-s8", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "Instead, the server SHOULD immediately close ( Section 10.2 ) the connection with an INVALID_TOKEN error.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.1-p1836-s9", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "Note that a server has not established any state for the connection at this point and so does not enter the closing period. ¶ A flow showing the use of a Retry packet is shown in Figure 9 . ¶ Client Server Initial[0]:", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.1.1-p1837-s10", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "CRYPTO[CH] -> <- Retry+Token Initial+Token[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.1-p1838-s11", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "CRYPTO[CH] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.1-p1839-s12", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "CRYPTO[SH] ACK[1] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.1-p1840-s13", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "CRYPTO[EE, CERT, CV, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.1-p1841-s14", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "STREAM[1, \"...\"] Figure 9 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.1-p1842-s15", "section": "8.1.1", "anchor": "#name-token-construction", "para_id": "8.1.1-p419", "text": "Example Handshake with Retry", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1843-s1", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p420", "text": "Upon receiving the client's Initial packet, the server can request address validation by sending a Retry packet ( Section 17.2.5 ) containing a token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.2-p1844-s2", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p420", "text": "This token MUST be repeated by the client in all Initial packets it sends for that connection after it receives the Retry packet. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.2-p1845-s1", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p421", "text": "In response to processing an Initial packet containing a token that was provided in a Retry packet, a server cannot send another Retry packet; it can only refuse the connection or permit it to proceed. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.2-p1846-s1", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p422", "text": "As long as it is not possible for an attacker to generate a valid token for its own address (see Section 8.1.4 ) and the client is able to return that token, it proves to the server that it received the token. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.2-p1847-s1", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p423", "text": "A server can also use a Retry packet to defer the state and processing costs of connection establishment.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.1.2-p1848-s2", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p423", "text": "Requiring the server to provide a different connection ID, along with the original_destination_connection_id transport parameter defined in Section 18.2 , forces the server to demonstrate that it, or an entity it cooperates with, received the original Initial packet from the client.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.2-p1849-s3", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p423", "text": "Providing a different connection ID also grants a server some control over how subsequent packets are routed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1850-s4", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p423", "text": "This can be used to direct connections to a different server instance. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1851-s1", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p424", "text": "If a server receives a client Initial that contains an invalid Retry token but is otherwise valid, it knows the client will not accept another Retry token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.2-p1852-s2", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p424", "text": "The server can discard such a packet and allow the client to time out to detect handshake failure, but that could impose a significant latency penalty on the client.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1853-s3", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p424", "text": "Instead, the server SHOULD immediately close ( Section 10.2 ) the connection with an INVALID_TOKEN error.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.2-p1854-s4", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p424", "text": "Note that a server has not established any state for the connection at this point and so does not enter the closing period. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.1.2-p1855-s1", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p425", "text": "A flow showing the use of a Retry packet is shown in Figure 9 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1856-s1", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p426", "text": "Client Server Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1857-s2", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p426", "text": "CRYPTO[CH] -> <- Retry+Token Initial+Token[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1858-s3", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p426", "text": "CRYPTO[CH] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1859-s4", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p426", "text": "CRYPTO[SH] ACK[1] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.2-p1860-s5", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p426", "text": "CRYPTO[EE, CERT, CV, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.2-p1861-s6", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p426", "text": "STREAM[1, \"...\"] Figure 9 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.2-p1862-s7", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p426", "text": "Example Handshake with Retry", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1863-s1", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p427", "text": "Client Server Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1864-s2", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p427", "text": "CRYPTO[CH] -> <- Retry+Token Initial+Token[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1865-s3", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p427", "text": "CRYPTO[CH] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1866-s4", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p427", "text": "CRYPTO[SH] ACK[1] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.2-p1867-s5", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p427", "text": "CRYPTO[EE, CERT, CV, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.2-p1868-s6", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p427", "text": "STREAM[1, \"...\"]", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.2-p1869-s1", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p428", "text": "Client Server Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1870-s2", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p428", "text": "CRYPTO[CH] -> <- Retry+Token Initial+Token[1]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1871-s3", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p428", "text": "CRYPTO[CH] -> Initial[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1872-s4", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p428", "text": "CRYPTO[SH] ACK[1] Handshake[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.2-p1873-s5", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p428", "text": "CRYPTO[EE, CERT, CV, FIN] <- 1-RTT[0]:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.2-p1874-s6", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p428", "text": "STREAM[1, \"...\"]", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.2-p1875-s1", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p429", "text": "Figure 9 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1876-s2", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p429", "text": "Example Handshake with Retry", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1877-s1", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "8.1.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1878-s2", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "Address Validation for Future Connections A server MAY provide clients with an address validation token during one connection that can be used on a subsequent connection.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.2-p1879-s3", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "Address validation is especially important with 0-RTT because a server potentially sends a significant amount of data to a client in response to 0-RTT data. ¶ The server uses the NEW_TOKEN frame ( Section 19.7 ) to provide the client with an address validation token that can be used to validate future connections.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.1.2-p1880-s4", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "In a future connection, the client includes this token in Initial packets to provide address validation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1881-s5", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "The client MUST include the token in all Initial packets it sends, unless a Retry replaces the token with a newer one.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.2-p1882-s6", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "The client MUST NOT use the token provided in a Retry for future connections.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.2-p1883-s7", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "Servers MAY discard any Initial packet that does not carry the expected token. ¶ Unlike the token that is created for a Retry packet, which is used immediately, the token sent in the NEW_TOKEN frame can be used after some period of time has passed.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.1.2-p1884-s8", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "Thus, a token SHOULD have an expiration time, which could be either an explicit expiration time or an issued timestamp that can be used to dynamically calculate the expiration time.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.2-p1885-s9", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "A server can store the expiration time or include it in an encrypted form in the token. ¶ A token issued with NEW_TOKEN MUST NOT include information that would allow values to be linked by an observer to the connection on which it was issued.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.2-p1886-s10", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "For example, it cannot include the previous connection ID or addressing information, unless the values are encrypted.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1887-s11", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "A server MUST ensure that every NEW_TOKEN frame it sends is unique across all clients, with the exception of those sent to repair losses of previously sent NEW_TOKEN frames.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.1.2-p1888-s12", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "Information that allows the server to distinguish between tokens from Retry and NEW_TOKEN MAY be accessible to entities other than the server. ¶ It is unlikely that the client port number is the same on two different connections; validating the port is therefore unlikely to be successful. ¶ A token received in a NEW_TOKEN frame is applicable to any server that the connection is considered authoritative for (e.g., server names included in the certificate).", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.1.2-p1889-s13", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "When connecting to a server for which the client retains an applicable and unused token, it SHOULD include that token in the Token field of its Initial packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.2-p1890-s14", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "Including a token might allow the server to validate the client address without an additional round trip.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1891-s15", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "A client MUST NOT include a token that is not applicable to the server that it is connecting to, unless the client has the knowledge that the server that issued the token and the server the client is connecting to are jointly managing the tokens.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.2-p1892-s16", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "A client MAY use a token from any previous connection to that server. ¶ A token allows a server to correlate activity between the connection where the token was issued and any connection where it is used.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.2-p1893-s17", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "Clients that want to break continuity of identity with a server can discard tokens provided using the NEW_TOKEN frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.1.2-p1894-s18", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "In comparison, a token obtained in a Retry packet MUST be used immediately during the connection attempt and cannot be used in subsequent connection attempts. ¶ A client SHOULD NOT reuse a token from a NEW_TOKEN frame for different connection attempts.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.1.2-p1895-s19", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "Reusing a token allows connections to be linked by entities on the network path; see Section 9.5 . ¶ Clients might receive multiple tokens on a single connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.2-p1896-s20", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "Aside from preventing linkability, any token can be used in any connection attempt.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1897-s21", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "Servers can send additional tokens to either enable address validation for multiple connection attempts or replace older tokens that might become invalid.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.2-p1898-s22", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "For a client, this ambiguity means that sending the most recent unused token is most likely to be effective.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1899-s23", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "Though saving and using older tokens have no negative consequences, clients can regard older tokens as being less likely to be useful to the server for address validation. ¶ When a server receives an Initial packet with an address validation token, it MUST attempt to validate the token, unless it has already completed address validation.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.2-p1900-s24", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "If the token is invalid, then the server SHOULD proceed as if the client did not have a validated address, including potentially sending a Retry packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.2-p1901-s25", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "Tokens provided with NEW_TOKEN frames and Retry packets can be distinguished by servers (see Section 8.1.1 ), and the latter can be validated more strictly.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.1.2-p1902-s26", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "If the validation succeeds, the server SHOULD then allow the handshake to proceed. ¶ Note:", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.2-p1903-s27", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "The rationale for treating the client as unvalidated rather than discarding the packet is that the client might have received the token in a previous connection using the NEW_TOKEN frame, and if the server has lost state, it might be unable to validate the token at all, leading to connection failure if the packet is discarded. ¶ In a stateless design, a server can use encrypted and authenticated tokens to pass information to clients that the server can later recover and use to validate a client address.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.1.2-p1904-s28", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "Tokens are not integrated into the cryptographic handshake, and so they are not authenticated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1905-s29", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "For instance, a client might be able to reuse a token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.2-p1906-s30", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "To avoid attacks that exploit this property, a server can limit its use of tokens to only the information needed to validate client addresses. ¶ Clients MAY use tokens obtained on one connection for any connection attempt using the same version.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.2-p1907-s31", "section": "8.1.2", "anchor": "#name-address-validation-using-re", "para_id": "8.1.2-p430", "text": "When selecting a token to use, clients do not need to consider other properties of the connection that is being attempted, including the choice of possible application protocols, session tickets, or other connection properties. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.3-p1908-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p431", "text": "A server MAY provide clients with an address validation token during one connection that can be used on a subsequent connection.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1909-s2", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p431", "text": "Address validation is especially important with 0-RTT because a server potentially sends a significant amount of data to a client in response to 0-RTT data. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.3-p1910-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p432", "text": "The server uses the NEW_TOKEN frame ( Section 19.7 ) to provide the client with an address validation token that can be used to validate future connections.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.1.3-p1911-s2", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p432", "text": "In a future connection, the client includes this token in Initial packets to provide address validation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1912-s3", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p432", "text": "The client MUST include the token in all Initial packets it sends, unless a Retry replaces the token with a newer one.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.3-p1913-s4", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p432", "text": "The client MUST NOT use the token provided in a Retry for future connections.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1914-s5", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p432", "text": "Servers MAY discard any Initial packet that does not carry the expected token. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1915-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p433", "text": "Unlike the token that is created for a Retry packet, which is used immediately, the token sent in the NEW_TOKEN frame can be used after some period of time has passed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.1.3-p1916-s2", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p433", "text": "Thus, a token SHOULD have an expiration time, which could be either an explicit expiration time or an issued timestamp that can be used to dynamically calculate the expiration time.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1917-s3", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p433", "text": "A server can store the expiration time or include it in an encrypted form in the token. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1918-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p434", "text": "A token issued with NEW_TOKEN MUST NOT include information that would allow values to be linked by an observer to the connection on which it was issued.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1919-s2", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p434", "text": "For example, it cannot include the previous connection ID or addressing information, unless the values are encrypted.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1920-s3", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p434", "text": "A server MUST ensure that every NEW_TOKEN frame it sends is unique across all clients, with the exception of those sent to repair losses of previously sent NEW_TOKEN frames.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.1.3-p1921-s4", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p434", "text": "Information that allows the server to distinguish between tokens from Retry and NEW_TOKEN MAY be accessible to entities other than the server. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1922-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p435", "text": "It is unlikely that the client port number is the same on two different connections; validating the port is therefore unlikely to be successful. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1923-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p436", "text": "A token received in a NEW_TOKEN frame is applicable to any server that the connection is considered authoritative for (e.g., server names included in the certificate).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.1.3-p1924-s2", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p436", "text": "When connecting to a server for which the client retains an applicable and unused token, it SHOULD include that token in the Token field of its Initial packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.3-p1925-s3", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p436", "text": "Including a token might allow the server to validate the client address without an additional round trip.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1926-s4", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p436", "text": "A client MUST NOT include a token that is not applicable to the server that it is connecting to, unless the client has the knowledge that the server that issued the token and the server the client is connecting to are jointly managing the tokens.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1927-s5", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p436", "text": "A client MAY use a token from any previous connection to that server. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1928-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p437", "text": "A token allows a server to correlate activity between the connection where the token was issued and any connection where it is used.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1929-s2", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p437", "text": "Clients that want to break continuity of identity with a server can discard tokens provided using the NEW_TOKEN frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.1.3-p1930-s3", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p437", "text": "In comparison, a token obtained in a Retry packet MUST be used immediately during the connection attempt and cannot be used in subsequent connection attempts. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1931-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p438", "text": "A client SHOULD NOT reuse a token from a NEW_TOKEN frame for different connection attempts.", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.1.3-p1932-s2", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p438", "text": "Reusing a token allows connections to be linked by entities on the network path; see Section 9.5 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1933-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p439", "text": "Clients might receive multiple tokens on a single connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.3-p1934-s2", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p439", "text": "Aside from preventing linkability, any token can be used in any connection attempt.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1935-s3", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p439", "text": "Servers can send additional tokens to either enable address validation for multiple connection attempts or replace older tokens that might become invalid.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.3-p1936-s4", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p439", "text": "For a client, this ambiguity means that sending the most recent unused token is most likely to be effective.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1937-s5", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p439", "text": "Though saving and using older tokens have no negative consequences, clients can regard older tokens as being less likely to be useful to the server for address validation. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1938-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p440", "text": "When a server receives an Initial packet with an address validation token, it MUST attempt to validate the token, unless it has already completed address validation.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.3-p1939-s2", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p440", "text": "If the token is invalid, then the server SHOULD proceed as if the client did not have a validated address, including potentially sending a Retry packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.3-p1940-s3", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p440", "text": "Tokens provided with NEW_TOKEN frames and Retry packets can be distinguished by servers (see Section 8.1.1 ), and the latter can be validated more strictly.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.1.3-p1941-s4", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p440", "text": "If the validation succeeds, the server SHOULD then allow the handshake to proceed. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.3-p1942-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p441", "text": "Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1943-s2", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p441", "text": "The rationale for treating the client as unvalidated rather than discarding the packet is that the client might have received the token in a previous connection using the NEW_TOKEN frame, and if the server has lost state, it might be unable to validate the token at all, leading to connection failure if the packet is discarded. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.1.3-p1944-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p442", "text": "In a stateless design, a server can use encrypted and authenticated tokens to pass information to clients that the server can later recover and use to validate a client address.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.1.3-p1945-s2", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p442", "text": "Tokens are not integrated into the cryptographic handshake, and so they are not authenticated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1946-s3", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p442", "text": "For instance, a client might be able to reuse a token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1947-s4", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p442", "text": "To avoid attacks that exploit this property, a server can limit its use of tokens to only the information needed to validate client addresses. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1948-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p443", "text": "Clients MAY use tokens obtained on one connection for any connection attempt using the same version.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1949-s2", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p443", "text": "When selecting a token to use, clients do not need to consider other properties of the connection that is being attempted, including the choice of possible application protocols, session tickets, or other connection properties. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.3-p1950-s1", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "8.1.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1951-s2", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "Address Validation Token Integrity An address validation token MUST be difficult to guess.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1952-s3", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "Including a random value with at least 128 bits of entropy in the token would be sufficient, but this depends on the server remembering the value it sends to clients. ¶ A token-based scheme allows the server to offload any state associated with validation to the client.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.1.3-p1953-s4", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "For this design to work, the token MUST be covered by integrity protection against modification or falsification by clients.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1954-s5", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "Without integrity protection, malicious clients could generate or guess values for tokens that would be accepted by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1955-s6", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "Only the server requires access to the integrity protection key for tokens. ¶ There is no need for a single well-defined format for the token because the server that generates the token also consumes it.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1956-s7", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "Tokens sent in Retry packets SHOULD include information that allows the server to verify that the source IP address and port in client packets remain constant. ¶ Tokens sent in NEW_TOKEN frames MUST include information that allows the server to verify that the client IP address has not changed from when the token was issued.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.1.3-p1957-s8", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "Servers can use tokens from NEW_TOKEN frames in deciding not to send a Retry packet, even if the client address has changed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.1.3-p1958-s9", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "If the client IP address has changed, the server MUST adhere to the anti-amplification limit; see Section 8 .", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.3-p1959-s10", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "Note that in the presence of NAT, this requirement might be insufficient to protect other hosts that share the NAT from amplification attacks. ¶ Attackers could replay tokens to use servers as amplifiers in DDoS attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.3-p1960-s11", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "To protect against such attacks, servers MUST ensure that replay of tokens is prevented or limited.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1961-s12", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "Servers SHOULD ensure that tokens sent in Retry packets are only accepted for a short time, as they are returned immediately by clients.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.3-p1962-s13", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "Tokens that are provided in NEW_TOKEN frames ( Section 19.7 ) need to be valid for longer but SHOULD NOT be accepted multiple times.", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.1.3-p1963-s14", "section": "8.1.3", "anchor": "#name-address-validation-for-futu", "para_id": "8.1.3-p444", "text": "Servers are encouraged to allow tokens to be used only once, if possible; tokens MAY include additional information about clients to further narrow applicability or reuse. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.4-p1964-s1", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p445", "text": "An address validation token MUST be difficult to guess.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.4-p1965-s2", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p445", "text": "Including a random value with at least 128 bits of entropy in the token would be sufficient, but this depends on the server remembering the value it sends to clients. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.4-p1966-s1", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p446", "text": "A token-based scheme allows the server to offload any state associated with validation to the client.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.1.4-p1967-s2", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p446", "text": "For this design to work, the token MUST be covered by integrity protection against modification or falsification by clients.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.4-p1968-s3", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p446", "text": "Without integrity protection, malicious clients could generate or guess values for tokens that would be accepted by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.4-p1969-s4", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p446", "text": "Only the server requires access to the integrity protection key for tokens. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.4-p1970-s1", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p447", "text": "There is no need for a single well-defined format for the token because the server that generates the token also consumes it.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.4-p1971-s2", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p447", "text": "Tokens sent in Retry packets SHOULD include information that allows the server to verify that the source IP address and port in client packets remain constant. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.4-p1972-s1", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p448", "text": "Tokens sent in NEW_TOKEN frames MUST include information that allows the server to verify that the client IP address has not changed from when the token was issued.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.1.4-p1973-s2", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p448", "text": "Servers can use tokens from NEW_TOKEN frames in deciding not to send a Retry packet, even if the client address has changed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.1.4-p1974-s3", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p448", "text": "If the client IP address has changed, the server MUST adhere to the anti-amplification limit; see Section 8 .", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.4-p1975-s4", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p448", "text": "Note that in the presence of NAT, this requirement might be insufficient to protect other hosts that share the NAT from amplification attacks. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.4-p1976-s1", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p449", "text": "Attackers could replay tokens to use servers as amplifiers in DDoS attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.4-p1977-s2", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p449", "text": "To protect against such attacks, servers MUST ensure that replay of tokens is prevented or limited.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.4-p1978-s3", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p449", "text": "Servers SHOULD ensure that tokens sent in Retry packets are only accepted for a short time, as they are returned immediately by clients.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.1.4-p1979-s4", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p449", "text": "Tokens that are provided in NEW_TOKEN frames ( Section 19.7 ) need to be valid for longer but SHOULD NOT be accepted multiple times.", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.1.4-p1980-s5", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p449", "text": "Servers are encouraged to allow tokens to be used only once, if possible; tokens MAY include additional information about clients to further narrow applicability or reuse. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.4-p1981-s1", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "8.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.4-p1982-s2", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "Path Validation Path validation is used by both peers during connection migration (see Section 9 ) to verify reachability after a change of address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.4-p1983-s3", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "In path validation, endpoints test reachability between a specific local address and a specific peer address, where an address is the 2-tuple of IP address and port. ¶ Path validation tests that packets sent on a path to a peer are received by that peer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.4-p1984-s4", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "Path validation is used to ensure that packets received from a migrating peer do not carry a spoofed source address. ¶ Path validation does not validate that a peer can send in the return direction.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.4-p1985-s5", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "Acknowledgments cannot be used for return path validation because they contain insufficient entropy and might be spoofed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.4-p1986-s6", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "Endpoints independently determine reachability on each direction of a path, and therefore return reachability can only be established by the peer. ¶ Path validation can be used at any time by either endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.4-p1987-s7", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "For instance, an endpoint might check that a peer is still in possession of its address after a period of quiescence. ¶ Path validation is not designed as a NAT traversal mechanism.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.4-p1988-s8", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "Though the mechanism described here might be effective for the creation of NAT bindings that support NAT traversal, the expectation is that one endpoint is able to receive packets without first having sent a packet on that path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.4-p1989-s9", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "Effective NAT traversal needs additional synchronization mechanisms that are not provided here. ¶ An endpoint MAY include other frames with the PATH_CHALLENGE and PATH_RESPONSE frames used for path validation.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.1.4-p1990-s10", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "In particular, an endpoint can include PADDING frames with a PATH_CHALLENGE frame for Path Maximum Transmission Unit Discovery (PMTUD); see Section 14.2.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.1.4-p1991-s11", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "An endpoint can also include its own PATH_CHALLENGE frame when sending a PATH_RESPONSE frame. ¶ An endpoint uses a new connection ID for probes sent from a new local address; see Section 9.5 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.1.4-p1992-s12", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "When probing a new path, an endpoint can ensure that its peer has an unused connection ID available for responses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.4-p1993-s13", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "Sending NEW_CONNECTION_ID and PATH_CHALLENGE frames in the same packet, if the peer's active_connection_id_limit permits, ensures that an unused connection ID will be available to the peer when sending a response. ¶ An endpoint can choose to simultaneously probe multiple paths.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.1.4-p1994-s14", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "The number of simultaneous paths used for probes is limited by the number of extra connection IDs its peer has previously supplied, since each new local address used for a probe requires a previously unused connection ID. ¶ 8.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.4-p1995-s15", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "Initiating Path Validation To initiate path validation, an endpoint sends a PATH_CHALLENGE frame containing an unpredictable payload on the path to be validated. ¶ An endpoint MAY send multiple PATH_CHALLENGE frames to guard against packet loss.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.1.4-p1996-s16", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "However, an endpoint SHOULD NOT send multiple PATH_CHALLENGE frames in a single packet. ¶ An endpoint SHOULD NOT probe a new path with packets containing a PATH_CHALLENGE frame more frequently than it would send an Initial packet.", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT", "SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.1.4-p1997-s17", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "This ensures that connection migration is no more load on a new path than establishing a new connection. ¶ The endpoint MUST use unpredictable data in every PATH_CHALLENGE frame so that it can associate the peer's response with the corresponding PATH_CHALLENGE. ¶ An endpoint MUST expand datagrams that contain a PATH_CHALLENGE frame to at least the smallest allowed maximum datagram size of 1200 bytes, unless the anti-amplification limit for the path does not permit sending a datagram of this size.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.1.4-p1998-s18", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "Sending UDP datagrams of this size ensures that the network path from the endpoint to the peer can be used for QUIC; see Section 14 . ¶ When an endpoint is unable to expand the datagram size to 1200 bytes due to the anti-amplification limit, the path MTU will not be validated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.4-p1999-s19", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "To ensure that the path MTU is large enough, the endpoint MUST perform a second path validation by sending a PATH_CHALLENGE frame in a datagram of at least 1200 bytes.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.1.4-p2000-s20", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "This additional validation can be performed after a PATH_RESPONSE is successfully received or when enough bytes have been received on the path that sending the larger datagram will not result in exceeding the anti-amplification limit. ¶ Unlike other cases where datagrams are expanded, endpoints MUST NOT discard datagrams that appear to be too small when they contain PATH_CHALLENGE or PATH_RESPONSE. ¶ 8.2.2.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.4-p2001-s21", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "Path Validation Responses On receiving a PATH_CHALLENGE frame, an endpoint MUST respond by echoing the data contained in the PATH_CHALLENGE frame in a PATH_RESPONSE frame.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.1.4-p2002-s22", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "An endpoint MUST NOT delay transmission of a packet containing a PATH_RESPONSE frame unless constrained by congestion control. ¶ A PATH_RESPONSE frame MUST be sent on the network path where the PATH_CHALLENGE frame was received.", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.1.4-p2003-s23", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "This ensures that path validation by a peer only succeeds if the path is functional in both directions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.4-p2004-s24", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "This requirement MUST NOT be enforced by the endpoint that initiates path validation, as that would enable an attack on migration; see Section 9.3.3 . ¶ An endpoint MUST expand datagrams that contain a PATH_RESPONSE frame to at least the smallest allowed maximum datagram size of 1200 bytes.", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.1.4-p2005-s25", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "This verifies that the path is able to carry datagrams of this size in both directions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.4-p2006-s26", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "However, an endpoint MUST NOT expand the datagram containing the PATH_RESPONSE if the resulting data exceeds the anti-amplification limit.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.4-p2007-s27", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "This is expected to only occur if the received PATH_CHALLENGE was not sent in an expanded datagram. ¶ An endpoint MUST NOT send more than one PATH_RESPONSE frame in response to one PATH_CHALLENGE frame; see Section 13.3 .", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.1.4-p2008-s28", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "The peer is expected to send more PATH_CHALLENGE frames as necessary to evoke additional PATH_RESPONSE frames. ¶ 8.2.3.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.1.4-p2009-s29", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "Successful Path Validation Path validation succeeds when a PATH_RESPONSE frame is received that contains the data that was sent in a previous PATH_CHALLENGE frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.1.4-p2010-s30", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "A PATH_RESPONSE frame received on any network path validates the path on which the PATH_CHALLENGE was sent. ¶ If an endpoint sends a PATH_CHALLENGE frame in a datagram that is not expanded to at least 1200 bytes and if the response to it validates the peer address, the path is validated but not the path MTU.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.1.4-p2011-s31", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "As a result, the endpoint can now send more than three times the amount of data that has been received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.4-p2012-s32", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "However, the endpoint MUST initiate another path validation with an expanded datagram to verify that the path supports the required MTU. ¶ Receipt of an acknowledgment for a packet containing a PATH_CHALLENGE frame is not adequate validation, since the acknowledgment can be spoofed by a malicious peer. ¶ 8.2.4.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.1.4-p2013-s33", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "Failed Path Validation Path validation only fails when the endpoint attempting to validate the path abandons its attempt to validate the path. ¶ Endpoints SHOULD abandon path validation based on a timer.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.4-p2014-s34", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "When setting this timer, implementations are cautioned that the new path could have a longer round-trip time than the original.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.4-p2015-s35", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "A value of three times the larger of the current PTO or the PTO for the new path (using kInitialRtt, as defined in [ QUIC-RECOVERY ] ) is RECOMMENDED . ¶ This timeout allows for multiple PTOs to expire prior to failing path validation, so that loss of a single PATH_CHALLENGE or PATH_RESPONSE frame does not cause path validation failure. ¶ Note that the endpoint might receive packets containing other frames on the new path, but a PATH_RESPONSE frame with appropriate data is required for path validation to succeed. ¶ When an endpoint abandons path validation, it determines that the path is unusable.", "facet": "frames", "normative": true, "modalities": ["RECOMMENDED"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.1.4-p2016-s36", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "This does not necessarily imply a failure of the connection -- endpoints can continue sending packets over other paths as appropriate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.1.4-p2017-s37", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "If no paths are available, an endpoint can wait for a new path to become available or close the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.1.4-p2018-s38", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "An endpoint that has no valid network path to its peer MAY signal this using the NO_VIABLE_PATH connection error, noting that this is only possible if the network path exists but does not support the required MTU ( Section 14 ). ¶ A path validation might be abandoned for other reasons besides failure.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.1.4-p2019-s39", "section": "8.1.4", "anchor": "#name-address-validation-token-in", "para_id": "8.1.4-p450", "text": "Primarily, this happens if a connection migration to a new path is initiated while a path validation on the old path is in progress. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2-p2020-s1", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p451", "text": "Path validation is used by both peers during connection migration (see Section 9 ) to verify reachability after a change of address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2-p2021-s2", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p451", "text": "In path validation, endpoints test reachability between a specific local address and a specific peer address, where an address is the 2-tuple of IP address and port. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2-p2022-s1", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p452", "text": "Path validation tests that packets sent on a path to a peer are received by that peer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2-p2023-s2", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p452", "text": "Path validation is used to ensure that packets received from a migrating peer do not carry a spoofed source address. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2-p2024-s1", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p453", "text": "Path validation does not validate that a peer can send in the return direction.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2-p2025-s2", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p453", "text": "Acknowledgments cannot be used for return path validation because they contain insufficient entropy and might be spoofed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2-p2026-s3", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p453", "text": "Endpoints independently determine reachability on each direction of a path, and therefore return reachability can only be established by the peer. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2-p2027-s1", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p454", "text": "Path validation can be used at any time by either endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2-p2028-s2", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p454", "text": "For instance, an endpoint might check that a peer is still in possession of its address after a period of quiescence. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2-p2029-s1", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p455", "text": "Path validation is not designed as a NAT traversal mechanism.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2-p2030-s2", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p455", "text": "Though the mechanism described here might be effective for the creation of NAT bindings that support NAT traversal, the expectation is that one endpoint is able to receive packets without first having sent a packet on that path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2-p2031-s3", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p455", "text": "Effective NAT traversal needs additional synchronization mechanisms that are not provided here. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2-p2032-s1", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p456", "text": "An endpoint MAY include other frames with the PATH_CHALLENGE and PATH_RESPONSE frames used for path validation.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2-p2033-s2", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p456", "text": "In particular, an endpoint can include PADDING frames with a PATH_CHALLENGE frame for Path Maximum Transmission Unit Discovery (PMTUD); see Section 14.2.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.2-p2034-s3", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p456", "text": "An endpoint can also include its own PATH_CHALLENGE frame when sending a PATH_RESPONSE frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2-p2035-s1", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p457", "text": "An endpoint uses a new connection ID for probes sent from a new local address; see Section 9.5 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2-p2036-s2", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p457", "text": "When probing a new path, an endpoint can ensure that its peer has an unused connection ID available for responses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2-p2037-s3", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p457", "text": "Sending NEW_CONNECTION_ID and PATH_CHALLENGE frames in the same packet, if the peer's active_connection_id_limit permits, ensures that an unused connection ID will be available to the peer when sending a response. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2-p2038-s1", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p458", "text": "An endpoint can choose to simultaneously probe multiple paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2-p2039-s2", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p458", "text": "The number of simultaneous paths used for probes is limited by the number of extra connection IDs its peer has previously supplied, since each new local address used for a probe requires a previously unused connection ID. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2-p2040-s1", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p459", "text": "8.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2-p2041-s2", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p459", "text": "Initiating Path Validation To initiate path validation, an endpoint sends a PATH_CHALLENGE frame containing an unpredictable payload on the path to be validated. ¶ An endpoint MAY send multiple PATH_CHALLENGE frames to guard against packet loss.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2-p2042-s3", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p459", "text": "However, an endpoint SHOULD NOT send multiple PATH_CHALLENGE frames in a single packet. ¶ An endpoint SHOULD NOT probe a new path with packets containing a PATH_CHALLENGE frame more frequently than it would send an Initial packet.", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT", "SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2-p2043-s4", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p459", "text": "This ensures that connection migration is no more load on a new path than establishing a new connection. ¶ The endpoint MUST use unpredictable data in every PATH_CHALLENGE frame so that it can associate the peer's response with the corresponding PATH_CHALLENGE. ¶ An endpoint MUST expand datagrams that contain a PATH_CHALLENGE frame to at least the smallest allowed maximum datagram size of 1200 bytes, unless the anti-amplification limit for the path does not permit sending a datagram of this size.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2-p2044-s5", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p459", "text": "Sending UDP datagrams of this size ensures that the network path from the endpoint to the peer can be used for QUIC; see Section 14 . ¶ When an endpoint is unable to expand the datagram size to 1200 bytes due to the anti-amplification limit, the path MTU will not be validated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2-p2045-s6", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p459", "text": "To ensure that the path MTU is large enough, the endpoint MUST perform a second path validation by sending a PATH_CHALLENGE frame in a datagram of at least 1200 bytes.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2-p2046-s7", "section": "8.2", "anchor": "#name-path-validation", "para_id": "8.2-p459", "text": "This additional validation can be performed after a PATH_RESPONSE is successfully received or when enough bytes have been received on the path that sending the larger datagram will not result in exceeding the anti-amplification limit. ¶ Unlike other cases where datagrams are expanded, endpoints MUST NOT discard datagrams that appear to be too small when they contain PATH_CHALLENGE or PATH_RESPONSE. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.1-p2047-s1", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p460", "text": "To initiate path validation, an endpoint sends a PATH_CHALLENGE frame containing an unpredictable payload on the path to be validated. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.1-p2048-s1", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p461", "text": "An endpoint MAY send multiple PATH_CHALLENGE frames to guard against packet loss.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.1-p2049-s2", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p461", "text": "However, an endpoint SHOULD NOT send multiple PATH_CHALLENGE frames in a single packet. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.1-p2050-s1", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p462", "text": "An endpoint SHOULD NOT probe a new path with packets containing a PATH_CHALLENGE frame more frequently than it would send an Initial packet.", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.1-p2051-s2", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p462", "text": "This ensures that connection migration is no more load on a new path than establishing a new connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.1-p2052-s1", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p463", "text": "The endpoint MUST use unpredictable data in every PATH_CHALLENGE frame so that it can associate the peer's response with the corresponding PATH_CHALLENGE. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2.1-p2053-s1", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p464", "text": "An endpoint MUST expand datagrams that contain a PATH_CHALLENGE frame to at least the smallest allowed maximum datagram size of 1200 bytes, unless the anti-amplification limit for the path does not permit sending a datagram of this size.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2.1-p2054-s2", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p464", "text": "Sending UDP datagrams of this size ensures that the network path from the endpoint to the peer can be used for QUIC; see Section 14 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.1-p2055-s1", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p465", "text": "When an endpoint is unable to expand the datagram size to 1200 bytes due to the anti-amplification limit, the path MTU will not be validated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.1-p2056-s2", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p465", "text": "To ensure that the path MTU is large enough, the endpoint MUST perform a second path validation by sending a PATH_CHALLENGE frame in a datagram of at least 1200 bytes.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2.1-p2057-s3", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p465", "text": "This additional validation can be performed after a PATH_RESPONSE is successfully received or when enough bytes have been received on the path that sending the larger datagram will not result in exceeding the anti-amplification limit. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.1-p2058-s1", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p466", "text": "Unlike other cases where datagrams are expanded, endpoints MUST NOT discard datagrams that appear to be too small when they contain PATH_CHALLENGE or PATH_RESPONSE. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.1-p2059-s1", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p467", "text": "8.2.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.1-p2060-s2", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p467", "text": "Path Validation Responses On receiving a PATH_CHALLENGE frame, an endpoint MUST respond by echoing the data contained in the PATH_CHALLENGE frame in a PATH_RESPONSE frame.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2.1-p2061-s3", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p467", "text": "An endpoint MUST NOT delay transmission of a packet containing a PATH_RESPONSE frame unless constrained by congestion control. ¶ A PATH_RESPONSE frame MUST be sent on the network path where the PATH_CHALLENGE frame was received.", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.1-p2062-s4", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p467", "text": "This ensures that path validation by a peer only succeeds if the path is functional in both directions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.1-p2063-s5", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p467", "text": "This requirement MUST NOT be enforced by the endpoint that initiates path validation, as that would enable an attack on migration; see Section 9.3.3 . ¶ An endpoint MUST expand datagrams that contain a PATH_RESPONSE frame to at least the smallest allowed maximum datagram size of 1200 bytes.", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2.1-p2064-s6", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p467", "text": "This verifies that the path is able to carry datagrams of this size in both directions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.1-p2065-s7", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p467", "text": "However, an endpoint MUST NOT expand the datagram containing the PATH_RESPONSE if the resulting data exceeds the anti-amplification limit.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.1-p2066-s8", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p467", "text": "This is expected to only occur if the received PATH_CHALLENGE was not sent in an expanded datagram. ¶ An endpoint MUST NOT send more than one PATH_RESPONSE frame in response to one PATH_CHALLENGE frame; see Section 13.3 .", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.1-p2067-s9", "section": "8.2.1", "anchor": "#name-initiating-path-validation", "para_id": "8.2.1-p467", "text": "The peer is expected to send more PATH_CHALLENGE frames as necessary to evoke additional PATH_RESPONSE frames. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.2-p2068-s1", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p468", "text": "On receiving a PATH_CHALLENGE frame, an endpoint MUST respond by echoing the data contained in the PATH_CHALLENGE frame in a PATH_RESPONSE frame.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2.2-p2069-s2", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p468", "text": "An endpoint MUST NOT delay transmission of a packet containing a PATH_RESPONSE frame unless constrained by congestion control. ¶", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2.2-p2070-s1", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p469", "text": "A PATH_RESPONSE frame MUST be sent on the network path where the PATH_CHALLENGE frame was received.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.2-p2071-s2", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p469", "text": "This ensures that path validation by a peer only succeeds if the path is functional in both directions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.2-p2072-s3", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p469", "text": "This requirement MUST NOT be enforced by the endpoint that initiates path validation, as that would enable an attack on migration; see Section 9.3.3 . ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.2.2-p2073-s1", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p470", "text": "An endpoint MUST expand datagrams that contain a PATH_RESPONSE frame to at least the smallest allowed maximum datagram size of 1200 bytes.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2.2-p2074-s2", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p470", "text": "This verifies that the path is able to carry datagrams of this size in both directions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.2-p2075-s3", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p470", "text": "However, an endpoint MUST NOT expand the datagram containing the PATH_RESPONSE if the resulting data exceeds the anti-amplification limit.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.2-p2076-s4", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p470", "text": "This is expected to only occur if the received PATH_CHALLENGE was not sent in an expanded datagram. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.2-p2077-s1", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p471", "text": "An endpoint MUST NOT send more than one PATH_RESPONSE frame in response to one PATH_CHALLENGE frame; see Section 13.3 .", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.2-p2078-s2", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p471", "text": "The peer is expected to send more PATH_CHALLENGE frames as necessary to evoke additional PATH_RESPONSE frames. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.2-p2079-s1", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p472", "text": "8.2.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.2-p2080-s2", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p472", "text": "Successful Path Validation Path validation succeeds when a PATH_RESPONSE frame is received that contains the data that was sent in a previous PATH_CHALLENGE frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.2-p2081-s3", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p472", "text": "A PATH_RESPONSE frame received on any network path validates the path on which the PATH_CHALLENGE was sent. ¶ If an endpoint sends a PATH_CHALLENGE frame in a datagram that is not expanded to at least 1200 bytes and if the response to it validates the peer address, the path is validated but not the path MTU.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.2-p2082-s4", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p472", "text": "As a result, the endpoint can now send more than three times the amount of data that has been received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.2-p2083-s5", "section": "8.2.2", "anchor": "#name-path-validation-responses", "para_id": "8.2.2-p472", "text": "However, the endpoint MUST initiate another path validation with an expanded datagram to verify that the path supports the required MTU. ¶ Receipt of an acknowledgment for a packet containing a PATH_CHALLENGE frame is not adequate validation, since the acknowledgment can be spoofed by a malicious peer. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.3-p2084-s1", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p473", "text": "Path validation succeeds when a PATH_RESPONSE frame is received that contains the data that was sent in a previous PATH_CHALLENGE frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.3-p2085-s2", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p473", "text": "A PATH_RESPONSE frame received on any network path validates the path on which the PATH_CHALLENGE was sent. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.3-p2086-s1", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p474", "text": "If an endpoint sends a PATH_CHALLENGE frame in a datagram that is not expanded to at least 1200 bytes and if the response to it validates the peer address, the path is validated but not the path MTU.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.3-p2087-s2", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p474", "text": "As a result, the endpoint can now send more than three times the amount of data that has been received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.3-p2088-s3", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p474", "text": "However, the endpoint MUST initiate another path validation with an expanded datagram to verify that the path supports the required MTU. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.2.3-p2089-s1", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p475", "text": "Receipt of an acknowledgment for a packet containing a PATH_CHALLENGE frame is not adequate validation, since the acknowledgment can be spoofed by a malicious peer. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.3-p2090-s1", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p476", "text": "8.2.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.3-p2091-s2", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p476", "text": "Failed Path Validation Path validation only fails when the endpoint attempting to validate the path abandons its attempt to validate the path. ¶ Endpoints SHOULD abandon path validation based on a timer.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.3-p2092-s3", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p476", "text": "When setting this timer, implementations are cautioned that the new path could have a longer round-trip time than the original.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.3-p2093-s4", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p476", "text": "A value of three times the larger of the current PTO or the PTO for the new path (using kInitialRtt, as defined in [ QUIC-RECOVERY ] ) is RECOMMENDED . ¶ This timeout allows for multiple PTOs to expire prior to failing path validation, so that loss of a single PATH_CHALLENGE or PATH_RESPONSE frame does not cause path validation failure. ¶ Note that the endpoint might receive packets containing other frames on the new path, but a PATH_RESPONSE frame with appropriate data is required for path validation to succeed. ¶ When an endpoint abandons path validation, it determines that the path is unusable.", "facet": "frames", "normative": true, "modalities": ["RECOMMENDED"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.3-p2094-s5", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p476", "text": "This does not necessarily imply a failure of the connection -- endpoints can continue sending packets over other paths as appropriate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.3-p2095-s6", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p476", "text": "If no paths are available, an endpoint can wait for a new path to become available or close the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.3-p2096-s7", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p476", "text": "An endpoint that has no valid network path to its peer MAY signal this using the NO_VIABLE_PATH connection error, noting that this is only possible if the network path exists but does not support the required MTU ( Section 14 ). ¶ A path validation might be abandoned for other reasons besides failure.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.3-p2097-s8", "section": "8.2.3", "anchor": "#name-successful-path-validation", "para_id": "8.2.3-p476", "text": "Primarily, this happens if a connection migration to a new path is initiated while a path validation on the old path is in progress. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2098-s1", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p477", "text": "Path validation only fails when the endpoint attempting to validate the path abandons its attempt to validate the path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2099-s1", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p478", "text": "Endpoints SHOULD abandon path validation based on a timer.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.2.4-p2100-s2", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p478", "text": "When setting this timer, implementations are cautioned that the new path could have a longer round-trip time than the original.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2101-s3", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p478", "text": "A value of three times the larger of the current PTO or the PTO for the new path (using kInitialRtt, as defined in [ QUIC-RECOVERY ] ) is RECOMMENDED . ¶", "facet": "other", "normative": true, "modalities": ["RECOMMENDED"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.2.4-p2102-s1", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p479", "text": "This timeout allows for multiple PTOs to expire prior to failing path validation, so that loss of a single PATH_CHALLENGE or PATH_RESPONSE frame does not cause path validation failure. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.4-p2103-s1", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p480", "text": "Note that the endpoint might receive packets containing other frames on the new path, but a PATH_RESPONSE frame with appropriate data is required for path validation to succeed. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.4-p2104-s1", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p481", "text": "When an endpoint abandons path validation, it determines that the path is unusable.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2105-s2", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p481", "text": "This does not necessarily imply a failure of the connection -- endpoints can continue sending packets over other paths as appropriate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2106-s3", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p481", "text": "If no paths are available, an endpoint can wait for a new path to become available or close the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2107-s4", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p481", "text": "An endpoint that has no valid network path to its peer MAY signal this using the NO_VIABLE_PATH connection error, noting that this is only possible if the network path exists but does not support the required MTU ( Section 14 ). ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2108-s1", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p482", "text": "A path validation might be abandoned for other reasons besides failure.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2109-s2", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p482", "text": "Primarily, this happens if a connection migration to a new path is initiated while a path validation on the old path is in progress. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2110-s1", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "9.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2111-s2", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Connection Migration The use of a connection ID allows connections to survive changes to endpoint addresses (IP address and port), such as those caused by an endpoint migrating to a new network.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2112-s3", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "This section describes the process by which an endpoint migrates to a new address. ¶ The design of QUIC relies on endpoints retaining a stable address for the duration of the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2113-s4", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "An endpoint MUST NOT initiate connection migration before the handshake is confirmed, as defined in Section 4.1.2 of [ QUIC-TLS ] . ¶ If the peer sent the disable_active_migration transport parameter, an endpoint also MUST NOT send packets (including probing packets; see Section 9.1 ) from a different local address to the address the peer used during the handshake, unless the endpoint has acted on a preferred_address transport parameter from the peer.", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2114-s5", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If the peer violates this requirement, the endpoint MUST either drop the incoming packets on that path without generating a Stateless Reset or proceed with path validation and allow the peer to migrate.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.4-p2115-s6", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Generating a Stateless Reset or closing the connection would allow third parties in the network to cause connections to close by spoofing or otherwise manipulating observed traffic. ¶ Not all changes of peer address are intentional, or active, migrations.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.2.4-p2116-s7", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "The peer could experience NAT rebinding: a change of address due to a middlebox, usually a NAT, allocating a new outgoing port or even a new outgoing IP address for a flow.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2117-s8", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "An endpoint MUST perform path validation ( Section 8.2 ) if it detects any change to a peer's address, unless it has previously validated that address. ¶ When an endpoint has no validated path on which to send packets, it MAY discard connection state.", "facet": "state_machine", "normative": true, "modalities": ["MUST", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.4-p2118-s9", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "An endpoint capable of connection migration MAY wait for a new path to become available before discarding connection state. ¶ This document limits migration of connections to new client addresses, except as described in Section 9.6 .", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2.4-p2119-s10", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Clients are responsible for initiating all migrations.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2120-s11", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Servers do not send non-probing packets (see Section 9.1 ) toward a client address until they see a non-probing packet from that address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2121-s12", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If a client receives packets from an unknown server address, the client MUST discard these packets. ¶ 9.1.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2122-s13", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Probing a New Path An endpoint MAY probe for peer reachability from a new local address using path validation ( Section 8.2 ) prior to migrating the connection to the new local address.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.2.4-p2123-s14", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Failure of path validation simply means that the new path is not usable for this connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2124-s15", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Failure to validate a path does not cause the connection to end unless there are no valid alternative paths available. ¶ PATH_CHALLENGE, PATH_RESPONSE, NEW_CONNECTION_ID, and PADDING frames are \"probing frames\", and all other frames are \"non-probing frames\".", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.2.4-p2125-s16", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "A packet containing only probing frames is a \"probing packet\", and a packet containing any other frame is a \"non-probing packet\". ¶ 9.2.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.2.4-p2126-s17", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Initiating Connection Migration An endpoint can migrate a connection to a new local address by sending packets containing non-probing frames from that address. ¶ Each endpoint validates its peer's address during connection establishment.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.2.4-p2127-s18", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Therefore, a migrating endpoint can send to its peer knowing that the peer is willing to receive at the peer's current address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2128-s19", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Thus, an endpoint can migrate to a new local address without first validating the peer's address. ¶ To establish reachability on the new path, an endpoint initiates path validation ( Section 8.2 ) on the new path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2129-s20", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "An endpoint MAY defer path validation until after a peer sends the next non-probing frame to its new address. ¶ When migrating, the new path might not support the endpoint's current sending rate.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.4-p2130-s21", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Therefore, the endpoint resets its congestion controller and RTT estimate, as described in Section 9.4 . ¶ The new path might not have the same ECN capability.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2131-s22", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Therefore, the endpoint validates ECN capability as described in Section 13.4 . ¶ 9.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2132-s23", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Responding to Connection Migration Receiving a packet from a new peer address containing a non-probing frame indicates that the peer has migrated to that address. ¶ If the recipient permits the migration, it MUST send subsequent packets to the new peer address and MUST initiate path validation ( Section 8.2 ) to verify the peer's ownership of the address if validation is not already underway.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.4-p2133-s24", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If the recipient has no unused connection IDs from the peer, it will not be able to send anything on the new path until the peer provides one; see Section 9.5 . ¶ An endpoint only changes the address to which it sends packets in response to the highest-numbered non-probing packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2134-s25", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "This ensures that an endpoint does not send packets to an old peer address in the case that it receives reordered packets. ¶ An endpoint MAY send data to an unvalidated peer address, but it MUST protect against potential attacks as described in Sections 9.3.1 and 9.3.2 .", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2135-s26", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "An endpoint MAY skip validation of a peer address if that address has been seen recently.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2136-s27", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "In particular, if an endpoint returns to a previously validated path after detecting some form of spurious migration, skipping address validation and restoring loss detection and congestion state can reduce the performance impact of the attack. ¶ After changing the address to which it sends non-probing packets, an endpoint can abandon any path validation for other addresses. ¶ Receiving a packet from a new peer address could be the result of a NAT rebinding at the peer. ¶ After verifying a new client address, the server SHOULD send new address validation tokens ( Section 8 ) to the client. ¶ 9.3.1.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.4-p2137-s28", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Peer Address Spoofing It is possible that a peer is spoofing its source address to cause an endpoint to send excessive amounts of data to an unwilling host.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2138-s29", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If the endpoint sends significantly more data than the spoofing peer, connection migration might be used to amplify the volume of data that an attacker can generate toward a victim. ¶ As described in Section 9.3 , an endpoint is required to validate a peer's new address to confirm the peer's possession of the new address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2139-s30", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Until a peer's address is deemed valid, an endpoint limits the amount of data it sends to that address; see Section 8 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2140-s31", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "In the absence of this limit, an endpoint risks being used for a denial-of-service attack against an unsuspecting victim. ¶ If an endpoint skips validation of a peer address as described above, it does not need to limit its sending rate. ¶ 9.3.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2141-s32", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "On-Path Address Spoofing An on-path attacker could cause a spurious connection migration by copying and forwarding a packet with a spoofed address such that it arrives before the original packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2142-s33", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "The packet with the spoofed address will be seen to come from a migrating connection, and the original packet will be seen as a duplicate and dropped.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2143-s34", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "After a spurious migration, validation of the source address will fail because the entity at the source address does not have the necessary cryptographic keys to read or respond to the PATH_CHALLENGE frame that is sent to it even if it wanted to. ¶ To protect the connection from failing due to such a spurious migration, an endpoint MUST revert to using the last validated peer address when validation of a new peer address fails.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.4-p2144-s35", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Additionally, receipt of packets with higher packet numbers from the legitimate peer address will trigger another connection migration.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2145-s36", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "This will cause the validation of the address of the spurious migration to be abandoned, thus containing migrations initiated by the attacker injecting a single packet. ¶ If an endpoint has no state about the last validated peer address, it MUST close the connection silently by discarding all connection state.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.4-p2146-s37", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "This results in new packets on the connection being handled generically.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2147-s38", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "For instance, an endpoint MAY send a Stateless Reset in response to any further incoming packets. ¶ 9.3.3.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "8.2.4-p2148-s39", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Off-Path Packet Forwarding An off-path attacker that can observe packets might forward copies of genuine packets to endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2149-s40", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If the copied packet arrives before the genuine packet, this will appear as a NAT rebinding.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2150-s41", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Any genuine packet will be discarded as a duplicate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2151-s42", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If the attacker is able to continue forwarding packets, it might be able to cause migration to a path via the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2152-s43", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "This places the attacker on-path, giving it the ability to observe or drop all subsequent packets. ¶ This style of attack relies on the attacker using a path that has approximately the same characteristics as the direct path between endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2153-s44", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "The attack is more reliable if relatively few packets are sent or if packet loss coincides with the attempted attack. ¶ A non-probing packet received on the original path that increases the maximum received packet number will cause the endpoint to move back to that path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2154-s45", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Eliciting packets on this path increases the likelihood that the attack is unsuccessful.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2155-s46", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Therefore, mitigation of this attack relies on triggering the exchange of packets. ¶ In response to an apparent migration, endpoints MUST validate the previously active path using a PATH_CHALLENGE frame.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2.4-p2156-s47", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "This induces the sending of new packets on that path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2157-s48", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If the path is no longer viable, the validation attempt will time out and fail; if the path is viable but no longer desired, the validation will succeed but only results in probing packets being sent on the path. ¶ An endpoint that receives a PATH_CHALLENGE on an active path SHOULD send a non-probing packet in response.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2158-s49", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If the non-probing packet arrives before any copy made by an attacker, this results in the connection being migrated back to the original path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2159-s50", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Any subsequent migration to another path restarts this entire process. ¶ This defense is imperfect, but this is not considered a serious problem.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2160-s51", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If the path via the attack is reliably faster than the original path despite multiple attempts to use that original path, it is not possible to distinguish between an attack and an improvement in routing. ¶ An endpoint could also use heuristics to improve detection of this style of attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2161-s52", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "For instance, NAT rebinding is improbable if packets were recently received on the old path; similarly, rebinding is rare on IPv6 paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2162-s53", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Endpoints can also look for duplicated packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2163-s54", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Conversely, a change in connection ID is more likely to indicate an intentional migration rather than an attack. ¶ 9.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2164-s55", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Loss Detection and Congestion Control The capacity available on the new path might not be the same as the old path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2165-s56", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Packets sent on the old path MUST NOT contribute to congestion control or RTT estimation for the new path. ¶ On confirming a peer's ownership of its new address, an endpoint MUST immediately reset the congestion controller and round-trip time estimator for the new path to initial values (see Appendices A.3 and B.3 of [ QUIC-RECOVERY ] ) unless the only change in the peer's address is its port number.", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.2.4-p2166-s57", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Because port-only changes are commonly the result of NAT rebinding or other middlebox activity, the endpoint MAY instead retain its congestion control state and round-trip estimate in those cases instead of reverting to initial values.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2.4-p2167-s58", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "In cases where congestion control state retained from an old path is used on a new path with substantially different characteristics, a sender could transmit too aggressively until the congestion controller and the RTT estimator have adapted.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "8.2.4-p2168-s59", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Generally, implementations are advised to be cautious when using previous values on a new path. ¶ There could be apparent reordering at the receiver when an endpoint sends data and probes from/to multiple addresses during the migration period, since the two resulting paths could have different round-trip times.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2169-s60", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "A receiver of packets on multiple paths will still send ACK frames covering all received packets. ¶ While multiple paths might be used during connection migration, a single congestion control context and a single loss recovery context (as described in [ QUIC-RECOVERY ] ) could be adequate.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.4-p2170-s61", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "For instance, an endpoint might delay switching to a new congestion control context until it is confirmed that an old path is no longer needed (such as the case described in Section 9.3.3 ). ¶ A sender can make exceptions for probe packets so that their loss detection is independent and does not unduly cause the congestion controller to reduce its sending rate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2171-s62", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "An endpoint might set a separate timer when a PATH_CHALLENGE is sent, which is canceled if the corresponding PATH_RESPONSE is received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2172-s63", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If the timer fires before the PATH_RESPONSE is received, the endpoint might send a new PATH_CHALLENGE and restart the timer for a longer period of time.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2173-s64", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "This timer SHOULD be set as described in Section 6.2.1 of [ QUIC-RECOVERY ] and MUST NOT be more aggressive. ¶ 9.5.", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.2.4-p2174-s65", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Privacy Implications of Connection Migration Using a stable connection ID on multiple network paths would allow a passive observer to correlate activity between those paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2175-s66", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "An endpoint that moves between networks might not wish to have their activity correlated by any entity other than their peer, so different connection IDs are used when sending from different local addresses, as discussed in Section 5.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2176-s67", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "For this to be effective, endpoints need to ensure that connection IDs they provide cannot be linked by any other entity. ¶ At any time, endpoints MAY change the Destination Connection ID they transmit with to a value that has not been used on another path. ¶ An endpoint MUST NOT reuse a connection ID when sending from more than one local address -- for example, when initiating connection migration as described in Section 9.2 or when probing a new network path as described in Section 9.1 . ¶ Similarly, an endpoint MUST NOT reuse a connection ID when sending to more than one destination address.", "facet": "other", "normative": true, "modalities": ["MAY", "MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2177-s68", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Due to network changes outside the control of its peer, an endpoint might receive packets from a new source address with the same Destination Connection ID field value, in which case it MAY continue to use the current connection ID with the new remote address while still sending from the same local address. ¶ These requirements regarding connection ID reuse apply only to the sending of packets, as unintentional changes in path without a change in connection ID are possible.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2178-s69", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "For example, after a period of network inactivity, NAT rebinding might cause packets to be sent on a new path when the client resumes sending.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2179-s70", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "An endpoint responds to such an event as described in Section 9.3 . ¶ Using different connection IDs for packets sent in both directions on each new network path eliminates the use of the connection ID for linking packets from the same connection across different network paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2180-s71", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Header protection ensures that packet numbers cannot be used to correlate activity.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2181-s72", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "This does not prevent other properties of packets, such as timing and size, from being used to correlate activity. ¶ An endpoint SHOULD NOT initiate migration with a peer that has requested a zero-length connection ID, because traffic over the new path might be trivially linkable to traffic over the old one.", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.2.4-p2182-s73", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If the server is able to associate packets with a zero-length connection ID to the right connection, it means that the server is using other information to demultiplex packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2183-s74", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "For example, a server might provide a unique address to every client -- for instance, using HTTP alternative services [ ALTSVC ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2184-s75", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Information that might allow correct routing of packets across multiple network paths will also allow activity on those paths to be linked by entities other than the peer. ¶ A client might wish to reduce linkability by switching to a new connection ID, source UDP port, or IP address (see [ RFC8981 ] ) when sending traffic after a period of inactivity.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2185-s76", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Changing the address from which it sends packets at the same time might cause the server to detect a connection migration.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2186-s77", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "This ensures that the mechanisms that support migration are exercised even for clients that do not experience NAT rebindings or genuine migrations.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2187-s78", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Changing address can cause a peer to reset its congestion control state (see Section 9.4 ), so addresses SHOULD only be changed infrequently. ¶ An endpoint that exhausts available connection IDs cannot probe new paths or initiate migration, nor can it respond to probes or attempts by its peer to migrate.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2.4-p2188-s79", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "To ensure that migration is possible and packets sent on different paths cannot be correlated, endpoints SHOULD provide new connection IDs before peers migrate; see Section 5.1.1 .", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.2.4-p2189-s80", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If a peer might have exhausted available connection IDs, a migrating endpoint could include a NEW_CONNECTION_ID frame in all packets sent on a new network path. ¶ 9.6.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.4-p2190-s81", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Server's Preferred Address QUIC allows servers to accept connections on one IP address and attempt to transfer these connections to a more preferred address shortly after the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2191-s82", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "This is particularly useful when clients initially connect to an address shared by multiple servers but would prefer to use a unicast address to ensure connection stability.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2192-s83", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "This section describes the protocol for migrating a connection to a preferred server address. ¶ Migrating a connection to a new server address mid-connection is not supported by the version of QUIC specified in this document.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2193-s84", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If a client receives packets from a new server address when the client has not initiated a migration to that address, the client SHOULD discard these packets. ¶ 9.6.1.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2194-s85", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Communicating a Preferred Address A server conveys a preferred address by including the preferred_address transport parameter in the TLS handshake. ¶ Servers MAY communicate a preferred address of each address family (IPv4 and IPv6) to allow clients to pick the one most suited to their network attachment. ¶ Once the handshake is confirmed, the client SHOULD select one of the two addresses provided by the server and initiate path validation (see Section 8.2 ).", "facet": "other", "normative": true, "modalities": ["MAY", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.2.4-p2195-s86", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "A client constructs packets using any previously unused active connection ID, taken from either the preferred_address transport parameter or a NEW_CONNECTION_ID frame. ¶ As soon as path validation succeeds, the client SHOULD begin sending all future packets to the new server address using the new connection ID and discontinue use of the old server address.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "8.2.4-p2196-s87", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If path validation fails, the client MUST continue sending all future packets to the server's original IP address. ¶ 9.6.2.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2197-s88", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Migration to a Preferred Address A client that migrates to a preferred address MUST validate the address it chooses before migrating; see Section 21.5.3 . ¶ A server might receive a packet addressed to its preferred IP address at any time after it accepts a connection.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2198-s89", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If this packet contains a PATH_CHALLENGE frame, the server sends a packet containing a PATH_RESPONSE frame as per Section 8.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "8.2.4-p2199-s90", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "The server MUST send non-probing packets from its original address until it receives a non-probing packet from the client at its preferred address and until the server has validated the new path. ¶ The server MUST probe on the path toward the client from its preferred address.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2200-s91", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "This helps to guard against spurious migration initiated by an attacker. ¶ Once the server has completed its path validation and has received a non-probing packet with a new largest packet number on its preferred address, the server begins sending non-probing packets to the client exclusively from its preferred IP address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2201-s92", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "The server SHOULD drop newer packets for this connection that are received on the old IP address.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2202-s93", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "The server MAY continue to process delayed packets that are received on the old IP address. ¶ The addresses that a server provides in the preferred_address transport parameter are only valid for the connection in which they are provided.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2203-s94", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "A client MUST NOT use these for other connections, including connections that are resumed from the current connection. ¶ 9.6.3.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.2.4-p2204-s95", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Interaction of Client Migration and Preferred Address A client might need to perform a connection migration before it has migrated to the server's preferred address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "8.2.4-p2205-s96", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "In this case, the client SHOULD perform path validation to both the original and preferred server address from the client's new address concurrently. ¶ If path validation of the server's preferred address succeeds, the client MUST abandon validation of the original address and migrate to using the server's preferred address.", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2206-s97", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "If path validation of the server's preferred address fails but validation of the server's original address succeeds, the client MAY migrate to its new address and continue sending to the server's original address. ¶ If packets received at the server's preferred address have a different source address than observed from the client during the handshake, the server MUST protect against potential attacks as described in Sections 9.3.1 and 9.3.2 .", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2207-s98", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "In addition to intentional simultaneous migration, this might also occur because the client's access network used a different NAT binding for the server's preferred address. ¶ Servers SHOULD initiate path validation to the client's new address upon receiving a probe packet from a different address; see Section 8 . ¶ A client that migrates to a new address SHOULD use a preferred address from the same address family for the server. ¶ The connection ID provided in the preferred_address transport parameter is not specific to the addresses that are provided.", "facet": "other", "normative": true, "modalities": ["SHOULD", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2208-s99", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "This connection ID is provided to ensure that the client has a connection ID available for migration, but the client MAY use this connection ID on any path. ¶ 9.7.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "8.2.4-p2209-s100", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Use of IPv6 Flow Label and Migration Endpoints that send data using IPv6 SHOULD apply an IPv6 flow label in compliance with [ RFC6437 ] , unless the local API does not allow setting IPv6 flow labels. ¶ The flow label generation MUST be designed to minimize the chances of linkability with a previously used flow label, as a stable flow label would enable correlating activity on multiple paths; see Section 9.5 . ¶ [ RFC6437 ] suggests deriving values using a pseudorandom function to generate flow labels.", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "8.2.4-p2210-s101", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "Including the Destination Connection ID field in addition to source and destination addresses when generating flow labels ensures that changes are synchronized with changes in other observable identifiers.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "8.2.4-p2211-s102", "section": "8.2.4", "anchor": "#name-failed-path-validation", "para_id": "8.2.4-p483", "text": "A cryptographic hash function that combines these inputs with a local secret is one way this might be implemented. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9-p2212-s1", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p484", "text": "The use of a connection ID allows connections to survive changes to endpoint addresses (IP address and port), such as those caused by an endpoint migrating to a new network.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9-p2213-s2", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p484", "text": "This section describes the process by which an endpoint migrates to a new address. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9-p2214-s1", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p485", "text": "The design of QUIC relies on endpoints retaining a stable address for the duration of the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9-p2215-s2", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p485", "text": "An endpoint MUST NOT initiate connection migration before the handshake is confirmed, as defined in Section 4.1.2 of [ QUIC-TLS ] . ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9-p2216-s1", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p486", "text": "If the peer sent the disable_active_migration transport parameter, an endpoint also MUST NOT send packets (including probing packets; see Section 9.1 ) from a different local address to the address the peer used during the handshake, unless the endpoint has acted on a preferred_address transport parameter from the peer.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9-p2217-s2", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p486", "text": "If the peer violates this requirement, the endpoint MUST either drop the incoming packets on that path without generating a Stateless Reset or proceed with path validation and allow the peer to migrate.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9-p2218-s3", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p486", "text": "Generating a Stateless Reset or closing the connection would allow third parties in the network to cause connections to close by spoofing or otherwise manipulating observed traffic. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9-p2219-s1", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p487", "text": "Not all changes of peer address are intentional, or active, migrations.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9-p2220-s2", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p487", "text": "The peer could experience NAT rebinding: a change of address due to a middlebox, usually a NAT, allocating a new outgoing port or even a new outgoing IP address for a flow.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9-p2221-s3", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p487", "text": "An endpoint MUST perform path validation ( Section 8.2 ) if it detects any change to a peer's address, unless it has previously validated that address. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9-p2222-s1", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p488", "text": "When an endpoint has no validated path on which to send packets, it MAY discard connection state.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9-p2223-s2", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p488", "text": "An endpoint capable of connection migration MAY wait for a new path to become available before discarding connection state. ¶", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9-p2224-s1", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p489", "text": "This document limits migration of connections to new client addresses, except as described in Section 9.6 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9-p2225-s2", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p489", "text": "Clients are responsible for initiating all migrations.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9-p2226-s3", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p489", "text": "Servers do not send non-probing packets (see Section 9.1 ) toward a client address until they see a non-probing packet from that address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9-p2227-s4", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p489", "text": "If a client receives packets from an unknown server address, the client MUST discard these packets. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9-p2228-s1", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p490", "text": "9.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9-p2229-s2", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p490", "text": "Probing a New Path An endpoint MAY probe for peer reachability from a new local address using path validation ( Section 8.2 ) prior to migrating the connection to the new local address.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9-p2230-s3", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p490", "text": "Failure of path validation simply means that the new path is not usable for this connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9-p2231-s4", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p490", "text": "Failure to validate a path does not cause the connection to end unless there are no valid alternative paths available. ¶ PATH_CHALLENGE, PATH_RESPONSE, NEW_CONNECTION_ID, and PADDING frames are \"probing frames\", and all other frames are \"non-probing frames\".", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9-p2232-s5", "section": "9", "anchor": "#name-connection-migration", "para_id": "9-p490", "text": "A packet containing only probing frames is a \"probing packet\", and a packet containing any other frame is a \"non-probing packet\". ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.1-p2233-s1", "section": "9.1", "anchor": "#name-probing-a-new-path", "para_id": "9.1-p491", "text": "An endpoint MAY probe for peer reachability from a new local address using path validation ( Section 8.2 ) prior to migrating the connection to the new local address.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.1-p2234-s2", "section": "9.1", "anchor": "#name-probing-a-new-path", "para_id": "9.1-p491", "text": "Failure of path validation simply means that the new path is not usable for this connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.1-p2235-s3", "section": "9.1", "anchor": "#name-probing-a-new-path", "para_id": "9.1-p491", "text": "Failure to validate a path does not cause the connection to end unless there are no valid alternative paths available. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.1-p2236-s1", "section": "9.1", "anchor": "#name-probing-a-new-path", "para_id": "9.1-p492", "text": "PATH_CHALLENGE, PATH_RESPONSE, NEW_CONNECTION_ID, and PADDING frames are \"probing frames\", and all other frames are \"non-probing frames\".", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.1-p2237-s2", "section": "9.1", "anchor": "#name-probing-a-new-path", "para_id": "9.1-p492", "text": "A packet containing only probing frames is a \"probing packet\", and a packet containing any other frame is a \"non-probing packet\". ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.1-p2238-s1", "section": "9.1", "anchor": "#name-probing-a-new-path", "para_id": "9.1-p493", "text": "9.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.1-p2239-s2", "section": "9.1", "anchor": "#name-probing-a-new-path", "para_id": "9.1-p493", "text": "Initiating Connection Migration An endpoint can migrate a connection to a new local address by sending packets containing non-probing frames from that address. ¶ Each endpoint validates its peer's address during connection establishment.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.1-p2240-s3", "section": "9.1", "anchor": "#name-probing-a-new-path", "para_id": "9.1-p493", "text": "Therefore, a migrating endpoint can send to its peer knowing that the peer is willing to receive at the peer's current address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.1-p2241-s4", "section": "9.1", "anchor": "#name-probing-a-new-path", "para_id": "9.1-p493", "text": "Thus, an endpoint can migrate to a new local address without first validating the peer's address. ¶ To establish reachability on the new path, an endpoint initiates path validation ( Section 8.2 ) on the new path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.1-p2242-s5", "section": "9.1", "anchor": "#name-probing-a-new-path", "para_id": "9.1-p493", "text": "An endpoint MAY defer path validation until after a peer sends the next non-probing frame to its new address. ¶ When migrating, the new path might not support the endpoint's current sending rate.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.1-p2243-s6", "section": "9.1", "anchor": "#name-probing-a-new-path", "para_id": "9.1-p493", "text": "Therefore, the endpoint resets its congestion controller and RTT estimate, as described in Section 9.4 . ¶ The new path might not have the same ECN capability.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.1-p2244-s7", "section": "9.1", "anchor": "#name-probing-a-new-path", "para_id": "9.1-p493", "text": "Therefore, the endpoint validates ECN capability as described in Section 13.4 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2245-s1", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p494", "text": "An endpoint can migrate a connection to a new local address by sending packets containing non-probing frames from that address. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.2-p2246-s1", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p495", "text": "Each endpoint validates its peer's address during connection establishment.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2247-s2", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p495", "text": "Therefore, a migrating endpoint can send to its peer knowing that the peer is willing to receive at the peer's current address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.2-p2248-s3", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p495", "text": "Thus, an endpoint can migrate to a new local address without first validating the peer's address. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2249-s1", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p496", "text": "To establish reachability on the new path, an endpoint initiates path validation ( Section 8.2 ) on the new path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2250-s2", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p496", "text": "An endpoint MAY defer path validation until after a peer sends the next non-probing frame to its new address. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.2-p2251-s1", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p497", "text": "When migrating, the new path might not support the endpoint's current sending rate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.2-p2252-s2", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p497", "text": "Therefore, the endpoint resets its congestion controller and RTT estimate, as described in Section 9.4 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2253-s1", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p498", "text": "The new path might not have the same ECN capability.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2254-s2", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p498", "text": "Therefore, the endpoint validates ECN capability as described in Section 13.4 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2255-s1", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "9.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2256-s2", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "Responding to Connection Migration Receiving a packet from a new peer address containing a non-probing frame indicates that the peer has migrated to that address. ¶ If the recipient permits the migration, it MUST send subsequent packets to the new peer address and MUST initiate path validation ( Section 8.2 ) to verify the peer's ownership of the address if validation is not already underway.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.2-p2257-s3", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "If the recipient has no unused connection IDs from the peer, it will not be able to send anything on the new path until the peer provides one; see Section 9.5 . ¶ An endpoint only changes the address to which it sends packets in response to the highest-numbered non-probing packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.2-p2258-s4", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "This ensures that an endpoint does not send packets to an old peer address in the case that it receives reordered packets. ¶ An endpoint MAY send data to an unvalidated peer address, but it MUST protect against potential attacks as described in Sections 9.3.1 and 9.3.2 .", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.2-p2259-s5", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "An endpoint MAY skip validation of a peer address if that address has been seen recently.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.2-p2260-s6", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "In particular, if an endpoint returns to a previously validated path after detecting some form of spurious migration, skipping address validation and restoring loss detection and congestion state can reduce the performance impact of the attack. ¶ After changing the address to which it sends non-probing packets, an endpoint can abandon any path validation for other addresses. ¶ Receiving a packet from a new peer address could be the result of a NAT rebinding at the peer. ¶ After verifying a new client address, the server SHOULD send new address validation tokens ( Section 8 ) to the client. ¶ 9.3.1.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.2-p2261-s7", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "Peer Address Spoofing It is possible that a peer is spoofing its source address to cause an endpoint to send excessive amounts of data to an unwilling host.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.2-p2262-s8", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "If the endpoint sends significantly more data than the spoofing peer, connection migration might be used to amplify the volume of data that an attacker can generate toward a victim. ¶ As described in Section 9.3 , an endpoint is required to validate a peer's new address to confirm the peer's possession of the new address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.2-p2263-s9", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "Until a peer's address is deemed valid, an endpoint limits the amount of data it sends to that address; see Section 8 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.2-p2264-s10", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "In the absence of this limit, an endpoint risks being used for a denial-of-service attack against an unsuspecting victim. ¶ If an endpoint skips validation of a peer address as described above, it does not need to limit its sending rate. ¶ 9.3.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.2-p2265-s11", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "On-Path Address Spoofing An on-path attacker could cause a spurious connection migration by copying and forwarding a packet with a spoofed address such that it arrives before the original packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2266-s12", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "The packet with the spoofed address will be seen to come from a migrating connection, and the original packet will be seen as a duplicate and dropped.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2267-s13", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "After a spurious migration, validation of the source address will fail because the entity at the source address does not have the necessary cryptographic keys to read or respond to the PATH_CHALLENGE frame that is sent to it even if it wanted to. ¶ To protect the connection from failing due to such a spurious migration, an endpoint MUST revert to using the last validated peer address when validation of a new peer address fails.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.2-p2268-s14", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "Additionally, receipt of packets with higher packet numbers from the legitimate peer address will trigger another connection migration.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2269-s15", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "This will cause the validation of the address of the spurious migration to be abandoned, thus containing migrations initiated by the attacker injecting a single packet. ¶ If an endpoint has no state about the last validated peer address, it MUST close the connection silently by discarding all connection state.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.2-p2270-s16", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "This results in new packets on the connection being handled generically.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2271-s17", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "For instance, an endpoint MAY send a Stateless Reset in response to any further incoming packets. ¶ 9.3.3.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.2-p2272-s18", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "Off-Path Packet Forwarding An off-path attacker that can observe packets might forward copies of genuine packets to endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2273-s19", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "If the copied packet arrives before the genuine packet, this will appear as a NAT rebinding.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.2-p2274-s20", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "Any genuine packet will be discarded as a duplicate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2275-s21", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "If the attacker is able to continue forwarding packets, it might be able to cause migration to a path via the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.2-p2276-s22", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "This places the attacker on-path, giving it the ability to observe or drop all subsequent packets. ¶ This style of attack relies on the attacker using a path that has approximately the same characteristics as the direct path between endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2277-s23", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "The attack is more reliable if relatively few packets are sent or if packet loss coincides with the attempted attack. ¶ A non-probing packet received on the original path that increases the maximum received packet number will cause the endpoint to move back to that path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.2-p2278-s24", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "Eliciting packets on this path increases the likelihood that the attack is unsuccessful.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2279-s25", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "Therefore, mitigation of this attack relies on triggering the exchange of packets. ¶ In response to an apparent migration, endpoints MUST validate the previously active path using a PATH_CHALLENGE frame.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.2-p2280-s26", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "This induces the sending of new packets on that path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2281-s27", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "If the path is no longer viable, the validation attempt will time out and fail; if the path is viable but no longer desired, the validation will succeed but only results in probing packets being sent on the path. ¶ An endpoint that receives a PATH_CHALLENGE on an active path SHOULD send a non-probing packet in response.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.2-p2282-s28", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "If the non-probing packet arrives before any copy made by an attacker, this results in the connection being migrated back to the original path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.2-p2283-s29", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "Any subsequent migration to another path restarts this entire process. ¶ This defense is imperfect, but this is not considered a serious problem.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2284-s30", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "If the path via the attack is reliably faster than the original path despite multiple attempts to use that original path, it is not possible to distinguish between an attack and an improvement in routing. ¶ An endpoint could also use heuristics to improve detection of this style of attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.2-p2285-s31", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "For instance, NAT rebinding is improbable if packets were recently received on the old path; similarly, rebinding is rare on IPv6 paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.2-p2286-s32", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "Endpoints can also look for duplicated packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.2-p2287-s33", "section": "9.2", "anchor": "#name-initiating-connection-migra", "para_id": "9.2-p499", "text": "Conversely, a change in connection ID is more likely to indicate an intentional migration rather than an attack. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3-p2288-s1", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p500", "text": "Receiving a packet from a new peer address containing a non-probing frame indicates that the peer has migrated to that address. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.3-p2289-s1", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p501", "text": "If the recipient permits the migration, it MUST send subsequent packets to the new peer address and MUST initiate path validation ( Section 8.2 ) to verify the peer's ownership of the address if validation is not already underway.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.3-p2290-s2", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p501", "text": "If the recipient has no unused connection IDs from the peer, it will not be able to send anything on the new path until the peer provides one; see Section 9.5 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3-p2291-s1", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p502", "text": "An endpoint only changes the address to which it sends packets in response to the highest-numbered non-probing packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3-p2292-s2", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p502", "text": "This ensures that an endpoint does not send packets to an old peer address in the case that it receives reordered packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3-p2293-s1", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p503", "text": "An endpoint MAY send data to an unvalidated peer address, but it MUST protect against potential attacks as described in Sections 9.3.1 and 9.3.2 .", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.3-p2294-s2", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p503", "text": "An endpoint MAY skip validation of a peer address if that address has been seen recently.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.3-p2295-s3", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p503", "text": "In particular, if an endpoint returns to a previously validated path after detecting some form of spurious migration, skipping address validation and restoring loss detection and congestion state can reduce the performance impact of the attack. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.3-p2296-s1", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p504", "text": "After changing the address to which it sends non-probing packets, an endpoint can abandon any path validation for other addresses. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3-p2297-s1", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p505", "text": "Receiving a packet from a new peer address could be the result of a NAT rebinding at the peer. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3-p2298-s1", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p506", "text": "After verifying a new client address, the server SHOULD send new address validation tokens ( Section 8 ) to the client. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.3-p2299-s1", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p507", "text": "9.3.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3-p2300-s2", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p507", "text": "Peer Address Spoofing It is possible that a peer is spoofing its source address to cause an endpoint to send excessive amounts of data to an unwilling host.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3-p2301-s3", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p507", "text": "If the endpoint sends significantly more data than the spoofing peer, connection migration might be used to amplify the volume of data that an attacker can generate toward a victim. ¶ As described in Section 9.3 , an endpoint is required to validate a peer's new address to confirm the peer's possession of the new address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3-p2302-s4", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p507", "text": "Until a peer's address is deemed valid, an endpoint limits the amount of data it sends to that address; see Section 8 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3-p2303-s5", "section": "9.3", "anchor": "#name-responding-to-connection-mi", "para_id": "9.3-p507", "text": "In the absence of this limit, an endpoint risks being used for a denial-of-service attack against an unsuspecting victim. ¶ If an endpoint skips validation of a peer address as described above, it does not need to limit its sending rate. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.1-p2304-s1", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p508", "text": "It is possible that a peer is spoofing its source address to cause an endpoint to send excessive amounts of data to an unwilling host.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.1-p2305-s2", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p508", "text": "If the endpoint sends significantly more data than the spoofing peer, connection migration might be used to amplify the volume of data that an attacker can generate toward a victim. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.1-p2306-s1", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p509", "text": "As described in Section 9.3 , an endpoint is required to validate a peer's new address to confirm the peer's possession of the new address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.1-p2307-s2", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p509", "text": "Until a peer's address is deemed valid, an endpoint limits the amount of data it sends to that address; see Section 8 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.1-p2308-s3", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p509", "text": "In the absence of this limit, an endpoint risks being used for a denial-of-service attack against an unsuspecting victim. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.1-p2309-s1", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p510", "text": "If an endpoint skips validation of a peer address as described above, it does not need to limit its sending rate. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.1-p2310-s1", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p511", "text": "9.3.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.1-p2311-s2", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p511", "text": "On-Path Address Spoofing An on-path attacker could cause a spurious connection migration by copying and forwarding a packet with a spoofed address such that it arrives before the original packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.1-p2312-s3", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p511", "text": "The packet with the spoofed address will be seen to come from a migrating connection, and the original packet will be seen as a duplicate and dropped.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.1-p2313-s4", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p511", "text": "After a spurious migration, validation of the source address will fail because the entity at the source address does not have the necessary cryptographic keys to read or respond to the PATH_CHALLENGE frame that is sent to it even if it wanted to. ¶ To protect the connection from failing due to such a spurious migration, an endpoint MUST revert to using the last validated peer address when validation of a new peer address fails.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.3.1-p2314-s5", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p511", "text": "Additionally, receipt of packets with higher packet numbers from the legitimate peer address will trigger another connection migration.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.1-p2315-s6", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p511", "text": "This will cause the validation of the address of the spurious migration to be abandoned, thus containing migrations initiated by the attacker injecting a single packet. ¶ If an endpoint has no state about the last validated peer address, it MUST close the connection silently by discarding all connection state.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.3.1-p2316-s7", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p511", "text": "This results in new packets on the connection being handled generically.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.1-p2317-s8", "section": "9.3.1", "anchor": "#name-peer-address-spoofing", "para_id": "9.3.1-p511", "text": "For instance, an endpoint MAY send a Stateless Reset in response to any further incoming packets. ¶", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.3.2-p2318-s1", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p512", "text": "An on-path attacker could cause a spurious connection migration by copying and forwarding a packet with a spoofed address such that it arrives before the original packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.2-p2319-s2", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p512", "text": "The packet with the spoofed address will be seen to come from a migrating connection, and the original packet will be seen as a duplicate and dropped.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.2-p2320-s3", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p512", "text": "After a spurious migration, validation of the source address will fail because the entity at the source address does not have the necessary cryptographic keys to read or respond to the PATH_CHALLENGE frame that is sent to it even if it wanted to. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.3.2-p2321-s1", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p513", "text": "To protect the connection from failing due to such a spurious migration, an endpoint MUST revert to using the last validated peer address when validation of a new peer address fails.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.3.2-p2322-s2", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p513", "text": "Additionally, receipt of packets with higher packet numbers from the legitimate peer address will trigger another connection migration.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.2-p2323-s3", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p513", "text": "This will cause the validation of the address of the spurious migration to be abandoned, thus containing migrations initiated by the attacker injecting a single packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.2-p2324-s1", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p514", "text": "If an endpoint has no state about the last validated peer address, it MUST close the connection silently by discarding all connection state.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.3.2-p2325-s2", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p514", "text": "This results in new packets on the connection being handled generically.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.2-p2326-s3", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p514", "text": "For instance, an endpoint MAY send a Stateless Reset in response to any further incoming packets. ¶", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.3.2-p2327-s1", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "9.3.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.2-p2328-s2", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "Off-Path Packet Forwarding An off-path attacker that can observe packets might forward copies of genuine packets to endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.2-p2329-s3", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "If the copied packet arrives before the genuine packet, this will appear as a NAT rebinding.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.2-p2330-s4", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "Any genuine packet will be discarded as a duplicate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.2-p2331-s5", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "If the attacker is able to continue forwarding packets, it might be able to cause migration to a path via the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.2-p2332-s6", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "This places the attacker on-path, giving it the ability to observe or drop all subsequent packets. ¶ This style of attack relies on the attacker using a path that has approximately the same characteristics as the direct path between endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.2-p2333-s7", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "The attack is more reliable if relatively few packets are sent or if packet loss coincides with the attempted attack. ¶ A non-probing packet received on the original path that increases the maximum received packet number will cause the endpoint to move back to that path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.2-p2334-s8", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "Eliciting packets on this path increases the likelihood that the attack is unsuccessful.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.2-p2335-s9", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "Therefore, mitigation of this attack relies on triggering the exchange of packets. ¶ In response to an apparent migration, endpoints MUST validate the previously active path using a PATH_CHALLENGE frame.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.3.2-p2336-s10", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "This induces the sending of new packets on that path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.2-p2337-s11", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "If the path is no longer viable, the validation attempt will time out and fail; if the path is viable but no longer desired, the validation will succeed but only results in probing packets being sent on the path. ¶ An endpoint that receives a PATH_CHALLENGE on an active path SHOULD send a non-probing packet in response.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.3.2-p2338-s12", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "If the non-probing packet arrives before any copy made by an attacker, this results in the connection being migrated back to the original path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.2-p2339-s13", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "Any subsequent migration to another path restarts this entire process. ¶ This defense is imperfect, but this is not considered a serious problem.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.2-p2340-s14", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "If the path via the attack is reliably faster than the original path despite multiple attempts to use that original path, it is not possible to distinguish between an attack and an improvement in routing. ¶ An endpoint could also use heuristics to improve detection of this style of attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.2-p2341-s15", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "For instance, NAT rebinding is improbable if packets were recently received on the old path; similarly, rebinding is rare on IPv6 paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.2-p2342-s16", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "Endpoints can also look for duplicated packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.2-p2343-s17", "section": "9.3.2", "anchor": "#name-on-path-address-spoofing", "para_id": "9.3.2-p515", "text": "Conversely, a change in connection ID is more likely to indicate an intentional migration rather than an attack. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2344-s1", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p516", "text": "An off-path attacker that can observe packets might forward copies of genuine packets to endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2345-s2", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p516", "text": "If the copied packet arrives before the genuine packet, this will appear as a NAT rebinding.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.3-p2346-s3", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p516", "text": "Any genuine packet will be discarded as a duplicate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2347-s4", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p516", "text": "If the attacker is able to continue forwarding packets, it might be able to cause migration to a path via the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.3-p2348-s5", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p516", "text": "This places the attacker on-path, giving it the ability to observe or drop all subsequent packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2349-s1", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p517", "text": "This style of attack relies on the attacker using a path that has approximately the same characteristics as the direct path between endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2350-s2", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p517", "text": "The attack is more reliable if relatively few packets are sent or if packet loss coincides with the attempted attack. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.3-p2351-s1", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p518", "text": "A non-probing packet received on the original path that increases the maximum received packet number will cause the endpoint to move back to that path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.3-p2352-s2", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p518", "text": "Eliciting packets on this path increases the likelihood that the attack is unsuccessful.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2353-s3", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p518", "text": "Therefore, mitigation of this attack relies on triggering the exchange of packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2354-s1", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p519", "text": "In response to an apparent migration, endpoints MUST validate the previously active path using a PATH_CHALLENGE frame.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.3.3-p2355-s2", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p519", "text": "This induces the sending of new packets on that path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2356-s3", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p519", "text": "If the path is no longer viable, the validation attempt will time out and fail; if the path is viable but no longer desired, the validation will succeed but only results in probing packets being sent on the path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.3-p2357-s1", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p520", "text": "An endpoint that receives a PATH_CHALLENGE on an active path SHOULD send a non-probing packet in response.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.3.3-p2358-s2", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p520", "text": "If the non-probing packet arrives before any copy made by an attacker, this results in the connection being migrated back to the original path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.3-p2359-s3", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p520", "text": "Any subsequent migration to another path restarts this entire process. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2360-s1", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p521", "text": "This defense is imperfect, but this is not considered a serious problem.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2361-s2", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p521", "text": "If the path via the attack is reliably faster than the original path despite multiple attempts to use that original path, it is not possible to distinguish between an attack and an improvement in routing. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.3-p2362-s1", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p522", "text": "An endpoint could also use heuristics to improve detection of this style of attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2363-s2", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p522", "text": "For instance, NAT rebinding is improbable if packets were recently received on the old path; similarly, rebinding is rare on IPv6 paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.3-p2364-s3", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p522", "text": "Endpoints can also look for duplicated packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2365-s4", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p522", "text": "Conversely, a change in connection ID is more likely to indicate an intentional migration rather than an attack. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2366-s1", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p523", "text": "9.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2367-s2", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p523", "text": "Loss Detection and Congestion Control The capacity available on the new path might not be the same as the old path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2368-s3", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p523", "text": "Packets sent on the old path MUST NOT contribute to congestion control or RTT estimation for the new path. ¶ On confirming a peer's ownership of its new address, an endpoint MUST immediately reset the congestion controller and round-trip time estimator for the new path to initial values (see Appendices A.3 and B.3 of [ QUIC-RECOVERY ] ) unless the only change in the peer's address is its port number.", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.3.3-p2369-s4", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p523", "text": "Because port-only changes are commonly the result of NAT rebinding or other middlebox activity, the endpoint MAY instead retain its congestion control state and round-trip estimate in those cases instead of reverting to initial values.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.3.3-p2370-s5", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p523", "text": "In cases where congestion control state retained from an old path is used on a new path with substantially different characteristics, a sender could transmit too aggressively until the congestion controller and the RTT estimator have adapted.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.3.3-p2371-s6", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p523", "text": "Generally, implementations are advised to be cautious when using previous values on a new path. ¶ There could be apparent reordering at the receiver when an endpoint sends data and probes from/to multiple addresses during the migration period, since the two resulting paths could have different round-trip times.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.3-p2372-s7", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p523", "text": "A receiver of packets on multiple paths will still send ACK frames covering all received packets. ¶ While multiple paths might be used during connection migration, a single congestion control context and a single loss recovery context (as described in [ QUIC-RECOVERY ] ) could be adequate.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.3.3-p2373-s8", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p523", "text": "For instance, an endpoint might delay switching to a new congestion control context until it is confirmed that an old path is no longer needed (such as the case described in Section 9.3.3 ). ¶ A sender can make exceptions for probe packets so that their loss detection is independent and does not unduly cause the congestion controller to reduce its sending rate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.3.3-p2374-s9", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p523", "text": "An endpoint might set a separate timer when a PATH_CHALLENGE is sent, which is canceled if the corresponding PATH_RESPONSE is received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.3-p2375-s10", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p523", "text": "If the timer fires before the PATH_RESPONSE is received, the endpoint might send a new PATH_CHALLENGE and restart the timer for a longer period of time.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.3.3-p2376-s11", "section": "9.3.3", "anchor": "#name-off-path-packet-forwarding", "para_id": "9.3.3-p523", "text": "This timer SHOULD be set as described in Section 6.2.1 of [ QUIC-RECOVERY ] and MUST NOT be more aggressive. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.4-p2377-s1", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p524", "text": "The capacity available on the new path might not be the same as the old path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.4-p2378-s2", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p524", "text": "Packets sent on the old path MUST NOT contribute to congestion control or RTT estimation for the new path. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.4-p2379-s1", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p525", "text": "On confirming a peer's ownership of its new address, an endpoint MUST immediately reset the congestion controller and round-trip time estimator for the new path to initial values (see Appendices A.3 and B.3 of [ QUIC-RECOVERY ] ) unless the only change in the peer's address is its port number.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.4-p2380-s2", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p525", "text": "Because port-only changes are commonly the result of NAT rebinding or other middlebox activity, the endpoint MAY instead retain its congestion control state and round-trip estimate in those cases instead of reverting to initial values.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.4-p2381-s3", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p525", "text": "In cases where congestion control state retained from an old path is used on a new path with substantially different characteristics, a sender could transmit too aggressively until the congestion controller and the RTT estimator have adapted.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.4-p2382-s4", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p525", "text": "Generally, implementations are advised to be cautious when using previous values on a new path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.4-p2383-s1", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p526", "text": "There could be apparent reordering at the receiver when an endpoint sends data and probes from/to multiple addresses during the migration period, since the two resulting paths could have different round-trip times.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.4-p2384-s2", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p526", "text": "A receiver of packets on multiple paths will still send ACK frames covering all received packets. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.4-p2385-s1", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p527", "text": "While multiple paths might be used during connection migration, a single congestion control context and a single loss recovery context (as described in [ QUIC-RECOVERY ] ) could be adequate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.4-p2386-s2", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p527", "text": "For instance, an endpoint might delay switching to a new congestion control context until it is confirmed that an old path is no longer needed (such as the case described in Section 9.3.3 ). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.4-p2387-s1", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p528", "text": "A sender can make exceptions for probe packets so that their loss detection is independent and does not unduly cause the congestion controller to reduce its sending rate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.4-p2388-s2", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p528", "text": "An endpoint might set a separate timer when a PATH_CHALLENGE is sent, which is canceled if the corresponding PATH_RESPONSE is received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.4-p2389-s3", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p528", "text": "If the timer fires before the PATH_RESPONSE is received, the endpoint might send a new PATH_CHALLENGE and restart the timer for a longer period of time.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.4-p2390-s4", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p528", "text": "This timer SHOULD be set as described in Section 6.2.1 of [ QUIC-RECOVERY ] and MUST NOT be more aggressive. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.4-p2391-s1", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "9.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.4-p2392-s2", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "Privacy Implications of Connection Migration Using a stable connection ID on multiple network paths would allow a passive observer to correlate activity between those paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.4-p2393-s3", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "An endpoint that moves between networks might not wish to have their activity correlated by any entity other than their peer, so different connection IDs are used when sending from different local addresses, as discussed in Section 5.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.4-p2394-s4", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "For this to be effective, endpoints need to ensure that connection IDs they provide cannot be linked by any other entity. ¶ At any time, endpoints MAY change the Destination Connection ID they transmit with to a value that has not been used on another path. ¶ An endpoint MUST NOT reuse a connection ID when sending from more than one local address -- for example, when initiating connection migration as described in Section 9.2 or when probing a new network path as described in Section 9.1 . ¶ Similarly, an endpoint MUST NOT reuse a connection ID when sending to more than one destination address.", "facet": "other", "normative": true, "modalities": ["MAY", "MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.4-p2395-s5", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "Due to network changes outside the control of its peer, an endpoint might receive packets from a new source address with the same Destination Connection ID field value, in which case it MAY continue to use the current connection ID with the new remote address while still sending from the same local address. ¶ These requirements regarding connection ID reuse apply only to the sending of packets, as unintentional changes in path without a change in connection ID are possible.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.4-p2396-s6", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "For example, after a period of network inactivity, NAT rebinding might cause packets to be sent on a new path when the client resumes sending.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.4-p2397-s7", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "An endpoint responds to such an event as described in Section 9.3 . ¶ Using different connection IDs for packets sent in both directions on each new network path eliminates the use of the connection ID for linking packets from the same connection across different network paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.4-p2398-s8", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "Header protection ensures that packet numbers cannot be used to correlate activity.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.4-p2399-s9", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "This does not prevent other properties of packets, such as timing and size, from being used to correlate activity. ¶ An endpoint SHOULD NOT initiate migration with a peer that has requested a zero-length connection ID, because traffic over the new path might be trivially linkable to traffic over the old one.", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.4-p2400-s10", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "If the server is able to associate packets with a zero-length connection ID to the right connection, it means that the server is using other information to demultiplex packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.4-p2401-s11", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "For example, a server might provide a unique address to every client -- for instance, using HTTP alternative services [ ALTSVC ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.4-p2402-s12", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "Information that might allow correct routing of packets across multiple network paths will also allow activity on those paths to be linked by entities other than the peer. ¶ A client might wish to reduce linkability by switching to a new connection ID, source UDP port, or IP address (see [ RFC8981 ] ) when sending traffic after a period of inactivity.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.4-p2403-s13", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "Changing the address from which it sends packets at the same time might cause the server to detect a connection migration.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.4-p2404-s14", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "This ensures that the mechanisms that support migration are exercised even for clients that do not experience NAT rebindings or genuine migrations.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.4-p2405-s15", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "Changing address can cause a peer to reset its congestion control state (see Section 9.4 ), so addresses SHOULD only be changed infrequently. ¶ An endpoint that exhausts available connection IDs cannot probe new paths or initiate migration, nor can it respond to probes or attempts by its peer to migrate.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.4-p2406-s16", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "To ensure that migration is possible and packets sent on different paths cannot be correlated, endpoints SHOULD provide new connection IDs before peers migrate; see Section 5.1.1 .", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.4-p2407-s17", "section": "9.4", "anchor": "#name-loss-detection-and-congesti", "para_id": "9.4-p529", "text": "If a peer might have exhausted available connection IDs, a migrating endpoint could include a NEW_CONNECTION_ID frame in all packets sent on a new network path. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.5-p2408-s1", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p530", "text": "Using a stable connection ID on multiple network paths would allow a passive observer to correlate activity between those paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2409-s2", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p530", "text": "An endpoint that moves between networks might not wish to have their activity correlated by any entity other than their peer, so different connection IDs are used when sending from different local addresses, as discussed in Section 5.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.5-p2410-s3", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p530", "text": "For this to be effective, endpoints need to ensure that connection IDs they provide cannot be linked by any other entity. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2411-s1", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p531", "text": "At any time, endpoints MAY change the Destination Connection ID they transmit with to a value that has not been used on another path. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.5-p2412-s1", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p532", "text": "An endpoint MUST NOT reuse a connection ID when sending from more than one local address -- for example, when initiating connection migration as described in Section 9.2 or when probing a new network path as described in Section 9.1 . ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.5-p2413-s1", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p533", "text": "Similarly, an endpoint MUST NOT reuse a connection ID when sending to more than one destination address.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.5-p2414-s2", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p533", "text": "Due to network changes outside the control of its peer, an endpoint might receive packets from a new source address with the same Destination Connection ID field value, in which case it MAY continue to use the current connection ID with the new remote address while still sending from the same local address. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.5-p2415-s1", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p534", "text": "These requirements regarding connection ID reuse apply only to the sending of packets, as unintentional changes in path without a change in connection ID are possible.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2416-s2", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p534", "text": "For example, after a period of network inactivity, NAT rebinding might cause packets to be sent on a new path when the client resumes sending.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.5-p2417-s3", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p534", "text": "An endpoint responds to such an event as described in Section 9.3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2418-s1", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p535", "text": "Using different connection IDs for packets sent in both directions on each new network path eliminates the use of the connection ID for linking packets from the same connection across different network paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2419-s2", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p535", "text": "Header protection ensures that packet numbers cannot be used to correlate activity.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2420-s3", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p535", "text": "This does not prevent other properties of packets, such as timing and size, from being used to correlate activity. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2421-s1", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p536", "text": "An endpoint SHOULD NOT initiate migration with a peer that has requested a zero-length connection ID, because traffic over the new path might be trivially linkable to traffic over the old one.", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.5-p2422-s2", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p536", "text": "If the server is able to associate packets with a zero-length connection ID to the right connection, it means that the server is using other information to demultiplex packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.5-p2423-s3", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p536", "text": "For example, a server might provide a unique address to every client -- for instance, using HTTP alternative services [ ALTSVC ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2424-s4", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p536", "text": "Information that might allow correct routing of packets across multiple network paths will also allow activity on those paths to be linked by entities other than the peer. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2425-s1", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p537", "text": "A client might wish to reduce linkability by switching to a new connection ID, source UDP port, or IP address (see [ RFC8981 ] ) when sending traffic after a period of inactivity.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.5-p2426-s2", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p537", "text": "Changing the address from which it sends packets at the same time might cause the server to detect a connection migration.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.5-p2427-s3", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p537", "text": "This ensures that the mechanisms that support migration are exercised even for clients that do not experience NAT rebindings or genuine migrations.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2428-s4", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p537", "text": "Changing address can cause a peer to reset its congestion control state (see Section 9.4 ), so addresses SHOULD only be changed infrequently. ¶", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.5-p2429-s1", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p538", "text": "An endpoint that exhausts available connection IDs cannot probe new paths or initiate migration, nor can it respond to probes or attempts by its peer to migrate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2430-s2", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p538", "text": "To ensure that migration is possible and packets sent on different paths cannot be correlated, endpoints SHOULD provide new connection IDs before peers migrate; see Section 5.1.1 .", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.5-p2431-s3", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p538", "text": "If a peer might have exhausted available connection IDs, a migrating endpoint could include a NEW_CONNECTION_ID frame in all packets sent on a new network path. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.5-p2432-s1", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "9.6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2433-s2", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "Server's Preferred Address QUIC allows servers to accept connections on one IP address and attempt to transfer these connections to a more preferred address shortly after the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2434-s3", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "This is particularly useful when clients initially connect to an address shared by multiple servers but would prefer to use a unicast address to ensure connection stability.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.5-p2435-s4", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "This section describes the protocol for migrating a connection to a preferred server address. ¶ Migrating a connection to a new server address mid-connection is not supported by the version of QUIC specified in this document.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2436-s5", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "If a client receives packets from a new server address when the client has not initiated a migration to that address, the client SHOULD discard these packets. ¶ 9.6.1.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.5-p2437-s6", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "Communicating a Preferred Address A server conveys a preferred address by including the preferred_address transport parameter in the TLS handshake. ¶ Servers MAY communicate a preferred address of each address family (IPv4 and IPv6) to allow clients to pick the one most suited to their network attachment. ¶ Once the handshake is confirmed, the client SHOULD select one of the two addresses provided by the server and initiate path validation (see Section 8.2 ).", "facet": "other", "normative": true, "modalities": ["MAY", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.5-p2438-s7", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "A client constructs packets using any previously unused active connection ID, taken from either the preferred_address transport parameter or a NEW_CONNECTION_ID frame. ¶ As soon as path validation succeeds, the client SHOULD begin sending all future packets to the new server address using the new connection ID and discontinue use of the old server address.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.5-p2439-s8", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "If path validation fails, the client MUST continue sending all future packets to the server's original IP address. ¶ 9.6.2.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.5-p2440-s9", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "Migration to a Preferred Address A client that migrates to a preferred address MUST validate the address it chooses before migrating; see Section 21.5.3 . ¶ A server might receive a packet addressed to its preferred IP address at any time after it accepts a connection.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.5-p2441-s10", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "If this packet contains a PATH_CHALLENGE frame, the server sends a packet containing a PATH_RESPONSE frame as per Section 8.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.5-p2442-s11", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "The server MUST send non-probing packets from its original address until it receives a non-probing packet from the client at its preferred address and until the server has validated the new path. ¶ The server MUST probe on the path toward the client from its preferred address.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.5-p2443-s12", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "This helps to guard against spurious migration initiated by an attacker. ¶ Once the server has completed its path validation and has received a non-probing packet with a new largest packet number on its preferred address, the server begins sending non-probing packets to the client exclusively from its preferred IP address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.5-p2444-s13", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "The server SHOULD drop newer packets for this connection that are received on the old IP address.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.5-p2445-s14", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "The server MAY continue to process delayed packets that are received on the old IP address. ¶ The addresses that a server provides in the preferred_address transport parameter are only valid for the connection in which they are provided.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.5-p2446-s15", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "A client MUST NOT use these for other connections, including connections that are resumed from the current connection. ¶ 9.6.3.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.5-p2447-s16", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "Interaction of Client Migration and Preferred Address A client might need to perform a connection migration before it has migrated to the server's preferred address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.5-p2448-s17", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "In this case, the client SHOULD perform path validation to both the original and preferred server address from the client's new address concurrently. ¶ If path validation of the server's preferred address succeeds, the client MUST abandon validation of the original address and migrate to using the server's preferred address.", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.5-p2449-s18", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "If path validation of the server's preferred address fails but validation of the server's original address succeeds, the client MAY migrate to its new address and continue sending to the server's original address. ¶ If packets received at the server's preferred address have a different source address than observed from the client during the handshake, the server MUST protect against potential attacks as described in Sections 9.3.1 and 9.3.2 .", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.5-p2450-s19", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "In addition to intentional simultaneous migration, this might also occur because the client's access network used a different NAT binding for the server's preferred address. ¶ Servers SHOULD initiate path validation to the client's new address upon receiving a probe packet from a different address; see Section 8 . ¶ A client that migrates to a new address SHOULD use a preferred address from the same address family for the server. ¶ The connection ID provided in the preferred_address transport parameter is not specific to the addresses that are provided.", "facet": "other", "normative": true, "modalities": ["SHOULD", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.5-p2451-s20", "section": "9.5", "anchor": "#name-privacy-implications-of-con", "para_id": "9.5-p539", "text": "This connection ID is provided to ensure that the client has a connection ID available for migration, but the client MAY use this connection ID on any path. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.6-p2452-s1", "section": "9.6", "anchor": "#name-servers-preferred-address", "para_id": "9.6-p540", "text": "QUIC allows servers to accept connections on one IP address and attempt to transfer these connections to a more preferred address shortly after the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6-p2453-s2", "section": "9.6", "anchor": "#name-servers-preferred-address", "para_id": "9.6-p540", "text": "This is particularly useful when clients initially connect to an address shared by multiple servers but would prefer to use a unicast address to ensure connection stability.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.6-p2454-s3", "section": "9.6", "anchor": "#name-servers-preferred-address", "para_id": "9.6-p540", "text": "This section describes the protocol for migrating a connection to a preferred server address. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6-p2455-s1", "section": "9.6", "anchor": "#name-servers-preferred-address", "para_id": "9.6-p541", "text": "Migrating a connection to a new server address mid-connection is not supported by the version of QUIC specified in this document.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6-p2456-s2", "section": "9.6", "anchor": "#name-servers-preferred-address", "para_id": "9.6-p541", "text": "If a client receives packets from a new server address when the client has not initiated a migration to that address, the client SHOULD discard these packets. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6-p2457-s1", "section": "9.6", "anchor": "#name-servers-preferred-address", "para_id": "9.6-p542", "text": "9.6.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6-p2458-s2", "section": "9.6", "anchor": "#name-servers-preferred-address", "para_id": "9.6-p542", "text": "Communicating a Preferred Address A server conveys a preferred address by including the preferred_address transport parameter in the TLS handshake. ¶ Servers MAY communicate a preferred address of each address family (IPv4 and IPv6) to allow clients to pick the one most suited to their network attachment. ¶ Once the handshake is confirmed, the client SHOULD select one of the two addresses provided by the server and initiate path validation (see Section 8.2 ).", "facet": "other", "normative": true, "modalities": ["MAY", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.6-p2459-s3", "section": "9.6", "anchor": "#name-servers-preferred-address", "para_id": "9.6-p542", "text": "A client constructs packets using any previously unused active connection ID, taken from either the preferred_address transport parameter or a NEW_CONNECTION_ID frame. ¶ As soon as path validation succeeds, the client SHOULD begin sending all future packets to the new server address using the new connection ID and discontinue use of the old server address.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.6-p2460-s4", "section": "9.6", "anchor": "#name-servers-preferred-address", "para_id": "9.6-p542", "text": "If path validation fails, the client MUST continue sending all future packets to the server's original IP address. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.1-p2461-s1", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p543", "text": "A server conveys a preferred address by including the preferred_address transport parameter in the TLS handshake. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6.1-p2462-s1", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p544", "text": "Servers MAY communicate a preferred address of each address family (IPv4 and IPv6) to allow clients to pick the one most suited to their network attachment. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.6.1-p2463-s1", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p545", "text": "Once the handshake is confirmed, the client SHOULD select one of the two addresses provided by the server and initiate path validation (see Section 8.2 ).", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.6.1-p2464-s2", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p545", "text": "A client constructs packets using any previously unused active connection ID, taken from either the preferred_address transport parameter or a NEW_CONNECTION_ID frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.6.1-p2465-s1", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p546", "text": "As soon as path validation succeeds, the client SHOULD begin sending all future packets to the new server address using the new connection ID and discontinue use of the old server address.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.6.1-p2466-s2", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p546", "text": "If path validation fails, the client MUST continue sending all future packets to the server's original IP address. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.1-p2467-s1", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p547", "text": "9.6.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6.1-p2468-s2", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p547", "text": "Migration to a Preferred Address A client that migrates to a preferred address MUST validate the address it chooses before migrating; see Section 21.5.3 . ¶ A server might receive a packet addressed to its preferred IP address at any time after it accepts a connection.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.1-p2469-s3", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p547", "text": "If this packet contains a PATH_CHALLENGE frame, the server sends a packet containing a PATH_RESPONSE frame as per Section 8.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.6.1-p2470-s4", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p547", "text": "The server MUST send non-probing packets from its original address until it receives a non-probing packet from the client at its preferred address and until the server has validated the new path. ¶ The server MUST probe on the path toward the client from its preferred address.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.1-p2471-s5", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p547", "text": "This helps to guard against spurious migration initiated by an attacker. ¶ Once the server has completed its path validation and has received a non-probing packet with a new largest packet number on its preferred address, the server begins sending non-probing packets to the client exclusively from its preferred IP address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.6.1-p2472-s6", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p547", "text": "The server SHOULD drop newer packets for this connection that are received on the old IP address.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.1-p2473-s7", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p547", "text": "The server MAY continue to process delayed packets that are received on the old IP address. ¶ The addresses that a server provides in the preferred_address transport parameter are only valid for the connection in which they are provided.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.1-p2474-s8", "section": "9.6.1", "anchor": "#name-communicating-a-preferred-a", "para_id": "9.6.1-p547", "text": "A client MUST NOT use these for other connections, including connections that are resumed from the current connection. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.6.2-p2475-s1", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p548", "text": "A client that migrates to a preferred address MUST validate the address it chooses before migrating; see Section 21.5.3 . ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.6.2-p2476-s1", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p549", "text": "A server might receive a packet addressed to its preferred IP address at any time after it accepts a connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.6.2-p2477-s2", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p549", "text": "If this packet contains a PATH_CHALLENGE frame, the server sends a packet containing a PATH_RESPONSE frame as per Section 8.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.6.2-p2478-s3", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p549", "text": "The server MUST send non-probing packets from its original address until it receives a non-probing packet from the client at its preferred address and until the server has validated the new path. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.2-p2479-s1", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p550", "text": "The server MUST probe on the path toward the client from its preferred address.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.6.2-p2480-s2", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p550", "text": "This helps to guard against spurious migration initiated by an attacker. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6.2-p2481-s1", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p551", "text": "Once the server has completed its path validation and has received a non-probing packet with a new largest packet number on its preferred address, the server begins sending non-probing packets to the client exclusively from its preferred IP address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.6.2-p2482-s2", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p551", "text": "The server SHOULD drop newer packets for this connection that are received on the old IP address.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.2-p2483-s3", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p551", "text": "The server MAY continue to process delayed packets that are received on the old IP address. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.2-p2484-s1", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p552", "text": "The addresses that a server provides in the preferred_address transport parameter are only valid for the connection in which they are provided.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6.2-p2485-s2", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p552", "text": "A client MUST NOT use these for other connections, including connections that are resumed from the current connection. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.6.2-p2486-s1", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p553", "text": "9.6.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6.2-p2487-s2", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p553", "text": "Interaction of Client Migration and Preferred Address A client might need to perform a connection migration before it has migrated to the server's preferred address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6.2-p2488-s3", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p553", "text": "In this case, the client SHOULD perform path validation to both the original and preferred server address from the client's new address concurrently. ¶ If path validation of the server's preferred address succeeds, the client MUST abandon validation of the original address and migrate to using the server's preferred address.", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.2-p2489-s4", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p553", "text": "If path validation of the server's preferred address fails but validation of the server's original address succeeds, the client MAY migrate to its new address and continue sending to the server's original address. ¶ If packets received at the server's preferred address have a different source address than observed from the client during the handshake, the server MUST protect against potential attacks as described in Sections 9.3.1 and 9.3.2 .", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.2-p2490-s5", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p553", "text": "In addition to intentional simultaneous migration, this might also occur because the client's access network used a different NAT binding for the server's preferred address. ¶ Servers SHOULD initiate path validation to the client's new address upon receiving a probe packet from a different address; see Section 8 . ¶ A client that migrates to a new address SHOULD use a preferred address from the same address family for the server. ¶ The connection ID provided in the preferred_address transport parameter is not specific to the addresses that are provided.", "facet": "other", "normative": true, "modalities": ["SHOULD", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.2-p2491-s6", "section": "9.6.2", "anchor": "#name-migration-to-a-preferred-ad", "para_id": "9.6.2-p553", "text": "This connection ID is provided to ensure that the client has a connection ID available for migration, but the client MAY use this connection ID on any path. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.6.3-p2492-s1", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p554", "text": "A client might need to perform a connection migration before it has migrated to the server's preferred address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6.3-p2493-s2", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p554", "text": "In this case, the client SHOULD perform path validation to both the original and preferred server address from the client's new address concurrently. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.6.3-p2494-s1", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p555", "text": "If path validation of the server's preferred address succeeds, the client MUST abandon validation of the original address and migrate to using the server's preferred address.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.3-p2495-s2", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p555", "text": "If path validation of the server's preferred address fails but validation of the server's original address succeeds, the client MAY migrate to its new address and continue sending to the server's original address. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.3-p2496-s1", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p556", "text": "If packets received at the server's preferred address have a different source address than observed from the client during the handshake, the server MUST protect against potential attacks as described in Sections 9.3.1 and 9.3.2 .", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.3-p2497-s2", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p556", "text": "In addition to intentional simultaneous migration, this might also occur because the client's access network used a different NAT binding for the server's preferred address. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6.3-p2498-s1", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p557", "text": "Servers SHOULD initiate path validation to the client's new address upon receiving a probe packet from a different address; see Section 8 . ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.3-p2499-s1", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p558", "text": "A client that migrates to a new address SHOULD use a preferred address from the same address family for the server. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.6.3-p2500-s1", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p559", "text": "The connection ID provided in the preferred_address transport parameter is not specific to the addresses that are provided.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6.3-p2501-s2", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p559", "text": "This connection ID is provided to ensure that the client has a connection ID available for migration, but the client MAY use this connection ID on any path. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.6.3-p2502-s1", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p560", "text": "9.7.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.6.3-p2503-s2", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p560", "text": "Use of IPv6 Flow Label and Migration Endpoints that send data using IPv6 SHOULD apply an IPv6 flow label in compliance with [ RFC6437 ] , unless the local API does not allow setting IPv6 flow labels. ¶ The flow label generation MUST be designed to minimize the chances of linkability with a previously used flow label, as a stable flow label would enable correlating activity on multiple paths; see Section 9.5 . ¶ [ RFC6437 ] suggests deriving values using a pseudorandom function to generate flow labels.", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.6.3-p2504-s3", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p560", "text": "Including the Destination Connection ID field in addition to source and destination addresses when generating flow labels ensures that changes are synchronized with changes in other observable identifiers.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.6.3-p2505-s4", "section": "9.6.3", "anchor": "#name-interaction-of-client-migra", "para_id": "9.6.3-p560", "text": "A cryptographic hash function that combines these inputs with a local secret is one way this might be implemented. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2506-s1", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p561", "text": "Endpoints that send data using IPv6 SHOULD apply an IPv6 flow label in compliance with [ RFC6437 ] , unless the local API does not allow setting IPv6 flow labels. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.7-p2507-s1", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p562", "text": "The flow label generation MUST be designed to minimize the chances of linkability with a previously used flow label, as a stable flow label would enable correlating activity on multiple paths; see Section 9.5 . ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.7-p2508-s1", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p563", "text": "[ RFC6437 ] suggests deriving values using a pseudorandom function to generate flow labels.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2509-s2", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p563", "text": "Including the Destination Connection ID field in addition to source and destination addresses when generating flow labels ensures that changes are synchronized with changes in other observable identifiers.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.7-p2510-s3", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p563", "text": "A cryptographic hash function that combines these inputs with a local secret is one way this might be implemented. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2511-s1", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "10.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2512-s2", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Connection Termination An established QUIC connection can be terminated in one of three ways: ¶ idle timeout ( Section 10.1 ) ¶ immediate close ( Section 10.2 ) ¶ stateless reset ( Section 10.3 ) ¶ An endpoint MAY discard connection state if it does not have a validated path on which it can send packets; see Section 8.2 . ¶ 10.1.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2513-s3", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Idle Timeout If a max_idle_timeout is specified by either endpoint in its transport parameters ( Section 18.2 ), the connection is silently closed and its state is discarded when it remains idle for longer than the minimum of the max_idle_timeout value advertised by both endpoints. ¶ Each endpoint advertises a max_idle_timeout, but the effective value at an endpoint is computed as the minimum of the two advertised values (or the sole advertised value, if only one endpoint advertises a non-zero value).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2514-s4", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "By announcing a max_idle_timeout, an endpoint commits to initiating an immediate close ( Section 10.2 ) if it abandons the connection prior to the effective value. ¶ An endpoint restarts its idle timer when a packet from its peer is received and processed successfully.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.7-p2515-s5", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint also restarts its idle timer when sending an ack-eliciting packet if no other ack-eliciting packets have been sent since last receiving and processing a packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.7-p2516-s6", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Restarting this timer when sending a packet ensures that connections are not closed after new activity is initiated. ¶ To avoid excessively small idle timeout periods, endpoints MUST increase the idle timeout period to be at least three times the current Probe Timeout (PTO).", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.7-p2517-s7", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "This allows for multiple PTOs to expire, and therefore multiple probes to be sent and lost, prior to idle timeout. ¶ 10.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.7-p2518-s8", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Liveness Testing An endpoint that sends packets close to the effective timeout risks having them be discarded at the peer, since the idle timeout period might have expired at the peer before these packets arrive. ¶ An endpoint can send a PING or another ack-eliciting frame to test the connection for liveness if the peer could time out soon, such as within a PTO; see Section 6.2 of [ QUIC-RECOVERY ] .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2519-s9", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "This is especially useful if any available application data cannot be safely retried.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.7-p2520-s10", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Note that the application determines what data is safe to retry. ¶ 10.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2521-s11", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Deferring Idle Timeout An endpoint might need to send ack-eliciting packets to avoid an idle timeout if it is expecting response data but does not have or is unable to send application data. ¶ An implementation of QUIC might provide applications with an option to defer an idle timeout.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.7-p2522-s12", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "This facility could be used when the application wishes to avoid losing state that has been associated with an open connection but does not expect to exchange application data for some time.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2523-s13", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "With this option, an endpoint could send a PING frame ( Section 19.2 ) periodically, which will cause the peer to restart its idle timeout period.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2524-s14", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Sending a packet containing a PING frame restarts the idle timeout for this endpoint also if this is the first ack-eliciting packet sent since receiving a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2525-s15", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Sending a PING frame causes the peer to respond with an acknowledgment, which also restarts the idle timeout for the endpoint. ¶ Application protocols that use QUIC SHOULD provide guidance on when deferring an idle timeout is appropriate.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2526-s16", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Unnecessary sending of PING frames could have a detrimental effect on performance. ¶ A connection will time out if no packets are sent or received for a period longer than the time negotiated using the max_idle_timeout transport parameter; see Section 10 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2527-s17", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "However, state in middleboxes might time out earlier than that.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2528-s18", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Though REQ-5 in [ RFC4787 ] recommends a 2-minute timeout interval, experience shows that sending packets every 30 seconds is necessary to prevent the majority of middleboxes from losing state for UDP flows [ GATEWAY ] . ¶ 10.2.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2529-s19", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Immediate Close An endpoint sends a CONNECTION_CLOSE frame ( Section 19.19 ) to terminate the connection immediately.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2530-s20", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "A CONNECTION_CLOSE frame causes all streams to immediately become closed; open streams can be assumed to be implicitly reset. ¶ After sending a CONNECTION_CLOSE frame, an endpoint immediately enters the closing state; see Section 10.2.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2531-s21", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "After receiving a CONNECTION_CLOSE frame, endpoints enter the draining state; see Section 10.2.2 . ¶ Violations of the protocol lead to an immediate close. ¶ An immediate close can be used after an application protocol has arranged to close a connection.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2532-s22", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "This might be after the application protocol negotiates a graceful shutdown.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2533-s23", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "The application protocol can exchange messages that are needed for both application endpoints to agree that the connection can be closed, after which the application requests that QUIC close the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2534-s24", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "When QUIC consequently closes the connection, a CONNECTION_CLOSE frame with an application-supplied error code will be used to signal closure to the peer. ¶ The closing and draining connection states exist to ensure that connections close cleanly and that delayed or reordered packets are properly discarded.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2535-s25", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "These states SHOULD persist for at least three times the current PTO interval as defined in [ QUIC-RECOVERY ] . ¶ Disposing of connection state prior to exiting the closing or draining state could result in an endpoint generating a Stateless Reset unnecessarily when it receives a late-arriving packet.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2536-s26", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Endpoints that have some alternative means to ensure that late-arriving packets do not induce a response, such as those that are able to close the UDP socket, MAY end these states earlier to allow for faster resource recovery.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.7-p2537-s27", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Servers that retain an open socket for accepting new connections SHOULD NOT end the closing or draining state early. ¶ Once its closing or draining state ends, an endpoint SHOULD discard all connection state.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD NOT", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.7-p2538-s28", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "The endpoint MAY send a Stateless Reset in response to any further incoming packets belonging to this connection. ¶ 10.2.1.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2539-s29", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Closing Connection State An endpoint enters the closing state after initiating an immediate close. ¶ In the closing state, an endpoint retains only enough information to generate a packet containing a CONNECTION_CLOSE frame and to identify packets as belonging to the connection.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2540-s30", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint in the closing state sends a packet containing a CONNECTION_CLOSE frame in response to any incoming packet that it attributes to the connection. ¶ An endpoint SHOULD limit the rate at which it generates packets in the closing state.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2541-s31", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "For instance, an endpoint could wait for a progressively increasing number of received packets or amount of time before responding to received packets. ¶ An endpoint's selected connection ID and the QUIC version are sufficient information to identify packets for a closing connection; the endpoint MAY discard all other connection state.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2542-s32", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint that is closing is not required to process any received frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2543-s33", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint MAY retain packet protection keys for incoming packets to allow it to read and process a CONNECTION_CLOSE frame. ¶ An endpoint MAY drop packet protection keys when entering the closing state and send a packet containing a CONNECTION_CLOSE frame in response to any UDP datagram that is received.", "facet": "frames", "normative": true, "modalities": ["MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2544-s34", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "However, an endpoint that discards packet protection keys cannot identify and discard invalid packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2545-s35", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "To avoid being used for an amplification attack, such endpoints MUST limit the cumulative size of packets it sends to three times the cumulative size of the packets that are received and attributed to the connection.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.7-p2546-s36", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "To minimize the state that an endpoint maintains for a closing connection, endpoints MAY send the exact same packet in response to any received packet. ¶ Note:", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2547-s37", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Allowing retransmission of a closing packet is an exception to the requirement that a new packet number be used for each packet; see Section 12.3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2548-s38", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Sending new packet numbers is primarily of advantage to loss recovery and congestion control, which are not expected to be relevant for a closed connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2549-s39", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Retransmitting the final packet requires less state. ¶ While in the closing state, an endpoint could receive packets from a new source address, possibly indicating a connection migration; see Section 9 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2550-s40", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint in the closing state MUST either discard packets received from an unvalidated address or limit the cumulative size of packets it sends to an unvalidated address to three times the size of packets it receives from that address. ¶ An endpoint is not expected to handle key updates when it is closing ( Section 6 of [ QUIC-TLS ] ).", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2551-s41", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "A key update might prevent the endpoint from moving from the closing state to the draining state, as the endpoint will not be able to process subsequently received packets, but it otherwise has no impact. ¶ 10.2.2.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2552-s42", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Draining Connection State The draining state is entered once an endpoint receives a CONNECTION_CLOSE frame, which indicates that its peer is closing or draining.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2553-s43", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "While otherwise identical to the closing state, an endpoint in the draining state MUST NOT send any packets.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2554-s44", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Retaining packet protection keys is unnecessary once a connection is in the draining state. ¶ An endpoint that receives a CONNECTION_CLOSE frame MAY send a single packet containing a CONNECTION_CLOSE frame before entering the draining state, using a NO_ERROR code if appropriate.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2555-s45", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint MUST NOT send further packets.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.7-p2556-s46", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Doing so could result in a constant exchange of CONNECTION_CLOSE frames until one of the endpoints exits the closing state. ¶ An endpoint MAY enter the draining state from the closing state if it receives a CONNECTION_CLOSE frame, which indicates that the peer is also closing or draining.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2557-s47", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "In this case, the draining state ends when the closing state would have ended.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2558-s48", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "In other words, the endpoint uses the same end time but ceases transmission of any packets on this connection. ¶ 10.2.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2559-s49", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Immediate Close during the Handshake When sending a CONNECTION_CLOSE frame, the goal is to ensure that the peer will process the frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2560-s50", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Generally, this means sending the frame in a packet with the highest level of packet protection to avoid the packet being discarded.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2561-s51", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "After the handshake is confirmed (see Section 4.1.2 of [ QUIC-TLS ] ), an endpoint MUST send any CONNECTION_CLOSE frames in a 1-RTT packet.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2562-s52", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "However, prior to confirming the handshake, it is possible that more advanced packet protection keys are not available to the peer, so another CONNECTION_CLOSE frame MAY be sent in a packet that uses a lower packet protection level.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.7-p2563-s53", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "More specifically: ¶ A client will always know whether the server has Handshake keys (see Section 17.2.2.1 ), but it is possible that a server does not know whether the client has Handshake keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2564-s54", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Under these circumstances, a server SHOULD send a CONNECTION_CLOSE frame in both Handshake and Initial packets to ensure that at least one of them is processable by the client. ¶ A client that sends a CONNECTION_CLOSE frame in a 0-RTT packet cannot be assured that the server has accepted 0-RTT.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2565-s55", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Sending a CONNECTION_CLOSE frame in an Initial packet makes it more likely that the server can receive the close signal, even if the application error code might not be received. ¶ Prior to confirming the handshake, a peer might be unable to process 1-RTT packets, so an endpoint SHOULD send a CONNECTION_CLOSE frame in both Handshake and 1-RTT packets.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2566-s56", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "A server SHOULD also send a CONNECTION_CLOSE frame in an Initial packet. ¶ Sending a CONNECTION_CLOSE of type 0x1d in an Initial or Handshake packet could expose application state or be used to alter application state.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2567-s57", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "A CONNECTION_CLOSE of type 0x1d MUST be replaced by a CONNECTION_CLOSE of type 0x1c when sending the frame in Initial or Handshake packets.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2568-s58", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Otherwise, information about the application state might be revealed.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2569-s59", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Endpoints MUST clear the value of the Reason Phrase field and SHOULD use the APPLICATION_ERROR code when converting to a CONNECTION_CLOSE of type 0x1c. ¶ CONNECTION_CLOSE frames sent in multiple packet types can be coalesced into a single UDP datagram; see Section 12.2 . ¶ An endpoint can send a CONNECTION_CLOSE frame in an Initial packet.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2570-s60", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "This might be in response to unauthenticated information received in Initial or Handshake packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.7-p2571-s61", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Such an immediate close might expose legitimate connections to a denial of service.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2572-s62", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "QUIC does not include defensive measures for on-path attacks during the handshake; see Section 21.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2573-s63", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "However, at the cost of reducing feedback about errors for legitimate peers, some forms of denial of service can be made more difficult for an attacker if endpoints discard illegal packets rather than terminating a connection with CONNECTION_CLOSE.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.7-p2574-s64", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "For this reason, endpoints MAY discard packets rather than immediately close if errors are detected in packets that lack authentication. ¶ An endpoint that has not established state, such as a server that detects an error in an Initial packet, does not enter the closing state.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2575-s65", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint that has no state for the connection does not enter a closing or draining period on sending a CONNECTION_CLOSE frame. ¶ 10.3.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2576-s66", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Stateless Reset A stateless reset is provided as an option of last resort for an endpoint that does not have access to the state of a connection.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2577-s67", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "A crash or outage might result in peers continuing to send data to an endpoint that is unable to properly continue the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.7-p2578-s68", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint MAY send a Stateless Reset in response to receiving a packet that it cannot associate with an active connection. ¶ A stateless reset is not appropriate for indicating errors in active connections.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2579-s69", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint that wishes to communicate a fatal connection error MUST use a CONNECTION_CLOSE frame if it is able. ¶ To support this process, an endpoint issues a stateless reset token, which is a 16-byte value that is hard to guess.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2580-s70", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "If the peer subsequently receives a Stateless Reset, which is a UDP datagram that ends in that stateless reset token, the peer will immediately end the connection. ¶ A stateless reset token is specific to a connection ID.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2581-s71", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint issues a stateless reset token by including the value in the Stateless Reset Token field of a NEW_CONNECTION_ID frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2582-s72", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Servers can also issue a stateless_reset_token transport parameter during the handshake that applies to the connection ID that it selected during the handshake.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2583-s73", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "These exchanges are protected by encryption, so only client and server know their value.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2584-s74", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Note that clients cannot use the stateless_reset_token transport parameter because their transport parameters do not have confidentiality protection. ¶ Tokens are invalidated when their associated connection ID is retired via a RETIRE_CONNECTION_ID frame ( Section 19.16 ). ¶ An endpoint that receives packets that it cannot process sends a packet in the following layout (see Section 1.3 ): ¶ Stateless Reset { Fixed Bits (2) = 1, Unpredictable Bits (38..), Stateless Reset Token (128), } Figure 10 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2585-s75", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Stateless Reset This design ensures that a Stateless Reset is -- to the extent possible -- indistinguishable from a regular packet with a short header. ¶ A Stateless Reset uses an entire UDP datagram, starting with the first two bits of the packet header.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2586-s76", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "The remainder of the first byte and an arbitrary number of bytes following it are set to values that SHOULD be indistinguishable from random.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "9.7-p2587-s77", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "The last 16 bytes of the datagram contain a stateless reset token. ¶ To entities other than its intended recipient, a Stateless Reset will appear to be a packet with a short header.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2588-s78", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "For the Stateless Reset to appear as a valid QUIC packet, the Unpredictable Bits field needs to include at least 38 bits of data (or 5 bytes, less the two fixed bits). ¶ The resulting minimum size of 21 bytes does not guarantee that a Stateless Reset is difficult to distinguish from other packets if the recipient requires the use of a connection ID.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2589-s79", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "To achieve that end, the endpoint SHOULD ensure that all packets it sends are at least 22 bytes longer than the minimum connection ID length that it requests the peer to include in its packets, adding PADDING frames as necessary.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2590-s80", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "This ensures that any Stateless Reset sent by the peer is indistinguishable from a valid packet sent to the endpoint.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2591-s81", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint that sends a Stateless Reset in response to a packet that is 43 bytes or shorter SHOULD send a Stateless Reset that is one byte shorter than the packet it responds to. ¶ These values assume that the stateless reset token is the same length as the minimum expansion of the packet protection AEAD.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2592-s82", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Additional unpredictable bytes are necessary if the endpoint could have negotiated a packet protection scheme with a larger minimum expansion. ¶ An endpoint MUST NOT send a Stateless Reset that is three times or more larger than the packet it receives to avoid being used for amplification.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2593-s83", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Section 10.3.3 describes additional limits on Stateless Reset size. ¶ Endpoints MUST discard packets that are too small to be valid QUIC packets.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.7-p2594-s84", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "To give an example, with the set of AEAD functions defined in [ QUIC-TLS ] , short header packets that are smaller than 21 bytes are never valid. ¶ Endpoints MUST send Stateless Resets formatted as a packet with a short header.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2595-s85", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "However, endpoints MUST treat any packet ending in a valid stateless reset token as a Stateless Reset, as other QUIC versions might allow the use of a long header. ¶ An endpoint MAY send a Stateless Reset in response to a packet with a long header.", "facet": "state_machine", "normative": true, "modalities": ["MUST", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2596-s86", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Sending a Stateless Reset is not effective prior to the stateless reset token being available to a peer.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2597-s87", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "In this QUIC version, packets with a long header are only used during connection establishment.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2598-s88", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Because the stateless reset token is not available until connection establishment is complete or near completion, ignoring an unknown packet with a long header might be as effective as sending a Stateless Reset. ¶ An endpoint cannot determine the Source Connection ID from a packet with a short header; therefore, it cannot set the Destination Connection ID in the Stateless Reset.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2599-s89", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "The Destination Connection ID will therefore differ from the value used in previous packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2600-s90", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "A random Destination Connection ID makes the connection ID appear to be the result of moving to a new connection ID that was provided using a NEW_CONNECTION_ID frame; see Section 19.15 . ¶ Using a randomized connection ID results in two problems: ¶ The packet might not reach the peer.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2601-s91", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "If the Destination Connection ID is critical for routing toward the peer, then this packet could be incorrectly routed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.7-p2602-s92", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "This might also trigger another Stateless Reset in response; see Section 10.3.3 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2603-s93", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "A Stateless Reset that is not correctly routed is an ineffective error detection and recovery mechanism.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2604-s94", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "In this case, endpoints will need to rely on other methods -- such as timers -- to detect that the connection has failed. ¶ The randomly generated connection ID can be used by entities other than the peer to identify this as a potential Stateless Reset.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2605-s95", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint that occasionally uses different connection IDs might introduce some uncertainty about this. ¶ This stateless reset design is specific to QUIC version 1.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2606-s96", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint that supports multiple versions of QUIC needs to generate a Stateless Reset that will be accepted by peers that support any version that the endpoint might support (or might have supported prior to losing state).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2607-s97", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Designers of new versions of QUIC need to be aware of this and either (1) reuse this design or (2) use a portion of the packet other than the last 16 bytes for carrying data. ¶ 10.3.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2608-s98", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Detecting a Stateless Reset An endpoint detects a potential Stateless Reset using the trailing 16 bytes of the UDP datagram.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2609-s99", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint remembers all stateless reset tokens associated with the connection IDs and remote addresses for datagrams it has recently sent.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2610-s100", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "This includes Stateless Reset Token field values from NEW_CONNECTION_ID frames and the server's transport parameters but excludes stateless reset tokens associated with connection IDs that are either unused or retired.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2611-s101", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "The endpoint identifies a received datagram as a Stateless Reset by comparing the last 16 bytes of the datagram with all stateless reset tokens associated with the remote address on which the datagram was received. ¶ This comparison can be performed for every inbound datagram.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2612-s102", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Endpoints MAY skip this check if any packet from a datagram is successfully processed.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "9.7-p2613-s103", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "However, the comparison MUST be performed when the first packet in an incoming datagram either cannot be associated with a connection or cannot be decrypted. ¶ An endpoint MUST NOT check for any stateless reset tokens associated with connection IDs it has not used or for connection IDs that have been retired. ¶ When comparing a datagram to stateless reset token values, endpoints MUST perform the comparison without leaking information about the value of the token.", "facet": "state_machine", "normative": true, "modalities": ["MUST", "MUST NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2614-s104", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "For example, performing this comparison in constant time protects the value of individual stateless reset tokens from information leakage through timing side channels.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2615-s105", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Another approach would be to store and compare the transformed values of stateless reset tokens instead of the raw token values, where the transformation is defined as a cryptographically secure pseudorandom function using a secret key (e.g., block cipher, Hashed Message Authentication Code (HMAC) [ RFC2104 ] ).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2616-s106", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint is not expected to protect information about whether a packet was successfully decrypted or the number of valid stateless reset tokens. ¶ If the last 16 bytes of the datagram are identical in value to a stateless reset token, the endpoint MUST enter the draining period and not send any further packets on this connection. ¶ 10.3.2.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2617-s107", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Calculating a Stateless Reset Token The stateless reset token MUST be difficult to guess.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.7-p2618-s108", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "In order to create a stateless reset token, an endpoint could randomly generate [ RANDOM ] a secret for every connection that it creates.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2619-s109", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "However, this presents a coordination problem when there are multiple instances in a cluster or a storage problem for an endpoint that might lose state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2620-s110", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Stateless reset specifically exists to handle the case where state is lost, so this approach is suboptimal. ¶ A single static key can be used across all connections to the same endpoint by generating the proof using a pseudorandom function that takes a static key and the connection ID chosen by the endpoint (see Section 5.1 ) as input.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2621-s111", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint could use HMAC [ RFC2104 ] (for example, HMAC(static_key, connection_id)) or the HMAC-based Key Derivation Function (HKDF) [ RFC5869 ] (for example, using the static key as input keying material, with the connection ID as salt).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "9.7-p2622-s112", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "The output of this function is truncated to 16 bytes to produce the stateless reset token for that connection. ¶ An endpoint that loses state can use the same method to generate a valid stateless reset token.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2623-s113", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "The connection ID comes from the packet that the endpoint receives. ¶ This design relies on the peer always sending a connection ID in its packets so that the endpoint can use the connection ID from a packet to reset the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "9.7-p2624-s114", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "An endpoint that uses this design MUST either use the same connection ID length for all connections or encode the length of the connection ID such that it can be recovered without state.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.7-p2625-s115", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "In addition, it cannot provide a zero-length connection ID. ¶ Revealing the stateless reset token allows any entity to terminate the connection, so a value can only be used once.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2626-s116", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "This method for choosing the stateless reset token means that the combination of connection ID and static key MUST NOT be used for another connection.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.7-p2627-s117", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "A denial-of-service attack is possible if the same connection ID is used by instances that share a static key or if an attacker can cause a packet to be routed to an instance that has no state but the same static key; see Section 21.11 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2628-s118", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "A connection ID from a connection that is reset by revealing the stateless reset token MUST NOT be reused for new connections at nodes that share a static key. ¶ The same stateless reset token MUST NOT be used for multiple connection IDs.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.7-p2629-s119", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Endpoints are not required to compare new values against all previous values, but a duplicate value MAY be treated as a connection error of type PROTOCOL_VIOLATION. ¶ Note that Stateless Resets do not have any cryptographic protection. ¶ 10.3.3.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "9.7-p2630-s120", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Looping The design of a Stateless Reset is such that without knowing the stateless reset token it is indistinguishable from a valid packet.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2631-s121", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "For instance, if a server sends a Stateless Reset to another server, it might receive another Stateless Reset in response, which could lead to an infinite exchange. ¶ An endpoint MUST ensure that every Stateless Reset that it sends is smaller than the packet that triggered it, unless it maintains state sufficient to prevent looping.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "9.7-p2632-s122", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "In the event of a loop, this results in packets eventually being too small to trigger a response. ¶ An endpoint can remember the number of Stateless Resets that it has sent and stop generating new Stateless Resets once a limit is reached.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "9.7-p2633-s123", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Using separate limits for different remote addresses will ensure that Stateless Resets can be used to close connections when other peers or connections have exhausted limits. ¶ A Stateless Reset that is smaller than 41 bytes might be identifiable as a Stateless Reset by an observer, depending upon the length of the peer's connection IDs.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "9.7-p2634-s124", "section": "9.7", "anchor": "#name-use-of-ipv6-flow-label-and-", "para_id": "9.7-p564", "text": "Conversely, not sending a Stateless Reset in response to a small packet might result in Stateless Resets not being useful in detecting cases of broken connections where only very small packets are sent; such failures might only be detected by other means, such as timers. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10-p2635-s1", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p565", "text": "An established QUIC connection can be terminated in one of three ways: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10-p2636-s1", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p566", "text": "idle timeout ( Section 10.1 ) ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10-p2637-s1", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p567", "text": "immediate close ( Section 10.2 ) ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10-p2638-s1", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p568", "text": "stateless reset ( Section 10.3 ) ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10-p2639-s1", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p569", "text": "An endpoint MAY discard connection state if it does not have a validated path on which it can send packets; see Section 8.2 . ¶", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10-p2640-s1", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "10.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10-p2641-s2", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "Idle Timeout If a max_idle_timeout is specified by either endpoint in its transport parameters ( Section 18.2 ), the connection is silently closed and its state is discarded when it remains idle for longer than the minimum of the max_idle_timeout value advertised by both endpoints. ¶ Each endpoint advertises a max_idle_timeout, but the effective value at an endpoint is computed as the minimum of the two advertised values (or the sole advertised value, if only one endpoint advertises a non-zero value).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10-p2642-s3", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "By announcing a max_idle_timeout, an endpoint commits to initiating an immediate close ( Section 10.2 ) if it abandons the connection prior to the effective value. ¶ An endpoint restarts its idle timer when a packet from its peer is received and processed successfully.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10-p2643-s4", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "An endpoint also restarts its idle timer when sending an ack-eliciting packet if no other ack-eliciting packets have been sent since last receiving and processing a packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10-p2644-s5", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "Restarting this timer when sending a packet ensures that connections are not closed after new activity is initiated. ¶ To avoid excessively small idle timeout periods, endpoints MUST increase the idle timeout period to be at least three times the current Probe Timeout (PTO).", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10-p2645-s6", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "This allows for multiple PTOs to expire, and therefore multiple probes to be sent and lost, prior to idle timeout. ¶ 10.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10-p2646-s7", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "Liveness Testing An endpoint that sends packets close to the effective timeout risks having them be discarded at the peer, since the idle timeout period might have expired at the peer before these packets arrive. ¶ An endpoint can send a PING or another ack-eliciting frame to test the connection for liveness if the peer could time out soon, such as within a PTO; see Section 6.2 of [ QUIC-RECOVERY ] .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10-p2647-s8", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "This is especially useful if any available application data cannot be safely retried.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10-p2648-s9", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "Note that the application determines what data is safe to retry. ¶ 10.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10-p2649-s10", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "Deferring Idle Timeout An endpoint might need to send ack-eliciting packets to avoid an idle timeout if it is expecting response data but does not have or is unable to send application data. ¶ An implementation of QUIC might provide applications with an option to defer an idle timeout.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10-p2650-s11", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "This facility could be used when the application wishes to avoid losing state that has been associated with an open connection but does not expect to exchange application data for some time.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10-p2651-s12", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "With this option, an endpoint could send a PING frame ( Section 19.2 ) periodically, which will cause the peer to restart its idle timeout period.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10-p2652-s13", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "Sending a packet containing a PING frame restarts the idle timeout for this endpoint also if this is the first ack-eliciting packet sent since receiving a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10-p2653-s14", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "Sending a PING frame causes the peer to respond with an acknowledgment, which also restarts the idle timeout for the endpoint. ¶ Application protocols that use QUIC SHOULD provide guidance on when deferring an idle timeout is appropriate.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10-p2654-s15", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "Unnecessary sending of PING frames could have a detrimental effect on performance. ¶ A connection will time out if no packets are sent or received for a period longer than the time negotiated using the max_idle_timeout transport parameter; see Section 10 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10-p2655-s16", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "However, state in middleboxes might time out earlier than that.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10-p2656-s17", "section": "10", "anchor": "#name-connection-termination", "para_id": "10-p570", "text": "Though REQ-5 in [ RFC4787 ] recommends a 2-minute timeout interval, experience shows that sending packets every 30 seconds is necessary to prevent the majority of middleboxes from losing state for UDP flows [ GATEWAY ] . ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1-p2657-s1", "section": "10.1", "anchor": "#name-idle-timeout", "para_id": "10.1-p571", "text": "If a max_idle_timeout is specified by either endpoint in its transport parameters ( Section 18.2 ), the connection is silently closed and its state is discarded when it remains idle for longer than the minimum of the max_idle_timeout value advertised by both endpoints. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1-p2658-s1", "section": "10.1", "anchor": "#name-idle-timeout", "para_id": "10.1-p572", "text": "Each endpoint advertises a max_idle_timeout, but the effective value at an endpoint is computed as the minimum of the two advertised values (or the sole advertised value, if only one endpoint advertises a non-zero value).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1-p2659-s2", "section": "10.1", "anchor": "#name-idle-timeout", "para_id": "10.1-p572", "text": "By announcing a max_idle_timeout, an endpoint commits to initiating an immediate close ( Section 10.2 ) if it abandons the connection prior to the effective value. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1-p2660-s1", "section": "10.1", "anchor": "#name-idle-timeout", "para_id": "10.1-p573", "text": "An endpoint restarts its idle timer when a packet from its peer is received and processed successfully.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1-p2661-s2", "section": "10.1", "anchor": "#name-idle-timeout", "para_id": "10.1-p573", "text": "An endpoint also restarts its idle timer when sending an ack-eliciting packet if no other ack-eliciting packets have been sent since last receiving and processing a packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1-p2662-s3", "section": "10.1", "anchor": "#name-idle-timeout", "para_id": "10.1-p573", "text": "Restarting this timer when sending a packet ensures that connections are not closed after new activity is initiated. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1-p2663-s1", "section": "10.1", "anchor": "#name-idle-timeout", "para_id": "10.1-p574", "text": "To avoid excessively small idle timeout periods, endpoints MUST increase the idle timeout period to be at least three times the current Probe Timeout (PTO).", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.1-p2664-s2", "section": "10.1", "anchor": "#name-idle-timeout", "para_id": "10.1-p574", "text": "This allows for multiple PTOs to expire, and therefore multiple probes to be sent and lost, prior to idle timeout. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1-p2665-s1", "section": "10.1", "anchor": "#name-idle-timeout", "para_id": "10.1-p575", "text": "10.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1-p2666-s2", "section": "10.1", "anchor": "#name-idle-timeout", "para_id": "10.1-p575", "text": "Liveness Testing An endpoint that sends packets close to the effective timeout risks having them be discarded at the peer, since the idle timeout period might have expired at the peer before these packets arrive. ¶ An endpoint can send a PING or another ack-eliciting frame to test the connection for liveness if the peer could time out soon, such as within a PTO; see Section 6.2 of [ QUIC-RECOVERY ] .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1-p2667-s3", "section": "10.1", "anchor": "#name-idle-timeout", "para_id": "10.1-p575", "text": "This is especially useful if any available application data cannot be safely retried.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1-p2668-s4", "section": "10.1", "anchor": "#name-idle-timeout", "para_id": "10.1-p575", "text": "Note that the application determines what data is safe to retry. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1.1-p2669-s1", "section": "10.1.1", "anchor": "#name-liveness-testing", "para_id": "10.1.1-p576", "text": "An endpoint that sends packets close to the effective timeout risks having them be discarded at the peer, since the idle timeout period might have expired at the peer before these packets arrive. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1.1-p2670-s1", "section": "10.1.1", "anchor": "#name-liveness-testing", "para_id": "10.1.1-p577", "text": "An endpoint can send a PING or another ack-eliciting frame to test the connection for liveness if the peer could time out soon, such as within a PTO; see Section 6.2 of [ QUIC-RECOVERY ] .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.1-p2671-s2", "section": "10.1.1", "anchor": "#name-liveness-testing", "para_id": "10.1.1-p577", "text": "This is especially useful if any available application data cannot be safely retried.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1.1-p2672-s3", "section": "10.1.1", "anchor": "#name-liveness-testing", "para_id": "10.1.1-p577", "text": "Note that the application determines what data is safe to retry. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1.1-p2673-s1", "section": "10.1.1", "anchor": "#name-liveness-testing", "para_id": "10.1.1-p578", "text": "10.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1.1-p2674-s2", "section": "10.1.1", "anchor": "#name-liveness-testing", "para_id": "10.1.1-p578", "text": "Deferring Idle Timeout An endpoint might need to send ack-eliciting packets to avoid an idle timeout if it is expecting response data but does not have or is unable to send application data. ¶ An implementation of QUIC might provide applications with an option to defer an idle timeout.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1.1-p2675-s3", "section": "10.1.1", "anchor": "#name-liveness-testing", "para_id": "10.1.1-p578", "text": "This facility could be used when the application wishes to avoid losing state that has been associated with an open connection but does not expect to exchange application data for some time.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.1-p2676-s4", "section": "10.1.1", "anchor": "#name-liveness-testing", "para_id": "10.1.1-p578", "text": "With this option, an endpoint could send a PING frame ( Section 19.2 ) periodically, which will cause the peer to restart its idle timeout period.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.1-p2677-s5", "section": "10.1.1", "anchor": "#name-liveness-testing", "para_id": "10.1.1-p578", "text": "Sending a packet containing a PING frame restarts the idle timeout for this endpoint also if this is the first ack-eliciting packet sent since receiving a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.1-p2678-s6", "section": "10.1.1", "anchor": "#name-liveness-testing", "para_id": "10.1.1-p578", "text": "Sending a PING frame causes the peer to respond with an acknowledgment, which also restarts the idle timeout for the endpoint. ¶ Application protocols that use QUIC SHOULD provide guidance on when deferring an idle timeout is appropriate.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.1-p2679-s7", "section": "10.1.1", "anchor": "#name-liveness-testing", "para_id": "10.1.1-p578", "text": "Unnecessary sending of PING frames could have a detrimental effect on performance. ¶ A connection will time out if no packets are sent or received for a period longer than the time negotiated using the max_idle_timeout transport parameter; see Section 10 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.1-p2680-s8", "section": "10.1.1", "anchor": "#name-liveness-testing", "para_id": "10.1.1-p578", "text": "However, state in middleboxes might time out earlier than that.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.1.1-p2681-s9", "section": "10.1.1", "anchor": "#name-liveness-testing", "para_id": "10.1.1-p578", "text": "Though REQ-5 in [ RFC4787 ] recommends a 2-minute timeout interval, experience shows that sending packets every 30 seconds is necessary to prevent the majority of middleboxes from losing state for UDP flows [ GATEWAY ] . ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2682-s1", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p579", "text": "An endpoint might need to send ack-eliciting packets to avoid an idle timeout if it is expecting response data but does not have or is unable to send application data. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1.2-p2683-s1", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p580", "text": "An implementation of QUIC might provide applications with an option to defer an idle timeout.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1.2-p2684-s2", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p580", "text": "This facility could be used when the application wishes to avoid losing state that has been associated with an open connection but does not expect to exchange application data for some time.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2685-s3", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p580", "text": "With this option, an endpoint could send a PING frame ( Section 19.2 ) periodically, which will cause the peer to restart its idle timeout period.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2686-s4", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p580", "text": "Sending a packet containing a PING frame restarts the idle timeout for this endpoint also if this is the first ack-eliciting packet sent since receiving a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2687-s5", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p580", "text": "Sending a PING frame causes the peer to respond with an acknowledgment, which also restarts the idle timeout for the endpoint. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2688-s1", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p581", "text": "Application protocols that use QUIC SHOULD provide guidance on when deferring an idle timeout is appropriate.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.1.2-p2689-s2", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p581", "text": "Unnecessary sending of PING frames could have a detrimental effect on performance. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.1.2-p2690-s1", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p582", "text": "A connection will time out if no packets are sent or received for a period longer than the time negotiated using the max_idle_timeout transport parameter; see Section 10 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1.2-p2691-s2", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p582", "text": "However, state in middleboxes might time out earlier than that.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.1.2-p2692-s3", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p582", "text": "Though REQ-5 in [ RFC4787 ] recommends a 2-minute timeout interval, experience shows that sending packets every 30 seconds is necessary to prevent the majority of middleboxes from losing state for UDP flows [ GATEWAY ] . ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2693-s1", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "10.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1.2-p2694-s2", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Immediate Close An endpoint sends a CONNECTION_CLOSE frame ( Section 19.19 ) to terminate the connection immediately.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2695-s3", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "A CONNECTION_CLOSE frame causes all streams to immediately become closed; open streams can be assumed to be implicitly reset. ¶ After sending a CONNECTION_CLOSE frame, an endpoint immediately enters the closing state; see Section 10.2.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.1.2-p2696-s4", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "After receiving a CONNECTION_CLOSE frame, endpoints enter the draining state; see Section 10.2.2 . ¶ Violations of the protocol lead to an immediate close. ¶ An immediate close can be used after an application protocol has arranged to close a connection.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.1.2-p2697-s5", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "This might be after the application protocol negotiates a graceful shutdown.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1.2-p2698-s6", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "The application protocol can exchange messages that are needed for both application endpoints to agree that the connection can be closed, after which the application requests that QUIC close the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1.2-p2699-s7", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "When QUIC consequently closes the connection, a CONNECTION_CLOSE frame with an application-supplied error code will be used to signal closure to the peer. ¶ The closing and draining connection states exist to ensure that connections close cleanly and that delayed or reordered packets are properly discarded.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2700-s8", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "These states SHOULD persist for at least three times the current PTO interval as defined in [ QUIC-RECOVERY ] . ¶ Disposing of connection state prior to exiting the closing or draining state could result in an endpoint generating a Stateless Reset unnecessarily when it receives a late-arriving packet.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2701-s9", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Endpoints that have some alternative means to ensure that late-arriving packets do not induce a response, such as those that are able to close the UDP socket, MAY end these states earlier to allow for faster resource recovery.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.1.2-p2702-s10", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Servers that retain an open socket for accepting new connections SHOULD NOT end the closing or draining state early. ¶ Once its closing or draining state ends, an endpoint SHOULD discard all connection state.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD NOT", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.1.2-p2703-s11", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "The endpoint MAY send a Stateless Reset in response to any further incoming packets belonging to this connection. ¶ 10.2.1.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2704-s12", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Closing Connection State An endpoint enters the closing state after initiating an immediate close. ¶ In the closing state, an endpoint retains only enough information to generate a packet containing a CONNECTION_CLOSE frame and to identify packets as belonging to the connection.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.1.2-p2705-s13", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "An endpoint in the closing state sends a packet containing a CONNECTION_CLOSE frame in response to any incoming packet that it attributes to the connection. ¶ An endpoint SHOULD limit the rate at which it generates packets in the closing state.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2706-s14", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "For instance, an endpoint could wait for a progressively increasing number of received packets or amount of time before responding to received packets. ¶ An endpoint's selected connection ID and the QUIC version are sufficient information to identify packets for a closing connection; the endpoint MAY discard all other connection state.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2707-s15", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "An endpoint that is closing is not required to process any received frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2708-s16", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "An endpoint MAY retain packet protection keys for incoming packets to allow it to read and process a CONNECTION_CLOSE frame. ¶ An endpoint MAY drop packet protection keys when entering the closing state and send a packet containing a CONNECTION_CLOSE frame in response to any UDP datagram that is received.", "facet": "frames", "normative": true, "modalities": ["MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2709-s17", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "However, an endpoint that discards packet protection keys cannot identify and discard invalid packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1.2-p2710-s18", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "To avoid being used for an amplification attack, such endpoints MUST limit the cumulative size of packets it sends to three times the cumulative size of the packets that are received and attributed to the connection.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.1.2-p2711-s19", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "To minimize the state that an endpoint maintains for a closing connection, endpoints MAY send the exact same packet in response to any received packet. ¶ Note:", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2712-s20", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Allowing retransmission of a closing packet is an exception to the requirement that a new packet number be used for each packet; see Section 12.3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1.2-p2713-s21", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Sending new packet numbers is primarily of advantage to loss recovery and congestion control, which are not expected to be relevant for a closed connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1.2-p2714-s22", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Retransmitting the final packet requires less state. ¶ While in the closing state, an endpoint could receive packets from a new source address, possibly indicating a connection migration; see Section 9 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2715-s23", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "An endpoint in the closing state MUST either discard packets received from an unvalidated address or limit the cumulative size of packets it sends to an unvalidated address to three times the size of packets it receives from that address. ¶ An endpoint is not expected to handle key updates when it is closing ( Section 6 of [ QUIC-TLS ] ).", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2716-s24", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "A key update might prevent the endpoint from moving from the closing state to the draining state, as the endpoint will not be able to process subsequently received packets, but it otherwise has no impact. ¶ 10.2.2.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2717-s25", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Draining Connection State The draining state is entered once an endpoint receives a CONNECTION_CLOSE frame, which indicates that its peer is closing or draining.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2718-s26", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "While otherwise identical to the closing state, an endpoint in the draining state MUST NOT send any packets.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2719-s27", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Retaining packet protection keys is unnecessary once a connection is in the draining state. ¶ An endpoint that receives a CONNECTION_CLOSE frame MAY send a single packet containing a CONNECTION_CLOSE frame before entering the draining state, using a NO_ERROR code if appropriate.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2720-s28", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "An endpoint MUST NOT send further packets.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.1.2-p2721-s29", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Doing so could result in a constant exchange of CONNECTION_CLOSE frames until one of the endpoints exits the closing state. ¶ An endpoint MAY enter the draining state from the closing state if it receives a CONNECTION_CLOSE frame, which indicates that the peer is also closing or draining.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2722-s30", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "In this case, the draining state ends when the closing state would have ended.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2723-s31", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "In other words, the endpoint uses the same end time but ceases transmission of any packets on this connection. ¶ 10.2.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1.2-p2724-s32", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Immediate Close during the Handshake When sending a CONNECTION_CLOSE frame, the goal is to ensure that the peer will process the frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.1.2-p2725-s33", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Generally, this means sending the frame in a packet with the highest level of packet protection to avoid the packet being discarded.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.1.2-p2726-s34", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "After the handshake is confirmed (see Section 4.1.2 of [ QUIC-TLS ] ), an endpoint MUST send any CONNECTION_CLOSE frames in a 1-RTT packet.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2727-s35", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "However, prior to confirming the handshake, it is possible that more advanced packet protection keys are not available to the peer, so another CONNECTION_CLOSE frame MAY be sent in a packet that uses a lower packet protection level.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.1.2-p2728-s36", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "More specifically: ¶ A client will always know whether the server has Handshake keys (see Section 17.2.2.1 ), but it is possible that a server does not know whether the client has Handshake keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1.2-p2729-s37", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Under these circumstances, a server SHOULD send a CONNECTION_CLOSE frame in both Handshake and Initial packets to ensure that at least one of them is processable by the client. ¶ A client that sends a CONNECTION_CLOSE frame in a 0-RTT packet cannot be assured that the server has accepted 0-RTT.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2730-s38", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Sending a CONNECTION_CLOSE frame in an Initial packet makes it more likely that the server can receive the close signal, even if the application error code might not be received. ¶ Prior to confirming the handshake, a peer might be unable to process 1-RTT packets, so an endpoint SHOULD send a CONNECTION_CLOSE frame in both Handshake and 1-RTT packets.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2731-s39", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "A server SHOULD also send a CONNECTION_CLOSE frame in an Initial packet. ¶ Sending a CONNECTION_CLOSE of type 0x1d in an Initial or Handshake packet could expose application state or be used to alter application state.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2732-s40", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "A CONNECTION_CLOSE of type 0x1d MUST be replaced by a CONNECTION_CLOSE of type 0x1c when sending the frame in Initial or Handshake packets.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2733-s41", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Otherwise, information about the application state might be revealed.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.1.2-p2734-s42", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Endpoints MUST clear the value of the Reason Phrase field and SHOULD use the APPLICATION_ERROR code when converting to a CONNECTION_CLOSE of type 0x1c. ¶ CONNECTION_CLOSE frames sent in multiple packet types can be coalesced into a single UDP datagram; see Section 12.2 . ¶ An endpoint can send a CONNECTION_CLOSE frame in an Initial packet.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2735-s43", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "This might be in response to unauthenticated information received in Initial or Handshake packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1.2-p2736-s44", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "Such an immediate close might expose legitimate connections to a denial of service.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1.2-p2737-s45", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "QUIC does not include defensive measures for on-path attacks during the handshake; see Section 21.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.1.2-p2738-s46", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "However, at the cost of reducing feedback about errors for legitimate peers, some forms of denial of service can be made more difficult for an attacker if endpoints discard illegal packets rather than terminating a connection with CONNECTION_CLOSE.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.1.2-p2739-s47", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "For this reason, endpoints MAY discard packets rather than immediately close if errors are detected in packets that lack authentication. ¶ An endpoint that has not established state, such as a server that detects an error in an Initial packet, does not enter the closing state.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.1.2-p2740-s48", "section": "10.1.2", "anchor": "#name-deferring-idle-timeout", "para_id": "10.1.2-p583", "text": "An endpoint that has no state for the connection does not enter a closing or draining period on sending a CONNECTION_CLOSE frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2-p2741-s1", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p584", "text": "An endpoint sends a CONNECTION_CLOSE frame ( Section 19.19 ) to terminate the connection immediately.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2-p2742-s2", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p584", "text": "A CONNECTION_CLOSE frame causes all streams to immediately become closed; open streams can be assumed to be implicitly reset. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2-p2743-s1", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p585", "text": "After sending a CONNECTION_CLOSE frame, an endpoint immediately enters the closing state; see Section 10.2.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2-p2744-s2", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p585", "text": "After receiving a CONNECTION_CLOSE frame, endpoints enter the draining state; see Section 10.2.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2-p2745-s1", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p586", "text": "Violations of the protocol lead to an immediate close. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2-p2746-s1", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p587", "text": "An immediate close can be used after an application protocol has arranged to close a connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2-p2747-s2", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p587", "text": "This might be after the application protocol negotiates a graceful shutdown.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2-p2748-s3", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p587", "text": "The application protocol can exchange messages that are needed for both application endpoints to agree that the connection can be closed, after which the application requests that QUIC close the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2-p2749-s4", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p587", "text": "When QUIC consequently closes the connection, a CONNECTION_CLOSE frame with an application-supplied error code will be used to signal closure to the peer. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2-p2750-s1", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p588", "text": "The closing and draining connection states exist to ensure that connections close cleanly and that delayed or reordered packets are properly discarded.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2-p2751-s2", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p588", "text": "These states SHOULD persist for at least three times the current PTO interval as defined in [ QUIC-RECOVERY ] . ¶", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2-p2752-s1", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p589", "text": "Disposing of connection state prior to exiting the closing or draining state could result in an endpoint generating a Stateless Reset unnecessarily when it receives a late-arriving packet.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2-p2753-s2", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p589", "text": "Endpoints that have some alternative means to ensure that late-arriving packets do not induce a response, such as those that are able to close the UDP socket, MAY end these states earlier to allow for faster resource recovery.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2-p2754-s3", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p589", "text": "Servers that retain an open socket for accepting new connections SHOULD NOT end the closing or draining state early. ¶", "facet": "state_machine", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2-p2755-s1", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p590", "text": "Once its closing or draining state ends, an endpoint SHOULD discard all connection state.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2-p2756-s2", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p590", "text": "The endpoint MAY send a Stateless Reset in response to any further incoming packets belonging to this connection. ¶", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2-p2757-s1", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "10.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2-p2758-s2", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "Closing Connection State An endpoint enters the closing state after initiating an immediate close. ¶ In the closing state, an endpoint retains only enough information to generate a packet containing a CONNECTION_CLOSE frame and to identify packets as belonging to the connection.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2-p2759-s3", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "An endpoint in the closing state sends a packet containing a CONNECTION_CLOSE frame in response to any incoming packet that it attributes to the connection. ¶ An endpoint SHOULD limit the rate at which it generates packets in the closing state.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2-p2760-s4", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "For instance, an endpoint could wait for a progressively increasing number of received packets or amount of time before responding to received packets. ¶ An endpoint's selected connection ID and the QUIC version are sufficient information to identify packets for a closing connection; the endpoint MAY discard all other connection state.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2-p2761-s5", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "An endpoint that is closing is not required to process any received frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2-p2762-s6", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "An endpoint MAY retain packet protection keys for incoming packets to allow it to read and process a CONNECTION_CLOSE frame. ¶ An endpoint MAY drop packet protection keys when entering the closing state and send a packet containing a CONNECTION_CLOSE frame in response to any UDP datagram that is received.", "facet": "frames", "normative": true, "modalities": ["MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2-p2763-s7", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "However, an endpoint that discards packet protection keys cannot identify and discard invalid packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2-p2764-s8", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "To avoid being used for an amplification attack, such endpoints MUST limit the cumulative size of packets it sends to three times the cumulative size of the packets that are received and attributed to the connection.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.2-p2765-s9", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "To minimize the state that an endpoint maintains for a closing connection, endpoints MAY send the exact same packet in response to any received packet. ¶ Note:", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2-p2766-s10", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "Allowing retransmission of a closing packet is an exception to the requirement that a new packet number be used for each packet; see Section 12.3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2-p2767-s11", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "Sending new packet numbers is primarily of advantage to loss recovery and congestion control, which are not expected to be relevant for a closed connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2-p2768-s12", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "Retransmitting the final packet requires less state. ¶ While in the closing state, an endpoint could receive packets from a new source address, possibly indicating a connection migration; see Section 9 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2-p2769-s13", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "An endpoint in the closing state MUST either discard packets received from an unvalidated address or limit the cumulative size of packets it sends to an unvalidated address to three times the size of packets it receives from that address. ¶ An endpoint is not expected to handle key updates when it is closing ( Section 6 of [ QUIC-TLS ] ).", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2-p2770-s14", "section": "10.2", "anchor": "#name-immediate-close", "para_id": "10.2-p591", "text": "A key update might prevent the endpoint from moving from the closing state to the draining state, as the endpoint will not be able to process subsequently received packets, but it otherwise has no impact. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.1-p2771-s1", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p592", "text": "An endpoint enters the closing state after initiating an immediate close. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.1-p2772-s1", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p593", "text": "In the closing state, an endpoint retains only enough information to generate a packet containing a CONNECTION_CLOSE frame and to identify packets as belonging to the connection.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.1-p2773-s2", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p593", "text": "An endpoint in the closing state sends a packet containing a CONNECTION_CLOSE frame in response to any incoming packet that it attributes to the connection. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.1-p2774-s1", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p594", "text": "An endpoint SHOULD limit the rate at which it generates packets in the closing state.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2.1-p2775-s2", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p594", "text": "For instance, an endpoint could wait for a progressively increasing number of received packets or amount of time before responding to received packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.2.1-p2776-s1", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p595", "text": "An endpoint's selected connection ID and the QUIC version are sufficient information to identify packets for a closing connection; the endpoint MAY discard all other connection state.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2.1-p2777-s2", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p595", "text": "An endpoint that is closing is not required to process any received frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.1-p2778-s3", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p595", "text": "An endpoint MAY retain packet protection keys for incoming packets to allow it to read and process a CONNECTION_CLOSE frame. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2.1-p2779-s1", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p596", "text": "An endpoint MAY drop packet protection keys when entering the closing state and send a packet containing a CONNECTION_CLOSE frame in response to any UDP datagram that is received.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.1-p2780-s2", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p596", "text": "However, an endpoint that discards packet protection keys cannot identify and discard invalid packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.1-p2781-s3", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p596", "text": "To avoid being used for an amplification attack, such endpoints MUST limit the cumulative size of packets it sends to three times the cumulative size of the packets that are received and attributed to the connection.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.2.1-p2782-s4", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p596", "text": "To minimize the state that an endpoint maintains for a closing connection, endpoints MAY send the exact same packet in response to any received packet. ¶", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.1-p2783-s1", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p597", "text": "Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.1-p2784-s2", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p597", "text": "Allowing retransmission of a closing packet is an exception to the requirement that a new packet number be used for each packet; see Section 12.3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.1-p2785-s3", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p597", "text": "Sending new packet numbers is primarily of advantage to loss recovery and congestion control, which are not expected to be relevant for a closed connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.1-p2786-s4", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p597", "text": "Retransmitting the final packet requires less state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.1-p2787-s1", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p598", "text": "While in the closing state, an endpoint could receive packets from a new source address, possibly indicating a connection migration; see Section 9 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.1-p2788-s2", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p598", "text": "An endpoint in the closing state MUST either discard packets received from an unvalidated address or limit the cumulative size of packets it sends to an unvalidated address to three times the size of packets it receives from that address. ¶", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.1-p2789-s1", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p599", "text": "An endpoint is not expected to handle key updates when it is closing ( Section 6 of [ QUIC-TLS ] ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.2.1-p2790-s2", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p599", "text": "A key update might prevent the endpoint from moving from the closing state to the draining state, as the endpoint will not be able to process subsequently received packets, but it otherwise has no impact. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.1-p2791-s1", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p600", "text": "10.2.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.1-p2792-s2", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p600", "text": "Draining Connection State The draining state is entered once an endpoint receives a CONNECTION_CLOSE frame, which indicates that its peer is closing or draining.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.1-p2793-s3", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p600", "text": "While otherwise identical to the closing state, an endpoint in the draining state MUST NOT send any packets.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.1-p2794-s4", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p600", "text": "Retaining packet protection keys is unnecessary once a connection is in the draining state. ¶ An endpoint that receives a CONNECTION_CLOSE frame MAY send a single packet containing a CONNECTION_CLOSE frame before entering the draining state, using a NO_ERROR code if appropriate.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.1-p2795-s5", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p600", "text": "An endpoint MUST NOT send further packets.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.2.1-p2796-s6", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p600", "text": "Doing so could result in a constant exchange of CONNECTION_CLOSE frames until one of the endpoints exits the closing state. ¶ An endpoint MAY enter the draining state from the closing state if it receives a CONNECTION_CLOSE frame, which indicates that the peer is also closing or draining.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.1-p2797-s7", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p600", "text": "In this case, the draining state ends when the closing state would have ended.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.1-p2798-s8", "section": "10.2.1", "anchor": "#name-closing-connection-state", "para_id": "10.2.1-p600", "text": "In other words, the endpoint uses the same end time but ceases transmission of any packets on this connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.2-p2799-s1", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p601", "text": "The draining state is entered once an endpoint receives a CONNECTION_CLOSE frame, which indicates that its peer is closing or draining.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.2-p2800-s2", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p601", "text": "While otherwise identical to the closing state, an endpoint in the draining state MUST NOT send any packets.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.2-p2801-s3", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p601", "text": "Retaining packet protection keys is unnecessary once a connection is in the draining state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.2-p2802-s1", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p602", "text": "An endpoint that receives a CONNECTION_CLOSE frame MAY send a single packet containing a CONNECTION_CLOSE frame before entering the draining state, using a NO_ERROR code if appropriate.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.2-p2803-s2", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p602", "text": "An endpoint MUST NOT send further packets.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.2.2-p2804-s3", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p602", "text": "Doing so could result in a constant exchange of CONNECTION_CLOSE frames until one of the endpoints exits the closing state. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.2-p2805-s1", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p603", "text": "An endpoint MAY enter the draining state from the closing state if it receives a CONNECTION_CLOSE frame, which indicates that the peer is also closing or draining.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.2-p2806-s2", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p603", "text": "In this case, the draining state ends when the closing state would have ended.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.2-p2807-s3", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p603", "text": "In other words, the endpoint uses the same end time but ceases transmission of any packets on this connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.2-p2808-s1", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "10.2.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.2-p2809-s2", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "Immediate Close during the Handshake When sending a CONNECTION_CLOSE frame, the goal is to ensure that the peer will process the frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.2-p2810-s3", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "Generally, this means sending the frame in a packet with the highest level of packet protection to avoid the packet being discarded.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.2-p2811-s4", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "After the handshake is confirmed (see Section 4.1.2 of [ QUIC-TLS ] ), an endpoint MUST send any CONNECTION_CLOSE frames in a 1-RTT packet.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.2-p2812-s5", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "However, prior to confirming the handshake, it is possible that more advanced packet protection keys are not available to the peer, so another CONNECTION_CLOSE frame MAY be sent in a packet that uses a lower packet protection level.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2.2-p2813-s6", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "More specifically: ¶ A client will always know whether the server has Handshake keys (see Section 17.2.2.1 ), but it is possible that a server does not know whether the client has Handshake keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.2-p2814-s7", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "Under these circumstances, a server SHOULD send a CONNECTION_CLOSE frame in both Handshake and Initial packets to ensure that at least one of them is processable by the client. ¶ A client that sends a CONNECTION_CLOSE frame in a 0-RTT packet cannot be assured that the server has accepted 0-RTT.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.2-p2815-s8", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "Sending a CONNECTION_CLOSE frame in an Initial packet makes it more likely that the server can receive the close signal, even if the application error code might not be received. ¶ Prior to confirming the handshake, a peer might be unable to process 1-RTT packets, so an endpoint SHOULD send a CONNECTION_CLOSE frame in both Handshake and 1-RTT packets.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.2-p2816-s9", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "A server SHOULD also send a CONNECTION_CLOSE frame in an Initial packet. ¶ Sending a CONNECTION_CLOSE of type 0x1d in an Initial or Handshake packet could expose application state or be used to alter application state.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.2-p2817-s10", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "A CONNECTION_CLOSE of type 0x1d MUST be replaced by a CONNECTION_CLOSE of type 0x1c when sending the frame in Initial or Handshake packets.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.2-p2818-s11", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "Otherwise, information about the application state might be revealed.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.2-p2819-s12", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "Endpoints MUST clear the value of the Reason Phrase field and SHOULD use the APPLICATION_ERROR code when converting to a CONNECTION_CLOSE of type 0x1c. ¶ CONNECTION_CLOSE frames sent in multiple packet types can be coalesced into a single UDP datagram; see Section 12.2 . ¶ An endpoint can send a CONNECTION_CLOSE frame in an Initial packet.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.2-p2820-s13", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "This might be in response to unauthenticated information received in Initial or Handshake packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.2.2-p2821-s14", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "Such an immediate close might expose legitimate connections to a denial of service.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.2-p2822-s15", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "QUIC does not include defensive measures for on-path attacks during the handshake; see Section 21.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.2-p2823-s16", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "However, at the cost of reducing feedback about errors for legitimate peers, some forms of denial of service can be made more difficult for an attacker if endpoints discard illegal packets rather than terminating a connection with CONNECTION_CLOSE.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.2.2-p2824-s17", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "For this reason, endpoints MAY discard packets rather than immediately close if errors are detected in packets that lack authentication. ¶ An endpoint that has not established state, such as a server that detects an error in an Initial packet, does not enter the closing state.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.2-p2825-s18", "section": "10.2.2", "anchor": "#name-draining-connection-state", "para_id": "10.2.2-p604", "text": "An endpoint that has no state for the connection does not enter a closing or draining period on sending a CONNECTION_CLOSE frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2826-s1", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p605", "text": "When sending a CONNECTION_CLOSE frame, the goal is to ensure that the peer will process the frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.3-p2827-s2", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p605", "text": "Generally, this means sending the frame in a packet with the highest level of packet protection to avoid the packet being discarded.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2828-s3", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p605", "text": "After the handshake is confirmed (see Section 4.1.2 of [ QUIC-TLS ] ), an endpoint MUST send any CONNECTION_CLOSE frames in a 1-RTT packet.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2829-s4", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p605", "text": "However, prior to confirming the handshake, it is possible that more advanced packet protection keys are not available to the peer, so another CONNECTION_CLOSE frame MAY be sent in a packet that uses a lower packet protection level.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2.3-p2830-s5", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p605", "text": "More specifically: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.3-p2831-s1", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p606", "text": "A client will always know whether the server has Handshake keys (see Section 17.2.2.1 ), but it is possible that a server does not know whether the client has Handshake keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.3-p2832-s2", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p606", "text": "Under these circumstances, a server SHOULD send a CONNECTION_CLOSE frame in both Handshake and Initial packets to ensure that at least one of them is processable by the client. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2833-s1", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p607", "text": "A client that sends a CONNECTION_CLOSE frame in a 0-RTT packet cannot be assured that the server has accepted 0-RTT.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.3-p2834-s2", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p607", "text": "Sending a CONNECTION_CLOSE frame in an Initial packet makes it more likely that the server can receive the close signal, even if the application error code might not be received. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.3-p2835-s1", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p608", "text": "Prior to confirming the handshake, a peer might be unable to process 1-RTT packets, so an endpoint SHOULD send a CONNECTION_CLOSE frame in both Handshake and 1-RTT packets.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2836-s2", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p608", "text": "A server SHOULD also send a CONNECTION_CLOSE frame in an Initial packet. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2837-s1", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p609", "text": "Sending a CONNECTION_CLOSE of type 0x1d in an Initial or Handshake packet could expose application state or be used to alter application state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2838-s2", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p609", "text": "A CONNECTION_CLOSE of type 0x1d MUST be replaced by a CONNECTION_CLOSE of type 0x1c when sending the frame in Initial or Handshake packets.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2839-s3", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p609", "text": "Otherwise, information about the application state might be revealed.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2840-s4", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p609", "text": "Endpoints MUST clear the value of the Reason Phrase field and SHOULD use the APPLICATION_ERROR code when converting to a CONNECTION_CLOSE of type 0x1c. ¶", "facet": "other", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.2.3-p2841-s1", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p610", "text": "CONNECTION_CLOSE frames sent in multiple packet types can be coalesced into a single UDP datagram; see Section 12.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2842-s1", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p611", "text": "An endpoint can send a CONNECTION_CLOSE frame in an Initial packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.3-p2843-s2", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p611", "text": "This might be in response to unauthenticated information received in Initial or Handshake packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.2.3-p2844-s3", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p611", "text": "Such an immediate close might expose legitimate connections to a denial of service.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.3-p2845-s4", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p611", "text": "QUIC does not include defensive measures for on-path attacks during the handshake; see Section 21.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.3-p2846-s5", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p611", "text": "However, at the cost of reducing feedback about errors for legitimate peers, some forms of denial of service can be made more difficult for an attacker if endpoints discard illegal packets rather than terminating a connection with CONNECTION_CLOSE.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.2.3-p2847-s6", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p611", "text": "For this reason, endpoints MAY discard packets rather than immediately close if errors are detected in packets that lack authentication. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.2.3-p2848-s1", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p612", "text": "An endpoint that has not established state, such as a server that detects an error in an Initial packet, does not enter the closing state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2849-s2", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p612", "text": "An endpoint that has no state for the connection does not enter a closing or draining period on sending a CONNECTION_CLOSE frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2850-s1", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "10.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.3-p2851-s2", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Stateless Reset A stateless reset is provided as an option of last resort for an endpoint that does not have access to the state of a connection.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2852-s3", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "A crash or outage might result in peers continuing to send data to an endpoint that is unable to properly continue the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.2.3-p2853-s4", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "An endpoint MAY send a Stateless Reset in response to receiving a packet that it cannot associate with an active connection. ¶ A stateless reset is not appropriate for indicating errors in active connections.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2854-s5", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "An endpoint that wishes to communicate a fatal connection error MUST use a CONNECTION_CLOSE frame if it is able. ¶ To support this process, an endpoint issues a stateless reset token, which is a 16-byte value that is hard to guess.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2855-s6", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "If the peer subsequently receives a Stateless Reset, which is a UDP datagram that ends in that stateless reset token, the peer will immediately end the connection. ¶ A stateless reset token is specific to a connection ID.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.3-p2856-s7", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "An endpoint issues a stateless reset token by including the value in the Stateless Reset Token field of a NEW_CONNECTION_ID frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2857-s8", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Servers can also issue a stateless_reset_token transport parameter during the handshake that applies to the connection ID that it selected during the handshake.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2858-s9", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "These exchanges are protected by encryption, so only client and server know their value.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.3-p2859-s10", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Note that clients cannot use the stateless_reset_token transport parameter because their transport parameters do not have confidentiality protection. ¶ Tokens are invalidated when their associated connection ID is retired via a RETIRE_CONNECTION_ID frame ( Section 19.16 ). ¶ An endpoint that receives packets that it cannot process sends a packet in the following layout (see Section 1.3 ): ¶ Stateless Reset { Fixed Bits (2) = 1, Unpredictable Bits (38..), Stateless Reset Token (128), } Figure 10 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.3-p2860-s11", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Stateless Reset This design ensures that a Stateless Reset is -- to the extent possible -- indistinguishable from a regular packet with a short header. ¶ A Stateless Reset uses an entire UDP datagram, starting with the first two bits of the packet header.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2861-s12", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "The remainder of the first byte and an arbitrary number of bytes following it are set to values that SHOULD be indistinguishable from random.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "10.2.3-p2862-s13", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "The last 16 bytes of the datagram contain a stateless reset token. ¶ To entities other than its intended recipient, a Stateless Reset will appear to be a packet with a short header.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2863-s14", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "For the Stateless Reset to appear as a valid QUIC packet, the Unpredictable Bits field needs to include at least 38 bits of data (or 5 bytes, less the two fixed bits). ¶ The resulting minimum size of 21 bytes does not guarantee that a Stateless Reset is difficult to distinguish from other packets if the recipient requires the use of a connection ID.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.3-p2864-s15", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "To achieve that end, the endpoint SHOULD ensure that all packets it sends are at least 22 bytes longer than the minimum connection ID length that it requests the peer to include in its packets, adding PADDING frames as necessary.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2865-s16", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "This ensures that any Stateless Reset sent by the peer is indistinguishable from a valid packet sent to the endpoint.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2866-s17", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "An endpoint that sends a Stateless Reset in response to a packet that is 43 bytes or shorter SHOULD send a Stateless Reset that is one byte shorter than the packet it responds to. ¶ These values assume that the stateless reset token is the same length as the minimum expansion of the packet protection AEAD.", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2867-s18", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Additional unpredictable bytes are necessary if the endpoint could have negotiated a packet protection scheme with a larger minimum expansion. ¶ An endpoint MUST NOT send a Stateless Reset that is three times or more larger than the packet it receives to avoid being used for amplification.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2868-s19", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Section 10.3.3 describes additional limits on Stateless Reset size. ¶ Endpoints MUST discard packets that are too small to be valid QUIC packets.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2.3-p2869-s20", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "To give an example, with the set of AEAD functions defined in [ QUIC-TLS ] , short header packets that are smaller than 21 bytes are never valid. ¶ Endpoints MUST send Stateless Resets formatted as a packet with a short header.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2870-s21", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "However, endpoints MUST treat any packet ending in a valid stateless reset token as a Stateless Reset, as other QUIC versions might allow the use of a long header. ¶ An endpoint MAY send a Stateless Reset in response to a packet with a long header.", "facet": "state_machine", "normative": true, "modalities": ["MUST", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2871-s22", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Sending a Stateless Reset is not effective prior to the stateless reset token being available to a peer.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2872-s23", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "In this QUIC version, packets with a long header are only used during connection establishment.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.3-p2873-s24", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Because the stateless reset token is not available until connection establishment is complete or near completion, ignoring an unknown packet with a long header might be as effective as sending a Stateless Reset. ¶ An endpoint cannot determine the Source Connection ID from a packet with a short header; therefore, it cannot set the Destination Connection ID in the Stateless Reset.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2874-s25", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "The Destination Connection ID will therefore differ from the value used in previous packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.3-p2875-s26", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "A random Destination Connection ID makes the connection ID appear to be the result of moving to a new connection ID that was provided using a NEW_CONNECTION_ID frame; see Section 19.15 . ¶ Using a randomized connection ID results in two problems: ¶ The packet might not reach the peer.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2876-s27", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "If the Destination Connection ID is critical for routing toward the peer, then this packet could be incorrectly routed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.2.3-p2877-s28", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "This might also trigger another Stateless Reset in response; see Section 10.3.3 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2878-s29", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "A Stateless Reset that is not correctly routed is an ineffective error detection and recovery mechanism.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2879-s30", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "In this case, endpoints will need to rely on other methods -- such as timers -- to detect that the connection has failed. ¶ The randomly generated connection ID can be used by entities other than the peer to identify this as a potential Stateless Reset.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2880-s31", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "An endpoint that occasionally uses different connection IDs might introduce some uncertainty about this. ¶ This stateless reset design is specific to QUIC version 1.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2881-s32", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "An endpoint that supports multiple versions of QUIC needs to generate a Stateless Reset that will be accepted by peers that support any version that the endpoint might support (or might have supported prior to losing state).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2882-s33", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Designers of new versions of QUIC need to be aware of this and either (1) reuse this design or (2) use a portion of the packet other than the last 16 bytes for carrying data. ¶ 10.3.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.3-p2883-s34", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Detecting a Stateless Reset An endpoint detects a potential Stateless Reset using the trailing 16 bytes of the UDP datagram.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2884-s35", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "An endpoint remembers all stateless reset tokens associated with the connection IDs and remote addresses for datagrams it has recently sent.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2885-s36", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "This includes Stateless Reset Token field values from NEW_CONNECTION_ID frames and the server's transport parameters but excludes stateless reset tokens associated with connection IDs that are either unused or retired.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2886-s37", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "The endpoint identifies a received datagram as a Stateless Reset by comparing the last 16 bytes of the datagram with all stateless reset tokens associated with the remote address on which the datagram was received. ¶ This comparison can be performed for every inbound datagram.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.3-p2887-s38", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Endpoints MAY skip this check if any packet from a datagram is successfully processed.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.2.3-p2888-s39", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "However, the comparison MUST be performed when the first packet in an incoming datagram either cannot be associated with a connection or cannot be decrypted. ¶ An endpoint MUST NOT check for any stateless reset tokens associated with connection IDs it has not used or for connection IDs that have been retired. ¶ When comparing a datagram to stateless reset token values, endpoints MUST perform the comparison without leaking information about the value of the token.", "facet": "state_machine", "normative": true, "modalities": ["MUST", "MUST NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2889-s40", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "For example, performing this comparison in constant time protects the value of individual stateless reset tokens from information leakage through timing side channels.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2890-s41", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Another approach would be to store and compare the transformed values of stateless reset tokens instead of the raw token values, where the transformation is defined as a cryptographically secure pseudorandom function using a secret key (e.g., block cipher, Hashed Message Authentication Code (HMAC) [ RFC2104 ] ).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2891-s42", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "An endpoint is not expected to protect information about whether a packet was successfully decrypted or the number of valid stateless reset tokens. ¶ If the last 16 bytes of the datagram are identical in value to a stateless reset token, the endpoint MUST enter the draining period and not send any further packets on this connection. ¶ 10.3.2.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2892-s43", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Calculating a Stateless Reset Token The stateless reset token MUST be difficult to guess.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2.3-p2893-s44", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "In order to create a stateless reset token, an endpoint could randomly generate [ RANDOM ] a secret for every connection that it creates.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2894-s45", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "However, this presents a coordination problem when there are multiple instances in a cluster or a storage problem for an endpoint that might lose state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.3-p2895-s46", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Stateless reset specifically exists to handle the case where state is lost, so this approach is suboptimal. ¶ A single static key can be used across all connections to the same endpoint by generating the proof using a pseudorandom function that takes a static key and the connection ID chosen by the endpoint (see Section 5.1 ) as input.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2896-s47", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "An endpoint could use HMAC [ RFC2104 ] (for example, HMAC(static_key, connection_id)) or the HMAC-based Key Derivation Function (HKDF) [ RFC5869 ] (for example, using the static key as input keying material, with the connection ID as salt).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.2.3-p2897-s48", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "The output of this function is truncated to 16 bytes to produce the stateless reset token for that connection. ¶ An endpoint that loses state can use the same method to generate a valid stateless reset token.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2898-s49", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "The connection ID comes from the packet that the endpoint receives. ¶ This design relies on the peer always sending a connection ID in its packets so that the endpoint can use the connection ID from a packet to reset the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.2.3-p2899-s50", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "An endpoint that uses this design MUST either use the same connection ID length for all connections or encode the length of the connection ID such that it can be recovered without state.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2.3-p2900-s51", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "In addition, it cannot provide a zero-length connection ID. ¶ Revealing the stateless reset token allows any entity to terminate the connection, so a value can only be used once.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2901-s52", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "This method for choosing the stateless reset token means that the combination of connection ID and static key MUST NOT be used for another connection.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2.3-p2902-s53", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "A denial-of-service attack is possible if the same connection ID is used by instances that share a static key or if an attacker can cause a packet to be routed to an instance that has no state but the same static key; see Section 21.11 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.3-p2903-s54", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "A connection ID from a connection that is reset by revealing the stateless reset token MUST NOT be reused for new connections at nodes that share a static key. ¶ The same stateless reset token MUST NOT be used for multiple connection IDs.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2.3-p2904-s55", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Endpoints are not required to compare new values against all previous values, but a duplicate value MAY be treated as a connection error of type PROTOCOL_VIOLATION. ¶ Note that Stateless Resets do not have any cryptographic protection. ¶ 10.3.3.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.2.3-p2905-s56", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Looping The design of a Stateless Reset is such that without knowing the stateless reset token it is indistinguishable from a valid packet.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2906-s57", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "For instance, if a server sends a Stateless Reset to another server, it might receive another Stateless Reset in response, which could lead to an infinite exchange. ¶ An endpoint MUST ensure that every Stateless Reset that it sends is smaller than the packet that triggered it, unless it maintains state sufficient to prevent looping.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.2.3-p2907-s58", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "In the event of a loop, this results in packets eventually being too small to trigger a response. ¶ An endpoint can remember the number of Stateless Resets that it has sent and stop generating new Stateless Resets once a limit is reached.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.2.3-p2908-s59", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Using separate limits for different remote addresses will ensure that Stateless Resets can be used to close connections when other peers or connections have exhausted limits. ¶ A Stateless Reset that is smaller than 41 bytes might be identifiable as a Stateless Reset by an observer, depending upon the length of the peer's connection IDs.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.2.3-p2909-s60", "section": "10.2.3", "anchor": "#name-immediate-close-during-the-", "para_id": "10.2.3-p613", "text": "Conversely, not sending a Stateless Reset in response to a small packet might result in Stateless Resets not being useful in detecting cases of broken connections where only very small packets are sent; such failures might only be detected by other means, such as timers. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2910-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p614", "text": "A stateless reset is provided as an option of last resort for an endpoint that does not have access to the state of a connection.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2911-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p614", "text": "A crash or outage might result in peers continuing to send data to an endpoint that is unable to properly continue the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.3-p2912-s3", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p614", "text": "An endpoint MAY send a Stateless Reset in response to receiving a packet that it cannot associate with an active connection. ¶", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3-p2913-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p615", "text": "A stateless reset is not appropriate for indicating errors in active connections.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2914-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p615", "text": "An endpoint that wishes to communicate a fatal connection error MUST use a CONNECTION_CLOSE frame if it is able. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3-p2915-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p616", "text": "To support this process, an endpoint issues a stateless reset token, which is a 16-byte value that is hard to guess.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2916-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p616", "text": "If the peer subsequently receives a Stateless Reset, which is a UDP datagram that ends in that stateless reset token, the peer will immediately end the connection. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3-p2917-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p617", "text": "A stateless reset token is specific to a connection ID.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2918-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p617", "text": "An endpoint issues a stateless reset token by including the value in the Stateless Reset Token field of a NEW_CONNECTION_ID frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2919-s3", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p617", "text": "Servers can also issue a stateless_reset_token transport parameter during the handshake that applies to the connection ID that it selected during the handshake.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2920-s4", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p617", "text": "These exchanges are protected by encryption, so only client and server know their value.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3-p2921-s5", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p617", "text": "Note that clients cannot use the stateless_reset_token transport parameter because their transport parameters do not have confidentiality protection. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2922-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p618", "text": "Tokens are invalidated when their associated connection ID is retired via a RETIRE_CONNECTION_ID frame ( Section 19.16 ). ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3-p2923-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p619", "text": "An endpoint that receives packets that it cannot process sends a packet in the following layout (see Section 1.3 ): ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.3-p2924-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p620", "text": "Stateless Reset { Fixed Bits (2) = 1, Unpredictable Bits (38..), Stateless Reset Token (128), } Figure 10 :", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2925-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p620", "text": "Stateless Reset", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2926-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p621", "text": "Stateless Reset { Fixed Bits (2) = 1, Unpredictable Bits (38..), Stateless Reset Token (128), }", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2927-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p622", "text": "Stateless Reset { Fixed Bits (2) = 1, Unpredictable Bits (38..), Stateless Reset Token (128), }", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2928-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p623", "text": "Figure 10 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3-p2929-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p623", "text": "Stateless Reset", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2930-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p624", "text": "This design ensures that a Stateless Reset is -- to the extent possible -- indistinguishable from a regular packet with a short header. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2931-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p625", "text": "A Stateless Reset uses an entire UDP datagram, starting with the first two bits of the packet header.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2932-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p625", "text": "The remainder of the first byte and an arbitrary number of bytes following it are set to values that SHOULD be indistinguishable from random.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "10.3-p2933-s3", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p625", "text": "The last 16 bytes of the datagram contain a stateless reset token. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2934-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p626", "text": "To entities other than its intended recipient, a Stateless Reset will appear to be a packet with a short header.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2935-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p626", "text": "For the Stateless Reset to appear as a valid QUIC packet, the Unpredictable Bits field needs to include at least 38 bits of data (or 5 bytes, less the two fixed bits). ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2936-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p627", "text": "The resulting minimum size of 21 bytes does not guarantee that a Stateless Reset is difficult to distinguish from other packets if the recipient requires the use of a connection ID.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3-p2937-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p627", "text": "To achieve that end, the endpoint SHOULD ensure that all packets it sends are at least 22 bytes longer than the minimum connection ID length that it requests the peer to include in its packets, adding PADDING frames as necessary.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3-p2938-s3", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p627", "text": "This ensures that any Stateless Reset sent by the peer is indistinguishable from a valid packet sent to the endpoint.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2939-s4", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p627", "text": "An endpoint that sends a Stateless Reset in response to a packet that is 43 bytes or shorter SHOULD send a Stateless Reset that is one byte shorter than the packet it responds to. ¶", "facet": "state_machine", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3-p2940-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p628", "text": "These values assume that the stateless reset token is the same length as the minimum expansion of the packet protection AEAD.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2941-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p628", "text": "Additional unpredictable bytes are necessary if the endpoint could have negotiated a packet protection scheme with a larger minimum expansion. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.3-p2942-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p629", "text": "An endpoint MUST NOT send a Stateless Reset that is three times or more larger than the packet it receives to avoid being used for amplification.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3-p2943-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p629", "text": "Section 10.3.3 describes additional limits on Stateless Reset size. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2944-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p630", "text": "Endpoints MUST discard packets that are too small to be valid QUIC packets.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "10.3-p2945-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p630", "text": "To give an example, with the set of AEAD functions defined in [ QUIC-TLS ] , short header packets that are smaller than 21 bytes are never valid. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3-p2946-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p631", "text": "Endpoints MUST send Stateless Resets formatted as a packet with a short header.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3-p2947-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p631", "text": "However, endpoints MUST treat any packet ending in a valid stateless reset token as a Stateless Reset, as other QUIC versions might allow the use of a long header. ¶", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3-p2948-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p632", "text": "An endpoint MAY send a Stateless Reset in response to a packet with a long header.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3-p2949-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p632", "text": "Sending a Stateless Reset is not effective prior to the stateless reset token being available to a peer.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2950-s3", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p632", "text": "In this QUIC version, packets with a long header are only used during connection establishment.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3-p2951-s4", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p632", "text": "Because the stateless reset token is not available until connection establishment is complete or near completion, ignoring an unknown packet with a long header might be as effective as sending a Stateless Reset. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2952-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p633", "text": "An endpoint cannot determine the Source Connection ID from a packet with a short header; therefore, it cannot set the Destination Connection ID in the Stateless Reset.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2953-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p633", "text": "The Destination Connection ID will therefore differ from the value used in previous packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3-p2954-s3", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p633", "text": "A random Destination Connection ID makes the connection ID appear to be the result of moving to a new connection ID that was provided using a NEW_CONNECTION_ID frame; see Section 19.15 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2955-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p634", "text": "Using a randomized connection ID results in two problems: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3-p2956-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p635", "text": "The packet might not reach the peer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3-p2957-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p635", "text": "If the Destination Connection ID is critical for routing toward the peer, then this packet could be incorrectly routed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.3-p2958-s3", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p635", "text": "This might also trigger another Stateless Reset in response; see Section 10.3.3 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2959-s4", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p635", "text": "A Stateless Reset that is not correctly routed is an ineffective error detection and recovery mechanism.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2960-s5", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p635", "text": "In this case, endpoints will need to rely on other methods -- such as timers -- to detect that the connection has failed. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3-p2961-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p636", "text": "The randomly generated connection ID can be used by entities other than the peer to identify this as a potential Stateless Reset.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2962-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p636", "text": "An endpoint that occasionally uses different connection IDs might introduce some uncertainty about this. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3-p2963-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p637", "text": "This stateless reset design is specific to QUIC version 1.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2964-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p637", "text": "An endpoint that supports multiple versions of QUIC needs to generate a Stateless Reset that will be accepted by peers that support any version that the endpoint might support (or might have supported prior to losing state).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2965-s3", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p637", "text": "Designers of new versions of QUIC need to be aware of this and either (1) reuse this design or (2) use a portion of the packet other than the last 16 bytes for carrying data. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3-p2966-s1", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p638", "text": "10.3.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3-p2967-s2", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p638", "text": "Detecting a Stateless Reset An endpoint detects a potential Stateless Reset using the trailing 16 bytes of the UDP datagram.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2968-s3", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p638", "text": "An endpoint remembers all stateless reset tokens associated with the connection IDs and remote addresses for datagrams it has recently sent.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2969-s4", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p638", "text": "This includes Stateless Reset Token field values from NEW_CONNECTION_ID frames and the server's transport parameters but excludes stateless reset tokens associated with connection IDs that are either unused or retired.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2970-s5", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p638", "text": "The endpoint identifies a received datagram as a Stateless Reset by comparing the last 16 bytes of the datagram with all stateless reset tokens associated with the remote address on which the datagram was received. ¶ This comparison can be performed for every inbound datagram.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3-p2971-s6", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p638", "text": "Endpoints MAY skip this check if any packet from a datagram is successfully processed.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.3-p2972-s7", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p638", "text": "However, the comparison MUST be performed when the first packet in an incoming datagram either cannot be associated with a connection or cannot be decrypted. ¶ An endpoint MUST NOT check for any stateless reset tokens associated with connection IDs it has not used or for connection IDs that have been retired. ¶ When comparing a datagram to stateless reset token values, endpoints MUST perform the comparison without leaking information about the value of the token.", "facet": "state_machine", "normative": true, "modalities": ["MUST", "MUST NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3-p2973-s8", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p638", "text": "For example, performing this comparison in constant time protects the value of individual stateless reset tokens from information leakage through timing side channels.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2974-s9", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p638", "text": "Another approach would be to store and compare the transformed values of stateless reset tokens instead of the raw token values, where the transformation is defined as a cryptographically secure pseudorandom function using a secret key (e.g., block cipher, Hashed Message Authentication Code (HMAC) [ RFC2104 ] ).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3-p2975-s10", "section": "10.3", "anchor": "#name-stateless-reset", "para_id": "10.3-p638", "text": "An endpoint is not expected to protect information about whether a packet was successfully decrypted or the number of valid stateless reset tokens. ¶ If the last 16 bytes of the datagram are identical in value to a stateless reset token, the endpoint MUST enter the draining period and not send any further packets on this connection. ¶", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3.1-p2976-s1", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p639", "text": "An endpoint detects a potential Stateless Reset using the trailing 16 bytes of the UDP datagram.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.1-p2977-s2", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p639", "text": "An endpoint remembers all stateless reset tokens associated with the connection IDs and remote addresses for datagrams it has recently sent.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.1-p2978-s3", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p639", "text": "This includes Stateless Reset Token field values from NEW_CONNECTION_ID frames and the server's transport parameters but excludes stateless reset tokens associated with connection IDs that are either unused or retired.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.1-p2979-s4", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p639", "text": "The endpoint identifies a received datagram as a Stateless Reset by comparing the last 16 bytes of the datagram with all stateless reset tokens associated with the remote address on which the datagram was received. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3.1-p2980-s1", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p640", "text": "This comparison can be performed for every inbound datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.1-p2981-s2", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p640", "text": "Endpoints MAY skip this check if any packet from a datagram is successfully processed.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.3.1-p2982-s3", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p640", "text": "However, the comparison MUST be performed when the first packet in an incoming datagram either cannot be associated with a connection or cannot be decrypted. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "10.3.1-p2983-s1", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p641", "text": "An endpoint MUST NOT check for any stateless reset tokens associated with connection IDs it has not used or for connection IDs that have been retired. ¶", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3.1-p2984-s1", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p642", "text": "When comparing a datagram to stateless reset token values, endpoints MUST perform the comparison without leaking information about the value of the token.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3.1-p2985-s2", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p642", "text": "For example, performing this comparison in constant time protects the value of individual stateless reset tokens from information leakage through timing side channels.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.1-p2986-s3", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p642", "text": "Another approach would be to store and compare the transformed values of stateless reset tokens instead of the raw token values, where the transformation is defined as a cryptographically secure pseudorandom function using a secret key (e.g., block cipher, Hashed Message Authentication Code (HMAC) [ RFC2104 ] ).", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.1-p2987-s4", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p642", "text": "An endpoint is not expected to protect information about whether a packet was successfully decrypted or the number of valid stateless reset tokens. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.1-p2988-s1", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p643", "text": "If the last 16 bytes of the datagram are identical in value to a stateless reset token, the endpoint MUST enter the draining period and not send any further packets on this connection. ¶", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3.1-p2989-s1", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "10.3.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.1-p2990-s2", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "Calculating a Stateless Reset Token The stateless reset token MUST be difficult to guess.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3.1-p2991-s3", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "In order to create a stateless reset token, an endpoint could randomly generate [ RANDOM ] a secret for every connection that it creates.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.1-p2992-s4", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "However, this presents a coordination problem when there are multiple instances in a cluster or a storage problem for an endpoint that might lose state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3.1-p2993-s5", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "Stateless reset specifically exists to handle the case where state is lost, so this approach is suboptimal. ¶ A single static key can be used across all connections to the same endpoint by generating the proof using a pseudorandom function that takes a static key and the connection ID chosen by the endpoint (see Section 5.1 ) as input.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.1-p2994-s6", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "An endpoint could use HMAC [ RFC2104 ] (for example, HMAC(static_key, connection_id)) or the HMAC-based Key Derivation Function (HKDF) [ RFC5869 ] (for example, using the static key as input keying material, with the connection ID as salt).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.1-p2995-s7", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "The output of this function is truncated to 16 bytes to produce the stateless reset token for that connection. ¶ An endpoint that loses state can use the same method to generate a valid stateless reset token.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.1-p2996-s8", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "The connection ID comes from the packet that the endpoint receives. ¶ This design relies on the peer always sending a connection ID in its packets so that the endpoint can use the connection ID from a packet to reset the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.3.1-p2997-s9", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "An endpoint that uses this design MUST either use the same connection ID length for all connections or encode the length of the connection ID such that it can be recovered without state.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3.1-p2998-s10", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "In addition, it cannot provide a zero-length connection ID. ¶ Revealing the stateless reset token allows any entity to terminate the connection, so a value can only be used once.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.1-p2999-s11", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "This method for choosing the stateless reset token means that the combination of connection ID and static key MUST NOT be used for another connection.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3.1-p3000-s12", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "A denial-of-service attack is possible if the same connection ID is used by instances that share a static key or if an attacker can cause a packet to be routed to an instance that has no state but the same static key; see Section 21.11 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3.1-p3001-s13", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "A connection ID from a connection that is reset by revealing the stateless reset token MUST NOT be reused for new connections at nodes that share a static key. ¶ The same stateless reset token MUST NOT be used for multiple connection IDs.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3.1-p3002-s14", "section": "10.3.1", "anchor": "#name-detecting-a-stateless-reset", "para_id": "10.3.1-p644", "text": "Endpoints are not required to compare new values against all previous values, but a duplicate value MAY be treated as a connection error of type PROTOCOL_VIOLATION. ¶ Note that Stateless Resets do not have any cryptographic protection. ¶", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3.2-p3003-s1", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p645", "text": "The stateless reset token MUST be difficult to guess.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3.2-p3004-s2", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p645", "text": "In order to create a stateless reset token, an endpoint could randomly generate [ RANDOM ] a secret for every connection that it creates.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.2-p3005-s3", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p645", "text": "However, this presents a coordination problem when there are multiple instances in a cluster or a storage problem for an endpoint that might lose state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3.2-p3006-s4", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p645", "text": "Stateless reset specifically exists to handle the case where state is lost, so this approach is suboptimal. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.2-p3007-s1", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p646", "text": "A single static key can be used across all connections to the same endpoint by generating the proof using a pseudorandom function that takes a static key and the connection ID chosen by the endpoint (see Section 5.1 ) as input.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.2-p3008-s2", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p646", "text": "An endpoint could use HMAC [ RFC2104 ] (for example, HMAC(static_key, connection_id)) or the HMAC-based Key Derivation Function (HKDF) [ RFC5869 ] (for example, using the static key as input keying material, with the connection ID as salt).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.2-p3009-s3", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p646", "text": "The output of this function is truncated to 16 bytes to produce the stateless reset token for that connection. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.2-p3010-s1", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p647", "text": "An endpoint that loses state can use the same method to generate a valid stateless reset token.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.2-p3011-s2", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p647", "text": "The connection ID comes from the packet that the endpoint receives. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "10.3.2-p3012-s1", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p648", "text": "This design relies on the peer always sending a connection ID in its packets so that the endpoint can use the connection ID from a packet to reset the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.2-p3013-s2", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p648", "text": "An endpoint that uses this design MUST either use the same connection ID length for all connections or encode the length of the connection ID such that it can be recovered without state.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3.2-p3014-s3", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p648", "text": "In addition, it cannot provide a zero-length connection ID. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.2-p3015-s1", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p649", "text": "Revealing the stateless reset token allows any entity to terminate the connection, so a value can only be used once.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.2-p3016-s2", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p649", "text": "This method for choosing the stateless reset token means that the combination of connection ID and static key MUST NOT be used for another connection.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3.2-p3017-s3", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p649", "text": "A denial-of-service attack is possible if the same connection ID is used by instances that share a static key or if an attacker can cause a packet to be routed to an instance that has no state but the same static key; see Section 21.11 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3.2-p3018-s4", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p649", "text": "A connection ID from a connection that is reset by revealing the stateless reset token MUST NOT be reused for new connections at nodes that share a static key. ¶", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3.2-p3019-s1", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p650", "text": "The same stateless reset token MUST NOT be used for multiple connection IDs.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3.2-p3020-s2", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p650", "text": "Endpoints are not required to compare new values against all previous values, but a duplicate value MAY be treated as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "10.3.2-p3021-s1", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p651", "text": "Note that Stateless Resets do not have any cryptographic protection. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.2-p3022-s1", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p652", "text": "10.3.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.2-p3023-s2", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p652", "text": "Looping The design of a Stateless Reset is such that without knowing the stateless reset token it is indistinguishable from a valid packet.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.2-p3024-s3", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p652", "text": "For instance, if a server sends a Stateless Reset to another server, it might receive another Stateless Reset in response, which could lead to an infinite exchange. ¶ An endpoint MUST ensure that every Stateless Reset that it sends is smaller than the packet that triggered it, unless it maintains state sufficient to prevent looping.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3.2-p3025-s4", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p652", "text": "In the event of a loop, this results in packets eventually being too small to trigger a response. ¶ An endpoint can remember the number of Stateless Resets that it has sent and stop generating new Stateless Resets once a limit is reached.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.2-p3026-s5", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p652", "text": "Using separate limits for different remote addresses will ensure that Stateless Resets can be used to close connections when other peers or connections have exhausted limits. ¶ A Stateless Reset that is smaller than 41 bytes might be identifiable as a Stateless Reset by an observer, depending upon the length of the peer's connection IDs.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3.2-p3027-s6", "section": "10.3.2", "anchor": "#name-calculating-a-stateless-res", "para_id": "10.3.2-p652", "text": "Conversely, not sending a Stateless Reset in response to a small packet might result in Stateless Resets not being useful in detecting cases of broken connections where only very small packets are sent; such failures might only be detected by other means, such as timers. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.3-p3028-s1", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p653", "text": "The design of a Stateless Reset is such that without knowing the stateless reset token it is indistinguishable from a valid packet.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.3-p3029-s2", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p653", "text": "For instance, if a server sends a Stateless Reset to another server, it might receive another Stateless Reset in response, which could lead to an infinite exchange. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3.3-p3030-s1", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p654", "text": "An endpoint MUST ensure that every Stateless Reset that it sends is smaller than the packet that triggered it, unless it maintains state sufficient to prevent looping.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3.3-p3031-s2", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p654", "text": "In the event of a loop, this results in packets eventually being too small to trigger a response. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.3-p3032-s1", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p655", "text": "An endpoint can remember the number of Stateless Resets that it has sent and stop generating new Stateless Resets once a limit is reached.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.3-p3033-s2", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p655", "text": "Using separate limits for different remote addresses will ensure that Stateless Resets can be used to close connections when other peers or connections have exhausted limits. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3.3-p3034-s1", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p656", "text": "A Stateless Reset that is smaller than 41 bytes might be identifiable as a Stateless Reset by an observer, depending upon the length of the peer's connection IDs.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3.3-p3035-s2", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p656", "text": "Conversely, not sending a Stateless Reset in response to a small packet might result in Stateless Resets not being useful in detecting cases of broken connections where only very small packets are sent; such failures might only be detected by other means, such as timers. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.3-p3036-s1", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "11.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.3-p3037-s2", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "Error Handling An endpoint that detects an error SHOULD signal the existence of that error to its peer.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "10.3.3-p3038-s3", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "Both transport-level and application-level errors can affect an entire connection; see Section 11.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.3-p3039-s4", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "Only application-level errors can be isolated to a single stream; see Section 11.2 . ¶ The most appropriate error code ( Section 20 ) SHOULD be included in the frame that signals the error.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3.3-p3040-s5", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "Where this specification identifies error conditions, it also identifies the error code that is used; though these are worded as requirements, different implementation strategies might lead to different errors being reported.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.3-p3041-s6", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "In particular, an endpoint MAY use any applicable error code when it detects an error condition; a generic error code (such as PROTOCOL_VIOLATION or INTERNAL_ERROR) can always be used in place of specific error codes. ¶ A stateless reset ( Section 10.3 ) is not suitable for any error that can be signaled with a CONNECTION_CLOSE or RESET_STREAM frame.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "10.3.3-p3042-s7", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "A stateless reset MUST NOT be used by an endpoint that has the state necessary to send a frame on the connection. ¶ 11.1.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3.3-p3043-s8", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "Connection Errors Errors that result in the connection being unusable, such as an obvious violation of protocol semantics or corruption of state that affects an entire connection, MUST be signaled using a CONNECTION_CLOSE frame ( Section 19.19 ). ¶ Application-specific protocol errors are signaled using the CONNECTION_CLOSE frame with a frame type of 0x1d.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "10.3.3-p3044-s9", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "Errors that are specific to the transport, including all those described in this document, are carried in the CONNECTION_CLOSE frame with a frame type of 0x1c. ¶ A CONNECTION_CLOSE frame could be sent in a packet that is lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.3-p3045-s10", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "An endpoint SHOULD be prepared to retransmit a packet containing a CONNECTION_CLOSE frame if it receives more packets on a terminated connection.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3.3-p3046-s11", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "Limiting the number of retransmissions and the time over which this final packet is sent limits the effort expended on terminated connections. ¶ An endpoint that chooses not to retransmit packets containing a CONNECTION_CLOSE frame risks a peer missing the first such packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "10.3.3-p3047-s12", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "The only mechanism available to an endpoint that continues to receive data for a terminated connection is to attempt the stateless reset process ( Section 10.3 ). ¶ As the AEAD for Initial packets does not provide strong authentication, an endpoint MAY discard an invalid Initial packet.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3.3-p3048-s13", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "Discarding an Initial packet is permitted even where this specification otherwise mandates a connection error.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.3-p3049-s14", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "An endpoint can only discard a packet if it does not process the frames in the packet or reverts the effects of any processing.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "10.3.3-p3050-s15", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "Discarding invalid Initial packets might be used to reduce exposure to denial of service; see Section 21.2 . ¶ 11.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.3-p3051-s16", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "Stream Errors If an application-level error affects a single stream but otherwise leaves the connection in a recoverable state, the endpoint can send a RESET_STREAM frame ( Section 19.4 ) with an appropriate error code to terminate just the affected stream. ¶ Resetting a stream without the involvement of the application protocol could cause the application protocol to enter an unrecoverable state.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "10.3.3-p3052-s17", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "RESET_STREAM MUST only be instigated by the application protocol that uses QUIC. ¶ The semantics of the application error code carried in RESET_STREAM are defined by the application protocol.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 4}
{"sent_id": "10.3.3-p3053-s18", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "Only the application protocol is able to cause a stream to be terminated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "10.3.3-p3054-s19", "section": "10.3.3", "anchor": "#name-looping", "para_id": "10.3.3-p657", "text": "A local instance of the application protocol uses a direct API call, and a remote instance uses the STOP_SENDING frame, which triggers an automatic RESET_STREAM. ¶ Application protocols SHOULD define rules for handling streams that are prematurely canceled by either endpoint. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "11-p3055-s1", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p658", "text": "An endpoint that detects an error SHOULD signal the existence of that error to its peer.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "11-p3056-s2", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p658", "text": "Both transport-level and application-level errors can affect an entire connection; see Section 11.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11-p3057-s3", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p658", "text": "Only application-level errors can be isolated to a single stream; see Section 11.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11-p3058-s1", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p659", "text": "The most appropriate error code ( Section 20 ) SHOULD be included in the frame that signals the error.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "11-p3059-s2", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p659", "text": "Where this specification identifies error conditions, it also identifies the error code that is used; though these are worded as requirements, different implementation strategies might lead to different errors being reported.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11-p3060-s3", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p659", "text": "In particular, an endpoint MAY use any applicable error code when it detects an error condition; a generic error code (such as PROTOCOL_VIOLATION or INTERNAL_ERROR) can always be used in place of specific error codes. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "11-p3061-s1", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p660", "text": "A stateless reset ( Section 10.3 ) is not suitable for any error that can be signaled with a CONNECTION_CLOSE or RESET_STREAM frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "11-p3062-s2", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p660", "text": "A stateless reset MUST NOT be used by an endpoint that has the state necessary to send a frame on the connection. ¶", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "11-p3063-s1", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p661", "text": "11.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11-p3064-s2", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p661", "text": "Connection Errors Errors that result in the connection being unusable, such as an obvious violation of protocol semantics or corruption of state that affects an entire connection, MUST be signaled using a CONNECTION_CLOSE frame ( Section 19.19 ). ¶ Application-specific protocol errors are signaled using the CONNECTION_CLOSE frame with a frame type of 0x1d.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "11-p3065-s3", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p661", "text": "Errors that are specific to the transport, including all those described in this document, are carried in the CONNECTION_CLOSE frame with a frame type of 0x1c. ¶ A CONNECTION_CLOSE frame could be sent in a packet that is lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11-p3066-s4", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p661", "text": "An endpoint SHOULD be prepared to retransmit a packet containing a CONNECTION_CLOSE frame if it receives more packets on a terminated connection.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "11-p3067-s5", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p661", "text": "Limiting the number of retransmissions and the time over which this final packet is sent limits the effort expended on terminated connections. ¶ An endpoint that chooses not to retransmit packets containing a CONNECTION_CLOSE frame risks a peer missing the first such packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11-p3068-s6", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p661", "text": "The only mechanism available to an endpoint that continues to receive data for a terminated connection is to attempt the stateless reset process ( Section 10.3 ). ¶ As the AEAD for Initial packets does not provide strong authentication, an endpoint MAY discard an invalid Initial packet.", "facet": "state_machine", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "11-p3069-s7", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p661", "text": "Discarding an Initial packet is permitted even where this specification otherwise mandates a connection error.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11-p3070-s8", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p661", "text": "An endpoint can only discard a packet if it does not process the frames in the packet or reverts the effects of any processing.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "11-p3071-s9", "section": "11", "anchor": "#name-error-handling", "para_id": "11-p661", "text": "Discarding invalid Initial packets might be used to reduce exposure to denial of service; see Section 21.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.1-p3072-s1", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p662", "text": "Errors that result in the connection being unusable, such as an obvious violation of protocol semantics or corruption of state that affects an entire connection, MUST be signaled using a CONNECTION_CLOSE frame ( Section 19.19 ). ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "11.1-p3073-s1", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p663", "text": "Application-specific protocol errors are signaled using the CONNECTION_CLOSE frame with a frame type of 0x1d.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.1-p3074-s2", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p663", "text": "Errors that are specific to the transport, including all those described in this document, are carried in the CONNECTION_CLOSE frame with a frame type of 0x1c. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.1-p3075-s1", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p664", "text": "A CONNECTION_CLOSE frame could be sent in a packet that is lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.1-p3076-s2", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p664", "text": "An endpoint SHOULD be prepared to retransmit a packet containing a CONNECTION_CLOSE frame if it receives more packets on a terminated connection.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "11.1-p3077-s3", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p664", "text": "Limiting the number of retransmissions and the time over which this final packet is sent limits the effort expended on terminated connections. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.1-p3078-s1", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p665", "text": "An endpoint that chooses not to retransmit packets containing a CONNECTION_CLOSE frame risks a peer missing the first such packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.1-p3079-s2", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p665", "text": "The only mechanism available to an endpoint that continues to receive data for a terminated connection is to attempt the stateless reset process ( Section 10.3 ). ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "11.1-p3080-s1", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p666", "text": "As the AEAD for Initial packets does not provide strong authentication, an endpoint MAY discard an invalid Initial packet.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "11.1-p3081-s2", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p666", "text": "Discarding an Initial packet is permitted even where this specification otherwise mandates a connection error.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.1-p3082-s3", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p666", "text": "An endpoint can only discard a packet if it does not process the frames in the packet or reverts the effects of any processing.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "11.1-p3083-s4", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p666", "text": "Discarding invalid Initial packets might be used to reduce exposure to denial of service; see Section 21.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.1-p3084-s1", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p667", "text": "11.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.1-p3085-s2", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p667", "text": "Stream Errors If an application-level error affects a single stream but otherwise leaves the connection in a recoverable state, the endpoint can send a RESET_STREAM frame ( Section 19.4 ) with an appropriate error code to terminate just the affected stream. ¶ Resetting a stream without the involvement of the application protocol could cause the application protocol to enter an unrecoverable state.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "11.1-p3086-s3", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p667", "text": "RESET_STREAM MUST only be instigated by the application protocol that uses QUIC. ¶ The semantics of the application error code carried in RESET_STREAM are defined by the application protocol.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 4}
{"sent_id": "11.1-p3087-s4", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p667", "text": "Only the application protocol is able to cause a stream to be terminated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.1-p3088-s5", "section": "11.1", "anchor": "#name-connection-errors", "para_id": "11.1-p667", "text": "A local instance of the application protocol uses a direct API call, and a remote instance uses the STOP_SENDING frame, which triggers an automatic RESET_STREAM. ¶ Application protocols SHOULD define rules for handling streams that are prematurely canceled by either endpoint. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "11.2-p3089-s1", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p668", "text": "If an application-level error affects a single stream but otherwise leaves the connection in a recoverable state, the endpoint can send a RESET_STREAM frame ( Section 19.4 ) with an appropriate error code to terminate just the affected stream. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "11.2-p3090-s1", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p669", "text": "Resetting a stream without the involvement of the application protocol could cause the application protocol to enter an unrecoverable state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3091-s2", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p669", "text": "RESET_STREAM MUST only be instigated by the application protocol that uses QUIC. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 4}
{"sent_id": "11.2-p3092-s1", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p670", "text": "The semantics of the application error code carried in RESET_STREAM are defined by the application protocol.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "11.2-p3093-s2", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p670", "text": "Only the application protocol is able to cause a stream to be terminated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3094-s3", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p670", "text": "A local instance of the application protocol uses a direct API call, and a remote instance uses the STOP_SENDING frame, which triggers an automatic RESET_STREAM. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "11.2-p3095-s1", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p671", "text": "Application protocols SHOULD define rules for handling streams that are prematurely canceled by either endpoint. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "11.2-p3096-s1", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "12.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3097-s2", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Packets and Frames QUIC endpoints communicate by exchanging packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3098-s3", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Packets have confidentiality and integrity protection; see Section 12.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3099-s4", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Packets are carried in UDP datagrams; see Section 12.2 . ¶ This version of QUIC uses the long packet header during connection establishment; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3100-s5", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Packets with the long header are Initial ( Section 17.2.2 ), 0-RTT ( Section 17.2.3 ), Handshake ( Section 17.2.4 ), and Retry ( Section 17.2.5 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3101-s6", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Version negotiation uses a version-independent packet with a long header; see Section 17.2.1 . ¶ Packets with the short header are designed for minimal overhead and are used after a connection is established and 1-RTT keys are available; see Section 17.3 . ¶ 12.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3102-s7", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Protected Packets QUIC packets have different levels of cryptographic protection based on the type of packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3103-s8", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Details of packet protection are found in [ QUIC-TLS ] ; this section includes an overview of the protections that are provided. ¶ Version Negotiation packets have no cryptographic protection; see [ QUIC-INVARIANTS ] . ¶ Retry packets use an AEAD function [ AEAD ] to protect against accidental modification. ¶ Initial packets use an AEAD function, the keys for which are derived using a value that is visible on the wire.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3104-s9", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Initial packets therefore do not have effective confidentiality protection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3105-s10", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Initial protection exists to ensure that the sender of the packet is on the network path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3106-s11", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Any entity that receives an Initial packet from a client can recover the keys that will allow them to both read the contents of the packet and generate Initial packets that will be successfully authenticated at either endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "11.2-p3107-s12", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "The AEAD also protects Initial packets against accidental modification. ¶ All other packets are protected with keys derived from the cryptographic handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3108-s13", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "The cryptographic handshake ensures that only the communicating endpoints receive the corresponding keys for Handshake, 0-RTT, and 1-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "11.2-p3109-s14", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Packets protected with 0-RTT and 1-RTT keys have strong confidentiality and integrity protection. ¶ The Packet Number field that appears in some packet types has alternative confidentiality protection that is applied as part of header protection; see Section 5.4 of [ QUIC-TLS ] for details.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3110-s15", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "The underlying packet number increases with each packet sent in a given packet number space; see Section 12.3 for details. ¶ 12.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3111-s16", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Coalescing Packets Initial ( Section 17.2.2 ), 0-RTT ( Section 17.2.3 ), and Handshake ( Section 17.2.4 ) packets contain a Length field that determines the end of the packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3112-s17", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "The length includes both the Packet Number and Payload fields, both of which are confidentiality protected and initially of unknown length.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3113-s18", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "The length of the Payload field is learned once header protection is removed. ¶ Using the Length field, a sender can coalesce multiple QUIC packets into one UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3114-s19", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "This can reduce the number of UDP datagrams needed to complete the cryptographic handshake and start sending data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3115-s20", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "This can also be used to construct Path Maximum Transmission Unit (PMTU) probes; see Section 14.4.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3116-s21", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Receivers MUST be able to process coalesced packets. ¶ Coalescing packets in order of increasing encryption levels (Initial, 0-RTT, Handshake, 1-RTT; see Section 4.1.4 of [ QUIC-TLS ] ) makes it more likely that the receiver will be able to process all the packets in a single pass.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "11.2-p3117-s22", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "A packet with a short header does not include a length, so it can only be the last packet included in a UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3118-s23", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "An endpoint SHOULD include multiple frames in a single packet if they are to be sent at the same encryption level, instead of coalescing multiple packets at the same encryption level. ¶ Receivers MAY route based on the information in the first packet contained in a UDP datagram.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "11.2-p3119-s24", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Senders MUST NOT coalesce QUIC packets with different connection IDs into a single UDP datagram.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "11.2-p3120-s25", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Receivers SHOULD ignore any subsequent packets with a different Destination Connection ID than the first packet in the datagram. ¶ Every QUIC packet that is coalesced into a single UDP datagram is separate and complete.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "11.2-p3121-s26", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "The receiver of coalesced QUIC packets MUST individually process each QUIC packet and separately acknowledge them, as if they were received as the payload of different UDP datagrams.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "11.2-p3122-s27", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "For example, if decryption fails (because the keys are not available or for any other reason), the receiver MAY either discard or buffer the packet for later processing and MUST attempt to process the remaining packets. ¶ Retry packets ( Section 17.2.5 ), Version Negotiation packets ( Section 17.2.1 ), and packets with a short header ( Section 17.3 ) do not contain a Length field and so cannot be followed by other packets in the same UDP datagram.", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "11.2-p3123-s28", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Note also that there is no situation where a Retry or Version Negotiation packet is coalesced with another packet. ¶ 12.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3124-s29", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Packet Numbers The packet number is an integer in the range 0 to 2 62 -1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3125-s30", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "This number is used in determining the cryptographic nonce for packet protection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3126-s31", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Each endpoint maintains a separate packet number for sending and receiving. ¶ Packet numbers are limited to this range because they need to be representable in whole in the Largest Acknowledged field of an ACK frame ( Section 19.3 ).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "11.2-p3127-s32", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "When present in a long or short header, however, packet numbers are reduced and encoded in 1 to 4 bytes; see Section 17.1 . ¶ Version Negotiation ( Section 17.2.1 ) and Retry ( Section 17.2.5 ) packets do not include a packet number. ¶ Packet numbers are divided into three spaces in QUIC: ¶ Initial space:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "11.2-p3128-s33", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "All Initial packets ( Section 17.2.2 ) are in this space. ¶ Handshake space:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3129-s34", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "All Handshake packets ( Section 17.2.4 ) are in this space. ¶ Application data space:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3130-s35", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "All 0-RTT ( Section 17.2.3 ) and 1-RTT ( Section 17.3.1 ) packets are in this space. ¶ As described in [ QUIC-TLS ] , each packet type uses different protection keys. ¶ Conceptually, a packet number space is the context in which a packet can be processed and acknowledged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "11.2-p3131-s36", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Initial packets can only be sent with Initial packet protection keys and acknowledged in packets that are also Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "11.2-p3132-s37", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Similarly, Handshake packets are sent at the Handshake encryption level and can only be acknowledged in Handshake packets. ¶ This enforces cryptographic separation between the data sent in the different packet number spaces.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "11.2-p3133-s38", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Packet numbers in each space start at packet number 0.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3134-s39", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Subsequent packets sent in the same packet number space MUST increase the packet number by at least one. ¶ 0-RTT and 1-RTT data exist in the same packet number space to make loss recovery algorithms easier to implement between the two packet types. ¶ A QUIC endpoint MUST NOT reuse a packet number within the same packet number space in one connection.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "11.2-p3135-s40", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "If the packet number for sending reaches 2 62 -1, the sender MUST close the connection without sending a CONNECTION_CLOSE frame or any further packets; an endpoint MAY send a Stateless Reset ( Section 10.3 ) in response to further packets that it receives. ¶ A receiver MUST discard a newly unprotected packet unless it is certain that it has not processed another packet with the same packet number from the same packet number space.", "facet": "frames", "normative": true, "modalities": ["MUST", "MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "11.2-p3136-s41", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Duplicate suppression MUST happen after removing packet protection for the reasons described in Section 9.5 of [ QUIC-TLS ] . ¶ Endpoints that track all individual packets for the purposes of detecting duplicates are at risk of accumulating excessive state.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "11.2-p3137-s42", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "The data required for detecting duplicates can be limited by maintaining a minimum packet number below which all packets are immediately dropped.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3138-s43", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Any minimum needs to account for large variations in round-trip time, which includes the possibility that a peer might probe network paths with much larger round-trip times; see Section 9 . ¶ Packet number encoding at a sender and decoding at a receiver are described in Section 17.1 . ¶ 12.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer", "receiver", "sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3139-s44", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Frames and Frame Types The payload of QUIC packets, after removing packet protection, consists of a sequence of complete frames, as shown in Figure 11 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3140-s45", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Version Negotiation, Stateless Reset, and Retry packets do not contain frames. ¶ Packet Payload { Frame (8..) ..., } Figure 11 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3141-s46", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "QUIC Payload The payload of a packet that contains frames MUST contain at least one frame, and MAY contain multiple frames and multiple frame types.", "facet": "frames", "normative": true, "modalities": ["MUST", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "11.2-p3142-s47", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "An endpoint MUST treat receipt of a packet containing no frames as a connection error of type PROTOCOL_VIOLATION.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "11.2-p3143-s48", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Frames always fit within a single QUIC packet and cannot span multiple packets. ¶ Each frame begins with a Frame Type, indicating its type, followed by additional type-dependent fields: ¶ Frame { Frame Type (i), Type-Dependent Fields (..), } Figure 12 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3144-s49", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Generic Frame Layout Table 3 lists and summarizes information about each frame type that is defined in this specification.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3145-s50", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "A description of this summary is included after the table. ¶ Table 3 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3146-s51", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Frame Types Type Value Frame Type Name Definition Pkts Spec 0x00 PADDING Section 19.1 IH01 NP 0x01 PING Section 19.2 IH01 0x02-0x03 ACK Section 19.3 IH_1 NC 0x04 RESET_STREAM Section 19.4 __01 0x05 STOP_SENDING Section 19.5 __01 0x06 CRYPTO Section 19.6 IH_1 0x07 NEW_TOKEN Section 19.7 ___1 0x08-0x0f STREAM Section 19.8 __01 F 0x10 MAX_DATA Section 19.9 __01 0x11 MAX_STREAM_DATA Section 19.10 __01 0x12-0x13 MAX_STREAMS Section 19.11 __01 0x14 DATA_BLOCKED Section 19.12 __01 0x15 STREAM_DATA_BLOCKED Section 19.13 __01 0x16-0x17 STREAMS_BLOCKED Section 19.14 __01 0x18 NEW_CONNECTION_ID Section 19.15 __01 P 0x19 RETIRE_CONNECTION_ID Section 19.16 __01 0x1a PATH_CHALLENGE Section 19.17 __01 P 0x1b PATH_RESPONSE Section 19.18 ___1 P 0x1c-0x1d CONNECTION_CLOSE Section 19.19 ih01 N 0x1e HANDSHAKE_DONE Section 19.20 ___1 The format and semantics of each frame type are explained in more detail in Section 19 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED", "MAX_DATA", "MAX_STREAMS", "MAX_STREAM_DATA", "RESET_STREAM", "STOP_SENDING", "STREAM", "STREAMS_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "11.2-p3147-s52", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "The remainder of this section provides a summary of important and general information. ¶ The Frame Type in ACK, STREAM, MAX_STREAMS, STREAMS_BLOCKED, and CONNECTION_CLOSE frames is used to carry other frame-specific flags.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS", "STREAM", "STREAMS_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "11.2-p3148-s53", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "For all other frames, the Frame Type field simply identifies the frame. ¶ The \"Pkts\" column in Table 3 lists the types of packets that each frame type could appear in, indicated by the following characters: ¶ I:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3149-s54", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Initial ( Section 17.2.2 ) ¶ H:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3150-s55", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Handshake ( Section 17.2.4 ) ¶ 0: 0-RTT ( Section 17.2.3 ) ¶ 1: 1-RTT ( Section 17.3.1 ) ¶ ih:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "11.2-p3151-s56", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Only a CONNECTION_CLOSE frame of type 0x1c can appear in Initial or Handshake packets. ¶ For more details about these restrictions, see Section 12.5 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3152-s57", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Note that all frames can appear in 1-RTT packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3153-s58", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "An endpoint MUST treat receipt of a frame in a packet type that is not permitted as a connection error of type PROTOCOL_VIOLATION. ¶ The \"Spec\" column in Table 3 summarizes any special rules governing the processing or generation of the frame type, as indicated by the following characters: ¶ N:", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "11.2-p3154-s59", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Packets containing only frames with this marking are not ack-eliciting; see Section 13.2 . ¶ C:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "11.2-p3155-s60", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Packets containing only frames with this marking do not count toward bytes in flight for congestion control purposes; see [ QUIC-RECOVERY ] . ¶ P:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3156-s61", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Packets containing only frames with this marking can be used to probe new network paths during connection migration; see Section 9.1 . ¶ F:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3157-s62", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "The contents of frames with this marking are flow controlled; see Section 4 . ¶ The \"Pkts\" and \"Spec\" columns in Table 3 do not form part of the IANA registry; see Section 22.4 . ¶ An endpoint MUST treat the receipt of a frame of unknown type as a connection error of type FRAME_ENCODING_ERROR. ¶ All frames are idempotent in this version of QUIC.", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "11.2-p3158-s63", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "That is, a valid frame does not cause undesirable side effects or errors when received more than once. ¶ The Frame Type field uses a variable-length integer encoding (see Section 16 ), with one exception.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "11.2-p3159-s64", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "To ensure simple and efficient implementations of frame parsing, a frame type MUST use the shortest possible encoding.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "11.2-p3160-s65", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "For frame types defined in this document, this means a single-byte encoding, even though it is possible to encode these values as a two-, four-, or eight-byte variable-length integer.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3161-s66", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "For instance, though 0x4001 is a legitimate two-byte encoding for a variable-length integer with a value of 1, PING frames are always encoded as a single byte with the value 0x01.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3162-s67", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "This rule applies to all current and future QUIC frame types.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3163-s68", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "An endpoint MAY treat the receipt of a frame type that uses a longer encoding than necessary as a connection error of type PROTOCOL_VIOLATION. ¶ 12.5.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "11.2-p3164-s69", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "Frames and Number Spaces Some frames are prohibited in different packet number spaces.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "11.2-p3165-s70", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "The rules here generalize those of TLS, in that frames associated with establishing the connection can usually appear in packets in any packet number space, whereas those associated with transferring data can only appear in the application data packet number space: ¶ PADDING, PING, and CRYPTO frames MAY appear in any packet number space. ¶ CONNECTION_CLOSE frames signaling errors at the QUIC layer (type 0x1c) MAY appear in any packet number space.", "facet": "frames", "normative": true, "modalities": ["MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "11.2-p3166-s71", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "CONNECTION_CLOSE frames signaling application errors (type 0x1d) MUST only appear in the application data packet number space. ¶ ACK frames MAY appear in any packet number space but can only acknowledge packets that appeared in that packet number space.", "facet": "frames", "normative": true, "modalities": ["MUST", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "11.2-p3167-s72", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "However, as noted below, 0-RTT packets cannot contain ACK frames. ¶ All other frame types MUST only be sent in the application data packet number space. ¶ Note that it is not possible to send the following frames in 0-RTT packets for various reasons:", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "11.2-p3168-s73", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "ACK, CRYPTO, HANDSHAKE_DONE, NEW_TOKEN, PATH_RESPONSE, and RETIRE_CONNECTION_ID.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "11.2-p3169-s74", "section": "11.2", "anchor": "#name-stream-errors", "para_id": "11.2-p672", "text": "A server MAY treat receipt of these frames in 0-RTT packets as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12-p3170-s1", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p673", "text": "QUIC endpoints communicate by exchanging packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3171-s2", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p673", "text": "Packets have confidentiality and integrity protection; see Section 12.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3172-s3", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p673", "text": "Packets are carried in UDP datagrams; see Section 12.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3173-s1", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p674", "text": "This version of QUIC uses the long packet header during connection establishment; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3174-s2", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p674", "text": "Packets with the long header are Initial ( Section 17.2.2 ), 0-RTT ( Section 17.2.3 ), Handshake ( Section 17.2.4 ), and Retry ( Section 17.2.5 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3175-s3", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p674", "text": "Version negotiation uses a version-independent packet with a long header; see Section 17.2.1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3176-s1", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p675", "text": "Packets with the short header are designed for minimal overhead and are used after a connection is established and 1-RTT keys are available; see Section 17.3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3177-s1", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p676", "text": "12.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3178-s2", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p676", "text": "Protected Packets QUIC packets have different levels of cryptographic protection based on the type of packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3179-s3", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p676", "text": "Details of packet protection are found in [ QUIC-TLS ] ; this section includes an overview of the protections that are provided. ¶ Version Negotiation packets have no cryptographic protection; see [ QUIC-INVARIANTS ] . ¶ Retry packets use an AEAD function [ AEAD ] to protect against accidental modification. ¶ Initial packets use an AEAD function, the keys for which are derived using a value that is visible on the wire.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3180-s4", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p676", "text": "Initial packets therefore do not have effective confidentiality protection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3181-s5", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p676", "text": "Initial protection exists to ensure that the sender of the packet is on the network path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3182-s6", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p676", "text": "Any entity that receives an Initial packet from a client can recover the keys that will allow them to both read the contents of the packet and generate Initial packets that will be successfully authenticated at either endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12-p3183-s7", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p676", "text": "The AEAD also protects Initial packets against accidental modification. ¶ All other packets are protected with keys derived from the cryptographic handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3184-s8", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p676", "text": "The cryptographic handshake ensures that only the communicating endpoints receive the corresponding keys for Handshake, 0-RTT, and 1-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12-p3185-s9", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p676", "text": "Packets protected with 0-RTT and 1-RTT keys have strong confidentiality and integrity protection. ¶ The Packet Number field that appears in some packet types has alternative confidentiality protection that is applied as part of header protection; see Section 5.4 of [ QUIC-TLS ] for details.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12-p3186-s10", "section": "12", "anchor": "#name-packets-and-frames", "para_id": "12-p676", "text": "The underlying packet number increases with each packet sent in a given packet number space; see Section 12.3 for details. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3187-s1", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p677", "text": "QUIC packets have different levels of cryptographic protection based on the type of packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3188-s2", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p677", "text": "Details of packet protection are found in [ QUIC-TLS ] ; this section includes an overview of the protections that are provided. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3189-s1", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p678", "text": "Version Negotiation packets have no cryptographic protection; see [ QUIC-INVARIANTS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3190-s1", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p679", "text": "Retry packets use an AEAD function [ AEAD ] to protect against accidental modification. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3191-s1", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p680", "text": "Initial packets use an AEAD function, the keys for which are derived using a value that is visible on the wire.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3192-s2", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p680", "text": "Initial packets therefore do not have effective confidentiality protection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3193-s3", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p680", "text": "Initial protection exists to ensure that the sender of the packet is on the network path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3194-s4", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p680", "text": "Any entity that receives an Initial packet from a client can recover the keys that will allow them to both read the contents of the packet and generate Initial packets that will be successfully authenticated at either endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.1-p3195-s5", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p680", "text": "The AEAD also protects Initial packets against accidental modification. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3196-s1", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p681", "text": "All other packets are protected with keys derived from the cryptographic handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3197-s2", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p681", "text": "The cryptographic handshake ensures that only the communicating endpoints receive the corresponding keys for Handshake, 0-RTT, and 1-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.1-p3198-s3", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p681", "text": "Packets protected with 0-RTT and 1-RTT keys have strong confidentiality and integrity protection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3199-s1", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p682", "text": "The Packet Number field that appears in some packet types has alternative confidentiality protection that is applied as part of header protection; see Section 5.4 of [ QUIC-TLS ] for details.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3200-s2", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p682", "text": "The underlying packet number increases with each packet sent in a given packet number space; see Section 12.3 for details. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3201-s1", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "12.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3202-s2", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "Coalescing Packets Initial ( Section 17.2.2 ), 0-RTT ( Section 17.2.3 ), and Handshake ( Section 17.2.4 ) packets contain a Length field that determines the end of the packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3203-s3", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "The length includes both the Packet Number and Payload fields, both of which are confidentiality protected and initially of unknown length.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3204-s4", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "The length of the Payload field is learned once header protection is removed. ¶ Using the Length field, a sender can coalesce multiple QUIC packets into one UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3205-s5", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "This can reduce the number of UDP datagrams needed to complete the cryptographic handshake and start sending data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3206-s6", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "This can also be used to construct Path Maximum Transmission Unit (PMTU) probes; see Section 14.4.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3207-s7", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "Receivers MUST be able to process coalesced packets. ¶ Coalescing packets in order of increasing encryption levels (Initial, 0-RTT, Handshake, 1-RTT; see Section 4.1.4 of [ QUIC-TLS ] ) makes it more likely that the receiver will be able to process all the packets in a single pass.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.1-p3208-s8", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "A packet with a short header does not include a length, so it can only be the last packet included in a UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.1-p3209-s9", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "An endpoint SHOULD include multiple frames in a single packet if they are to be sent at the same encryption level, instead of coalescing multiple packets at the same encryption level. ¶ Receivers MAY route based on the information in the first packet contained in a UDP datagram.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.1-p3210-s10", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "Senders MUST NOT coalesce QUIC packets with different connection IDs into a single UDP datagram.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.1-p3211-s11", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "Receivers SHOULD ignore any subsequent packets with a different Destination Connection ID than the first packet in the datagram. ¶ Every QUIC packet that is coalesced into a single UDP datagram is separate and complete.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.1-p3212-s12", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "The receiver of coalesced QUIC packets MUST individually process each QUIC packet and separately acknowledge them, as if they were received as the payload of different UDP datagrams.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "12.1-p3213-s13", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "For example, if decryption fails (because the keys are not available or for any other reason), the receiver MAY either discard or buffer the packet for later processing and MUST attempt to process the remaining packets. ¶ Retry packets ( Section 17.2.5 ), Version Negotiation packets ( Section 17.2.1 ), and packets with a short header ( Section 17.3 ) do not contain a Length field and so cannot be followed by other packets in the same UDP datagram.", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "12.1-p3214-s14", "section": "12.1", "anchor": "#name-protected-packets", "para_id": "12.1-p683", "text": "Note also that there is no situation where a Retry or Version Negotiation packet is coalesced with another packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3215-s1", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p684", "text": "Initial ( Section 17.2.2 ), 0-RTT ( Section 17.2.3 ), and Handshake ( Section 17.2.4 ) packets contain a Length field that determines the end of the packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3216-s2", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p684", "text": "The length includes both the Packet Number and Payload fields, both of which are confidentiality protected and initially of unknown length.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3217-s3", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p684", "text": "The length of the Payload field is learned once header protection is removed. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3218-s1", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p685", "text": "Using the Length field, a sender can coalesce multiple QUIC packets into one UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3219-s2", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p685", "text": "This can reduce the number of UDP datagrams needed to complete the cryptographic handshake and start sending data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3220-s3", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p685", "text": "This can also be used to construct Path Maximum Transmission Unit (PMTU) probes; see Section 14.4.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3221-s4", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p685", "text": "Receivers MUST be able to process coalesced packets. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.2-p3222-s1", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p686", "text": "Coalescing packets in order of increasing encryption levels (Initial, 0-RTT, Handshake, 1-RTT; see Section 4.1.4 of [ QUIC-TLS ] ) makes it more likely that the receiver will be able to process all the packets in a single pass.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3223-s2", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p686", "text": "A packet with a short header does not include a length, so it can only be the last packet included in a UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3224-s3", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p686", "text": "An endpoint SHOULD include multiple frames in a single packet if they are to be sent at the same encryption level, instead of coalescing multiple packets at the same encryption level. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.2-p3225-s1", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p687", "text": "Receivers MAY route based on the information in the first packet contained in a UDP datagram.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.2-p3226-s2", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p687", "text": "Senders MUST NOT coalesce QUIC packets with different connection IDs into a single UDP datagram.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.2-p3227-s3", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p687", "text": "Receivers SHOULD ignore any subsequent packets with a different Destination Connection ID than the first packet in the datagram. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.2-p3228-s1", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p688", "text": "Every QUIC packet that is coalesced into a single UDP datagram is separate and complete.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3229-s2", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p688", "text": "The receiver of coalesced QUIC packets MUST individually process each QUIC packet and separately acknowledge them, as if they were received as the payload of different UDP datagrams.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "12.2-p3230-s3", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p688", "text": "For example, if decryption fails (because the keys are not available or for any other reason), the receiver MAY either discard or buffer the packet for later processing and MUST attempt to process the remaining packets. ¶", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "12.2-p3231-s1", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p689", "text": "Retry packets ( Section 17.2.5 ), Version Negotiation packets ( Section 17.2.1 ), and packets with a short header ( Section 17.3 ) do not contain a Length field and so cannot be followed by other packets in the same UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3232-s2", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p689", "text": "Note also that there is no situation where a Retry or Version Negotiation packet is coalesced with another packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3233-s1", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "12.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3234-s2", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "Packet Numbers The packet number is an integer in the range 0 to 2 62 -1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3235-s3", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "This number is used in determining the cryptographic nonce for packet protection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3236-s4", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "Each endpoint maintains a separate packet number for sending and receiving. ¶ Packet numbers are limited to this range because they need to be representable in whole in the Largest Acknowledged field of an ACK frame ( Section 19.3 ).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.2-p3237-s5", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "When present in a long or short header, however, packet numbers are reduced and encoded in 1 to 4 bytes; see Section 17.1 . ¶ Version Negotiation ( Section 17.2.1 ) and Retry ( Section 17.2.5 ) packets do not include a packet number. ¶ Packet numbers are divided into three spaces in QUIC: ¶ Initial space:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.2-p3238-s6", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "All Initial packets ( Section 17.2.2 ) are in this space. ¶ Handshake space:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3239-s7", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "All Handshake packets ( Section 17.2.4 ) are in this space. ¶ Application data space:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3240-s8", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "All 0-RTT ( Section 17.2.3 ) and 1-RTT ( Section 17.3.1 ) packets are in this space. ¶ As described in [ QUIC-TLS ] , each packet type uses different protection keys. ¶ Conceptually, a packet number space is the context in which a packet can be processed and acknowledged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.2-p3241-s9", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "Initial packets can only be sent with Initial packet protection keys and acknowledged in packets that are also Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.2-p3242-s10", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "Similarly, Handshake packets are sent at the Handshake encryption level and can only be acknowledged in Handshake packets. ¶ This enforces cryptographic separation between the data sent in the different packet number spaces.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.2-p3243-s11", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "Packet numbers in each space start at packet number 0.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3244-s12", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "Subsequent packets sent in the same packet number space MUST increase the packet number by at least one. ¶ 0-RTT and 1-RTT data exist in the same packet number space to make loss recovery algorithms easier to implement between the two packet types. ¶ A QUIC endpoint MUST NOT reuse a packet number within the same packet number space in one connection.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.2-p3245-s13", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "If the packet number for sending reaches 2 62 -1, the sender MUST close the connection without sending a CONNECTION_CLOSE frame or any further packets; an endpoint MAY send a Stateless Reset ( Section 10.3 ) in response to further packets that it receives. ¶ A receiver MUST discard a newly unprotected packet unless it is certain that it has not processed another packet with the same packet number from the same packet number space.", "facet": "frames", "normative": true, "modalities": ["MUST", "MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.2-p3246-s14", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "Duplicate suppression MUST happen after removing packet protection for the reasons described in Section 9.5 of [ QUIC-TLS ] . ¶ Endpoints that track all individual packets for the purposes of detecting duplicates are at risk of accumulating excessive state.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.2-p3247-s15", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "The data required for detecting duplicates can be limited by maintaining a minimum packet number below which all packets are immediately dropped.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.2-p3248-s16", "section": "12.2", "anchor": "#name-coalescing-packets", "para_id": "12.2-p690", "text": "Any minimum needs to account for large variations in round-trip time, which includes the possibility that a peer might probe network paths with much larger round-trip times; see Section 9 . ¶ Packet number encoding at a sender and decoding at a receiver are described in Section 17.1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer", "receiver", "sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3249-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p691", "text": "The packet number is an integer in the range 0 to 2 62 -1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3250-s2", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p691", "text": "This number is used in determining the cryptographic nonce for packet protection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3251-s3", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p691", "text": "Each endpoint maintains a separate packet number for sending and receiving. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3252-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p692", "text": "Packet numbers are limited to this range because they need to be representable in whole in the Largest Acknowledged field of an ACK frame ( Section 19.3 ).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.3-p3253-s2", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p692", "text": "When present in a long or short header, however, packet numbers are reduced and encoded in 1 to 4 bytes; see Section 17.1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.3-p3254-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p693", "text": "Version Negotiation ( Section 17.2.1 ) and Retry ( Section 17.2.5 ) packets do not include a packet number. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3255-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p694", "text": "Packet numbers are divided into three spaces in QUIC: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3256-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p695", "text": "All Initial packets ( Section 17.2.2 ) are in this space. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3257-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p696", "text": "All Handshake packets ( Section 17.2.4 ) are in this space. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3258-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p697", "text": "All 0-RTT ( Section 17.2.3 ) and 1-RTT ( Section 17.3.1 ) packets are in this space. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3259-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p698", "text": "As described in [ QUIC-TLS ] , each packet type uses different protection keys. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3260-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p699", "text": "Conceptually, a packet number space is the context in which a packet can be processed and acknowledged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.3-p3261-s2", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p699", "text": "Initial packets can only be sent with Initial packet protection keys and acknowledged in packets that are also Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.3-p3262-s3", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p699", "text": "Similarly, Handshake packets are sent at the Handshake encryption level and can only be acknowledged in Handshake packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.3-p3263-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p700", "text": "This enforces cryptographic separation between the data sent in the different packet number spaces.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3264-s2", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p700", "text": "Packet numbers in each space start at packet number 0.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3265-s3", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p700", "text": "Subsequent packets sent in the same packet number space MUST increase the packet number by at least one. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.3-p3266-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p701", "text": "0-RTT and 1-RTT data exist in the same packet number space to make loss recovery algorithms easier to implement between the two packet types. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3267-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p702", "text": "A QUIC endpoint MUST NOT reuse a packet number within the same packet number space in one connection.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.3-p3268-s2", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p702", "text": "If the packet number for sending reaches 2 62 -1, the sender MUST close the connection without sending a CONNECTION_CLOSE frame or any further packets; an endpoint MAY send a Stateless Reset ( Section 10.3 ) in response to further packets that it receives. ¶", "facet": "frames", "normative": true, "modalities": ["MUST", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.3-p3269-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p703", "text": "A receiver MUST discard a newly unprotected packet unless it is certain that it has not processed another packet with the same packet number from the same packet number space.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.3-p3270-s2", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p703", "text": "Duplicate suppression MUST happen after removing packet protection for the reasons described in Section 9.5 of [ QUIC-TLS ] . ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.3-p3271-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p704", "text": "Endpoints that track all individual packets for the purposes of detecting duplicates are at risk of accumulating excessive state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.3-p3272-s2", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p704", "text": "The data required for detecting duplicates can be limited by maintaining a minimum packet number below which all packets are immediately dropped.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3273-s3", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p704", "text": "Any minimum needs to account for large variations in round-trip time, which includes the possibility that a peer might probe network paths with much larger round-trip times; see Section 9 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3274-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p705", "text": "Packet number encoding at a sender and decoding at a receiver are described in Section 17.1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3275-s1", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "12.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3276-s2", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "Frames and Frame Types The payload of QUIC packets, after removing packet protection, consists of a sequence of complete frames, as shown in Figure 11 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.3-p3277-s3", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "Version Negotiation, Stateless Reset, and Retry packets do not contain frames. ¶ Packet Payload { Frame (8..) ..., } Figure 11 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.3-p3278-s4", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "QUIC Payload The payload of a packet that contains frames MUST contain at least one frame, and MAY contain multiple frames and multiple frame types.", "facet": "frames", "normative": true, "modalities": ["MUST", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.3-p3279-s5", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "An endpoint MUST treat receipt of a packet containing no frames as a connection error of type PROTOCOL_VIOLATION.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.3-p3280-s6", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "Frames always fit within a single QUIC packet and cannot span multiple packets. ¶ Each frame begins with a Frame Type, indicating its type, followed by additional type-dependent fields: ¶ Frame { Frame Type (i), Type-Dependent Fields (..), } Figure 12 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.3-p3281-s7", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "Generic Frame Layout Table 3 lists and summarizes information about each frame type that is defined in this specification.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.3-p3282-s8", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "A description of this summary is included after the table. ¶ Table 3 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3283-s9", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "Frame Types Type Value Frame Type Name Definition Pkts Spec 0x00 PADDING Section 19.1 IH01 NP 0x01 PING Section 19.2 IH01 0x02-0x03 ACK Section 19.3 IH_1 NC 0x04 RESET_STREAM Section 19.4 __01 0x05 STOP_SENDING Section 19.5 __01 0x06 CRYPTO Section 19.6 IH_1 0x07 NEW_TOKEN Section 19.7 ___1 0x08-0x0f STREAM Section 19.8 __01 F 0x10 MAX_DATA Section 19.9 __01 0x11 MAX_STREAM_DATA Section 19.10 __01 0x12-0x13 MAX_STREAMS Section 19.11 __01 0x14 DATA_BLOCKED Section 19.12 __01 0x15 STREAM_DATA_BLOCKED Section 19.13 __01 0x16-0x17 STREAMS_BLOCKED Section 19.14 __01 0x18 NEW_CONNECTION_ID Section 19.15 __01 P 0x19 RETIRE_CONNECTION_ID Section 19.16 __01 0x1a PATH_CHALLENGE Section 19.17 __01 P 0x1b PATH_RESPONSE Section 19.18 ___1 P 0x1c-0x1d CONNECTION_CLOSE Section 19.19 ih01 N 0x1e HANDSHAKE_DONE Section 19.20 ___1 The format and semantics of each frame type are explained in more detail in Section 19 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED", "MAX_DATA", "MAX_STREAMS", "MAX_STREAM_DATA", "RESET_STREAM", "STOP_SENDING", "STREAM", "STREAMS_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.3-p3284-s10", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "The remainder of this section provides a summary of important and general information. ¶ The Frame Type in ACK, STREAM, MAX_STREAMS, STREAMS_BLOCKED, and CONNECTION_CLOSE frames is used to carry other frame-specific flags.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS", "STREAM", "STREAMS_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.3-p3285-s11", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "For all other frames, the Frame Type field simply identifies the frame. ¶ The \"Pkts\" column in Table 3 lists the types of packets that each frame type could appear in, indicated by the following characters: ¶ I:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.3-p3286-s12", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "Initial ( Section 17.2.2 ) ¶ H:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3287-s13", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "Handshake ( Section 17.2.4 ) ¶ 0: 0-RTT ( Section 17.2.3 ) ¶ 1: 1-RTT ( Section 17.3.1 ) ¶ ih:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.3-p3288-s14", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "Only a CONNECTION_CLOSE frame of type 0x1c can appear in Initial or Handshake packets. ¶ For more details about these restrictions, see Section 12.5 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.3-p3289-s15", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "Note that all frames can appear in 1-RTT packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.3-p3290-s16", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "An endpoint MUST treat receipt of a frame in a packet type that is not permitted as a connection error of type PROTOCOL_VIOLATION. ¶ The \"Spec\" column in Table 3 summarizes any special rules governing the processing or generation of the frame type, as indicated by the following characters: ¶ N:", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.3-p3291-s17", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "Packets containing only frames with this marking are not ack-eliciting; see Section 13.2 . ¶ C:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.3-p3292-s18", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "Packets containing only frames with this marking do not count toward bytes in flight for congestion control purposes; see [ QUIC-RECOVERY ] . ¶ P:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.3-p3293-s19", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "Packets containing only frames with this marking can be used to probe new network paths during connection migration; see Section 9.1 . ¶ F:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.3-p3294-s20", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "The contents of frames with this marking are flow controlled; see Section 4 . ¶ The \"Pkts\" and \"Spec\" columns in Table 3 do not form part of the IANA registry; see Section 22.4 . ¶ An endpoint MUST treat the receipt of a frame of unknown type as a connection error of type FRAME_ENCODING_ERROR. ¶ All frames are idempotent in this version of QUIC.", "facet": "flow_control", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.3-p3295-s21", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "That is, a valid frame does not cause undesirable side effects or errors when received more than once. ¶ The Frame Type field uses a variable-length integer encoding (see Section 16 ), with one exception.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.3-p3296-s22", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "To ensure simple and efficient implementations of frame parsing, a frame type MUST use the shortest possible encoding.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.3-p3297-s23", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "For frame types defined in this document, this means a single-byte encoding, even though it is possible to encode these values as a two-, four-, or eight-byte variable-length integer.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.3-p3298-s24", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "For instance, though 0x4001 is a legitimate two-byte encoding for a variable-length integer with a value of 1, PING frames are always encoded as a single byte with the value 0x01.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.3-p3299-s25", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "This rule applies to all current and future QUIC frame types.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.3-p3300-s26", "section": "12.3", "anchor": "#name-packet-numbers", "para_id": "12.3-p706", "text": "An endpoint MAY treat the receipt of a frame type that uses a longer encoding than necessary as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.4-p3301-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p707", "text": "The payload of QUIC packets, after removing packet protection, consists of a sequence of complete frames, as shown in Figure 11 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3302-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p707", "text": "Version Negotiation, Stateless Reset, and Retry packets do not contain frames. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3303-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p708", "text": "Packet Payload { Frame (8..) ..., } Figure 11 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3304-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p708", "text": "QUIC Payload", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3305-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p709", "text": "Packet Payload { Frame (8..) ..., }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3306-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p710", "text": "Packet Payload { Frame (8..) ..., }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3307-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p711", "text": "Figure 11 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3308-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p711", "text": "QUIC Payload", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3309-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p712", "text": "The payload of a packet that contains frames MUST contain at least one frame, and MAY contain multiple frames and multiple frame types.", "facet": "frames", "normative": true, "modalities": ["MUST", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.4-p3310-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p712", "text": "An endpoint MUST treat receipt of a packet containing no frames as a connection error of type PROTOCOL_VIOLATION.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.4-p3311-s3", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p712", "text": "Frames always fit within a single QUIC packet and cannot span multiple packets. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3312-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p713", "text": "Each frame begins with a Frame Type, indicating its type, followed by additional type-dependent fields: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3313-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p714", "text": "Frame { Frame Type (i), Type-Dependent Fields (..), } Figure 12 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3314-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p714", "text": "Generic Frame Layout", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3315-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p715", "text": "Frame { Frame Type (i), Type-Dependent Fields (..), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3316-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p716", "text": "Frame { Frame Type (i), Type-Dependent Fields (..), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3317-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p717", "text": "Figure 12 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3318-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p717", "text": "Generic Frame Layout", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3319-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p718", "text": "Table 3 lists and summarizes information about each frame type that is defined in this specification.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3320-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p718", "text": "A description of this summary is included after the table. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3321-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p719", "text": "Table 3 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3322-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p719", "text": "Frame Types Type Value Frame Type Name Definition Pkts Spec 0x00 PADDING Section 19.1 IH01 NP 0x01 PING Section 19.2 IH01 0x02-0x03 ACK Section 19.3 IH_1 NC 0x04 RESET_STREAM Section 19.4 __01 0x05 STOP_SENDING Section 19.5 __01 0x06 CRYPTO Section 19.6 IH_1 0x07 NEW_TOKEN Section 19.7 ___1 0x08-0x0f STREAM Section 19.8 __01 F 0x10 MAX_DATA Section 19.9 __01 0x11 MAX_STREAM_DATA Section 19.10 __01 0x12-0x13 MAX_STREAMS Section 19.11 __01 0x14 DATA_BLOCKED Section 19.12 __01 0x15 STREAM_DATA_BLOCKED Section 19.13 __01 0x16-0x17 STREAMS_BLOCKED Section 19.14 __01 0x18 NEW_CONNECTION_ID Section 19.15 __01 P 0x19 RETIRE_CONNECTION_ID Section 19.16 __01 0x1a PATH_CHALLENGE Section 19.17 __01 P 0x1b PATH_RESPONSE Section 19.18 ___1 P 0x1c-0x1d CONNECTION_CLOSE Section 19.19 ih01 N 0x1e HANDSHAKE_DONE Section 19.20 ___1", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED", "MAX_DATA", "MAX_STREAMS", "MAX_STREAM_DATA", "RESET_STREAM", "STOP_SENDING", "STREAM", "STREAMS_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.4-p3323-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p720", "text": "Table 3 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3324-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p720", "text": "Frame Types Type Value Frame Type Name Definition Pkts Spec 0x00 PADDING Section 19.1 IH01 NP 0x01 PING Section 19.2 IH01 0x02-0x03 ACK Section 19.3 IH_1 NC 0x04 RESET_STREAM Section 19.4 __01 0x05 STOP_SENDING Section 19.5 __01 0x06 CRYPTO Section 19.6 IH_1 0x07 NEW_TOKEN Section 19.7 ___1 0x08-0x0f STREAM Section 19.8 __01 F 0x10 MAX_DATA Section 19.9 __01 0x11 MAX_STREAM_DATA Section 19.10 __01 0x12-0x13 MAX_STREAMS Section 19.11 __01 0x14 DATA_BLOCKED Section 19.12 __01 0x15 STREAM_DATA_BLOCKED Section 19.13 __01 0x16-0x17 STREAMS_BLOCKED Section 19.14 __01 0x18 NEW_CONNECTION_ID Section 19.15 __01 P 0x19 RETIRE_CONNECTION_ID Section 19.16 __01 0x1a PATH_CHALLENGE Section 19.17 __01 P 0x1b PATH_RESPONSE Section 19.18 ___1 P 0x1c-0x1d CONNECTION_CLOSE Section 19.19 ih01 N 0x1e HANDSHAKE_DONE Section 19.20 ___1", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED", "MAX_DATA", "MAX_STREAMS", "MAX_STREAM_DATA", "RESET_STREAM", "STOP_SENDING", "STREAM", "STREAMS_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.4-p3325-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p721", "text": "The format and semantics of each frame type are explained in more detail in Section 19 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3326-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p721", "text": "The remainder of this section provides a summary of important and general information. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3327-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p722", "text": "The Frame Type in ACK, STREAM, MAX_STREAMS, STREAMS_BLOCKED, and CONNECTION_CLOSE frames is used to carry other frame-specific flags.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS", "STREAM", "STREAMS_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.4-p3328-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p722", "text": "For all other frames, the Frame Type field simply identifies the frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3329-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p723", "text": "The \"Pkts\" column in Table 3 lists the types of packets that each frame type could appear in, indicated by the following characters: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3330-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p724", "text": "Initial ( Section 17.2.2 ) ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3331-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p725", "text": "Handshake ( Section 17.2.4 ) ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3332-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p726", "text": "0-RTT ( Section 17.2.3 ) ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3333-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p727", "text": "1-RTT ( Section 17.3.1 ) ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3334-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p728", "text": "Only a CONNECTION_CLOSE frame of type 0x1c can appear in Initial or Handshake packets. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3335-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p729", "text": "For more details about these restrictions, see Section 12.5 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3336-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p729", "text": "Note that all frames can appear in 1-RTT packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3337-s3", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p729", "text": "An endpoint MUST treat receipt of a frame in a packet type that is not permitted as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.4-p3338-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p730", "text": "The \"Spec\" column in Table 3 summarizes any special rules governing the processing or generation of the frame type, as indicated by the following characters: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3339-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p731", "text": "Packets containing only frames with this marking are not ack-eliciting; see Section 13.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.4-p3340-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p732", "text": "Packets containing only frames with this marking do not count toward bytes in flight for congestion control purposes; see [ QUIC-RECOVERY ] . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3341-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p733", "text": "Packets containing only frames with this marking can be used to probe new network paths during connection migration; see Section 9.1 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3342-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p734", "text": "The contents of frames with this marking are flow controlled; see Section 4 . ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3343-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p735", "text": "The \"Pkts\" and \"Spec\" columns in Table 3 do not form part of the IANA registry; see Section 22.4 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3344-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p736", "text": "An endpoint MUST treat the receipt of a frame of unknown type as a connection error of type FRAME_ENCODING_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.4-p3345-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p737", "text": "All frames are idempotent in this version of QUIC.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3346-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p737", "text": "That is, a valid frame does not cause undesirable side effects or errors when received more than once. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.4-p3347-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p738", "text": "The Frame Type field uses a variable-length integer encoding (see Section 16 ), with one exception.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3348-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p738", "text": "To ensure simple and efficient implementations of frame parsing, a frame type MUST use the shortest possible encoding.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.4-p3349-s3", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p738", "text": "For frame types defined in this document, this means a single-byte encoding, even though it is possible to encode these values as a two-, four-, or eight-byte variable-length integer.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3350-s4", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p738", "text": "For instance, though 0x4001 is a legitimate two-byte encoding for a variable-length integer with a value of 1, PING frames are always encoded as a single byte with the value 0x01.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3351-s5", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p738", "text": "This rule applies to all current and future QUIC frame types.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3352-s6", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p738", "text": "An endpoint MAY treat the receipt of a frame type that uses a longer encoding than necessary as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.4-p3353-s1", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p739", "text": "12.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.4-p3354-s2", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p739", "text": "Frames and Number Spaces Some frames are prohibited in different packet number spaces.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.4-p3355-s3", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p739", "text": "The rules here generalize those of TLS, in that frames associated with establishing the connection can usually appear in packets in any packet number space, whereas those associated with transferring data can only appear in the application data packet number space: ¶ PADDING, PING, and CRYPTO frames MAY appear in any packet number space. ¶ CONNECTION_CLOSE frames signaling errors at the QUIC layer (type 0x1c) MAY appear in any packet number space.", "facet": "frames", "normative": true, "modalities": ["MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.4-p3356-s4", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p739", "text": "CONNECTION_CLOSE frames signaling application errors (type 0x1d) MUST only appear in the application data packet number space. ¶ ACK frames MAY appear in any packet number space but can only acknowledge packets that appeared in that packet number space.", "facet": "frames", "normative": true, "modalities": ["MUST", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.4-p3357-s5", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p739", "text": "However, as noted below, 0-RTT packets cannot contain ACK frames. ¶ All other frame types MUST only be sent in the application data packet number space. ¶ Note that it is not possible to send the following frames in 0-RTT packets for various reasons:", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.4-p3358-s6", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p739", "text": "ACK, CRYPTO, HANDSHAKE_DONE, NEW_TOKEN, PATH_RESPONSE, and RETIRE_CONNECTION_ID.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.4-p3359-s7", "section": "12.4", "anchor": "#name-frames-and-frame-types", "para_id": "12.4-p739", "text": "A server MAY treat receipt of these frames in 0-RTT packets as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.5-p3360-s1", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p740", "text": "Some frames are prohibited in different packet number spaces.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.5-p3361-s2", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p740", "text": "The rules here generalize those of TLS, in that frames associated with establishing the connection can usually appear in packets in any packet number space, whereas those associated with transferring data can only appear in the application data packet number space: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.5-p3362-s1", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p741", "text": "PADDING, PING, and CRYPTO frames MAY appear in any packet number space. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.5-p3363-s1", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p742", "text": "CONNECTION_CLOSE frames signaling errors at the QUIC layer (type 0x1c) MAY appear in any packet number space.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.5-p3364-s2", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p742", "text": "CONNECTION_CLOSE frames signaling application errors (type 0x1d) MUST only appear in the application data packet number space. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.5-p3365-s1", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p743", "text": "ACK frames MAY appear in any packet number space but can only acknowledge packets that appeared in that packet number space.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3366-s2", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p743", "text": "However, as noted below, 0-RTT packets cannot contain ACK frames. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3367-s1", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p744", "text": "All other frame types MUST only be sent in the application data packet number space. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.5-p3368-s1", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p745", "text": "Note that it is not possible to send the following frames in 0-RTT packets for various reasons:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3369-s2", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p745", "text": "ACK, CRYPTO, HANDSHAKE_DONE, NEW_TOKEN, PATH_RESPONSE, and RETIRE_CONNECTION_ID.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3370-s3", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p745", "text": "A server MAY treat receipt of these frames in 0-RTT packets as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.5-p3371-s1", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "13.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3372-s2", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Packetization and Reliability A sender sends one or more frames in a QUIC packet; see Section 12.4 . ¶ A sender can minimize per-packet bandwidth and computational costs by including as many frames as possible in each QUIC packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3373-s3", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "A sender MAY wait for a short period of time to collect multiple frames before sending a packet that is not maximally packed, to avoid sending out large numbers of small packets.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.5-p3374-s4", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "An implementation MAY use knowledge about application sending behavior or heuristics to determine whether and for how long to wait.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.5-p3375-s5", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "This waiting period is an implementation decision, and an implementation should be careful to delay conservatively, since any delay is likely to increase application-visible latency. ¶ Stream multiplexing is achieved by interleaving STREAM frames from multiple streams into one or more QUIC packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.5-p3376-s6", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "A single QUIC packet can include multiple STREAM frames from one or more streams. ¶ One of the benefits of QUIC is avoidance of head-of-line blocking across multiple streams.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.5-p3377-s7", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "When a packet loss occurs, only streams with data in that packet are blocked waiting for a retransmission to be received, while other streams can continue making progress.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3378-s8", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Note that when data from multiple streams is included in a single QUIC packet, loss of that packet blocks all those streams from making progress.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3379-s9", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Implementations are advised to include as few streams as necessary in outgoing packets without losing transmission efficiency to underfilled packets. ¶ 13.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3380-s10", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Packet Processing A packet MUST NOT be acknowledged until packet protection has been successfully removed and all frames contained in the packet have been processed.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3381-s11", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "For STREAM frames, this means the data has been enqueued in preparation to be received by the application protocol, but it does not require that data be delivered and consumed. ¶ Once the packet has been fully processed, a receiver acknowledges receipt by sending one or more ACK frames containing the packet number of the received packet. ¶ An endpoint SHOULD treat receipt of an acknowledgment for a packet it did not send as a connection error of type PROTOCOL_VIOLATION, if it is able to detect the condition.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "12.5-p3382-s12", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "For further discussion of how this might be achieved, see Section 21.4 . ¶ 13.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3383-s13", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Generating Acknowledgments Endpoints acknowledge all packets they receive and process.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3384-s14", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "However, only ack-eliciting packets cause an ACK frame to be sent within the maximum ack delay.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3385-s15", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Packets that are not ack-eliciting are only acknowledged when an ACK frame is sent for other reasons. ¶ When sending a packet for any reason, an endpoint SHOULD attempt to include an ACK frame if one has not been sent recently.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3386-s16", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Doing so helps with timely loss detection at the peer. ¶ In general, frequent feedback from a receiver improves loss and congestion response, but this has to be balanced against excessive load generated by a receiver that sends an ACK frame in response to every ack-eliciting packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer", "receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3387-s17", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "The guidance offered below seeks to strike this balance. ¶ 13.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3388-s18", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Sending ACK Frames Every packet SHOULD be acknowledged at least once, and ack-eliciting packets MUST be acknowledged at least once within the maximum delay an endpoint communicated using the max_ack_delay transport parameter; see Section 18.2 . max_ack_delay declares an explicit contract: an endpoint promises to never intentionally delay acknowledgments of an ack-eliciting packet by more than the indicated value.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3389-s19", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "If it does, any excess accrues to the RTT estimate and could result in spurious or delayed retransmissions from the peer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3390-s20", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "A sender uses the receiver's max_ack_delay value in determining timeouts for timer-based retransmission, as detailed in Section 6.2 of [ QUIC-RECOVERY ] . ¶ An endpoint MUST acknowledge all ack-eliciting Initial and Handshake packets immediately and all ack-eliciting 0-RTT and 1-RTT packets within its advertised max_ack_delay, with the following exception.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver", "sender"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "12.5-p3391-s21", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Prior to handshake confirmation, an endpoint might not have packet protection keys for decrypting Handshake, 0-RTT, or 1-RTT packets when they are received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3392-s22", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "It might therefore buffer them and acknowledge them when the requisite keys become available. ¶ Since packets containing only ACK frames are not congestion controlled, an endpoint MUST NOT send more than one such packet in response to receiving an ack-eliciting packet. ¶ An endpoint MUST NOT send a non-ack-eliciting packet in response to a non-ack-eliciting packet, even if there are packet gaps that precede the received packet.", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3393-s23", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "This avoids an infinite feedback loop of acknowledgments, which could prevent the connection from ever becoming idle.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3394-s24", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Non-ack-eliciting packets are eventually acknowledged when the endpoint sends an ACK frame in response to other events. ¶ An endpoint that is only sending ACK frames will not receive acknowledgments from its peer unless those acknowledgments are included in packets with ack-eliciting frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3395-s25", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "An endpoint SHOULD send an ACK frame with other frames when there are new ack-eliciting packets to acknowledge.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3396-s26", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "When only non-ack-eliciting packets need to be acknowledged, an endpoint MAY choose not to send an ACK frame with outgoing frames until an ack-eliciting packet has been received. ¶ An endpoint that is only sending non-ack-eliciting packets might choose to occasionally add an ack-eliciting frame to those packets to ensure that it receives an acknowledgment; see Section 13.2.4 .", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3397-s27", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "In that case, an endpoint MUST NOT send an ack-eliciting frame in all packets that would otherwise be non-ack-eliciting, to avoid an infinite feedback loop of acknowledgments. ¶ In order to assist loss detection at the sender, an endpoint SHOULD generate and send an ACK frame without delay when it receives an ack-eliciting packet either: ¶ when the received packet has a packet number less than another ack-eliciting packet that has been received, or ¶ when the packet has a packet number larger than the highest-numbered ack-eliciting packet that has been received and there are missing packets between that packet and this packet. ¶ Similarly, packets marked with the ECN Congestion Experienced (CE) codepoint in the IP header SHOULD be acknowledged immediately, to reduce the peer's response time to congestion events. ¶ The algorithms in [ QUIC-RECOVERY ] are expected to be resilient to receivers that do not follow the guidance offered above.", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "SHOULD", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "receiver", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3398-s28", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "However, an implementation should only deviate from these requirements after careful consideration of the performance implications of a change, for connections made by the endpoint and for other users of the network. ¶ 13.2.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3399-s29", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Acknowledgment Frequency A receiver determines how frequently to send acknowledgments in response to ack-eliciting packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3400-s30", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "This determination involves a trade-off. ¶ Endpoints rely on timely acknowledgment to detect loss; see Section 6 of [ QUIC-RECOVERY ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3401-s31", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Window-based congestion controllers, such as the one described in Section 7 of [ QUIC-RECOVERY ] , rely on acknowledgments to manage their congestion window.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3402-s32", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "In both cases, delaying acknowledgments can adversely affect performance. ¶ On the other hand, reducing the frequency of packets that carry only acknowledgments reduces packet transmission and processing cost at both endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3403-s33", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "It can improve connection throughput on severely asymmetric links and reduce the volume of acknowledgment traffic using return path capacity; see Section 3 of [ RFC3449 ] . ¶ A receiver SHOULD send an ACK frame after receiving at least two ack-eliciting packets.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3404-s34", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "This recommendation is general in nature and consistent with recommendations for TCP endpoint behavior [ RFC5681 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3405-s35", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Knowledge of network conditions, knowledge of the peer's congestion controller, or further research and experimentation might suggest alternative acknowledgment strategies with better performance characteristics. ¶ A receiver MAY process multiple available packets before determining whether to send an ACK frame in response. ¶ 13.2.3.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["peer", "receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3406-s36", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Managing ACK Ranges When an ACK frame is sent, one or more ranges of acknowledged packets are included.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3407-s37", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Including acknowledgments for older packets reduces the chance of spurious retransmissions caused by losing previously sent ACK frames, at the cost of larger ACK frames. ¶ ACK frames SHOULD always acknowledge the most recently received packets, and the more out of order the packets are, the more important it is to send an updated ACK frame quickly, to prevent the peer from declaring a packet as lost and spuriously retransmitting the frames it contains.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3408-s38", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "An ACK frame is expected to fit within a single QUIC packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3409-s39", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "If it does not, then older ranges (those with the smallest packet numbers) are omitted. ¶ A receiver limits the number of ACK Ranges ( Section 19.3.1 ) it remembers and sends in ACK frames, both to limit the size of ACK frames and to avoid resource exhaustion.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3410-s40", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "After receiving acknowledgments for an ACK frame, the receiver SHOULD stop tracking those acknowledged ACK Ranges.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3411-s41", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Senders can expect acknowledgments for most packets, but QUIC does not guarantee receipt of an acknowledgment for every packet that the receiver processes. ¶ It is possible that retaining many ACK Ranges could cause an ACK frame to become too large.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3412-s42", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "A receiver can discard unacknowledged ACK Ranges to limit ACK frame size, at the cost of increased retransmissions from the sender.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3413-s43", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "This is necessary if an ACK frame would be too large to fit in a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3414-s44", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Receivers MAY also limit ACK frame size further to preserve space for other frames or to limit the capacity that acknowledgments consume. ¶ A receiver MUST retain an ACK Range unless it can ensure that it will not subsequently accept packets with numbers in that range.", "facet": "frames", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3415-s45", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Maintaining a minimum packet number that increases as ranges are discarded is one way to achieve this with minimal state. ¶ Receivers can discard all ACK Ranges, but they MUST retain the largest packet number that has been successfully processed, as that is used to recover packet numbers from subsequent packets; see Section 17.1 . ¶ A receiver SHOULD include an ACK Range containing the largest received packet number in every ACK frame.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3416-s46", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "The Largest Acknowledged field is used in ECN validation at a sender, and including a lower value than what was included in a previous ACK frame could cause ECN to be unnecessarily disabled; see Section 13.4.2 . ¶ Section 13.2.4 describes an exemplary approach for determining what packets to acknowledge in each ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3417-s47", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Though the goal of this algorithm is to generate an acknowledgment for every packet that is processed, it is still possible for acknowledgments to be lost. ¶ 13.2.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3418-s48", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Limiting Ranges by Tracking ACK Frames When a packet containing an ACK frame is sent, the Largest Acknowledged field in that frame can be saved.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3419-s49", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "When a packet containing an ACK frame is acknowledged, the receiver can stop acknowledging packets less than or equal to the Largest Acknowledged field in the sent ACK frame. ¶ A receiver that sends only non-ack-eliciting packets, such as ACK frames, might not receive an acknowledgment for a long period of time.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3420-s50", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "This could cause the receiver to maintain state for a large number of ACK frames for a long period of time, and ACK frames it sends could be unnecessarily large.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3421-s51", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "In such a case, a receiver could send a PING or other small ack-eliciting frame occasionally, such as once per round trip, to elicit an ACK from the peer. ¶ In cases without ACK frame loss, this algorithm allows for a minimum of 1 RTT of reordering.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer", "receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3422-s52", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "In cases with ACK frame loss and reordering, this approach does not guarantee that every acknowledgment is seen by the sender before it is no longer included in the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3423-s53", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Packets could be received out of order, and all subsequent ACK frames containing them could be lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3424-s54", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "In this case, the loss recovery algorithm could cause spurious retransmissions, but the sender will continue making forward progress. ¶ 13.2.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3425-s55", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Measuring and Reporting Host Delay An endpoint measures the delays intentionally introduced between the time the packet with the largest packet number is received and the time an acknowledgment is sent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3426-s56", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "The endpoint encodes this acknowledgment delay in the ACK Delay field of an ACK frame; see Section 19.3 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3427-s57", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "This allows the receiver of the ACK frame to adjust for any intentional delays, which is important for getting a better estimate of the path RTT when acknowledgments are delayed. ¶ A packet might be held in the OS kernel or elsewhere on the host before being processed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3428-s58", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "An endpoint MUST NOT include delays that it does not control when populating the ACK Delay field in an ACK frame.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3429-s59", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "However, endpoints SHOULD include buffering delays caused by unavailability of decryption keys, since these delays can be large and are likely to be non-repeating. ¶ When the measured acknowledgment delay is larger than its max_ack_delay, an endpoint SHOULD report the measured delay.", "facet": "other", "normative": true, "modalities": ["SHOULD", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "12.5-p3430-s60", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "This information is especially useful during the handshake when delays might be large; see Section 13.2.1 . ¶ 13.2.6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3431-s61", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "ACK Frames and Packet Protection ACK frames MUST only be carried in a packet that has the same packet number space as the packet being acknowledged; see Section 12.1 .", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3432-s62", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "For instance, packets that are protected with 1-RTT keys MUST be acknowledged in packets that are also protected with 1-RTT keys. ¶ Packets that a client sends with 0-RTT packet protection MUST be acknowledged by the server in packets protected by 1-RTT keys.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "12.5-p3433-s63", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "This can mean that the client is unable to use these acknowledgments if the server cryptographic handshake messages are delayed or lost.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3434-s64", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Note that the same limitation applies to other data sent by the server protected by the 1-RTT keys. ¶ 13.2.7.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3435-s65", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "PADDING Frames Consume Congestion Window Packets containing PADDING frames are considered to be in flight for congestion control purposes [ QUIC-RECOVERY ] .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.5-p3436-s66", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Packets containing only PADDING frames therefore consume congestion window but do not generate acknowledgments that will open the congestion window.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3437-s67", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "To avoid a deadlock, a sender SHOULD ensure that other frames are sent periodically in addition to PADDING frames to elicit acknowledgments from the receiver. ¶ 13.3.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3438-s68", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Retransmission of Information QUIC packets that are determined to be lost are not retransmitted whole.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3439-s69", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "The same applies to the frames that are contained within lost packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.5-p3440-s70", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Instead, the information that might be carried in frames is sent again in new frames as needed. ¶ New frames and packets are used to carry information that is determined to have been lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.5-p3441-s71", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "In general, information is sent again when a packet containing that information is determined to be lost, and sending ceases when a packet containing that information is acknowledged. ¶ Data sent in CRYPTO frames is retransmitted according to the rules in [ QUIC-RECOVERY ] , until all data has been acknowledged.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3442-s72", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Data in CRYPTO frames for Initial and Handshake packets is discarded when keys for the corresponding packet number space are discarded. ¶ Application data sent in STREAM frames is retransmitted in new STREAM frames unless the endpoint has sent a RESET_STREAM for that stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3443-s73", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Once an endpoint sends a RESET_STREAM frame, no further STREAM frames are needed. ¶ ACK frames carry the most recent set of acknowledgments and the acknowledgment delay from the largest acknowledged packet, as described in Section 13.2.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3444-s74", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Delaying the transmission of packets containing ACK frames or resending old ACK frames can cause the peer to generate an inflated RTT sample or unnecessarily disable ECN. ¶ Cancellation of stream transmission, as carried in a RESET_STREAM frame, is sent until acknowledged or until all stream data is acknowledged by the peer (that is, either the \"Reset Recvd\" or \"Data Recvd\" state is reached on the sending part of the stream).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Recvd", "Reset Recvd"], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "12.5-p3445-s75", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "The content of a RESET_STREAM frame MUST NOT change when it is sent again. ¶ Similarly, a request to cancel stream transmission, as encoded in a STOP_SENDING frame, is sent until the receiving part of the stream enters either a \"Data Recvd\" or \"Reset Recvd\" state; see Section 3.5 . ¶ Connection close signals, including packets that contain CONNECTION_CLOSE frames, are not sent again when packet loss is detected.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": ["Data Recvd", "Reset Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "12.5-p3446-s76", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Resending these signals is described in Section 10 . ¶ The current connection maximum data is sent in MAX_DATA frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.5-p3447-s77", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "An updated value is sent in a MAX_DATA frame if the packet containing the most recently sent MAX_DATA frame is declared lost or when the endpoint decides to update the limit.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3448-s78", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Care is necessary to avoid sending this frame too often, as the limit can increase frequently and cause an unnecessarily large number of MAX_DATA frames to be sent; see Section 4.2 . ¶ The current maximum stream data offset is sent in MAX_STREAM_DATA frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.5-p3449-s79", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Like MAX_DATA, an updated value is sent when the packet containing the most recent MAX_STREAM_DATA frame for a stream is lost or when the limit is updated, with care taken to prevent the frame from being sent too often.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3450-s80", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "An endpoint SHOULD stop sending MAX_STREAM_DATA frames when the receiving part of the stream enters a \"Size Known\" or \"Reset Recvd\" state. ¶ The limit on streams of a given type is sent in MAX_STREAMS frames.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["MAX_STREAMS", "MAX_STREAM_DATA"], "states": ["Reset Recvd", "Size Known"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "12.5-p3451-s81", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Like MAX_DATA, an updated value is sent when a packet containing the most recent MAX_STREAMS for a stream type frame is declared lost or when the limit is updated, with care taken to prevent the frame from being sent too often. ¶ Blocked signals are carried in DATA_BLOCKED, STREAM_DATA_BLOCKED, and STREAMS_BLOCKED frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED", "MAX_DATA", "MAX_STREAMS", "STREAMS_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3452-s82", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "DATA_BLOCKED frames have connection scope, STREAM_DATA_BLOCKED frames have stream scope, and STREAMS_BLOCKED frames are scoped to a specific stream type.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED", "STREAMS_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "12.5-p3453-s83", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "A new frame is sent if a packet containing the most recent frame for a scope is lost, but only while the endpoint is blocked on the corresponding limit.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3454-s84", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "These frames always include the limit that is causing blocking at the time that they are transmitted. ¶ A liveness or path validation check using PATH_CHALLENGE frames is sent periodically until a matching PATH_RESPONSE frame is received or until there is no remaining need for liveness or path validation checking.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3455-s85", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "PATH_CHALLENGE frames include a different payload each time they are sent. ¶ Responses to path validation using PATH_RESPONSE frames are sent just once.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.5-p3456-s86", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "The peer is expected to send more PATH_CHALLENGE frames as necessary to evoke additional PATH_RESPONSE frames. ¶ New connection IDs are sent in NEW_CONNECTION_ID frames and retransmitted if the packet containing them is lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3457-s87", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Retransmissions of this frame carry the same sequence number value.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.5-p3458-s88", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Likewise, retired connection IDs are sent in RETIRE_CONNECTION_ID frames and retransmitted if the packet containing them is lost. ¶ NEW_TOKEN frames are retransmitted if the packet containing them is lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3459-s89", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "No special support is made for detecting reordered and duplicated NEW_TOKEN frames other than a direct comparison of the frame contents. ¶ PING and PADDING frames contain no information, so lost PING or PADDING frames do not require repair. ¶ The HANDSHAKE_DONE frame MUST be retransmitted until it is acknowledged. ¶ Endpoints SHOULD prioritize retransmission of data over sending new data, unless priorities specified by the application indicate otherwise; see Section 2.3 . ¶ Even though a sender is encouraged to assemble frames containing up-to-date information every time it sends a packet, it is not forbidden to retransmit copies of frames from lost packets.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3460-s90", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "A sender that retransmits copies of frames needs to handle decreases in available payload size due to changes in packet number length, connection ID length, and path MTU.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "12.5-p3461-s91", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "A receiver MUST accept packets containing an outdated frame, such as a MAX_DATA frame carrying a smaller maximum data value than one found in an older packet. ¶ A sender SHOULD avoid retransmitting information from packets once they are acknowledged.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "12.5-p3462-s92", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "This includes packets that are acknowledged after being declared lost, which can happen in the presence of network reordering.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3463-s93", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Doing so requires senders to retain information about packets after they are declared lost.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3464-s94", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "A sender can discard this information after a period of time elapses that adequately allows for reordering, such as a PTO ( Section 6.2 of [ QUIC-RECOVERY ] ), or based on other events, such as reaching a memory limit. ¶ Upon detecting losses, a sender MUST take appropriate congestion control action.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "12.5-p3465-s95", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "The details of loss detection and congestion control are described in [ QUIC-RECOVERY ] . ¶ 13.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3466-s96", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Explicit Congestion Notification QUIC endpoints can use ECN [ RFC3168 ] to detect and respond to network congestion.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3467-s97", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "ECN allows an endpoint to set an ECN-Capable Transport (ECT) codepoint in the ECN field of an IP packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3468-s98", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "A network node can then indicate congestion by setting the ECN-CE codepoint in the ECN field instead of dropping the packet [ RFC8087 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3469-s99", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Endpoints react to reported congestion by reducing their sending rate in response, as described in [ QUIC-RECOVERY ] . ¶ To enable ECN, a sending QUIC endpoint first determines whether a path supports ECN marking and whether the peer reports the ECN values in received IP headers; see Section 13.4.2 . ¶ 13.4.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3470-s100", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Reporting ECN Counts The use of ECN requires the receiving endpoint to read the ECN field from an IP packet, which is not possible on all platforms.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3471-s101", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "If an endpoint does not implement ECN support or does not have access to received ECN fields, it does not report ECN counts for packets it receives. ¶ Even if an endpoint does not set an ECT field in packets it sends, the endpoint MUST provide feedback about ECN markings it receives, if these are accessible.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "12.5-p3472-s102", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Failing to report the ECN counts will cause the sender to disable the use of ECN for this connection. ¶ On receiving an IP packet with an ECT(0), ECT(1), or ECN-CE codepoint, an ECN-enabled endpoint accesses the ECN field and increases the corresponding ECT(0), ECT(1), or ECN-CE count.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3473-s103", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "These ECN counts are included in subsequent ACK frames; see Sections 13.2 and 19.3 . ¶ Each packet number space maintains separate acknowledgment state and separate ECN counts.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3474-s104", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Coalesced QUIC packets (see Section 12.2 ) share the same IP header so the ECN counts are incremented once for each coalesced QUIC packet. ¶ For example, if one each of an Initial, Handshake, and 1-RTT QUIC packet are coalesced into a single UDP datagram, the ECN counts for all three packet number spaces will be incremented by one each, based on the ECN field of the single IP header. ¶ ECN counts are only incremented when QUIC packets from the received IP packet are processed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3475-s105", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "As such, duplicate QUIC packets are not processed and do not increase ECN counts; see Section 21.10 for relevant security concerns. ¶ 13.4.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3476-s106", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "ECN Validation It is possible for faulty network devices to corrupt or erroneously drop packets that carry a non-zero ECN codepoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3477-s107", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "To ensure connectivity in the presence of such devices, an endpoint validates the ECN counts for each network path and disables the use of ECN on that path if errors are detected. ¶ To perform ECN validation for a new path: ¶ The endpoint sets an ECT(0) codepoint in the IP header of early outgoing packets sent on a new path to the peer [ RFC8311 ] . ¶ The endpoint monitors whether all packets sent with an ECT codepoint are eventually deemed lost ( Section 6 of [ QUIC-RECOVERY ] ), indicating that ECN validation has failed. ¶ If an endpoint has cause to expect that IP packets with an ECT codepoint might be dropped by a faulty network element, the endpoint could set an ECT codepoint for only the first ten outgoing packets on a path, or for a period of three PTOs (see Section 6.2 of [ QUIC-RECOVERY ] ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3478-s108", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "If all packets marked with non-zero ECN codepoints are subsequently lost, it can disable marking on the assumption that the marking caused the loss. ¶ An endpoint thus attempts to use ECN and validates this for each new connection, when switching to a server's preferred address, and on active connection migration to a new path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3479-s109", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Appendix A.4 describes one possible algorithm. ¶ Other methods of probing paths for ECN support are possible, as are different marking strategies.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3480-s110", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Implementations MAY use other methods defined in RFCs; see [ RFC8311 ] .", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "12.5-p3481-s111", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Implementations that use the ECT(1) codepoint need to perform ECN validation using the reported ECT(1) counts. ¶ 13.4.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "12.5-p3482-s112", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Receiving ACK Frames with ECN Counts Erroneous application of ECN-CE markings by the network can result in degraded connection performance.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3483-s113", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "An endpoint that receives an ACK frame with ECN counts therefore validates the counts before using them.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3484-s114", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "It performs this validation by comparing newly received counts against those from the last successfully processed ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3485-s115", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Any increase in the ECN counts is validated based on the ECN markings that were applied to packets that are newly acknowledged in the ACK frame. ¶ If an ACK frame newly acknowledges a packet that the endpoint sent with either the ECT(0) or ECT(1) codepoint set, ECN validation fails if the corresponding ECN counts are not present in the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3486-s116", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "This check detects a network element that zeroes the ECN field or a peer that does not report ECN markings. ¶ ECN validation also fails if the sum of the increase in ECT(0) and ECN-CE counts is less than the number of newly acknowledged packets that were originally sent with an ECT(0) marking.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3487-s117", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Similarly, ECN validation fails if the sum of the increases to ECT(1) and ECN-CE counts is less than the number of newly acknowledged packets sent with an ECT(1) marking.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3488-s118", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "These checks can detect remarking of ECN-CE markings by the network. ¶ An endpoint could miss acknowledgments for a packet when ACK frames are lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3489-s119", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "It is therefore possible for the total increase in ECT(0), ECT(1), and ECN-CE counts to be greater than the number of packets that are newly acknowledged by an ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3490-s120", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "This is why ECN counts are permitted to be larger than the total number of packets that are acknowledged. ¶ Validating ECN counts from reordered ACK frames can result in failure.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "12.5-p3491-s121", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "An endpoint MUST NOT fail ECN validation as a result of processing an ACK frame that does not increase the largest acknowledged packet number. ¶ ECN validation can fail if the received total count for either ECT(0) or ECT(1) exceeds the total number of packets sent with each corresponding ECT codepoint.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "12.5-p3492-s122", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "In particular, validation will fail when an endpoint receives a non-zero ECN count corresponding to an ECT codepoint that it never applied.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3493-s123", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "This check detects when packets are remarked to ECT(0) or ECT(1) in the network. ¶ 13.4.2.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "12.5-p3494-s124", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "ECN Validation Outcomes If validation fails, then the endpoint MUST disable ECN.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "12.5-p3495-s125", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "It stops setting the ECT codepoint in IP packets that it sends, assuming that either the network path or the peer does not support ECN. ¶ Even if validation fails, an endpoint MAY revalidate ECN for the same path at any later time in the connection.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "12.5-p3496-s126", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "An endpoint could continue to periodically attempt validation. ¶ Upon successful validation, an endpoint MAY continue to set an ECT codepoint in subsequent packets it sends, with the expectation that the path is ECN capable.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "12.5-p3497-s127", "section": "12.5", "anchor": "#name-frames-and-number-spaces", "para_id": "12.5-p746", "text": "Network routing and path elements can change mid-connection; an endpoint MUST disable ECN if validation later fails. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13-p3498-s1", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p747", "text": "A sender sends one or more frames in a QUIC packet; see Section 12.4 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13-p3499-s1", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p748", "text": "A sender can minimize per-packet bandwidth and computational costs by including as many frames as possible in each QUIC packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13-p3500-s2", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p748", "text": "A sender MAY wait for a short period of time to collect multiple frames before sending a packet that is not maximally packed, to avoid sending out large numbers of small packets.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13-p3501-s3", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p748", "text": "An implementation MAY use knowledge about application sending behavior or heuristics to determine whether and for how long to wait.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "13-p3502-s4", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p748", "text": "This waiting period is an implementation decision, and an implementation should be careful to delay conservatively, since any delay is likely to increase application-visible latency. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13-p3503-s1", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p749", "text": "Stream multiplexing is achieved by interleaving STREAM frames from multiple streams into one or more QUIC packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13-p3504-s2", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p749", "text": "A single QUIC packet can include multiple STREAM frames from one or more streams. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13-p3505-s1", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p750", "text": "One of the benefits of QUIC is avoidance of head-of-line blocking across multiple streams.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13-p3506-s2", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p750", "text": "When a packet loss occurs, only streams with data in that packet are blocked waiting for a retransmission to be received, while other streams can continue making progress.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13-p3507-s3", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p750", "text": "Note that when data from multiple streams is included in a single QUIC packet, loss of that packet blocks all those streams from making progress.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13-p3508-s4", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p750", "text": "Implementations are advised to include as few streams as necessary in outgoing packets without losing transmission efficiency to underfilled packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13-p3509-s1", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p751", "text": "13.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13-p3510-s2", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p751", "text": "Packet Processing A packet MUST NOT be acknowledged until packet protection has been successfully removed and all frames contained in the packet have been processed.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13-p3511-s3", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p751", "text": "For STREAM frames, this means the data has been enqueued in preparation to be received by the application protocol, but it does not require that data be delivered and consumed. ¶ Once the packet has been fully processed, a receiver acknowledges receipt by sending one or more ACK frames containing the packet number of the received packet. ¶ An endpoint SHOULD treat receipt of an acknowledgment for a packet it did not send as a connection error of type PROTOCOL_VIOLATION, if it is able to detect the condition.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "13-p3512-s4", "section": "13", "anchor": "#name-packetization-and-reliabili", "para_id": "13-p751", "text": "For further discussion of how this might be achieved, see Section 21.4 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.1-p3513-s1", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p752", "text": "A packet MUST NOT be acknowledged until packet protection has been successfully removed and all frames contained in the packet have been processed.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3514-s2", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p752", "text": "For STREAM frames, this means the data has been enqueued in preparation to be received by the application protocol, but it does not require that data be delivered and consumed. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3515-s1", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p753", "text": "Once the packet has been fully processed, a receiver acknowledges receipt by sending one or more ACK frames containing the packet number of the received packet. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3516-s1", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p754", "text": "An endpoint SHOULD treat receipt of an acknowledgment for a packet it did not send as a connection error of type PROTOCOL_VIOLATION, if it is able to detect the condition.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.1-p3517-s2", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p754", "text": "For further discussion of how this might be achieved, see Section 21.4 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.1-p3518-s1", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "13.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.1-p3519-s2", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Generating Acknowledgments Endpoints acknowledge all packets they receive and process.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.1-p3520-s3", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "However, only ack-eliciting packets cause an ACK frame to be sent within the maximum ack delay.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3521-s4", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Packets that are not ack-eliciting are only acknowledged when an ACK frame is sent for other reasons. ¶ When sending a packet for any reason, an endpoint SHOULD attempt to include an ACK frame if one has not been sent recently.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3522-s5", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Doing so helps with timely loss detection at the peer. ¶ In general, frequent feedback from a receiver improves loss and congestion response, but this has to be balanced against excessive load generated by a receiver that sends an ACK frame in response to every ack-eliciting packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer", "receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3523-s6", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "The guidance offered below seeks to strike this balance. ¶ 13.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.1-p3524-s7", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Sending ACK Frames Every packet SHOULD be acknowledged at least once, and ack-eliciting packets MUST be acknowledged at least once within the maximum delay an endpoint communicated using the max_ack_delay transport parameter; see Section 18.2 . max_ack_delay declares an explicit contract: an endpoint promises to never intentionally delay acknowledgments of an ack-eliciting packet by more than the indicated value.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3525-s8", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "If it does, any excess accrues to the RTT estimate and could result in spurious or delayed retransmissions from the peer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.1-p3526-s9", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "A sender uses the receiver's max_ack_delay value in determining timeouts for timer-based retransmission, as detailed in Section 6.2 of [ QUIC-RECOVERY ] . ¶ An endpoint MUST acknowledge all ack-eliciting Initial and Handshake packets immediately and all ack-eliciting 0-RTT and 1-RTT packets within its advertised max_ack_delay, with the following exception.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver", "sender"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.1-p3527-s10", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Prior to handshake confirmation, an endpoint might not have packet protection keys for decrypting Handshake, 0-RTT, or 1-RTT packets when they are received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.1-p3528-s11", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "It might therefore buffer them and acknowledge them when the requisite keys become available. ¶ Since packets containing only ACK frames are not congestion controlled, an endpoint MUST NOT send more than one such packet in response to receiving an ack-eliciting packet. ¶ An endpoint MUST NOT send a non-ack-eliciting packet in response to a non-ack-eliciting packet, even if there are packet gaps that precede the received packet.", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3529-s12", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "This avoids an infinite feedback loop of acknowledgments, which could prevent the connection from ever becoming idle.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.1-p3530-s13", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Non-ack-eliciting packets are eventually acknowledged when the endpoint sends an ACK frame in response to other events. ¶ An endpoint that is only sending ACK frames will not receive acknowledgments from its peer unless those acknowledgments are included in packets with ack-eliciting frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3531-s14", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "An endpoint SHOULD send an ACK frame with other frames when there are new ack-eliciting packets to acknowledge.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3532-s15", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "When only non-ack-eliciting packets need to be acknowledged, an endpoint MAY choose not to send an ACK frame with outgoing frames until an ack-eliciting packet has been received. ¶ An endpoint that is only sending non-ack-eliciting packets might choose to occasionally add an ack-eliciting frame to those packets to ensure that it receives an acknowledgment; see Section 13.2.4 .", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3533-s16", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "In that case, an endpoint MUST NOT send an ack-eliciting frame in all packets that would otherwise be non-ack-eliciting, to avoid an infinite feedback loop of acknowledgments. ¶ In order to assist loss detection at the sender, an endpoint SHOULD generate and send an ACK frame without delay when it receives an ack-eliciting packet either: ¶ when the received packet has a packet number less than another ack-eliciting packet that has been received, or ¶ when the packet has a packet number larger than the highest-numbered ack-eliciting packet that has been received and there are missing packets between that packet and this packet. ¶ Similarly, packets marked with the ECN Congestion Experienced (CE) codepoint in the IP header SHOULD be acknowledged immediately, to reduce the peer's response time to congestion events. ¶ The algorithms in [ QUIC-RECOVERY ] are expected to be resilient to receivers that do not follow the guidance offered above.", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "SHOULD", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "receiver", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3534-s17", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "However, an implementation should only deviate from these requirements after careful consideration of the performance implications of a change, for connections made by the endpoint and for other users of the network. ¶ 13.2.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.1-p3535-s18", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Acknowledgment Frequency A receiver determines how frequently to send acknowledgments in response to ack-eliciting packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.1-p3536-s19", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "This determination involves a trade-off. ¶ Endpoints rely on timely acknowledgment to detect loss; see Section 6 of [ QUIC-RECOVERY ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.1-p3537-s20", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Window-based congestion controllers, such as the one described in Section 7 of [ QUIC-RECOVERY ] , rely on acknowledgments to manage their congestion window.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.1-p3538-s21", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "In both cases, delaying acknowledgments can adversely affect performance. ¶ On the other hand, reducing the frequency of packets that carry only acknowledgments reduces packet transmission and processing cost at both endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.1-p3539-s22", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "It can improve connection throughput on severely asymmetric links and reduce the volume of acknowledgment traffic using return path capacity; see Section 3 of [ RFC3449 ] . ¶ A receiver SHOULD send an ACK frame after receiving at least two ack-eliciting packets.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3540-s23", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "This recommendation is general in nature and consistent with recommendations for TCP endpoint behavior [ RFC5681 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.1-p3541-s24", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Knowledge of network conditions, knowledge of the peer's congestion controller, or further research and experimentation might suggest alternative acknowledgment strategies with better performance characteristics. ¶ A receiver MAY process multiple available packets before determining whether to send an ACK frame in response. ¶ 13.2.3.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["peer", "receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3542-s25", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Managing ACK Ranges When an ACK frame is sent, one or more ranges of acknowledged packets are included.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3543-s26", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Including acknowledgments for older packets reduces the chance of spurious retransmissions caused by losing previously sent ACK frames, at the cost of larger ACK frames. ¶ ACK frames SHOULD always acknowledge the most recently received packets, and the more out of order the packets are, the more important it is to send an updated ACK frame quickly, to prevent the peer from declaring a packet as lost and spuriously retransmitting the frames it contains.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3544-s27", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "An ACK frame is expected to fit within a single QUIC packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3545-s28", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "If it does not, then older ranges (those with the smallest packet numbers) are omitted. ¶ A receiver limits the number of ACK Ranges ( Section 19.3.1 ) it remembers and sends in ACK frames, both to limit the size of ACK frames and to avoid resource exhaustion.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3546-s29", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "After receiving acknowledgments for an ACK frame, the receiver SHOULD stop tracking those acknowledged ACK Ranges.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3547-s30", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Senders can expect acknowledgments for most packets, but QUIC does not guarantee receipt of an acknowledgment for every packet that the receiver processes. ¶ It is possible that retaining many ACK Ranges could cause an ACK frame to become too large.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3548-s31", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "A receiver can discard unacknowledged ACK Ranges to limit ACK frame size, at the cost of increased retransmissions from the sender.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3549-s32", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "This is necessary if an ACK frame would be too large to fit in a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3550-s33", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Receivers MAY also limit ACK frame size further to preserve space for other frames or to limit the capacity that acknowledgments consume. ¶ A receiver MUST retain an ACK Range unless it can ensure that it will not subsequently accept packets with numbers in that range.", "facet": "frames", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3551-s34", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Maintaining a minimum packet number that increases as ranges are discarded is one way to achieve this with minimal state. ¶ Receivers can discard all ACK Ranges, but they MUST retain the largest packet number that has been successfully processed, as that is used to recover packet numbers from subsequent packets; see Section 17.1 . ¶ A receiver SHOULD include an ACK Range containing the largest received packet number in every ACK frame.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3552-s35", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "The Largest Acknowledged field is used in ECN validation at a sender, and including a lower value than what was included in a previous ACK frame could cause ECN to be unnecessarily disabled; see Section 13.4.2 . ¶ Section 13.2.4 describes an exemplary approach for determining what packets to acknowledge in each ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3553-s36", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Though the goal of this algorithm is to generate an acknowledgment for every packet that is processed, it is still possible for acknowledgments to be lost. ¶ 13.2.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.1-p3554-s37", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Limiting Ranges by Tracking ACK Frames When a packet containing an ACK frame is sent, the Largest Acknowledged field in that frame can be saved.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3555-s38", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "When a packet containing an ACK frame is acknowledged, the receiver can stop acknowledging packets less than or equal to the Largest Acknowledged field in the sent ACK frame. ¶ A receiver that sends only non-ack-eliciting packets, such as ACK frames, might not receive an acknowledgment for a long period of time.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3556-s39", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "This could cause the receiver to maintain state for a large number of ACK frames for a long period of time, and ACK frames it sends could be unnecessarily large.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3557-s40", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "In such a case, a receiver could send a PING or other small ack-eliciting frame occasionally, such as once per round trip, to elicit an ACK from the peer. ¶ In cases without ACK frame loss, this algorithm allows for a minimum of 1 RTT of reordering.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer", "receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3558-s41", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "In cases with ACK frame loss and reordering, this approach does not guarantee that every acknowledgment is seen by the sender before it is no longer included in the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3559-s42", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Packets could be received out of order, and all subsequent ACK frames containing them could be lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3560-s43", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "In this case, the loss recovery algorithm could cause spurious retransmissions, but the sender will continue making forward progress. ¶ 13.2.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.1-p3561-s44", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Measuring and Reporting Host Delay An endpoint measures the delays intentionally introduced between the time the packet with the largest packet number is received and the time an acknowledgment is sent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.1-p3562-s45", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "The endpoint encodes this acknowledgment delay in the ACK Delay field of an ACK frame; see Section 19.3 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3563-s46", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "This allows the receiver of the ACK frame to adjust for any intentional delays, which is important for getting a better estimate of the path RTT when acknowledgments are delayed. ¶ A packet might be held in the OS kernel or elsewhere on the host before being processed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3564-s47", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "An endpoint MUST NOT include delays that it does not control when populating the ACK Delay field in an ACK frame.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3565-s48", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "However, endpoints SHOULD include buffering delays caused by unavailability of decryption keys, since these delays can be large and are likely to be non-repeating. ¶ When the measured acknowledgment delay is larger than its max_ack_delay, an endpoint SHOULD report the measured delay.", "facet": "other", "normative": true, "modalities": ["SHOULD", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.1-p3566-s49", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "This information is especially useful during the handshake when delays might be large; see Section 13.2.1 . ¶ 13.2.6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.1-p3567-s50", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "ACK Frames and Packet Protection ACK frames MUST only be carried in a packet that has the same packet number space as the packet being acknowledged; see Section 12.1 .", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.1-p3568-s51", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "For instance, packets that are protected with 1-RTT keys MUST be acknowledged in packets that are also protected with 1-RTT keys. ¶ Packets that a client sends with 0-RTT packet protection MUST be acknowledged by the server in packets protected by 1-RTT keys.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.1-p3569-s52", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "This can mean that the client is unable to use these acknowledgments if the server cryptographic handshake messages are delayed or lost.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.1-p3570-s53", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Note that the same limitation applies to other data sent by the server protected by the 1-RTT keys. ¶ 13.2.7.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.1-p3571-s54", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "PADDING Frames Consume Congestion Window Packets containing PADDING frames are considered to be in flight for congestion control purposes [ QUIC-RECOVERY ] .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.1-p3572-s55", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "Packets containing only PADDING frames therefore consume congestion window but do not generate acknowledgments that will open the congestion window.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.1-p3573-s56", "section": "13.1", "anchor": "#name-packet-processing", "para_id": "13.1-p755", "text": "To avoid a deadlock, a sender SHOULD ensure that other frames are sent periodically in addition to PADDING frames to elicit acknowledgments from the receiver. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2-p3574-s1", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p756", "text": "Endpoints acknowledge all packets they receive and process.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2-p3575-s2", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p756", "text": "However, only ack-eliciting packets cause an ACK frame to be sent within the maximum ack delay.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2-p3576-s3", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p756", "text": "Packets that are not ack-eliciting are only acknowledged when an ACK frame is sent for other reasons. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2-p3577-s1", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p757", "text": "When sending a packet for any reason, an endpoint SHOULD attempt to include an ACK frame if one has not been sent recently.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2-p3578-s2", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p757", "text": "Doing so helps with timely loss detection at the peer. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2-p3579-s1", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p758", "text": "In general, frequent feedback from a receiver improves loss and congestion response, but this has to be balanced against excessive load generated by a receiver that sends an ACK frame in response to every ack-eliciting packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2-p3580-s2", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p758", "text": "The guidance offered below seeks to strike this balance. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2-p3581-s1", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p759", "text": "13.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2-p3582-s2", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p759", "text": "Sending ACK Frames Every packet SHOULD be acknowledged at least once, and ack-eliciting packets MUST be acknowledged at least once within the maximum delay an endpoint communicated using the max_ack_delay transport parameter; see Section 18.2 . max_ack_delay declares an explicit contract: an endpoint promises to never intentionally delay acknowledgments of an ack-eliciting packet by more than the indicated value.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2-p3583-s3", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p759", "text": "If it does, any excess accrues to the RTT estimate and could result in spurious or delayed retransmissions from the peer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2-p3584-s4", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p759", "text": "A sender uses the receiver's max_ack_delay value in determining timeouts for timer-based retransmission, as detailed in Section 6.2 of [ QUIC-RECOVERY ] . ¶ An endpoint MUST acknowledge all ack-eliciting Initial and Handshake packets immediately and all ack-eliciting 0-RTT and 1-RTT packets within its advertised max_ack_delay, with the following exception.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver", "sender"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.2-p3585-s5", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p759", "text": "Prior to handshake confirmation, an endpoint might not have packet protection keys for decrypting Handshake, 0-RTT, or 1-RTT packets when they are received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2-p3586-s6", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p759", "text": "It might therefore buffer them and acknowledge them when the requisite keys become available. ¶ Since packets containing only ACK frames are not congestion controlled, an endpoint MUST NOT send more than one such packet in response to receiving an ack-eliciting packet. ¶ An endpoint MUST NOT send a non-ack-eliciting packet in response to a non-ack-eliciting packet, even if there are packet gaps that precede the received packet.", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2-p3587-s7", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p759", "text": "This avoids an infinite feedback loop of acknowledgments, which could prevent the connection from ever becoming idle.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2-p3588-s8", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p759", "text": "Non-ack-eliciting packets are eventually acknowledged when the endpoint sends an ACK frame in response to other events. ¶ An endpoint that is only sending ACK frames will not receive acknowledgments from its peer unless those acknowledgments are included in packets with ack-eliciting frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2-p3589-s9", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p759", "text": "An endpoint SHOULD send an ACK frame with other frames when there are new ack-eliciting packets to acknowledge.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2-p3590-s10", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p759", "text": "When only non-ack-eliciting packets need to be acknowledged, an endpoint MAY choose not to send an ACK frame with outgoing frames until an ack-eliciting packet has been received. ¶ An endpoint that is only sending non-ack-eliciting packets might choose to occasionally add an ack-eliciting frame to those packets to ensure that it receives an acknowledgment; see Section 13.2.4 .", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2-p3591-s11", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p759", "text": "In that case, an endpoint MUST NOT send an ack-eliciting frame in all packets that would otherwise be non-ack-eliciting, to avoid an infinite feedback loop of acknowledgments. ¶ In order to assist loss detection at the sender, an endpoint SHOULD generate and send an ACK frame without delay when it receives an ack-eliciting packet either: ¶ when the received packet has a packet number less than another ack-eliciting packet that has been received, or ¶ when the packet has a packet number larger than the highest-numbered ack-eliciting packet that has been received and there are missing packets between that packet and this packet. ¶ Similarly, packets marked with the ECN Congestion Experienced (CE) codepoint in the IP header SHOULD be acknowledged immediately, to reduce the peer's response time to congestion events. ¶ The algorithms in [ QUIC-RECOVERY ] are expected to be resilient to receivers that do not follow the guidance offered above.", "facet": "frames", "normative": true, "modalities": ["MUST NOT", "SHOULD", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer", "receiver", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2-p3592-s12", "section": "13.2", "anchor": "#name-generating-acknowledgments", "para_id": "13.2-p759", "text": "However, an implementation should only deviate from these requirements after careful consideration of the performance implications of a change, for connections made by the endpoint and for other users of the network. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.1-p3593-s1", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p760", "text": "Every packet SHOULD be acknowledged at least once, and ack-eliciting packets MUST be acknowledged at least once within the maximum delay an endpoint communicated using the max_ack_delay transport parameter; see Section 18.2 . max_ack_delay declares an explicit contract: an endpoint promises to never intentionally delay acknowledgments of an ack-eliciting packet by more than the indicated value.", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.2.1-p3594-s2", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p760", "text": "If it does, any excess accrues to the RTT estimate and could result in spurious or delayed retransmissions from the peer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.1-p3595-s3", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p760", "text": "A sender uses the receiver's max_ack_delay value in determining timeouts for timer-based retransmission, as detailed in Section 6.2 of [ QUIC-RECOVERY ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.1-p3596-s1", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p761", "text": "An endpoint MUST acknowledge all ack-eliciting Initial and Handshake packets immediately and all ack-eliciting 0-RTT and 1-RTT packets within its advertised max_ack_delay, with the following exception.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.2.1-p3597-s2", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p761", "text": "Prior to handshake confirmation, an endpoint might not have packet protection keys for decrypting Handshake, 0-RTT, or 1-RTT packets when they are received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.1-p3598-s3", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p761", "text": "It might therefore buffer them and acknowledge them when the requisite keys become available. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.1-p3599-s1", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p762", "text": "Since packets containing only ACK frames are not congestion controlled, an endpoint MUST NOT send more than one such packet in response to receiving an ack-eliciting packet. ¶", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.1-p3600-s1", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p763", "text": "An endpoint MUST NOT send a non-ack-eliciting packet in response to a non-ack-eliciting packet, even if there are packet gaps that precede the received packet.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.2.1-p3601-s2", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p763", "text": "This avoids an infinite feedback loop of acknowledgments, which could prevent the connection from ever becoming idle.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.1-p3602-s3", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p763", "text": "Non-ack-eliciting packets are eventually acknowledged when the endpoint sends an ACK frame in response to other events. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.1-p3603-s1", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p764", "text": "An endpoint that is only sending ACK frames will not receive acknowledgments from its peer unless those acknowledgments are included in packets with ack-eliciting frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.1-p3604-s2", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p764", "text": "An endpoint SHOULD send an ACK frame with other frames when there are new ack-eliciting packets to acknowledge.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.1-p3605-s3", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p764", "text": "When only non-ack-eliciting packets need to be acknowledged, an endpoint MAY choose not to send an ACK frame with outgoing frames until an ack-eliciting packet has been received. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.1-p3606-s1", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p765", "text": "An endpoint that is only sending non-ack-eliciting packets might choose to occasionally add an ack-eliciting frame to those packets to ensure that it receives an acknowledgment; see Section 13.2.4 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.1-p3607-s2", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p765", "text": "In that case, an endpoint MUST NOT send an ack-eliciting frame in all packets that would otherwise be non-ack-eliciting, to avoid an infinite feedback loop of acknowledgments. ¶", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.1-p3608-s1", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p766", "text": "In order to assist loss detection at the sender, an endpoint SHOULD generate and send an ACK frame without delay when it receives an ack-eliciting packet either: ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.1-p3609-s1", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p767", "text": "when the received packet has a packet number less than another ack-eliciting packet that has been received, or ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.1-p3610-s1", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p768", "text": "when the packet has a packet number larger than the highest-numbered ack-eliciting packet that has been received and there are missing packets between that packet and this packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.1-p3611-s1", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p769", "text": "Similarly, packets marked with the ECN Congestion Experienced (CE) codepoint in the IP header SHOULD be acknowledged immediately, to reduce the peer's response time to congestion events. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.2.1-p3612-s1", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p770", "text": "The algorithms in [ QUIC-RECOVERY ] are expected to be resilient to receivers that do not follow the guidance offered above.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.1-p3613-s2", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p770", "text": "However, an implementation should only deviate from these requirements after careful consideration of the performance implications of a change, for connections made by the endpoint and for other users of the network. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.1-p3614-s1", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p771", "text": "13.2.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.1-p3615-s2", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p771", "text": "Acknowledgment Frequency A receiver determines how frequently to send acknowledgments in response to ack-eliciting packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.1-p3616-s3", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p771", "text": "This determination involves a trade-off. ¶ Endpoints rely on timely acknowledgment to detect loss; see Section 6 of [ QUIC-RECOVERY ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.1-p3617-s4", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p771", "text": "Window-based congestion controllers, such as the one described in Section 7 of [ QUIC-RECOVERY ] , rely on acknowledgments to manage their congestion window.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.1-p3618-s5", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p771", "text": "In both cases, delaying acknowledgments can adversely affect performance. ¶ On the other hand, reducing the frequency of packets that carry only acknowledgments reduces packet transmission and processing cost at both endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.1-p3619-s6", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p771", "text": "It can improve connection throughput on severely asymmetric links and reduce the volume of acknowledgment traffic using return path capacity; see Section 3 of [ RFC3449 ] . ¶ A receiver SHOULD send an ACK frame after receiving at least two ack-eliciting packets.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.1-p3620-s7", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p771", "text": "This recommendation is general in nature and consistent with recommendations for TCP endpoint behavior [ RFC5681 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.1-p3621-s8", "section": "13.2.1", "anchor": "#name-sending-ack-frames", "para_id": "13.2.1-p771", "text": "Knowledge of network conditions, knowledge of the peer's congestion controller, or further research and experimentation might suggest alternative acknowledgment strategies with better performance characteristics. ¶ A receiver MAY process multiple available packets before determining whether to send an ACK frame in response. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["peer", "receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.2-p3622-s1", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p772", "text": "A receiver determines how frequently to send acknowledgments in response to ack-eliciting packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.2-p3623-s2", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p772", "text": "This determination involves a trade-off. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.2-p3624-s1", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p773", "text": "Endpoints rely on timely acknowledgment to detect loss; see Section 6 of [ QUIC-RECOVERY ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.2-p3625-s2", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p773", "text": "Window-based congestion controllers, such as the one described in Section 7 of [ QUIC-RECOVERY ] , rely on acknowledgments to manage their congestion window.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.2-p3626-s3", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p773", "text": "In both cases, delaying acknowledgments can adversely affect performance. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.2-p3627-s1", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p774", "text": "On the other hand, reducing the frequency of packets that carry only acknowledgments reduces packet transmission and processing cost at both endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.2-p3628-s2", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p774", "text": "It can improve connection throughput on severely asymmetric links and reduce the volume of acknowledgment traffic using return path capacity; see Section 3 of [ RFC3449 ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.2-p3629-s1", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p775", "text": "A receiver SHOULD send an ACK frame after receiving at least two ack-eliciting packets.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.2-p3630-s2", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p775", "text": "This recommendation is general in nature and consistent with recommendations for TCP endpoint behavior [ RFC5681 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.2-p3631-s3", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p775", "text": "Knowledge of network conditions, knowledge of the peer's congestion controller, or further research and experimentation might suggest alternative acknowledgment strategies with better performance characteristics. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.2-p3632-s1", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p776", "text": "A receiver MAY process multiple available packets before determining whether to send an ACK frame in response. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.2-p3633-s1", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p777", "text": "13.2.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.2-p3634-s2", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p777", "text": "Managing ACK Ranges When an ACK frame is sent, one or more ranges of acknowledged packets are included.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.2-p3635-s3", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p777", "text": "Including acknowledgments for older packets reduces the chance of spurious retransmissions caused by losing previously sent ACK frames, at the cost of larger ACK frames. ¶ ACK frames SHOULD always acknowledge the most recently received packets, and the more out of order the packets are, the more important it is to send an updated ACK frame quickly, to prevent the peer from declaring a packet as lost and spuriously retransmitting the frames it contains.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.2-p3636-s4", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p777", "text": "An ACK frame is expected to fit within a single QUIC packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.2-p3637-s5", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p777", "text": "If it does not, then older ranges (those with the smallest packet numbers) are omitted. ¶ A receiver limits the number of ACK Ranges ( Section 19.3.1 ) it remembers and sends in ACK frames, both to limit the size of ACK frames and to avoid resource exhaustion.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.2-p3638-s6", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p777", "text": "After receiving acknowledgments for an ACK frame, the receiver SHOULD stop tracking those acknowledged ACK Ranges.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.2-p3639-s7", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p777", "text": "Senders can expect acknowledgments for most packets, but QUIC does not guarantee receipt of an acknowledgment for every packet that the receiver processes. ¶ It is possible that retaining many ACK Ranges could cause an ACK frame to become too large.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.2-p3640-s8", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p777", "text": "A receiver can discard unacknowledged ACK Ranges to limit ACK frame size, at the cost of increased retransmissions from the sender.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.2-p3641-s9", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p777", "text": "This is necessary if an ACK frame would be too large to fit in a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.2-p3642-s10", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p777", "text": "Receivers MAY also limit ACK frame size further to preserve space for other frames or to limit the capacity that acknowledgments consume. ¶ A receiver MUST retain an ACK Range unless it can ensure that it will not subsequently accept packets with numbers in that range.", "facet": "frames", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.2-p3643-s11", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p777", "text": "Maintaining a minimum packet number that increases as ranges are discarded is one way to achieve this with minimal state. ¶ Receivers can discard all ACK Ranges, but they MUST retain the largest packet number that has been successfully processed, as that is used to recover packet numbers from subsequent packets; see Section 17.1 . ¶ A receiver SHOULD include an ACK Range containing the largest received packet number in every ACK frame.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.2-p3644-s12", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p777", "text": "The Largest Acknowledged field is used in ECN validation at a sender, and including a lower value than what was included in a previous ACK frame could cause ECN to be unnecessarily disabled; see Section 13.4.2 . ¶ Section 13.2.4 describes an exemplary approach for determining what packets to acknowledge in each ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.2-p3645-s13", "section": "13.2.2", "anchor": "#name-acknowledgment-frequency", "para_id": "13.2.2-p777", "text": "Though the goal of this algorithm is to generate an acknowledgment for every packet that is processed, it is still possible for acknowledgments to be lost. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.3-p3646-s1", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p778", "text": "When an ACK frame is sent, one or more ranges of acknowledged packets are included.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3647-s2", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p778", "text": "Including acknowledgments for older packets reduces the chance of spurious retransmissions caused by losing previously sent ACK frames, at the cost of larger ACK frames. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3648-s1", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p779", "text": "ACK frames SHOULD always acknowledge the most recently received packets, and the more out of order the packets are, the more important it is to send an updated ACK frame quickly, to prevent the peer from declaring a packet as lost and spuriously retransmitting the frames it contains.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.3-p3649-s2", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p779", "text": "An ACK frame is expected to fit within a single QUIC packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3650-s3", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p779", "text": "If it does not, then older ranges (those with the smallest packet numbers) are omitted. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.3-p3651-s1", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p780", "text": "A receiver limits the number of ACK Ranges ( Section 19.3.1 ) it remembers and sends in ACK frames, both to limit the size of ACK frames and to avoid resource exhaustion.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3652-s2", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p780", "text": "After receiving acknowledgments for an ACK frame, the receiver SHOULD stop tracking those acknowledged ACK Ranges.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.3-p3653-s3", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p780", "text": "Senders can expect acknowledgments for most packets, but QUIC does not guarantee receipt of an acknowledgment for every packet that the receiver processes. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.3-p3654-s1", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p781", "text": "It is possible that retaining many ACK Ranges could cause an ACK frame to become too large.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3655-s2", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p781", "text": "A receiver can discard unacknowledged ACK Ranges to limit ACK frame size, at the cost of increased retransmissions from the sender.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3656-s3", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p781", "text": "This is necessary if an ACK frame would be too large to fit in a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3657-s4", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p781", "text": "Receivers MAY also limit ACK frame size further to preserve space for other frames or to limit the capacity that acknowledgments consume. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.3-p3658-s1", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p782", "text": "A receiver MUST retain an ACK Range unless it can ensure that it will not subsequently accept packets with numbers in that range.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.2.3-p3659-s2", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p782", "text": "Maintaining a minimum packet number that increases as ranges are discarded is one way to achieve this with minimal state. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.2.3-p3660-s1", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p783", "text": "Receivers can discard all ACK Ranges, but they MUST retain the largest packet number that has been successfully processed, as that is used to recover packet numbers from subsequent packets; see Section 17.1 . ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.2.3-p3661-s1", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p784", "text": "A receiver SHOULD include an ACK Range containing the largest received packet number in every ACK frame.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.3-p3662-s2", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p784", "text": "The Largest Acknowledged field is used in ECN validation at a sender, and including a lower value than what was included in a previous ACK frame could cause ECN to be unnecessarily disabled; see Section 13.4.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3663-s1", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p785", "text": "Section 13.2.4 describes an exemplary approach for determining what packets to acknowledge in each ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3664-s2", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p785", "text": "Though the goal of this algorithm is to generate an acknowledgment for every packet that is processed, it is still possible for acknowledgments to be lost. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.3-p3665-s1", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p786", "text": "13.2.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.3-p3666-s2", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p786", "text": "Limiting Ranges by Tracking ACK Frames When a packet containing an ACK frame is sent, the Largest Acknowledged field in that frame can be saved.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3667-s3", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p786", "text": "When a packet containing an ACK frame is acknowledged, the receiver can stop acknowledging packets less than or equal to the Largest Acknowledged field in the sent ACK frame. ¶ A receiver that sends only non-ack-eliciting packets, such as ACK frames, might not receive an acknowledgment for a long period of time.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3668-s4", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p786", "text": "This could cause the receiver to maintain state for a large number of ACK frames for a long period of time, and ACK frames it sends could be unnecessarily large.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3669-s5", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p786", "text": "In such a case, a receiver could send a PING or other small ack-eliciting frame occasionally, such as once per round trip, to elicit an ACK from the peer. ¶ In cases without ACK frame loss, this algorithm allows for a minimum of 1 RTT of reordering.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer", "receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3670-s6", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p786", "text": "In cases with ACK frame loss and reordering, this approach does not guarantee that every acknowledgment is seen by the sender before it is no longer included in the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3671-s7", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p786", "text": "Packets could be received out of order, and all subsequent ACK frames containing them could be lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.3-p3672-s8", "section": "13.2.3", "anchor": "#name-managing-ack-ranges", "para_id": "13.2.3-p786", "text": "In this case, the loss recovery algorithm could cause spurious retransmissions, but the sender will continue making forward progress. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.4-p3673-s1", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p787", "text": "When a packet containing an ACK frame is sent, the Largest Acknowledged field in that frame can be saved.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.4-p3674-s2", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p787", "text": "When a packet containing an ACK frame is acknowledged, the receiver can stop acknowledging packets less than or equal to the Largest Acknowledged field in the sent ACK frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.4-p3675-s1", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p788", "text": "A receiver that sends only non-ack-eliciting packets, such as ACK frames, might not receive an acknowledgment for a long period of time.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.4-p3676-s2", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p788", "text": "This could cause the receiver to maintain state for a large number of ACK frames for a long period of time, and ACK frames it sends could be unnecessarily large.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.4-p3677-s3", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p788", "text": "In such a case, a receiver could send a PING or other small ack-eliciting frame occasionally, such as once per round trip, to elicit an ACK from the peer. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer", "receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.4-p3678-s1", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p789", "text": "In cases without ACK frame loss, this algorithm allows for a minimum of 1 RTT of reordering.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.4-p3679-s2", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p789", "text": "In cases with ACK frame loss and reordering, this approach does not guarantee that every acknowledgment is seen by the sender before it is no longer included in the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.4-p3680-s3", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p789", "text": "Packets could be received out of order, and all subsequent ACK frames containing them could be lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.4-p3681-s4", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p789", "text": "In this case, the loss recovery algorithm could cause spurious retransmissions, but the sender will continue making forward progress. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.4-p3682-s1", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p790", "text": "13.2.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.4-p3683-s2", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p790", "text": "Measuring and Reporting Host Delay An endpoint measures the delays intentionally introduced between the time the packet with the largest packet number is received and the time an acknowledgment is sent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.4-p3684-s3", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p790", "text": "The endpoint encodes this acknowledgment delay in the ACK Delay field of an ACK frame; see Section 19.3 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.4-p3685-s4", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p790", "text": "This allows the receiver of the ACK frame to adjust for any intentional delays, which is important for getting a better estimate of the path RTT when acknowledgments are delayed. ¶ A packet might be held in the OS kernel or elsewhere on the host before being processed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.4-p3686-s5", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p790", "text": "An endpoint MUST NOT include delays that it does not control when populating the ACK Delay field in an ACK frame.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.4-p3687-s6", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p790", "text": "However, endpoints SHOULD include buffering delays caused by unavailability of decryption keys, since these delays can be large and are likely to be non-repeating. ¶ When the measured acknowledgment delay is larger than its max_ack_delay, an endpoint SHOULD report the measured delay.", "facet": "other", "normative": true, "modalities": ["SHOULD", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.2.4-p3688-s7", "section": "13.2.4", "anchor": "#name-limiting-ranges-by-tracking", "para_id": "13.2.4-p790", "text": "This information is especially useful during the handshake when delays might be large; see Section 13.2.1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.5-p3689-s1", "section": "13.2.5", "anchor": "#name-measuring-and-reporting-hos", "para_id": "13.2.5-p791", "text": "An endpoint measures the delays intentionally introduced between the time the packet with the largest packet number is received and the time an acknowledgment is sent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.5-p3690-s2", "section": "13.2.5", "anchor": "#name-measuring-and-reporting-hos", "para_id": "13.2.5-p791", "text": "The endpoint encodes this acknowledgment delay in the ACK Delay field of an ACK frame; see Section 19.3 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.5-p3691-s3", "section": "13.2.5", "anchor": "#name-measuring-and-reporting-hos", "para_id": "13.2.5-p791", "text": "This allows the receiver of the ACK frame to adjust for any intentional delays, which is important for getting a better estimate of the path RTT when acknowledgments are delayed. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.5-p3692-s1", "section": "13.2.5", "anchor": "#name-measuring-and-reporting-hos", "para_id": "13.2.5-p792", "text": "A packet might be held in the OS kernel or elsewhere on the host before being processed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.5-p3693-s2", "section": "13.2.5", "anchor": "#name-measuring-and-reporting-hos", "para_id": "13.2.5-p792", "text": "An endpoint MUST NOT include delays that it does not control when populating the ACK Delay field in an ACK frame.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.5-p3694-s3", "section": "13.2.5", "anchor": "#name-measuring-and-reporting-hos", "para_id": "13.2.5-p792", "text": "However, endpoints SHOULD include buffering delays caused by unavailability of decryption keys, since these delays can be large and are likely to be non-repeating. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "13.2.5-p3695-s1", "section": "13.2.5", "anchor": "#name-measuring-and-reporting-hos", "para_id": "13.2.5-p793", "text": "When the measured acknowledgment delay is larger than its max_ack_delay, an endpoint SHOULD report the measured delay.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.2.5-p3696-s2", "section": "13.2.5", "anchor": "#name-measuring-and-reporting-hos", "para_id": "13.2.5-p793", "text": "This information is especially useful during the handshake when delays might be large; see Section 13.2.1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.5-p3697-s1", "section": "13.2.5", "anchor": "#name-measuring-and-reporting-hos", "para_id": "13.2.5-p794", "text": "13.2.6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.5-p3698-s2", "section": "13.2.5", "anchor": "#name-measuring-and-reporting-hos", "para_id": "13.2.5-p794", "text": "ACK Frames and Packet Protection ACK frames MUST only be carried in a packet that has the same packet number space as the packet being acknowledged; see Section 12.1 .", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.5-p3699-s3", "section": "13.2.5", "anchor": "#name-measuring-and-reporting-hos", "para_id": "13.2.5-p794", "text": "For instance, packets that are protected with 1-RTT keys MUST be acknowledged in packets that are also protected with 1-RTT keys. ¶ Packets that a client sends with 0-RTT packet protection MUST be acknowledged by the server in packets protected by 1-RTT keys.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.2.5-p3700-s4", "section": "13.2.5", "anchor": "#name-measuring-and-reporting-hos", "para_id": "13.2.5-p794", "text": "This can mean that the client is unable to use these acknowledgments if the server cryptographic handshake messages are delayed or lost.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.5-p3701-s5", "section": "13.2.5", "anchor": "#name-measuring-and-reporting-hos", "para_id": "13.2.5-p794", "text": "Note that the same limitation applies to other data sent by the server protected by the 1-RTT keys. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.6-p3702-s1", "section": "13.2.6", "anchor": "#name-ack-frames-and-packet-prote", "para_id": "13.2.6-p795", "text": "ACK frames MUST only be carried in a packet that has the same packet number space as the packet being acknowledged; see Section 12.1 .", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.6-p3703-s2", "section": "13.2.6", "anchor": "#name-ack-frames-and-packet-prote", "para_id": "13.2.6-p795", "text": "For instance, packets that are protected with 1-RTT keys MUST be acknowledged in packets that are also protected with 1-RTT keys. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.2.6-p3704-s1", "section": "13.2.6", "anchor": "#name-ack-frames-and-packet-prote", "para_id": "13.2.6-p796", "text": "Packets that a client sends with 0-RTT packet protection MUST be acknowledged by the server in packets protected by 1-RTT keys.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.2.6-p3705-s2", "section": "13.2.6", "anchor": "#name-ack-frames-and-packet-prote", "para_id": "13.2.6-p796", "text": "This can mean that the client is unable to use these acknowledgments if the server cryptographic handshake messages are delayed or lost.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.6-p3706-s3", "section": "13.2.6", "anchor": "#name-ack-frames-and-packet-prote", "para_id": "13.2.6-p796", "text": "Note that the same limitation applies to other data sent by the server protected by the 1-RTT keys. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.6-p3707-s1", "section": "13.2.6", "anchor": "#name-ack-frames-and-packet-prote", "para_id": "13.2.6-p797", "text": "13.2.7.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.6-p3708-s2", "section": "13.2.6", "anchor": "#name-ack-frames-and-packet-prote", "para_id": "13.2.6-p797", "text": "PADDING Frames Consume Congestion Window Packets containing PADDING frames are considered to be in flight for congestion control purposes [ QUIC-RECOVERY ] .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.2.6-p3709-s3", "section": "13.2.6", "anchor": "#name-ack-frames-and-packet-prote", "para_id": "13.2.6-p797", "text": "Packets containing only PADDING frames therefore consume congestion window but do not generate acknowledgments that will open the congestion window.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.6-p3710-s4", "section": "13.2.6", "anchor": "#name-ack-frames-and-packet-prote", "para_id": "13.2.6-p797", "text": "To avoid a deadlock, a sender SHOULD ensure that other frames are sent periodically in addition to PADDING frames to elicit acknowledgments from the receiver. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.7-p3711-s1", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p798", "text": "Packets containing PADDING frames are considered to be in flight for congestion control purposes [ QUIC-RECOVERY ] .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.2.7-p3712-s2", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p798", "text": "Packets containing only PADDING frames therefore consume congestion window but do not generate acknowledgments that will open the congestion window.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.7-p3713-s3", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p798", "text": "To avoid a deadlock, a sender SHOULD ensure that other frames are sent periodically in addition to PADDING frames to elicit acknowledgments from the receiver. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.7-p3714-s1", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "13.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.7-p3715-s2", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "Retransmission of Information QUIC packets that are determined to be lost are not retransmitted whole.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.7-p3716-s3", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "The same applies to the frames that are contained within lost packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.2.7-p3717-s4", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "Instead, the information that might be carried in frames is sent again in new frames as needed. ¶ New frames and packets are used to carry information that is determined to have been lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.2.7-p3718-s5", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "In general, information is sent again when a packet containing that information is determined to be lost, and sending ceases when a packet containing that information is acknowledged. ¶ Data sent in CRYPTO frames is retransmitted according to the rules in [ QUIC-RECOVERY ] , until all data has been acknowledged.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.7-p3719-s6", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "Data in CRYPTO frames for Initial and Handshake packets is discarded when keys for the corresponding packet number space are discarded. ¶ Application data sent in STREAM frames is retransmitted in new STREAM frames unless the endpoint has sent a RESET_STREAM for that stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.7-p3720-s7", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "Once an endpoint sends a RESET_STREAM frame, no further STREAM frames are needed. ¶ ACK frames carry the most recent set of acknowledgments and the acknowledgment delay from the largest acknowledged packet, as described in Section 13.2.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.7-p3721-s8", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "Delaying the transmission of packets containing ACK frames or resending old ACK frames can cause the peer to generate an inflated RTT sample or unnecessarily disable ECN. ¶ Cancellation of stream transmission, as carried in a RESET_STREAM frame, is sent until acknowledged or until all stream data is acknowledged by the peer (that is, either the \"Reset Recvd\" or \"Data Recvd\" state is reached on the sending part of the stream).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Recvd", "Reset Recvd"], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "13.2.7-p3722-s9", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "The content of a RESET_STREAM frame MUST NOT change when it is sent again. ¶ Similarly, a request to cancel stream transmission, as encoded in a STOP_SENDING frame, is sent until the receiving part of the stream enters either a \"Data Recvd\" or \"Reset Recvd\" state; see Section 3.5 . ¶ Connection close signals, including packets that contain CONNECTION_CLOSE frames, are not sent again when packet loss is detected.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": ["Data Recvd", "Reset Recvd"], "roles": [], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "13.2.7-p3723-s10", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "Resending these signals is described in Section 10 . ¶ The current connection maximum data is sent in MAX_DATA frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13.2.7-p3724-s11", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "An updated value is sent in a MAX_DATA frame if the packet containing the most recently sent MAX_DATA frame is declared lost or when the endpoint decides to update the limit.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.7-p3725-s12", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "Care is necessary to avoid sending this frame too often, as the limit can increase frequently and cause an unnecessarily large number of MAX_DATA frames to be sent; see Section 4.2 . ¶ The current maximum stream data offset is sent in MAX_STREAM_DATA frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13.2.7-p3726-s13", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "Like MAX_DATA, an updated value is sent when the packet containing the most recent MAX_STREAM_DATA frame for a stream is lost or when the limit is updated, with care taken to prevent the frame from being sent too often.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.7-p3727-s14", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "An endpoint SHOULD stop sending MAX_STREAM_DATA frames when the receiving part of the stream enters a \"Size Known\" or \"Reset Recvd\" state. ¶ The limit on streams of a given type is sent in MAX_STREAMS frames.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["MAX_STREAMS", "MAX_STREAM_DATA"], "states": ["Reset Recvd", "Size Known"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "13.2.7-p3728-s15", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "Like MAX_DATA, an updated value is sent when a packet containing the most recent MAX_STREAMS for a stream type frame is declared lost or when the limit is updated, with care taken to prevent the frame from being sent too often. ¶ Blocked signals are carried in DATA_BLOCKED, STREAM_DATA_BLOCKED, and STREAMS_BLOCKED frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED", "MAX_DATA", "MAX_STREAMS", "STREAMS_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.7-p3729-s16", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "DATA_BLOCKED frames have connection scope, STREAM_DATA_BLOCKED frames have stream scope, and STREAMS_BLOCKED frames are scoped to a specific stream type.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED", "STREAMS_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13.2.7-p3730-s17", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "A new frame is sent if a packet containing the most recent frame for a scope is lost, but only while the endpoint is blocked on the corresponding limit.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.7-p3731-s18", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "These frames always include the limit that is causing blocking at the time that they are transmitted. ¶ A liveness or path validation check using PATH_CHALLENGE frames is sent periodically until a matching PATH_RESPONSE frame is received or until there is no remaining need for liveness or path validation checking.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.7-p3732-s19", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "PATH_CHALLENGE frames include a different payload each time they are sent. ¶ Responses to path validation using PATH_RESPONSE frames are sent just once.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.2.7-p3733-s20", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "The peer is expected to send more PATH_CHALLENGE frames as necessary to evoke additional PATH_RESPONSE frames. ¶ New connection IDs are sent in NEW_CONNECTION_ID frames and retransmitted if the packet containing them is lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.7-p3734-s21", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "Retransmissions of this frame carry the same sequence number value.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.2.7-p3735-s22", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "Likewise, retired connection IDs are sent in RETIRE_CONNECTION_ID frames and retransmitted if the packet containing them is lost. ¶ NEW_TOKEN frames are retransmitted if the packet containing them is lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.2.7-p3736-s23", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "No special support is made for detecting reordered and duplicated NEW_TOKEN frames other than a direct comparison of the frame contents. ¶ PING and PADDING frames contain no information, so lost PING or PADDING frames do not require repair. ¶ The HANDSHAKE_DONE frame MUST be retransmitted until it is acknowledged. ¶ Endpoints SHOULD prioritize retransmission of data over sending new data, unless priorities specified by the application indicate otherwise; see Section 2.3 . ¶ Even though a sender is encouraged to assemble frames containing up-to-date information every time it sends a packet, it is not forbidden to retransmit copies of frames from lost packets.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.2.7-p3737-s24", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "A sender that retransmits copies of frames needs to handle decreases in available payload size due to changes in packet number length, connection ID length, and path MTU.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.2.7-p3738-s25", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "A receiver MUST accept packets containing an outdated frame, such as a MAX_DATA frame carrying a smaller maximum data value than one found in an older packet. ¶ A sender SHOULD avoid retransmitting information from packets once they are acknowledged.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "13.2.7-p3739-s26", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "This includes packets that are acknowledged after being declared lost, which can happen in the presence of network reordering.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.2.7-p3740-s27", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "Doing so requires senders to retain information about packets after they are declared lost.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.2.7-p3741-s28", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "A sender can discard this information after a period of time elapses that adequately allows for reordering, such as a PTO ( Section 6.2 of [ QUIC-RECOVERY ] ), or based on other events, such as reaching a memory limit. ¶ Upon detecting losses, a sender MUST take appropriate congestion control action.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.2.7-p3742-s29", "section": "13.2.7", "anchor": "#name-padding-frames-consume-cong", "para_id": "13.2.7-p799", "text": "The details of loss detection and congestion control are described in [ QUIC-RECOVERY ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3743-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p800", "text": "QUIC packets that are determined to be lost are not retransmitted whole.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3744-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p800", "text": "The same applies to the frames that are contained within lost packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.3-p3745-s3", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p800", "text": "Instead, the information that might be carried in frames is sent again in new frames as needed. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.3-p3746-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p801", "text": "New frames and packets are used to carry information that is determined to have been lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.3-p3747-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p801", "text": "In general, information is sent again when a packet containing that information is determined to be lost, and sending ceases when a packet containing that information is acknowledged. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.3-p3748-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p802", "text": "Data sent in CRYPTO frames is retransmitted according to the rules in [ QUIC-RECOVERY ] , until all data has been acknowledged.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3749-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p802", "text": "Data in CRYPTO frames for Initial and Handshake packets is discarded when keys for the corresponding packet number space are discarded. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3750-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p803", "text": "Application data sent in STREAM frames is retransmitted in new STREAM frames unless the endpoint has sent a RESET_STREAM for that stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13.3-p3751-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p803", "text": "Once an endpoint sends a RESET_STREAM frame, no further STREAM frames are needed. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.3-p3752-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p804", "text": "ACK frames carry the most recent set of acknowledgments and the acknowledgment delay from the largest acknowledged packet, as described in Section 13.2.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3753-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p804", "text": "Delaying the transmission of packets containing ACK frames or resending old ACK frames can cause the peer to generate an inflated RTT sample or unnecessarily disable ECN. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3754-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p805", "text": "Cancellation of stream transmission, as carried in a RESET_STREAM frame, is sent until acknowledged or until all stream data is acknowledged by the peer (that is, either the \"Reset Recvd\" or \"Data Recvd\" state is reached on the sending part of the stream).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": ["Data Recvd", "Reset Recvd"], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "13.3-p3755-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p805", "text": "The content of a RESET_STREAM frame MUST NOT change when it is sent again. ¶", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "13.3-p3756-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p806", "text": "Similarly, a request to cancel stream transmission, as encoded in a STOP_SENDING frame, is sent until the receiving part of the stream enters either a \"Data Recvd\" or \"Reset Recvd\" state; see Section 3.5 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": ["Data Recvd", "Reset Recvd"], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "13.3-p3757-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p807", "text": "Connection close signals, including packets that contain CONNECTION_CLOSE frames, are not sent again when packet loss is detected.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3758-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p807", "text": "Resending these signals is described in Section 10 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3759-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p808", "text": "The current connection maximum data is sent in MAX_DATA frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13.3-p3760-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p808", "text": "An updated value is sent in a MAX_DATA frame if the packet containing the most recently sent MAX_DATA frame is declared lost or when the endpoint decides to update the limit.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.3-p3761-s3", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p808", "text": "Care is necessary to avoid sending this frame too often, as the limit can increase frequently and cause an unnecessarily large number of MAX_DATA frames to be sent; see Section 4.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13.3-p3762-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p809", "text": "The current maximum stream data offset is sent in MAX_STREAM_DATA frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13.3-p3763-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p809", "text": "Like MAX_DATA, an updated value is sent when the packet containing the most recent MAX_STREAM_DATA frame for a stream is lost or when the limit is updated, with care taken to prevent the frame from being sent too often.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA", "MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.3-p3764-s3", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p809", "text": "An endpoint SHOULD stop sending MAX_STREAM_DATA frames when the receiving part of the stream enters a \"Size Known\" or \"Reset Recvd\" state. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["MAX_STREAM_DATA"], "states": ["Reset Recvd", "Size Known"], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 8}
{"sent_id": "13.3-p3765-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p810", "text": "The limit on streams of a given type is sent in MAX_STREAMS frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13.3-p3766-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p810", "text": "Like MAX_DATA, an updated value is sent when a packet containing the most recent MAX_STREAMS for a stream type frame is declared lost or when the limit is updated, with care taken to prevent the frame from being sent too often. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA", "MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.3-p3767-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p811", "text": "Blocked signals are carried in DATA_BLOCKED, STREAM_DATA_BLOCKED, and STREAMS_BLOCKED frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED", "STREAMS_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13.3-p3768-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p811", "text": "DATA_BLOCKED frames have connection scope, STREAM_DATA_BLOCKED frames have stream scope, and STREAMS_BLOCKED frames are scoped to a specific stream type.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED", "STREAMS_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13.3-p3769-s3", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p811", "text": "A new frame is sent if a packet containing the most recent frame for a scope is lost, but only while the endpoint is blocked on the corresponding limit.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3770-s4", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p811", "text": "These frames always include the limit that is causing blocking at the time that they are transmitted. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.3-p3771-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p812", "text": "A liveness or path validation check using PATH_CHALLENGE frames is sent periodically until a matching PATH_RESPONSE frame is received or until there is no remaining need for liveness or path validation checking.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3772-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p812", "text": "PATH_CHALLENGE frames include a different payload each time they are sent. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.3-p3773-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p813", "text": "Responses to path validation using PATH_RESPONSE frames are sent just once.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.3-p3774-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p813", "text": "The peer is expected to send more PATH_CHALLENGE frames as necessary to evoke additional PATH_RESPONSE frames. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3775-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p814", "text": "New connection IDs are sent in NEW_CONNECTION_ID frames and retransmitted if the packet containing them is lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3776-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p814", "text": "Retransmissions of this frame carry the same sequence number value.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.3-p3777-s3", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p814", "text": "Likewise, retired connection IDs are sent in RETIRE_CONNECTION_ID frames and retransmitted if the packet containing them is lost. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3778-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p815", "text": "NEW_TOKEN frames are retransmitted if the packet containing them is lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3779-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p815", "text": "No special support is made for detecting reordered and duplicated NEW_TOKEN frames other than a direct comparison of the frame contents. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.3-p3780-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p816", "text": "PING and PADDING frames contain no information, so lost PING or PADDING frames do not require repair. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.3-p3781-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p817", "text": "The HANDSHAKE_DONE frame MUST be retransmitted until it is acknowledged. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.3-p3782-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p818", "text": "Endpoints SHOULD prioritize retransmission of data over sending new data, unless priorities specified by the application indicate otherwise; see Section 2.3 . ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "13.3-p3783-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p819", "text": "Even though a sender is encouraged to assemble frames containing up-to-date information every time it sends a packet, it is not forbidden to retransmit copies of frames from lost packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3784-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p819", "text": "A sender that retransmits copies of frames needs to handle decreases in available payload size due to changes in packet number length, connection ID length, and path MTU.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "13.3-p3785-s3", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p819", "text": "A receiver MUST accept packets containing an outdated frame, such as a MAX_DATA frame carrying a smaller maximum data value than one found in an older packet. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "13.3-p3786-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p820", "text": "A sender SHOULD avoid retransmitting information from packets once they are acknowledged.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.3-p3787-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p820", "text": "This includes packets that are acknowledged after being declared lost, which can happen in the presence of network reordering.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.3-p3788-s3", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p820", "text": "Doing so requires senders to retain information about packets after they are declared lost.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3789-s4", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p820", "text": "A sender can discard this information after a period of time elapses that adequately allows for reordering, such as a PTO ( Section 6.2 of [ QUIC-RECOVERY ] ), or based on other events, such as reaching a memory limit. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3790-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p821", "text": "Upon detecting losses, a sender MUST take appropriate congestion control action.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.3-p3791-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p821", "text": "The details of loss detection and congestion control are described in [ QUIC-RECOVERY ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3792-s1", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "13.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3793-s2", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "Explicit Congestion Notification QUIC endpoints can use ECN [ RFC3168 ] to detect and respond to network congestion.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3794-s3", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "ECN allows an endpoint to set an ECN-Capable Transport (ECT) codepoint in the ECN field of an IP packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3795-s4", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "A network node can then indicate congestion by setting the ECN-CE codepoint in the ECN field instead of dropping the packet [ RFC8087 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.3-p3796-s5", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "Endpoints react to reported congestion by reducing their sending rate in response, as described in [ QUIC-RECOVERY ] . ¶ To enable ECN, a sending QUIC endpoint first determines whether a path supports ECN marking and whether the peer reports the ECN values in received IP headers; see Section 13.4.2 . ¶ 13.4.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.3-p3797-s6", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "Reporting ECN Counts The use of ECN requires the receiving endpoint to read the ECN field from an IP packet, which is not possible on all platforms.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3798-s7", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "If an endpoint does not implement ECN support or does not have access to received ECN fields, it does not report ECN counts for packets it receives. ¶ Even if an endpoint does not set an ECT field in packets it sends, the endpoint MUST provide feedback about ECN markings it receives, if these are accessible.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.3-p3799-s8", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "Failing to report the ECN counts will cause the sender to disable the use of ECN for this connection. ¶ On receiving an IP packet with an ECT(0), ECT(1), or ECN-CE codepoint, an ECN-enabled endpoint accesses the ECN field and increases the corresponding ECT(0), ECT(1), or ECN-CE count.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3800-s9", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "These ECN counts are included in subsequent ACK frames; see Sections 13.2 and 19.3 . ¶ Each packet number space maintains separate acknowledgment state and separate ECN counts.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3801-s10", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "Coalesced QUIC packets (see Section 12.2 ) share the same IP header so the ECN counts are incremented once for each coalesced QUIC packet. ¶ For example, if one each of an Initial, Handshake, and 1-RTT QUIC packet are coalesced into a single UDP datagram, the ECN counts for all three packet number spaces will be incremented by one each, based on the ECN field of the single IP header. ¶ ECN counts are only incremented when QUIC packets from the received IP packet are processed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.3-p3802-s11", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "As such, duplicate QUIC packets are not processed and do not increase ECN counts; see Section 21.10 for relevant security concerns. ¶ 13.4.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3803-s12", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "ECN Validation It is possible for faulty network devices to corrupt or erroneously drop packets that carry a non-zero ECN codepoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3804-s13", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "To ensure connectivity in the presence of such devices, an endpoint validates the ECN counts for each network path and disables the use of ECN on that path if errors are detected. ¶ To perform ECN validation for a new path: ¶ The endpoint sets an ECT(0) codepoint in the IP header of early outgoing packets sent on a new path to the peer [ RFC8311 ] . ¶ The endpoint monitors whether all packets sent with an ECT codepoint are eventually deemed lost ( Section 6 of [ QUIC-RECOVERY ] ), indicating that ECN validation has failed. ¶ If an endpoint has cause to expect that IP packets with an ECT codepoint might be dropped by a faulty network element, the endpoint could set an ECT codepoint for only the first ten outgoing packets on a path, or for a period of three PTOs (see Section 6.2 of [ QUIC-RECOVERY ] ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.3-p3805-s14", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "If all packets marked with non-zero ECN codepoints are subsequently lost, it can disable marking on the assumption that the marking caused the loss. ¶ An endpoint thus attempts to use ECN and validates this for each new connection, when switching to a server's preferred address, and on active connection migration to a new path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.3-p3806-s15", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "Appendix A.4 describes one possible algorithm. ¶ Other methods of probing paths for ECN support are possible, as are different marking strategies.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3807-s16", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "Implementations MAY use other methods defined in RFCs; see [ RFC8311 ] .", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "13.3-p3808-s17", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "Implementations that use the ECT(1) codepoint need to perform ECN validation using the reported ECT(1) counts. ¶ 13.4.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.3-p3809-s18", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "Receiving ACK Frames with ECN Counts Erroneous application of ECN-CE markings by the network can result in degraded connection performance.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3810-s19", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "An endpoint that receives an ACK frame with ECN counts therefore validates the counts before using them.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3811-s20", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "It performs this validation by comparing newly received counts against those from the last successfully processed ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3812-s21", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "Any increase in the ECN counts is validated based on the ECN markings that were applied to packets that are newly acknowledged in the ACK frame. ¶ If an ACK frame newly acknowledges a packet that the endpoint sent with either the ECT(0) or ECT(1) codepoint set, ECN validation fails if the corresponding ECN counts are not present in the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3813-s22", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "This check detects a network element that zeroes the ECN field or a peer that does not report ECN markings. ¶ ECN validation also fails if the sum of the increase in ECT(0) and ECN-CE counts is less than the number of newly acknowledged packets that were originally sent with an ECT(0) marking.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.3-p3814-s23", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "Similarly, ECN validation fails if the sum of the increases to ECT(1) and ECN-CE counts is less than the number of newly acknowledged packets sent with an ECT(1) marking.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.3-p3815-s24", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "These checks can detect remarking of ECN-CE markings by the network. ¶ An endpoint could miss acknowledgments for a packet when ACK frames are lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3816-s25", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "It is therefore possible for the total increase in ECT(0), ECT(1), and ECN-CE counts to be greater than the number of packets that are newly acknowledged by an ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3817-s26", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "This is why ECN counts are permitted to be larger than the total number of packets that are acknowledged. ¶ Validating ECN counts from reordered ACK frames can result in failure.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.3-p3818-s27", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "An endpoint MUST NOT fail ECN validation as a result of processing an ACK frame that does not increase the largest acknowledged packet number. ¶ ECN validation can fail if the received total count for either ECT(0) or ECT(1) exceeds the total number of packets sent with each corresponding ECT codepoint.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.3-p3819-s28", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "In particular, validation will fail when an endpoint receives a non-zero ECN count corresponding to an ECT codepoint that it never applied.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.3-p3820-s29", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "This check detects when packets are remarked to ECT(0) or ECT(1) in the network. ¶ 13.4.2.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.3-p3821-s30", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "ECN Validation Outcomes If validation fails, then the endpoint MUST disable ECN.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.3-p3822-s31", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "It stops setting the ECT codepoint in IP packets that it sends, assuming that either the network path or the peer does not support ECN. ¶ Even if validation fails, an endpoint MAY revalidate ECN for the same path at any later time in the connection.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.3-p3823-s32", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "An endpoint could continue to periodically attempt validation. ¶ Upon successful validation, an endpoint MAY continue to set an ECT codepoint in subsequent packets it sends, with the expectation that the path is ECN capable.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.3-p3824-s33", "section": "13.3", "anchor": "#name-retransmission-of-informati", "para_id": "13.3-p822", "text": "Network routing and path elements can change mid-connection; an endpoint MUST disable ECN if validation later fails. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4-p3825-s1", "section": "13.4", "anchor": "#name-explicit-congestion-notific", "para_id": "13.4-p823", "text": "QUIC endpoints can use ECN [ RFC3168 ] to detect and respond to network congestion.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4-p3826-s2", "section": "13.4", "anchor": "#name-explicit-congestion-notific", "para_id": "13.4-p823", "text": "ECN allows an endpoint to set an ECN-Capable Transport (ECT) codepoint in the ECN field of an IP packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4-p3827-s3", "section": "13.4", "anchor": "#name-explicit-congestion-notific", "para_id": "13.4-p823", "text": "A network node can then indicate congestion by setting the ECN-CE codepoint in the ECN field instead of dropping the packet [ RFC8087 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4-p3828-s4", "section": "13.4", "anchor": "#name-explicit-congestion-notific", "para_id": "13.4-p823", "text": "Endpoints react to reported congestion by reducing their sending rate in response, as described in [ QUIC-RECOVERY ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4-p3829-s1", "section": "13.4", "anchor": "#name-explicit-congestion-notific", "para_id": "13.4-p824", "text": "To enable ECN, a sending QUIC endpoint first determines whether a path supports ECN marking and whether the peer reports the ECN values in received IP headers; see Section 13.4.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4-p3830-s1", "section": "13.4", "anchor": "#name-explicit-congestion-notific", "para_id": "13.4-p825", "text": "13.4.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4-p3831-s2", "section": "13.4", "anchor": "#name-explicit-congestion-notific", "para_id": "13.4-p825", "text": "Reporting ECN Counts The use of ECN requires the receiving endpoint to read the ECN field from an IP packet, which is not possible on all platforms.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4-p3832-s3", "section": "13.4", "anchor": "#name-explicit-congestion-notific", "para_id": "13.4-p825", "text": "If an endpoint does not implement ECN support or does not have access to received ECN fields, it does not report ECN counts for packets it receives. ¶ Even if an endpoint does not set an ECT field in packets it sends, the endpoint MUST provide feedback about ECN markings it receives, if these are accessible.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4-p3833-s4", "section": "13.4", "anchor": "#name-explicit-congestion-notific", "para_id": "13.4-p825", "text": "Failing to report the ECN counts will cause the sender to disable the use of ECN for this connection. ¶ On receiving an IP packet with an ECT(0), ECT(1), or ECN-CE codepoint, an ECN-enabled endpoint accesses the ECN field and increases the corresponding ECT(0), ECT(1), or ECN-CE count.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4-p3834-s5", "section": "13.4", "anchor": "#name-explicit-congestion-notific", "para_id": "13.4-p825", "text": "These ECN counts are included in subsequent ACK frames; see Sections 13.2 and 19.3 . ¶ Each packet number space maintains separate acknowledgment state and separate ECN counts.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4-p3835-s6", "section": "13.4", "anchor": "#name-explicit-congestion-notific", "para_id": "13.4-p825", "text": "Coalesced QUIC packets (see Section 12.2 ) share the same IP header so the ECN counts are incremented once for each coalesced QUIC packet. ¶ For example, if one each of an Initial, Handshake, and 1-RTT QUIC packet are coalesced into a single UDP datagram, the ECN counts for all three packet number spaces will be incremented by one each, based on the ECN field of the single IP header. ¶ ECN counts are only incremented when QUIC packets from the received IP packet are processed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4-p3836-s7", "section": "13.4", "anchor": "#name-explicit-congestion-notific", "para_id": "13.4-p825", "text": "As such, duplicate QUIC packets are not processed and do not increase ECN counts; see Section 21.10 for relevant security concerns. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.1-p3837-s1", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p826", "text": "The use of ECN requires the receiving endpoint to read the ECN field from an IP packet, which is not possible on all platforms.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.1-p3838-s2", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p826", "text": "If an endpoint does not implement ECN support or does not have access to received ECN fields, it does not report ECN counts for packets it receives. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.1-p3839-s1", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p827", "text": "Even if an endpoint does not set an ECT field in packets it sends, the endpoint MUST provide feedback about ECN markings it receives, if these are accessible.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.1-p3840-s2", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p827", "text": "Failing to report the ECN counts will cause the sender to disable the use of ECN for this connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.1-p3841-s1", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p828", "text": "On receiving an IP packet with an ECT(0), ECT(1), or ECN-CE codepoint, an ECN-enabled endpoint accesses the ECN field and increases the corresponding ECT(0), ECT(1), or ECN-CE count.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.1-p3842-s2", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p828", "text": "These ECN counts are included in subsequent ACK frames; see Sections 13.2 and 19.3 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.1-p3843-s1", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p829", "text": "Each packet number space maintains separate acknowledgment state and separate ECN counts.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.1-p3844-s2", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p829", "text": "Coalesced QUIC packets (see Section 12.2 ) share the same IP header so the ECN counts are incremented once for each coalesced QUIC packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.1-p3845-s1", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p830", "text": "For example, if one each of an Initial, Handshake, and 1-RTT QUIC packet are coalesced into a single UDP datagram, the ECN counts for all three packet number spaces will be incremented by one each, based on the ECN field of the single IP header. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.1-p3846-s1", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p831", "text": "ECN counts are only incremented when QUIC packets from the received IP packet are processed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.1-p3847-s2", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p831", "text": "As such, duplicate QUIC packets are not processed and do not increase ECN counts; see Section 21.10 for relevant security concerns. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.1-p3848-s1", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "13.4.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.1-p3849-s2", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "ECN Validation It is possible for faulty network devices to corrupt or erroneously drop packets that carry a non-zero ECN codepoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.1-p3850-s3", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "To ensure connectivity in the presence of such devices, an endpoint validates the ECN counts for each network path and disables the use of ECN on that path if errors are detected. ¶ To perform ECN validation for a new path: ¶ The endpoint sets an ECT(0) codepoint in the IP header of early outgoing packets sent on a new path to the peer [ RFC8311 ] . ¶ The endpoint monitors whether all packets sent with an ECT codepoint are eventually deemed lost ( Section 6 of [ QUIC-RECOVERY ] ), indicating that ECN validation has failed. ¶ If an endpoint has cause to expect that IP packets with an ECT codepoint might be dropped by a faulty network element, the endpoint could set an ECT codepoint for only the first ten outgoing packets on a path, or for a period of three PTOs (see Section 6.2 of [ QUIC-RECOVERY ] ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.1-p3851-s4", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "If all packets marked with non-zero ECN codepoints are subsequently lost, it can disable marking on the assumption that the marking caused the loss. ¶ An endpoint thus attempts to use ECN and validates this for each new connection, when switching to a server's preferred address, and on active connection migration to a new path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.1-p3852-s5", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "Appendix A.4 describes one possible algorithm. ¶ Other methods of probing paths for ECN support are possible, as are different marking strategies.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.1-p3853-s6", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "Implementations MAY use other methods defined in RFCs; see [ RFC8311 ] .", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "13.4.1-p3854-s7", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "Implementations that use the ECT(1) codepoint need to perform ECN validation using the reported ECT(1) counts. ¶ 13.4.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.1-p3855-s8", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "Receiving ACK Frames with ECN Counts Erroneous application of ECN-CE markings by the network can result in degraded connection performance.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.1-p3856-s9", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "An endpoint that receives an ACK frame with ECN counts therefore validates the counts before using them.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.1-p3857-s10", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "It performs this validation by comparing newly received counts against those from the last successfully processed ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.1-p3858-s11", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "Any increase in the ECN counts is validated based on the ECN markings that were applied to packets that are newly acknowledged in the ACK frame. ¶ If an ACK frame newly acknowledges a packet that the endpoint sent with either the ECT(0) or ECT(1) codepoint set, ECN validation fails if the corresponding ECN counts are not present in the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.1-p3859-s12", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "This check detects a network element that zeroes the ECN field or a peer that does not report ECN markings. ¶ ECN validation also fails if the sum of the increase in ECT(0) and ECN-CE counts is less than the number of newly acknowledged packets that were originally sent with an ECT(0) marking.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.1-p3860-s13", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "Similarly, ECN validation fails if the sum of the increases to ECT(1) and ECN-CE counts is less than the number of newly acknowledged packets sent with an ECT(1) marking.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.1-p3861-s14", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "These checks can detect remarking of ECN-CE markings by the network. ¶ An endpoint could miss acknowledgments for a packet when ACK frames are lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.1-p3862-s15", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "It is therefore possible for the total increase in ECT(0), ECT(1), and ECN-CE counts to be greater than the number of packets that are newly acknowledged by an ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.1-p3863-s16", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "This is why ECN counts are permitted to be larger than the total number of packets that are acknowledged. ¶ Validating ECN counts from reordered ACK frames can result in failure.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.1-p3864-s17", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "An endpoint MUST NOT fail ECN validation as a result of processing an ACK frame that does not increase the largest acknowledged packet number. ¶ ECN validation can fail if the received total count for either ECT(0) or ECT(1) exceeds the total number of packets sent with each corresponding ECT codepoint.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.4.1-p3865-s18", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "In particular, validation will fail when an endpoint receives a non-zero ECN count corresponding to an ECT codepoint that it never applied.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.1-p3866-s19", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "This check detects when packets are remarked to ECT(0) or ECT(1) in the network. ¶ 13.4.2.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.1-p3867-s20", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "ECN Validation Outcomes If validation fails, then the endpoint MUST disable ECN.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.1-p3868-s21", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "It stops setting the ECT codepoint in IP packets that it sends, assuming that either the network path or the peer does not support ECN. ¶ Even if validation fails, an endpoint MAY revalidate ECN for the same path at any later time in the connection.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.1-p3869-s22", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "An endpoint could continue to periodically attempt validation. ¶ Upon successful validation, an endpoint MAY continue to set an ECT codepoint in subsequent packets it sends, with the expectation that the path is ECN capable.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.1-p3870-s23", "section": "13.4.1", "anchor": "#name-reporting-ecn-counts", "para_id": "13.4.1-p832", "text": "Network routing and path elements can change mid-connection; an endpoint MUST disable ECN if validation later fails. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2-p3871-s1", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p833", "text": "It is possible for faulty network devices to corrupt or erroneously drop packets that carry a non-zero ECN codepoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2-p3872-s2", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p833", "text": "To ensure connectivity in the presence of such devices, an endpoint validates the ECN counts for each network path and disables the use of ECN on that path if errors are detected. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2-p3873-s1", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p834", "text": "To perform ECN validation for a new path: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2-p3874-s1", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p835", "text": "The endpoint sets an ECT(0) codepoint in the IP header of early outgoing packets sent on a new path to the peer [ RFC8311 ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2-p3875-s1", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p836", "text": "The endpoint monitors whether all packets sent with an ECT codepoint are eventually deemed lost ( Section 6 of [ QUIC-RECOVERY ] ), indicating that ECN validation has failed. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2-p3876-s1", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p837", "text": "If an endpoint has cause to expect that IP packets with an ECT codepoint might be dropped by a faulty network element, the endpoint could set an ECT codepoint for only the first ten outgoing packets on a path, or for a period of three PTOs (see Section 6.2 of [ QUIC-RECOVERY ] ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2-p3877-s2", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p837", "text": "If all packets marked with non-zero ECN codepoints are subsequently lost, it can disable marking on the assumption that the marking caused the loss. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2-p3878-s1", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p838", "text": "An endpoint thus attempts to use ECN and validates this for each new connection, when switching to a server's preferred address, and on active connection migration to a new path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2-p3879-s2", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p838", "text": "Appendix A.4 describes one possible algorithm. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2-p3880-s1", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p839", "text": "Other methods of probing paths for ECN support are possible, as are different marking strategies.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2-p3881-s2", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p839", "text": "Implementations MAY use other methods defined in RFCs; see [ RFC8311 ] .", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "13.4.2-p3882-s3", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p839", "text": "Implementations that use the ECT(1) codepoint need to perform ECN validation using the reported ECT(1) counts. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2-p3883-s1", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p840", "text": "13.4.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2-p3884-s2", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p840", "text": "Receiving ACK Frames with ECN Counts Erroneous application of ECN-CE markings by the network can result in degraded connection performance.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2-p3885-s3", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p840", "text": "An endpoint that receives an ACK frame with ECN counts therefore validates the counts before using them.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2-p3886-s4", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p840", "text": "It performs this validation by comparing newly received counts against those from the last successfully processed ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2-p3887-s5", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p840", "text": "Any increase in the ECN counts is validated based on the ECN markings that were applied to packets that are newly acknowledged in the ACK frame. ¶ If an ACK frame newly acknowledges a packet that the endpoint sent with either the ECT(0) or ECT(1) codepoint set, ECN validation fails if the corresponding ECN counts are not present in the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2-p3888-s6", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p840", "text": "This check detects a network element that zeroes the ECN field or a peer that does not report ECN markings. ¶ ECN validation also fails if the sum of the increase in ECT(0) and ECN-CE counts is less than the number of newly acknowledged packets that were originally sent with an ECT(0) marking.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2-p3889-s7", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p840", "text": "Similarly, ECN validation fails if the sum of the increases to ECT(1) and ECN-CE counts is less than the number of newly acknowledged packets sent with an ECT(1) marking.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2-p3890-s8", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p840", "text": "These checks can detect remarking of ECN-CE markings by the network. ¶ An endpoint could miss acknowledgments for a packet when ACK frames are lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2-p3891-s9", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p840", "text": "It is therefore possible for the total increase in ECT(0), ECT(1), and ECN-CE counts to be greater than the number of packets that are newly acknowledged by an ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2-p3892-s10", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p840", "text": "This is why ECN counts are permitted to be larger than the total number of packets that are acknowledged. ¶ Validating ECN counts from reordered ACK frames can result in failure.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2-p3893-s11", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p840", "text": "An endpoint MUST NOT fail ECN validation as a result of processing an ACK frame that does not increase the largest acknowledged packet number. ¶ ECN validation can fail if the received total count for either ECT(0) or ECT(1) exceeds the total number of packets sent with each corresponding ECT codepoint.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.4.2-p3894-s12", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p840", "text": "In particular, validation will fail when an endpoint receives a non-zero ECN count corresponding to an ECT codepoint that it never applied.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2-p3895-s13", "section": "13.4.2", "anchor": "#name-ecn-validation", "para_id": "13.4.2-p840", "text": "This check detects when packets are remarked to ECT(0) or ECT(1) in the network. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.1-p3896-s1", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p841", "text": "Erroneous application of ECN-CE markings by the network can result in degraded connection performance.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.1-p3897-s2", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p841", "text": "An endpoint that receives an ACK frame with ECN counts therefore validates the counts before using them.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2.1-p3898-s3", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p841", "text": "It performs this validation by comparing newly received counts against those from the last successfully processed ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2.1-p3899-s4", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p841", "text": "Any increase in the ECN counts is validated based on the ECN markings that were applied to packets that are newly acknowledged in the ACK frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2.1-p3900-s1", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p842", "text": "If an ACK frame newly acknowledges a packet that the endpoint sent with either the ECT(0) or ECT(1) codepoint set, ECN validation fails if the corresponding ECN counts are not present in the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2.1-p3901-s2", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p842", "text": "This check detects a network element that zeroes the ECN field or a peer that does not report ECN markings. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.1-p3902-s1", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p843", "text": "ECN validation also fails if the sum of the increase in ECT(0) and ECN-CE counts is less than the number of newly acknowledged packets that were originally sent with an ECT(0) marking.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.1-p3903-s2", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p843", "text": "Similarly, ECN validation fails if the sum of the increases to ECT(1) and ECN-CE counts is less than the number of newly acknowledged packets sent with an ECT(1) marking.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.1-p3904-s3", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p843", "text": "These checks can detect remarking of ECN-CE markings by the network. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.1-p3905-s1", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p844", "text": "An endpoint could miss acknowledgments for a packet when ACK frames are lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2.1-p3906-s2", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p844", "text": "It is therefore possible for the total increase in ECT(0), ECT(1), and ECN-CE counts to be greater than the number of packets that are newly acknowledged by an ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2.1-p3907-s3", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p844", "text": "This is why ECN counts are permitted to be larger than the total number of packets that are acknowledged. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.1-p3908-s1", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p845", "text": "Validating ECN counts from reordered ACK frames can result in failure.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2.1-p3909-s2", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p845", "text": "An endpoint MUST NOT fail ECN validation as a result of processing an ACK frame that does not increase the largest acknowledged packet number. ¶", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.4.2.1-p3910-s1", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p846", "text": "ECN validation can fail if the received total count for either ECT(0) or ECT(1) exceeds the total number of packets sent with each corresponding ECT codepoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.1-p3911-s2", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p846", "text": "In particular, validation will fail when an endpoint receives a non-zero ECN count corresponding to an ECT codepoint that it never applied.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.1-p3912-s3", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p846", "text": "This check detects when packets are remarked to ECT(0) or ECT(1) in the network. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.1-p3913-s1", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p847", "text": "13.4.2.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.1-p3914-s2", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p847", "text": "ECN Validation Outcomes If validation fails, then the endpoint MUST disable ECN.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.1-p3915-s3", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p847", "text": "It stops setting the ECT codepoint in IP packets that it sends, assuming that either the network path or the peer does not support ECN. ¶ Even if validation fails, an endpoint MAY revalidate ECN for the same path at any later time in the connection.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.1-p3916-s4", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p847", "text": "An endpoint could continue to periodically attempt validation. ¶ Upon successful validation, an endpoint MAY continue to set an ECT codepoint in subsequent packets it sends, with the expectation that the path is ECN capable.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.1-p3917-s5", "section": "13.4.2.1", "anchor": "#name-receiving-ack-frames-with-e", "para_id": "13.4.2.1-p847", "text": "Network routing and path elements can change mid-connection; an endpoint MUST disable ECN if validation later fails. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3918-s1", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p848", "text": "If validation fails, then the endpoint MUST disable ECN.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3919-s2", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p848", "text": "It stops setting the ECT codepoint in IP packets that it sends, assuming that either the network path or the peer does not support ECN. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.2-p3920-s1", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p849", "text": "Even if validation fails, an endpoint MAY revalidate ECN for the same path at any later time in the connection.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3921-s2", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p849", "text": "An endpoint could continue to periodically attempt validation. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3922-s1", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p850", "text": "Upon successful validation, an endpoint MAY continue to set an ECT codepoint in subsequent packets it sends, with the expectation that the path is ECN capable.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3923-s2", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p850", "text": "Network routing and path elements can change mid-connection; an endpoint MUST disable ECN if validation later fails. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3924-s1", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "14.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3925-s2", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Datagram Size A UDP datagram can include one or more QUIC packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3926-s3", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "The datagram size refers to the total UDP payload size of a single UDP datagram carrying QUIC packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3927-s4", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "The datagram size includes one or more QUIC packet headers and protected payloads, but not the UDP or IP headers. ¶ The maximum datagram size is defined as the largest size of UDP payload that can be sent across a network path using a single UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3928-s5", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "QUIC MUST NOT be used if the network path cannot support a maximum datagram size of at least 1200 bytes. ¶ QUIC assumes a minimum IP packet size of at least 1280 bytes.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3929-s6", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "This is the IPv6 minimum size [ IPv6 ] and is also supported by most modern IPv4 networks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3930-s7", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Assuming the minimum IP header size of 40 bytes for IPv6 and 20 bytes for IPv4 and a UDP header size of 8 bytes, this results in a maximum datagram size of 1232 bytes for IPv6 and 1252 bytes for IPv4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3931-s8", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Thus, modern IPv4 and all IPv6 network paths are expected to be able to support QUIC. ¶ Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3932-s9", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "This requirement to support a UDP payload of 1200 bytes limits the space available for IPv6 extension headers to 32 bytes or IPv4 options to 52 bytes if the path only supports the IPv6 minimum MTU of 1280 bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.2-p3933-s10", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "This affects Initial packets and path validation. ¶ Any maximum datagram size larger than 1200 bytes can be discovered using Path Maximum Transmission Unit Discovery (PMTUD) (see Section 14.2.1 ) or Datagram Packetization Layer PMTU Discovery (DPLPMTUD) (see Section 14.3 ). ¶ Enforcement of the max_udp_payload_size transport parameter ( Section 18.2 ) might act as an additional limit on the maximum datagram size.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3934-s11", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "A sender can avoid exceeding this limit, once the value is known.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3935-s12", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "However, prior to learning the value of the transport parameter, endpoints risk datagrams being lost if they send datagrams larger than the smallest allowed maximum datagram size of 1200 bytes. ¶ UDP datagrams MUST NOT be fragmented at the IP layer.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3936-s13", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "In IPv4 [ IPv4 ] , the Don't Fragment (DF) bit MUST be set if possible, to prevent fragmentation on the path. ¶ QUIC sometimes requires datagrams to be no smaller than a certain size; see Section 8.1 as an example.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3937-s14", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "However, the size of a datagram is not authenticated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3938-s15", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "That is, if an endpoint receives a datagram of a certain size, it cannot know that the sender sent the datagram at the same size.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.2-p3939-s16", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Therefore, an endpoint MUST NOT close a connection when it receives a datagram that does not meet size constraints; the endpoint MAY discard such datagrams. ¶ 14.1.", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3940-s17", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Initial Datagram Size A client MUST expand the payload of all UDP datagrams carrying Initial packets to at least the smallest allowed maximum datagram size of 1200 bytes by adding PADDING frames to the Initial packet or by coalescing the Initial packet; see Section 12.2 .", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13.4.2.2-p3941-s18", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Initial packets can even be coalesced with invalid packets, which a receiver will discard.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3942-s19", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Similarly, a server MUST expand the payload of all UDP datagrams carrying ack-eliciting Initial packets to at least the smallest allowed maximum datagram size of 1200 bytes. ¶ Sending UDP datagrams of this size ensures that the network path supports a reasonable Path Maximum Transmission Unit (PMTU), in both directions.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3943-s20", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Additionally, a client that expands Initial packets helps reduce the amplitude of amplification attacks caused by server responses toward an unverified client address; see Section 8 . ¶ Datagrams containing Initial packets MAY exceed 1200 bytes if the sender believes that the network path and peer both support the size that it chooses. ¶ A server MUST discard an Initial packet that is carried in a UDP datagram with a payload that is smaller than the smallest allowed maximum datagram size of 1200 bytes.", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "peer", "sender", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3944-s21", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "A server MAY also immediately close the connection by sending a CONNECTION_CLOSE frame with an error code of PROTOCOL_VIOLATION; see Section 10.2.3 . ¶ The server MUST also limit the number of bytes it sends before validating the address of the client; see Section 8 . ¶ 14.2.", "facet": "frames", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.4.2.2-p3945-s22", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Path Maximum Transmission Unit The PMTU is the maximum size of the entire IP packet, including the IP header, UDP header, and UDP payload.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3946-s23", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "The UDP payload includes one or more QUIC packet headers and protected payloads.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3947-s24", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "The PMTU can depend on path characteristics and can therefore change over time.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3948-s25", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "The largest UDP payload an endpoint sends at any given time is referred to as the endpoint's maximum datagram size. ¶ An endpoint SHOULD use DPLPMTUD ( Section 14.3 ) or PMTUD ( Section 14.2.1 ) to determine whether the path to a destination will support a desired maximum datagram size without fragmentation.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3949-s26", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "In the absence of these mechanisms, QUIC endpoints SHOULD NOT send datagrams larger than the smallest allowed maximum datagram size. ¶ Both DPLPMTUD and PMTUD send datagrams that are larger than the current maximum datagram size, referred to as PMTU probes.", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3950-s27", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "All QUIC packets that are not sent in a PMTU probe SHOULD be sized to fit within the maximum datagram size to avoid the datagram being fragmented or dropped [ RFC8085 ] . ¶ If a QUIC endpoint determines that the PMTU between any pair of local and remote IP addresses cannot support the smallest allowed maximum datagram size of 1200 bytes, it MUST immediately cease sending QUIC packets, except for those in PMTU probes or those containing CONNECTION_CLOSE frames, on the affected path.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "13.4.2.2-p3951-s28", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "An endpoint MAY terminate the connection if an alternative path cannot be found. ¶ Each pair of local and remote addresses could have a different PMTU.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3952-s29", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "QUIC implementations that implement any kind of PMTU discovery therefore SHOULD maintain a maximum datagram size for each combination of local and remote IP addresses. ¶ A QUIC implementation MAY be more conservative in computing the maximum datagram size to allow for unknown tunnel overheads or IP header options/extensions. ¶ 14.2.1.", "facet": "other", "normative": true, "modalities": ["SHOULD", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "13.4.2.2-p3953-s30", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Handling of ICMP Messages by PMTUD PMTUD [ RFC1191 ] [ RFC8201 ] relies on reception of ICMP messages (that is, IPv6 Packet Too Big (PTB) messages) that indicate when an IP packet is dropped because it is larger than the local router MTU.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.2-p3954-s31", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "DPLPMTUD can also optionally use these messages.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3955-s32", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "This use of ICMP messages is potentially vulnerable to attacks by entities that cannot observe packets but might successfully guess the addresses used on the path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3956-s33", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "These attacks could reduce the PMTU to a bandwidth-inefficient value. ¶ An endpoint MUST ignore an ICMP message that claims the PMTU has decreased below QUIC's smallest allowed maximum datagram size. ¶ The requirements for generating ICMP [ RFC1812 ] [ RFC4443 ] state that the quoted packet should contain as much of the original packet as possible without exceeding the minimum MTU for the IP version.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13.4.2.2-p3957-s34", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "The size of the quoted packet can actually be smaller, or the information unintelligible, as described in Section 1.1 of [ DPLPMTUD ] . ¶ QUIC endpoints using PMTUD SHOULD validate ICMP messages to protect from packet injection as specified in [ RFC8201 ] and Section 5.2 of [ RFC8085 ] .", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "13.4.2.2-p3958-s35", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "This validation SHOULD use the quoted packet supplied in the payload of an ICMP message to associate the message with a corresponding transport connection (see Section 4.6.1 of [ DPLPMTUD ] ).", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "13.4.2.2-p3959-s36", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "ICMP message validation MUST include matching IP addresses and UDP ports [ RFC8085 ] and, when possible, connection IDs to an active QUIC session.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "13.4.2.2-p3960-s37", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "The endpoint SHOULD ignore all ICMP messages that fail validation. ¶ An endpoint MUST NOT increase the PMTU based on ICMP messages; see Item 6 in Section 3 of [ DPLPMTUD ] .", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "13.4.2.2-p3961-s38", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Any reduction in QUIC's maximum datagram size in response to ICMP messages MAY be provisional until QUIC's loss detection algorithm determines that the quoted packet has actually been lost. ¶ 14.3.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "13.4.2.2-p3962-s39", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Datagram Packetization Layer PMTU Discovery DPLPMTUD [ DPLPMTUD ] relies on tracking loss or acknowledgment of QUIC packets that are carried in PMTU probes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.2-p3963-s40", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "PMTU probes for DPLPMTUD that use the PADDING frame implement \"Probing using padding data\", as defined in Section 4.1 of [ DPLPMTUD ] . ¶ Endpoints SHOULD set the initial value of BASE_PLPMTU ( Section 5.1 of [ DPLPMTUD ] ) to be consistent with QUIC's smallest allowed maximum datagram size.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "13.4.2.2-p3964-s41", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "The MIN_PLPMTU is the same as the BASE_PLPMTU. ¶ QUIC endpoints implementing DPLPMTUD maintain a DPLPMTUD Maximum Packet Size (MPS) ( Section 4.4 of [ DPLPMTUD ] ) for each combination of local and remote IP addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3965-s42", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "This corresponds to the maximum datagram size. ¶ 14.3.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3966-s43", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "DPLPMTUD and Initial Connectivity From the perspective of DPLPMTUD, QUIC is an acknowledged Packetization Layer (PL).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.2-p3967-s44", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "A QUIC sender can therefore enter the DPLPMTUD BASE state ( Section 5.2 of [ DPLPMTUD ] ) when the QUIC connection handshake has been completed. ¶ 14.3.2.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2.2-p3968-s45", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Validating the Network Path with DPLPMTUD QUIC is an acknowledged PL; therefore, a QUIC sender does not implement a DPLPMTUD CONFIRMATION_TIMER while in the SEARCH_COMPLETE state; see Section 5.2 of [ DPLPMTUD ] . ¶ 14.3.3.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2.2-p3969-s46", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Handling of ICMP Messages by DPLPMTUD An endpoint using DPLPMTUD requires the validation of any received ICMP PTB message before using the PTB information, as defined in Section 4.6 of [ DPLPMTUD ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.2-p3970-s47", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "In addition to UDP port validation, QUIC validates an ICMP message by using other PL information (e.g., validation of connection IDs in the quoted packet of any received ICMP message). ¶ The considerations for processing ICMP messages described in Section 14.2.1 also apply if these messages are used by DPLPMTUD. ¶ 14.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.2-p3971-s48", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Sending QUIC PMTU Probes PMTU probes are ack-eliciting packets. ¶ Endpoints could limit the content of PMTU probes to PING and PADDING frames, since packets that are larger than the current maximum datagram size are more likely to be dropped by the network.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "13.4.2.2-p3972-s49", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "Loss of a QUIC packet that is carried in a PMTU probe is therefore not a reliable indication of congestion and SHOULD NOT trigger a congestion control reaction; see Item 7 in Section 3 of [ DPLPMTUD ] .", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "13.4.2.2-p3973-s50", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "However, PMTU probes consume congestion window, which could delay subsequent transmission by an application. ¶ 14.4.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3974-s51", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "PMTU Probes Containing Source Connection ID Endpoints that rely on the Destination Connection ID field for routing incoming QUIC packets are likely to require that the connection ID be included in PMTU probes to route any resulting ICMP messages ( Section 14.2.1 ) back to the correct endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3975-s52", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "However, only long header packets ( Section 17.2 ) contain the Source Connection ID field, and long header packets are not decrypted or acknowledged by the peer once the handshake is complete. ¶ One way to construct a PMTU probe is to coalesce (see Section 12.2 ) a packet with a long header, such as a Handshake or 0-RTT packet ( Section 17.2 ), with a short header packet in a single UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.2-p3976-s53", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "If the resulting PMTU probe reaches the endpoint, the packet with the long header will be ignored, but the short header packet will be acknowledged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.2-p3977-s54", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "If the PMTU probe causes an ICMP message to be sent, the first part of the probe will be quoted in that message.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.2-p3978-s55", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "If the Source Connection ID field is within the quoted portion of the probe, that could be used for routing or validation of the ICMP message. ¶ Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "13.4.2.2-p3979-s56", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "The purpose of using a packet with a long header is only to ensure that the quoted packet contained in the ICMP message contains a Source Connection ID field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "13.4.2.2-p3980-s57", "section": "13.4.2.2", "anchor": "#name-ecn-validation-outcomes", "para_id": "13.4.2.2-p851", "text": "This packet does not need to be a valid packet, and it can be sent even if there is no current use for packets of that type. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14-p3981-s1", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p852", "text": "A UDP datagram can include one or more QUIC packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p3982-s2", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p852", "text": "The datagram size refers to the total UDP payload size of a single UDP datagram carrying QUIC packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p3983-s3", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p852", "text": "The datagram size includes one or more QUIC packet headers and protected payloads, but not the UDP or IP headers. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p3984-s1", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p853", "text": "The maximum datagram size is defined as the largest size of UDP payload that can be sent across a network path using a single UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p3985-s2", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p853", "text": "QUIC MUST NOT be used if the network path cannot support a maximum datagram size of at least 1200 bytes. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14-p3986-s1", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p854", "text": "QUIC assumes a minimum IP packet size of at least 1280 bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p3987-s2", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p854", "text": "This is the IPv6 minimum size [ IPv6 ] and is also supported by most modern IPv4 networks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p3988-s3", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p854", "text": "Assuming the minimum IP header size of 40 bytes for IPv6 and 20 bytes for IPv4 and a UDP header size of 8 bytes, this results in a maximum datagram size of 1232 bytes for IPv6 and 1252 bytes for IPv4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p3989-s4", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p854", "text": "Thus, modern IPv4 and all IPv6 network paths are expected to be able to support QUIC. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p3990-s1", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p855", "text": "Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p3991-s2", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p855", "text": "This requirement to support a UDP payload of 1200 bytes limits the space available for IPv6 extension headers to 32 bytes or IPv4 options to 52 bytes if the path only supports the IPv6 minimum MTU of 1280 bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14-p3992-s3", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p855", "text": "This affects Initial packets and path validation. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p3993-s1", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p856", "text": "Any maximum datagram size larger than 1200 bytes can be discovered using Path Maximum Transmission Unit Discovery (PMTUD) (see Section 14.2.1 ) or Datagram Packetization Layer PMTU Discovery (DPLPMTUD) (see Section 14.3 ). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p3994-s1", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p857", "text": "Enforcement of the max_udp_payload_size transport parameter ( Section 18.2 ) might act as an additional limit on the maximum datagram size.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p3995-s2", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p857", "text": "A sender can avoid exceeding this limit, once the value is known.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p3996-s3", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p857", "text": "However, prior to learning the value of the transport parameter, endpoints risk datagrams being lost if they send datagrams larger than the smallest allowed maximum datagram size of 1200 bytes. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14-p3997-s1", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p858", "text": "UDP datagrams MUST NOT be fragmented at the IP layer.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14-p3998-s2", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p858", "text": "In IPv4 [ IPv4 ] , the Don't Fragment (DF) bit MUST be set if possible, to prevent fragmentation on the path. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14-p3999-s1", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p859", "text": "QUIC sometimes requires datagrams to be no smaller than a certain size; see Section 8.1 as an example.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p4000-s2", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p859", "text": "However, the size of a datagram is not authenticated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p4001-s3", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p859", "text": "That is, if an endpoint receives a datagram of a certain size, it cannot know that the sender sent the datagram at the same size.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14-p4002-s4", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p859", "text": "Therefore, an endpoint MUST NOT close a connection when it receives a datagram that does not meet size constraints; the endpoint MAY discard such datagrams. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14-p4003-s1", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p860", "text": "14.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p4004-s2", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p860", "text": "Initial Datagram Size A client MUST expand the payload of all UDP datagrams carrying Initial packets to at least the smallest allowed maximum datagram size of 1200 bytes by adding PADDING frames to the Initial packet or by coalescing the Initial packet; see Section 12.2 .", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "14-p4005-s3", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p860", "text": "Initial packets can even be coalesced with invalid packets, which a receiver will discard.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14-p4006-s4", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p860", "text": "Similarly, a server MUST expand the payload of all UDP datagrams carrying ack-eliciting Initial packets to at least the smallest allowed maximum datagram size of 1200 bytes. ¶ Sending UDP datagrams of this size ensures that the network path supports a reasonable Path Maximum Transmission Unit (PMTU), in both directions.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14-p4007-s5", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p860", "text": "Additionally, a client that expands Initial packets helps reduce the amplitude of amplification attacks caused by server responses toward an unverified client address; see Section 8 . ¶ Datagrams containing Initial packets MAY exceed 1200 bytes if the sender believes that the network path and peer both support the size that it chooses. ¶ A server MUST discard an Initial packet that is carried in a UDP datagram with a payload that is smaller than the smallest allowed maximum datagram size of 1200 bytes.", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "peer", "sender", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14-p4008-s6", "section": "14", "anchor": "#name-datagram-size", "para_id": "14-p860", "text": "A server MAY also immediately close the connection by sending a CONNECTION_CLOSE frame with an error code of PROTOCOL_VIOLATION; see Section 10.2.3 . ¶ The server MUST also limit the number of bytes it sends before validating the address of the client; see Section 8 . ¶", "facet": "frames", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "14.1-p4009-s1", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p861", "text": "A client MUST expand the payload of all UDP datagrams carrying Initial packets to at least the smallest allowed maximum datagram size of 1200 bytes by adding PADDING frames to the Initial packet or by coalescing the Initial packet; see Section 12.2 .", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "14.1-p4010-s2", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p861", "text": "Initial packets can even be coalesced with invalid packets, which a receiver will discard.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.1-p4011-s3", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p861", "text": "Similarly, a server MUST expand the payload of all UDP datagrams carrying ack-eliciting Initial packets to at least the smallest allowed maximum datagram size of 1200 bytes. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14.1-p4012-s1", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p862", "text": "Sending UDP datagrams of this size ensures that the network path supports a reasonable Path Maximum Transmission Unit (PMTU), in both directions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.1-p4013-s2", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p862", "text": "Additionally, a client that expands Initial packets helps reduce the amplitude of amplification attacks caused by server responses toward an unverified client address; see Section 8 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.1-p4014-s1", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p863", "text": "Datagrams containing Initial packets MAY exceed 1200 bytes if the sender believes that the network path and peer both support the size that it chooses. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["peer", "sender"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14.1-p4015-s1", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p864", "text": "A server MUST discard an Initial packet that is carried in a UDP datagram with a payload that is smaller than the smallest allowed maximum datagram size of 1200 bytes.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.1-p4016-s2", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p864", "text": "A server MAY also immediately close the connection by sending a CONNECTION_CLOSE frame with an error code of PROTOCOL_VIOLATION; see Section 10.2.3 . ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "14.1-p4017-s1", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p865", "text": "The server MUST also limit the number of bytes it sends before validating the address of the client; see Section 8 . ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14.1-p4018-s1", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "14.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.1-p4019-s2", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "Path Maximum Transmission Unit The PMTU is the maximum size of the entire IP packet, including the IP header, UDP header, and UDP payload.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.1-p4020-s3", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "The UDP payload includes one or more QUIC packet headers and protected payloads.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.1-p4021-s4", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "The PMTU can depend on path characteristics and can therefore change over time.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.1-p4022-s5", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "The largest UDP payload an endpoint sends at any given time is referred to as the endpoint's maximum datagram size. ¶ An endpoint SHOULD use DPLPMTUD ( Section 14.3 ) or PMTUD ( Section 14.2.1 ) to determine whether the path to a destination will support a desired maximum datagram size without fragmentation.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14.1-p4023-s6", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "In the absence of these mechanisms, QUIC endpoints SHOULD NOT send datagrams larger than the smallest allowed maximum datagram size. ¶ Both DPLPMTUD and PMTUD send datagrams that are larger than the current maximum datagram size, referred to as PMTU probes.", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14.1-p4024-s7", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "All QUIC packets that are not sent in a PMTU probe SHOULD be sized to fit within the maximum datagram size to avoid the datagram being fragmented or dropped [ RFC8085 ] . ¶ If a QUIC endpoint determines that the PMTU between any pair of local and remote IP addresses cannot support the smallest allowed maximum datagram size of 1200 bytes, it MUST immediately cease sending QUIC packets, except for those in PMTU probes or those containing CONNECTION_CLOSE frames, on the affected path.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "14.1-p4025-s8", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "An endpoint MAY terminate the connection if an alternative path cannot be found. ¶ Each pair of local and remote addresses could have a different PMTU.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14.1-p4026-s9", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "QUIC implementations that implement any kind of PMTU discovery therefore SHOULD maintain a maximum datagram size for each combination of local and remote IP addresses. ¶ A QUIC implementation MAY be more conservative in computing the maximum datagram size to allow for unknown tunnel overheads or IP header options/extensions. ¶ 14.2.1.", "facet": "other", "normative": true, "modalities": ["SHOULD", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.1-p4027-s10", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "Handling of ICMP Messages by PMTUD PMTUD [ RFC1191 ] [ RFC8201 ] relies on reception of ICMP messages (that is, IPv6 Packet Too Big (PTB) messages) that indicate when an IP packet is dropped because it is larger than the local router MTU.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.1-p4028-s11", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "DPLPMTUD can also optionally use these messages.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.1-p4029-s12", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "This use of ICMP messages is potentially vulnerable to attacks by entities that cannot observe packets but might successfully guess the addresses used on the path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.1-p4030-s13", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "These attacks could reduce the PMTU to a bandwidth-inefficient value. ¶ An endpoint MUST ignore an ICMP message that claims the PMTU has decreased below QUIC's smallest allowed maximum datagram size. ¶ The requirements for generating ICMP [ RFC1812 ] [ RFC4443 ] state that the quoted packet should contain as much of the original packet as possible without exceeding the minimum MTU for the IP version.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "14.1-p4031-s14", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "The size of the quoted packet can actually be smaller, or the information unintelligible, as described in Section 1.1 of [ DPLPMTUD ] . ¶ QUIC endpoints using PMTUD SHOULD validate ICMP messages to protect from packet injection as specified in [ RFC8201 ] and Section 5.2 of [ RFC8085 ] .", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.1-p4032-s15", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "This validation SHOULD use the quoted packet supplied in the payload of an ICMP message to associate the message with a corresponding transport connection (see Section 4.6.1 of [ DPLPMTUD ] ).", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.1-p4033-s16", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "ICMP message validation MUST include matching IP addresses and UDP ports [ RFC8085 ] and, when possible, connection IDs to an active QUIC session.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14.1-p4034-s17", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "The endpoint SHOULD ignore all ICMP messages that fail validation. ¶ An endpoint MUST NOT increase the PMTU based on ICMP messages; see Item 6 in Section 3 of [ DPLPMTUD ] .", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.1-p4035-s18", "section": "14.1", "anchor": "#name-initial-datagram-size", "para_id": "14.1-p866", "text": "Any reduction in QUIC's maximum datagram size in response to ICMP messages MAY be provisional until QUIC's loss detection algorithm determines that the quoted packet has actually been lost. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2-p4036-s1", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p867", "text": "The PMTU is the maximum size of the entire IP packet, including the IP header, UDP header, and UDP payload.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2-p4037-s2", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p867", "text": "The UDP payload includes one or more QUIC packet headers and protected payloads.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2-p4038-s3", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p867", "text": "The PMTU can depend on path characteristics and can therefore change over time.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2-p4039-s4", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p867", "text": "The largest UDP payload an endpoint sends at any given time is referred to as the endpoint's maximum datagram size. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.2-p4040-s1", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p868", "text": "An endpoint SHOULD use DPLPMTUD ( Section 14.3 ) or PMTUD ( Section 14.2.1 ) to determine whether the path to a destination will support a desired maximum datagram size without fragmentation.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2-p4041-s2", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p868", "text": "In the absence of these mechanisms, QUIC endpoints SHOULD NOT send datagrams larger than the smallest allowed maximum datagram size. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14.2-p4042-s1", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p869", "text": "Both DPLPMTUD and PMTUD send datagrams that are larger than the current maximum datagram size, referred to as PMTU probes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.2-p4043-s2", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p869", "text": "All QUIC packets that are not sent in a PMTU probe SHOULD be sized to fit within the maximum datagram size to avoid the datagram being fragmented or dropped [ RFC8085 ] . ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2-p4044-s1", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p870", "text": "If a QUIC endpoint determines that the PMTU between any pair of local and remote IP addresses cannot support the smallest allowed maximum datagram size of 1200 bytes, it MUST immediately cease sending QUIC packets, except for those in PMTU probes or those containing CONNECTION_CLOSE frames, on the affected path.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "14.2-p4045-s2", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p870", "text": "An endpoint MAY terminate the connection if an alternative path cannot be found. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14.2-p4046-s1", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p871", "text": "Each pair of local and remote addresses could have a different PMTU.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2-p4047-s2", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p871", "text": "QUIC implementations that implement any kind of PMTU discovery therefore SHOULD maintain a maximum datagram size for each combination of local and remote IP addresses. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2-p4048-s1", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p872", "text": "A QUIC implementation MAY be more conservative in computing the maximum datagram size to allow for unknown tunnel overheads or IP header options/extensions. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2-p4049-s1", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p873", "text": "14.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2-p4050-s2", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p873", "text": "Handling of ICMP Messages by PMTUD PMTUD [ RFC1191 ] [ RFC8201 ] relies on reception of ICMP messages (that is, IPv6 Packet Too Big (PTB) messages) that indicate when an IP packet is dropped because it is larger than the local router MTU.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.2-p4051-s3", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p873", "text": "DPLPMTUD can also optionally use these messages.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2-p4052-s4", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p873", "text": "This use of ICMP messages is potentially vulnerable to attacks by entities that cannot observe packets but might successfully guess the addresses used on the path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2-p4053-s5", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p873", "text": "These attacks could reduce the PMTU to a bandwidth-inefficient value. ¶ An endpoint MUST ignore an ICMP message that claims the PMTU has decreased below QUIC's smallest allowed maximum datagram size. ¶ The requirements for generating ICMP [ RFC1812 ] [ RFC4443 ] state that the quoted packet should contain as much of the original packet as possible without exceeding the minimum MTU for the IP version.", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "14.2-p4054-s6", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p873", "text": "The size of the quoted packet can actually be smaller, or the information unintelligible, as described in Section 1.1 of [ DPLPMTUD ] . ¶ QUIC endpoints using PMTUD SHOULD validate ICMP messages to protect from packet injection as specified in [ RFC8201 ] and Section 5.2 of [ RFC8085 ] .", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2-p4055-s7", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p873", "text": "This validation SHOULD use the quoted packet supplied in the payload of an ICMP message to associate the message with a corresponding transport connection (see Section 4.6.1 of [ DPLPMTUD ] ).", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2-p4056-s8", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p873", "text": "ICMP message validation MUST include matching IP addresses and UDP ports [ RFC8085 ] and, when possible, connection IDs to an active QUIC session.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14.2-p4057-s9", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p873", "text": "The endpoint SHOULD ignore all ICMP messages that fail validation. ¶ An endpoint MUST NOT increase the PMTU based on ICMP messages; see Item 6 in Section 3 of [ DPLPMTUD ] .", "facet": "other", "normative": true, "modalities": ["SHOULD", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2-p4058-s10", "section": "14.2", "anchor": "#name-path-maximum-transmission-u", "para_id": "14.2-p873", "text": "Any reduction in QUIC's maximum datagram size in response to ICMP messages MAY be provisional until QUIC's loss detection algorithm determines that the quoted packet has actually been lost. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2.1-p4059-s1", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p874", "text": "PMTUD [ RFC1191 ] [ RFC8201 ] relies on reception of ICMP messages (that is, IPv6 Packet Too Big (PTB) messages) that indicate when an IP packet is dropped because it is larger than the local router MTU.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.2.1-p4060-s2", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p874", "text": "DPLPMTUD can also optionally use these messages.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2.1-p4061-s3", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p874", "text": "This use of ICMP messages is potentially vulnerable to attacks by entities that cannot observe packets but might successfully guess the addresses used on the path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2.1-p4062-s4", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p874", "text": "These attacks could reduce the PMTU to a bandwidth-inefficient value. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2.1-p4063-s1", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p875", "text": "An endpoint MUST ignore an ICMP message that claims the PMTU has decreased below QUIC's smallest allowed maximum datagram size. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2.1-p4064-s1", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p876", "text": "The requirements for generating ICMP [ RFC1812 ] [ RFC4443 ] state that the quoted packet should contain as much of the original packet as possible without exceeding the minimum MTU for the IP version.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "14.2.1-p4065-s2", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p876", "text": "The size of the quoted packet can actually be smaller, or the information unintelligible, as described in Section 1.1 of [ DPLPMTUD ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2.1-p4066-s1", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p877", "text": "QUIC endpoints using PMTUD SHOULD validate ICMP messages to protect from packet injection as specified in [ RFC8201 ] and Section 5.2 of [ RFC8085 ] .", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2.1-p4067-s2", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p877", "text": "This validation SHOULD use the quoted packet supplied in the payload of an ICMP message to associate the message with a corresponding transport connection (see Section 4.6.1 of [ DPLPMTUD ] ).", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2.1-p4068-s3", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p877", "text": "ICMP message validation MUST include matching IP addresses and UDP ports [ RFC8085 ] and, when possible, connection IDs to an active QUIC session.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "14.2.1-p4069-s4", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p877", "text": "The endpoint SHOULD ignore all ICMP messages that fail validation. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2.1-p4070-s1", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p878", "text": "An endpoint MUST NOT increase the PMTU based on ICMP messages; see Item 6 in Section 3 of [ DPLPMTUD ] .", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2.1-p4071-s2", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p878", "text": "Any reduction in QUIC's maximum datagram size in response to ICMP messages MAY be provisional until QUIC's loss detection algorithm determines that the quoted packet has actually been lost. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.2.1-p4072-s1", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p879", "text": "14.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2.1-p4073-s2", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p879", "text": "Datagram Packetization Layer PMTU Discovery DPLPMTUD [ DPLPMTUD ] relies on tracking loss or acknowledgment of QUIC packets that are carried in PMTU probes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.2.1-p4074-s3", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p879", "text": "PMTU probes for DPLPMTUD that use the PADDING frame implement \"Probing using padding data\", as defined in Section 4.1 of [ DPLPMTUD ] . ¶ Endpoints SHOULD set the initial value of BASE_PLPMTU ( Section 5.1 of [ DPLPMTUD ] ) to be consistent with QUIC's smallest allowed maximum datagram size.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "14.2.1-p4075-s4", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p879", "text": "The MIN_PLPMTU is the same as the BASE_PLPMTU. ¶ QUIC endpoints implementing DPLPMTUD maintain a DPLPMTUD Maximum Packet Size (MPS) ( Section 4.4 of [ DPLPMTUD ] ) for each combination of local and remote IP addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2.1-p4076-s5", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p879", "text": "This corresponds to the maximum datagram size. ¶ 14.3.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.2.1-p4077-s6", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p879", "text": "DPLPMTUD and Initial Connectivity From the perspective of DPLPMTUD, QUIC is an acknowledged Packetization Layer (PL).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.2.1-p4078-s7", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p879", "text": "A QUIC sender can therefore enter the DPLPMTUD BASE state ( Section 5.2 of [ DPLPMTUD ] ) when the QUIC connection handshake has been completed. ¶ 14.3.2.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "14.2.1-p4079-s8", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p879", "text": "Validating the Network Path with DPLPMTUD QUIC is an acknowledged PL; therefore, a QUIC sender does not implement a DPLPMTUD CONFIRMATION_TIMER while in the SEARCH_COMPLETE state; see Section 5.2 of [ DPLPMTUD ] . ¶ 14.3.3.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "14.2.1-p4080-s9", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p879", "text": "Handling of ICMP Messages by DPLPMTUD An endpoint using DPLPMTUD requires the validation of any received ICMP PTB message before using the PTB information, as defined in Section 4.6 of [ DPLPMTUD ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.2.1-p4081-s10", "section": "14.2.1", "anchor": "#name-handling-of-icmp-messages-b", "para_id": "14.2.1-p879", "text": "In addition to UDP port validation, QUIC validates an ICMP message by using other PL information (e.g., validation of connection IDs in the quoted packet of any received ICMP message). ¶ The considerations for processing ICMP messages described in Section 14.2.1 also apply if these messages are used by DPLPMTUD. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.3-p4082-s1", "section": "14.3", "anchor": "#name-datagram-packetization-laye", "para_id": "14.3-p880", "text": "DPLPMTUD [ DPLPMTUD ] relies on tracking loss or acknowledgment of QUIC packets that are carried in PMTU probes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.3-p4083-s2", "section": "14.3", "anchor": "#name-datagram-packetization-laye", "para_id": "14.3-p880", "text": "PMTU probes for DPLPMTUD that use the PADDING frame implement \"Probing using padding data\", as defined in Section 4.1 of [ DPLPMTUD ] . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "14.3-p4084-s1", "section": "14.3", "anchor": "#name-datagram-packetization-laye", "para_id": "14.3-p881", "text": "Endpoints SHOULD set the initial value of BASE_PLPMTU ( Section 5.1 of [ DPLPMTUD ] ) to be consistent with QUIC's smallest allowed maximum datagram size.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.3-p4085-s2", "section": "14.3", "anchor": "#name-datagram-packetization-laye", "para_id": "14.3-p881", "text": "The MIN_PLPMTU is the same as the BASE_PLPMTU. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.3-p4086-s1", "section": "14.3", "anchor": "#name-datagram-packetization-laye", "para_id": "14.3-p882", "text": "QUIC endpoints implementing DPLPMTUD maintain a DPLPMTUD Maximum Packet Size (MPS) ( Section 4.4 of [ DPLPMTUD ] ) for each combination of local and remote IP addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.3-p4087-s2", "section": "14.3", "anchor": "#name-datagram-packetization-laye", "para_id": "14.3-p882", "text": "This corresponds to the maximum datagram size. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.3-p4088-s1", "section": "14.3", "anchor": "#name-datagram-packetization-laye", "para_id": "14.3-p883", "text": "14.3.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.3-p4089-s2", "section": "14.3", "anchor": "#name-datagram-packetization-laye", "para_id": "14.3-p883", "text": "DPLPMTUD and Initial Connectivity From the perspective of DPLPMTUD, QUIC is an acknowledged Packetization Layer (PL).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.3-p4090-s3", "section": "14.3", "anchor": "#name-datagram-packetization-laye", "para_id": "14.3-p883", "text": "A QUIC sender can therefore enter the DPLPMTUD BASE state ( Section 5.2 of [ DPLPMTUD ] ) when the QUIC connection handshake has been completed. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "14.3.1-p4091-s1", "section": "14.3.1", "anchor": "#name-dplpmtud-and-initial-connec", "para_id": "14.3.1-p884", "text": "From the perspective of DPLPMTUD, QUIC is an acknowledged Packetization Layer (PL).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.3.1-p4092-s2", "section": "14.3.1", "anchor": "#name-dplpmtud-and-initial-connec", "para_id": "14.3.1-p884", "text": "A QUIC sender can therefore enter the DPLPMTUD BASE state ( Section 5.2 of [ DPLPMTUD ] ) when the QUIC connection handshake has been completed. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "14.3.1-p4093-s1", "section": "14.3.1", "anchor": "#name-dplpmtud-and-initial-connec", "para_id": "14.3.1-p885", "text": "14.3.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.3.1-p4094-s2", "section": "14.3.1", "anchor": "#name-dplpmtud-and-initial-connec", "para_id": "14.3.1-p885", "text": "Validating the Network Path with DPLPMTUD QUIC is an acknowledged PL; therefore, a QUIC sender does not implement a DPLPMTUD CONFIRMATION_TIMER while in the SEARCH_COMPLETE state; see Section 5.2 of [ DPLPMTUD ] . ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "14.3.2-p4095-s1", "section": "14.3.2", "anchor": "#name-validating-the-network-path", "para_id": "14.3.2-p886", "text": "QUIC is an acknowledged PL; therefore, a QUIC sender does not implement a DPLPMTUD CONFIRMATION_TIMER while in the SEARCH_COMPLETE state; see Section 5.2 of [ DPLPMTUD ] . ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "14.3.2-p4096-s1", "section": "14.3.2", "anchor": "#name-validating-the-network-path", "para_id": "14.3.2-p887", "text": "14.3.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.3.2-p4097-s2", "section": "14.3.2", "anchor": "#name-validating-the-network-path", "para_id": "14.3.2-p887", "text": "Handling of ICMP Messages by DPLPMTUD An endpoint using DPLPMTUD requires the validation of any received ICMP PTB message before using the PTB information, as defined in Section 4.6 of [ DPLPMTUD ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.3.2-p4098-s3", "section": "14.3.2", "anchor": "#name-validating-the-network-path", "para_id": "14.3.2-p887", "text": "In addition to UDP port validation, QUIC validates an ICMP message by using other PL information (e.g., validation of connection IDs in the quoted packet of any received ICMP message). ¶ The considerations for processing ICMP messages described in Section 14.2.1 also apply if these messages are used by DPLPMTUD. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.3.3-p4099-s1", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p888", "text": "An endpoint using DPLPMTUD requires the validation of any received ICMP PTB message before using the PTB information, as defined in Section 4.6 of [ DPLPMTUD ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.3.3-p4100-s2", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p888", "text": "In addition to UDP port validation, QUIC validates an ICMP message by using other PL information (e.g., validation of connection IDs in the quoted packet of any received ICMP message). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.3.3-p4101-s1", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p889", "text": "The considerations for processing ICMP messages described in Section 14.2.1 also apply if these messages are used by DPLPMTUD. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.3.3-p4102-s1", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p890", "text": "14.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.3.3-p4103-s2", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p890", "text": "Sending QUIC PMTU Probes PMTU probes are ack-eliciting packets. ¶ Endpoints could limit the content of PMTU probes to PING and PADDING frames, since packets that are larger than the current maximum datagram size are more likely to be dropped by the network.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "14.3.3-p4104-s3", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p890", "text": "Loss of a QUIC packet that is carried in a PMTU probe is therefore not a reliable indication of congestion and SHOULD NOT trigger a congestion control reaction; see Item 7 in Section 3 of [ DPLPMTUD ] .", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.3.3-p4105-s4", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p890", "text": "However, PMTU probes consume congestion window, which could delay subsequent transmission by an application. ¶ 14.4.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.3.3-p4106-s5", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p890", "text": "PMTU Probes Containing Source Connection ID Endpoints that rely on the Destination Connection ID field for routing incoming QUIC packets are likely to require that the connection ID be included in PMTU probes to route any resulting ICMP messages ( Section 14.2.1 ) back to the correct endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.3.3-p4107-s6", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p890", "text": "However, only long header packets ( Section 17.2 ) contain the Source Connection ID field, and long header packets are not decrypted or acknowledged by the peer once the handshake is complete. ¶ One way to construct a PMTU probe is to coalesce (see Section 12.2 ) a packet with a long header, such as a Handshake or 0-RTT packet ( Section 17.2 ), with a short header packet in a single UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.3.3-p4108-s7", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p890", "text": "If the resulting PMTU probe reaches the endpoint, the packet with the long header will be ignored, but the short header packet will be acknowledged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.3.3-p4109-s8", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p890", "text": "If the PMTU probe causes an ICMP message to be sent, the first part of the probe will be quoted in that message.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.3.3-p4110-s9", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p890", "text": "If the Source Connection ID field is within the quoted portion of the probe, that could be used for routing or validation of the ICMP message. ¶ Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.3.3-p4111-s10", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p890", "text": "The purpose of using a packet with a long header is only to ensure that the quoted packet contained in the ICMP message contains a Source Connection ID field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.3.3-p4112-s11", "section": "14.3.3", "anchor": "#name-handling-of-icmp-messages-by", "para_id": "14.3.3-p890", "text": "This packet does not need to be a valid packet, and it can be sent even if there is no current use for packets of that type. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.4-p4113-s1", "section": "14.4", "anchor": "#name-sending-quic-pmtu-probes", "para_id": "14.4-p891", "text": "PMTU probes are ack-eliciting packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.4-p4114-s1", "section": "14.4", "anchor": "#name-sending-quic-pmtu-probes", "para_id": "14.4-p892", "text": "Endpoints could limit the content of PMTU probes to PING and PADDING frames, since packets that are larger than the current maximum datagram size are more likely to be dropped by the network.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "14.4-p4115-s2", "section": "14.4", "anchor": "#name-sending-quic-pmtu-probes", "para_id": "14.4-p892", "text": "Loss of a QUIC packet that is carried in a PMTU probe is therefore not a reliable indication of congestion and SHOULD NOT trigger a congestion control reaction; see Item 7 in Section 3 of [ DPLPMTUD ] .", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "14.4-p4116-s3", "section": "14.4", "anchor": "#name-sending-quic-pmtu-probes", "para_id": "14.4-p892", "text": "However, PMTU probes consume congestion window, which could delay subsequent transmission by an application. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.4-p4117-s1", "section": "14.4", "anchor": "#name-sending-quic-pmtu-probes", "para_id": "14.4-p893", "text": "14.4.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.4-p4118-s2", "section": "14.4", "anchor": "#name-sending-quic-pmtu-probes", "para_id": "14.4-p893", "text": "PMTU Probes Containing Source Connection ID Endpoints that rely on the Destination Connection ID field for routing incoming QUIC packets are likely to require that the connection ID be included in PMTU probes to route any resulting ICMP messages ( Section 14.2.1 ) back to the correct endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.4-p4119-s3", "section": "14.4", "anchor": "#name-sending-quic-pmtu-probes", "para_id": "14.4-p893", "text": "However, only long header packets ( Section 17.2 ) contain the Source Connection ID field, and long header packets are not decrypted or acknowledged by the peer once the handshake is complete. ¶ One way to construct a PMTU probe is to coalesce (see Section 12.2 ) a packet with a long header, such as a Handshake or 0-RTT packet ( Section 17.2 ), with a short header packet in a single UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.4-p4120-s4", "section": "14.4", "anchor": "#name-sending-quic-pmtu-probes", "para_id": "14.4-p893", "text": "If the resulting PMTU probe reaches the endpoint, the packet with the long header will be ignored, but the short header packet will be acknowledged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.4-p4121-s5", "section": "14.4", "anchor": "#name-sending-quic-pmtu-probes", "para_id": "14.4-p893", "text": "If the PMTU probe causes an ICMP message to be sent, the first part of the probe will be quoted in that message.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.4-p4122-s6", "section": "14.4", "anchor": "#name-sending-quic-pmtu-probes", "para_id": "14.4-p893", "text": "If the Source Connection ID field is within the quoted portion of the probe, that could be used for routing or validation of the ICMP message. ¶ Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.4-p4123-s7", "section": "14.4", "anchor": "#name-sending-quic-pmtu-probes", "para_id": "14.4-p893", "text": "The purpose of using a packet with a long header is only to ensure that the quoted packet contained in the ICMP message contains a Source Connection ID field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.4-p4124-s8", "section": "14.4", "anchor": "#name-sending-quic-pmtu-probes", "para_id": "14.4-p893", "text": "This packet does not need to be a valid packet, and it can be sent even if there is no current use for packets of that type. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.4.1-p4125-s1", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p894", "text": "Endpoints that rely on the Destination Connection ID field for routing incoming QUIC packets are likely to require that the connection ID be included in PMTU probes to route any resulting ICMP messages ( Section 14.2.1 ) back to the correct endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.4.1-p4126-s2", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p894", "text": "However, only long header packets ( Section 17.2 ) contain the Source Connection ID field, and long header packets are not decrypted or acknowledged by the peer once the handshake is complete. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.4.1-p4127-s1", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p895", "text": "One way to construct a PMTU probe is to coalesce (see Section 12.2 ) a packet with a long header, such as a Handshake or 0-RTT packet ( Section 17.2 ), with a short header packet in a single UDP datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.4.1-p4128-s2", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p895", "text": "If the resulting PMTU probe reaches the endpoint, the packet with the long header will be ignored, but the short header packet will be acknowledged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.4.1-p4129-s3", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p895", "text": "If the PMTU probe causes an ICMP message to be sent, the first part of the probe will be quoted in that message.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.4.1-p4130-s4", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p895", "text": "If the Source Connection ID field is within the quoted portion of the probe, that could be used for routing or validation of the ICMP message. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.4.1-p4131-s1", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p896", "text": "Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.4.1-p4132-s2", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p896", "text": "The purpose of using a packet with a long header is only to ensure that the quoted packet contained in the ICMP message contains a Source Connection ID field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.4.1-p4133-s3", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p896", "text": "This packet does not need to be a valid packet, and it can be sent even if there is no current use for packets of that type. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "14.4.1-p4134-s1", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p897", "text": "15.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.4.1-p4135-s2", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p897", "text": "Versions QUIC versions are identified using a 32-bit unsigned number. ¶ The version 0x00000000 is reserved to represent version negotiation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.4.1-p4136-s3", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p897", "text": "This version of the specification is identified by the number 0x00000001. ¶ Other versions of QUIC might have different properties from this version.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.4.1-p4137-s4", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p897", "text": "The properties of QUIC that are guaranteed to be consistent across all versions of the protocol are described in [ QUIC-INVARIANTS ] . ¶ Version 0x00000001 of QUIC uses TLS as a cryptographic handshake protocol, as described in [ QUIC-TLS ] . ¶ Versions with the most significant 16 bits of the version number cleared are reserved for use in future IETF consensus documents. ¶ Versions that follow the pattern 0x?a?a?a?a are reserved for use in forcing version negotiation to be exercised -- that is, any version number where the low four bits of all bytes is 1010 (in binary).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "14.4.1-p4138-s5", "section": "14.4.1", "anchor": "#name-pmtu-probes-containing-sour", "para_id": "14.4.1-p897", "text": "A client or server MAY advertise support for any of these reserved versions. ¶ Reserved version numbers will never represent a real protocol; a client MAY use one of these version numbers with the expectation that the server will initiate version negotiation; a server MAY advertise support for one of these versions and can expect that clients ignore the value. ¶", "facet": "other", "normative": true, "modalities": ["MAY", "MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "15-p4139-s1", "section": "15", "anchor": "#name-versions", "para_id": "15-p898", "text": "QUIC versions are identified using a 32-bit unsigned number. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "15-p4140-s1", "section": "15", "anchor": "#name-versions", "para_id": "15-p899", "text": "The version 0x00000000 is reserved to represent version negotiation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "15-p4141-s2", "section": "15", "anchor": "#name-versions", "para_id": "15-p899", "text": "This version of the specification is identified by the number 0x00000001. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "15-p4142-s1", "section": "15", "anchor": "#name-versions", "para_id": "15-p900", "text": "Other versions of QUIC might have different properties from this version.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "15-p4143-s2", "section": "15", "anchor": "#name-versions", "para_id": "15-p900", "text": "The properties of QUIC that are guaranteed to be consistent across all versions of the protocol are described in [ QUIC-INVARIANTS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "15-p4144-s1", "section": "15", "anchor": "#name-versions", "para_id": "15-p901", "text": "Version 0x00000001 of QUIC uses TLS as a cryptographic handshake protocol, as described in [ QUIC-TLS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "15-p4145-s1", "section": "15", "anchor": "#name-versions", "para_id": "15-p902", "text": "Versions with the most significant 16 bits of the version number cleared are reserved for use in future IETF consensus documents. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "15-p4146-s1", "section": "15", "anchor": "#name-versions", "para_id": "15-p903", "text": "Versions that follow the pattern 0x?a?a?a?a are reserved for use in forcing version negotiation to be exercised -- that is, any version number where the low four bits of all bytes is 1010 (in binary).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "15-p4147-s2", "section": "15", "anchor": "#name-versions", "para_id": "15-p903", "text": "A client or server MAY advertise support for any of these reserved versions. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "15-p4148-s1", "section": "15", "anchor": "#name-versions", "para_id": "15-p904", "text": "Reserved version numbers will never represent a real protocol; a client MAY use one of these version numbers with the expectation that the server will initiate version negotiation; a server MAY advertise support for one of these versions and can expect that clients ignore the value. ¶", "facet": "other", "normative": true, "modalities": ["MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "15-p4149-s1", "section": "15", "anchor": "#name-versions", "para_id": "15-p905", "text": "16.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "15-p4150-s2", "section": "15", "anchor": "#name-versions", "para_id": "15-p905", "text": "Variable-Length Integer Encoding QUIC packets and frames commonly use a variable-length encoding for non-negative integer values.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "15-p4151-s3", "section": "15", "anchor": "#name-versions", "para_id": "15-p905", "text": "This encoding ensures that smaller integer values need fewer bytes to encode. ¶ The QUIC variable-length integer encoding reserves the two most significant bits of the first byte to encode the base-2 logarithm of the integer encoding length in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "15-p4152-s4", "section": "15", "anchor": "#name-versions", "para_id": "15-p905", "text": "The integer value is encoded on the remaining bits, in network byte order. ¶ This means that integers are encoded on 1, 2, 4, or 8 bytes and can encode 6-, 14-, 30-, or 62-bit values, respectively.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "15-p4153-s5", "section": "15", "anchor": "#name-versions", "para_id": "15-p905", "text": "Table 4 summarizes the encoding properties. ¶ Table 4 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "15-p4154-s6", "section": "15", "anchor": "#name-versions", "para_id": "15-p905", "text": "Summary of Integer Encodings 2MSB Length Usable Bits Range 00 1 6 0-63 01 2 14 0-16383 10 4 30 0-1073741823 11 8 62 0-4611686018427387903 An example of a decoding algorithm and sample encodings are shown in Appendix A.1 . ¶ Values do not need to be encoded on the minimum number of bytes necessary, with the sole exception of the Frame Type field; see Section 12.4 . ¶ Versions ( Section 15 ), packet numbers sent in the header ( Section 17.1 ), and the length of connection IDs in long header packets ( Section 17.2 ) are described using integers but do not use this encoding. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "16-p4155-s1", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p906", "text": "QUIC packets and frames commonly use a variable-length encoding for non-negative integer values.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "16-p4156-s2", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p906", "text": "This encoding ensures that smaller integer values need fewer bytes to encode. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4157-s1", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p907", "text": "The QUIC variable-length integer encoding reserves the two most significant bits of the first byte to encode the base-2 logarithm of the integer encoding length in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4158-s2", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p907", "text": "The integer value is encoded on the remaining bits, in network byte order. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4159-s1", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p908", "text": "This means that integers are encoded on 1, 2, 4, or 8 bytes and can encode 6-, 14-, 30-, or 62-bit values, respectively.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4160-s2", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p908", "text": "Table 4 summarizes the encoding properties. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4161-s1", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p909", "text": "Table 4 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4162-s2", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p909", "text": "Summary of Integer Encodings 2MSB Length Usable Bits Range 00 1 6 0-63 01 2 14 0-16383 10 4 30 0-1073741823 11 8 62 0-4611686018427387903", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4163-s1", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p910", "text": "Table 4 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4164-s2", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p910", "text": "Summary of Integer Encodings 2MSB Length Usable Bits Range 00 1 6 0-63 01 2 14 0-16383 10 4 30 0-1073741823 11 8 62 0-4611686018427387903", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4165-s1", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p911", "text": "An example of a decoding algorithm and sample encodings are shown in Appendix A.1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4166-s1", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p912", "text": "Values do not need to be encoded on the minimum number of bytes necessary, with the sole exception of the Frame Type field; see Section 12.4 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "16-p4167-s1", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p913", "text": "Versions ( Section 15 ), packet numbers sent in the header ( Section 17.1 ), and the length of connection IDs in long header packets ( Section 17.2 ) are described using integers but do not use this encoding. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4168-s1", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "17.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4169-s2", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Packet Formats All numeric values are encoded in network byte order (that is, big endian), and all field sizes are in bits.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4170-s3", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Hexadecimal notation is used for describing the value of fields. ¶ 17.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4171-s4", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Packet Number Encoding and Decoding Packet numbers are integers in the range 0 to 2 62 -1 ( Section 12.3 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4172-s5", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "When present in long or short packet headers, they are encoded in 1 to 4 bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4173-s6", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The number of bits required to represent the packet number is reduced by including only the least significant bits of the packet number. ¶ The encoded packet number is protected as described in Section 5.4 of [ QUIC-TLS ] . ¶ Prior to receiving an acknowledgment for a packet number space, the full packet number MUST be included; it is not to be truncated, as described below. ¶ After an acknowledgment is received for a packet number space, the sender MUST use a packet number size able to represent more than twice as large a range as the difference between the largest acknowledged packet number and the packet number being sent.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4174-s7", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A peer receiving the packet will then correctly decode the packet number, unless the packet is delayed in transit such that it arrives after many higher-numbered packets have been received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4175-s8", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "An endpoint SHOULD use a large enough packet number encoding to allow the packet number to be recovered even if the packet arrives after packets that are sent afterwards. ¶ As a result, the size of the packet number encoding is at least one bit more than the base-2 logarithm of the number of contiguous unacknowledged packet numbers, including the new packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4176-s9", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Pseudocode and an example for packet number encoding can be found in Appendix A.2 . ¶ At a receiver, protection of the packet number is removed prior to recovering the full packet number.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4177-s10", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The full packet number is then reconstructed based on the number of significant bits present, the value of those bits, and the largest packet number received in a successfully authenticated packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4178-s11", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Recovering the full packet number is necessary to successfully complete the removal of packet protection. ¶ Once header protection is removed, the packet number is decoded by finding the packet number value that is closest to the next expected packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4179-s12", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The next expected packet is the highest received packet number plus one.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4180-s13", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Pseudocode and an example for packet number decoding can be found in Appendix A.3 . ¶ 17.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4181-s14", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Long Header Packets Long Header Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2), Type-Specific Bits (4), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Type-Specific Payload (..), } Figure 13 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4182-s15", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Long Header Packet Format Long headers are used for packets that are sent prior to the establishment of 1-RTT keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4183-s16", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Once 1-RTT keys are available, a sender switches to sending packets using the short header ( Section 17.3 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4184-s17", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The long form allows for special packets -- such as the Version Negotiation packet -- to be represented in this uniform fixed-length packet format.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4185-s18", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Packets that use the long header contain the following fields: ¶ Header Form:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4186-s19", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The most significant bit (0x80) of byte 0 (the first byte) is set to 1 for long headers. ¶ Fixed Bit:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4187-s20", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The next bit (0x40) of byte 0 is set to 1, unless the packet is a Version Negotiation packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4188-s21", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Packets containing a zero value for this bit are not valid packets in this version and MUST be discarded.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4189-s22", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A value of 1 for this bit allows QUIC to coexist with other protocols; see [ RFC7983 ] . ¶ Long Packet Type:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4190-s23", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The next two bits (those with a mask of 0x30) of byte 0 contain a packet type.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4191-s24", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Packet types are listed in Table 5 . ¶ Type-Specific Bits:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4192-s25", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The semantics of the lower four bits (those with a mask of 0x0f) of byte 0 are determined by the packet type. ¶ Version:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4193-s26", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The QUIC Version is a 32-bit field that follows the first byte.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4194-s27", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "This field indicates the version of QUIC that is in use and determines how the rest of the protocol fields are interpreted. ¶ Destination Connection ID Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4195-s28", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The byte following the version contains the length in bytes of the Destination Connection ID field that follows it.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4196-s29", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "This length is encoded as an 8-bit unsigned integer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4197-s30", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "In QUIC version 1, this value MUST NOT exceed 20 bytes.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4198-s31", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Endpoints that receive a version 1 long header with a value larger than 20 MUST drop the packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4199-s32", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "In order to properly form a Version Negotiation packet, servers SHOULD be able to read longer connection IDs from other QUIC versions. ¶ Destination Connection ID:", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4200-s33", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The Destination Connection ID field follows the Destination Connection ID Length field, which indicates the length of this field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4201-s34", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Section 7.2 describes the use of this field in more detail. ¶ Source Connection ID Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4202-s35", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The byte following the Destination Connection ID contains the length in bytes of the Source Connection ID field that follows it.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4203-s36", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "This length is encoded as an 8-bit unsigned integer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4204-s37", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "In QUIC version 1, this value MUST NOT exceed 20 bytes.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4205-s38", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Endpoints that receive a version 1 long header with a value larger than 20 MUST drop the packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4206-s39", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "In order to properly form a Version Negotiation packet, servers SHOULD be able to read longer connection IDs from other QUIC versions. ¶ Source Connection ID:", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4207-s40", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The Source Connection ID field follows the Source Connection ID Length field, which indicates the length of this field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4208-s41", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Section 7.2 describes the use of this field in more detail. ¶ Type-Specific Payload:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4209-s42", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The remainder of the packet, if any, is type specific. ¶ In this version of QUIC, the following packet types with the long header are defined: ¶ Table 5 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4210-s43", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Long Header Packet Types Type Name Section 0x00 Initial Section 17.2.2 0x01 0-RTT Section 17.2.3 0x02 Handshake Section 17.2.4 0x03 Retry Section 17.2.5 The header form bit, Destination and Source Connection ID lengths, Destination and Source Connection ID fields, and Version fields of a long header packet are version independent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4211-s44", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The other fields in the first byte are version specific.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4212-s45", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "See [ QUIC-INVARIANTS ] for details on how packets from different versions of QUIC are interpreted. ¶ The interpretation of the fields and the payload are specific to a version and packet type.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4213-s46", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "While type-specific semantics for this version are described in the following sections, several long header packets in this version of QUIC contain these additional fields: ¶ Reserved Bits:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4214-s47", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Two bits (those with a mask of 0x0c) of byte 0 are reserved across multiple packet types.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4215-s48", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4216-s49", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The value included prior to protection MUST be set to 0.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4217-s50", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "An endpoint MUST treat receipt of a packet that has a non-zero value for these bits after removing both packet and header protection as a connection error of type PROTOCOL_VIOLATION.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4218-s51", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Discarding such a packet after only removing header protection can expose the endpoint to attacks; see Section 9.5 of [ QUIC-TLS ] . ¶ Packet Number Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4219-s52", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "In packet types that contain a Packet Number field, the least significant two bits (those with a mask of 0x03) of byte 0 contain the length of the Packet Number field, encoded as an unsigned two-bit integer that is one less than the length of the Packet Number field in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4220-s53", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "That is, the length of the Packet Number field is the value of this field plus one.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4221-s54", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] . ¶ Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4222-s55", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "This is the length of the remainder of the packet (that is, the Packet Number and Payload fields) in bytes, encoded as a variable-length integer ( Section 16 ). ¶ Packet Number:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4223-s56", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "This field is 1 to 4 bytes long.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4224-s57", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The packet number is protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4225-s58", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The length of the Packet Number field is encoded in the Packet Number Length bits of byte 0; see above. ¶ Packet Payload:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4226-s59", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "This is the payload of the packet -- containing a sequence of frames -- that is protected using packet protection. ¶ 17.2.1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "16-p4227-s60", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Version Negotiation Packet A Version Negotiation packet is inherently not version specific.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4228-s61", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Upon receipt by a client, it will be identified as a Version Negotiation packet based on the Version field having a value of 0. ¶ The Version Negotiation packet is a response to a client packet that contains a version that is not supported by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4229-s62", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "It is only sent by servers. ¶ The layout of a Version Negotiation packet is: ¶ Version Negotiation Packet { Header Form (1) = 1, Unused (7), Version (32) = 0, Destination Connection ID Length (8), Destination Connection ID (0..2040), Source Connection ID Length (8), Source Connection ID (0..2040), Supported Version (32) ..., } Figure 14 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4230-s63", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Version Negotiation Packet The value in the Unused field is set to an arbitrary value by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4231-s64", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Clients MUST ignore the value of this field.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4232-s65", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Where QUIC might be multiplexed with other protocols (see [ RFC7983 ] ), servers SHOULD set the most significant bit of this field (0x40) to 1 so that Version Negotiation packets appear to have the Fixed Bit field.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4233-s66", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Note that other versions of QUIC might not make a similar recommendation. ¶ The Version field of a Version Negotiation packet MUST be set to 0x00000000. ¶ The server MUST include the value from the Source Connection ID field of the packet it receives in the Destination Connection ID field.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4234-s67", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The value for Source Connection ID MUST be copied from the Destination Connection ID of the received packet, which is initially randomly selected by a client.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4235-s68", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Echoing both connection IDs gives clients some assurance that the server received the packet and that the Version Negotiation packet was not generated by an entity that did not observe the Initial packet. ¶ Future versions of QUIC could have different requirements for the lengths of connection IDs.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4236-s69", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "In particular, connection IDs might have a smaller minimum length or a greater maximum length.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4237-s70", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Version-specific rules for the connection ID therefore MUST NOT influence a decision about whether to send a Version Negotiation packet. ¶ The remainder of the Version Negotiation packet is a list of 32-bit versions that the server supports. ¶ A Version Negotiation packet is not acknowledged.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4238-s71", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "It is only sent in response to a packet that indicates an unsupported version; see Section 5.2.2 . ¶ The Version Negotiation packet does not include the Packet Number and Length fields present in other packets that use the long header form.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4239-s72", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Consequently, a Version Negotiation packet consumes an entire UDP datagram. ¶ A server MUST NOT send more than one Version Negotiation packet in response to a single UDP datagram. ¶ See Section 6 for a description of the version negotiation process. ¶ 17.2.2.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4240-s73", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Initial Packet An Initial packet uses long headers with a type value of 0x00.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4241-s74", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "It carries the first CRYPTO frames sent by the client and server to perform key exchange, and it carries ACK frames in either direction. ¶ Initial Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 0, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Token Length (i), Token (..), Length (i), Packet Number (8..32), Packet Payload (8..), } Figure 15 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "16-p4242-s75", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Initial Packet The Initial packet contains a long header as well as the Length and Packet Number fields; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4243-s76", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The first byte contains the Reserved and Packet Number Length bits; see also Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4244-s77", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Between the Source Connection ID and Length fields, there are two additional fields specific to the Initial packet. ¶ Token Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4245-s78", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A variable-length integer specifying the length of the Token field, in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4246-s79", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "This value is 0 if no token is present.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4247-s80", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Initial packets sent by the server MUST set the Token Length field to 0; clients that receive an Initial packet with a non-zero Token Length field MUST either discard the packet or generate a connection error of type PROTOCOL_VIOLATION. ¶ Token:", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4248-s81", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The value of the token that was previously provided in a Retry packet or NEW_TOKEN frame; see Section 8.1 . ¶ In order to prevent tampering by version-unaware middleboxes, Initial packets are protected with connection- and version-specific keys (Initial keys) as described in [ QUIC-TLS ] .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "16-p4249-s82", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "This protection does not provide confidentiality or integrity against attackers that can observe packets, but it does prevent attackers that cannot observe packets from spoofing Initial packets. ¶ The client and server use the Initial packet type for any packet that contains an initial cryptographic handshake message.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4250-s83", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "This includes all cases where a new packet containing the initial cryptographic message needs to be created, such as the packets sent after receiving a Retry packet; see Section 17.2.5 . ¶ A server sends its first Initial packet in response to a client Initial.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4251-s84", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A server MAY send multiple Initial packets.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4252-s85", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The cryptographic key exchange could require multiple round trips or retransmissions of this data. ¶ The payload of an Initial packet includes a CRYPTO frame (or frames) containing a cryptographic handshake message, ACK frames, or both.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "16-p4253-s86", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "PING, PADDING, and CONNECTION_CLOSE frames of type 0x1c are also permitted.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "16-p4254-s87", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "An endpoint that receives an Initial packet containing other frames can either discard the packet as spurious or treat it as a connection error. ¶ The first packet sent by a client always includes a CRYPTO frame that contains the start or all of the first cryptographic handshake message.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "16-p4255-s88", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The first CRYPTO frame sent always begins at an offset of 0; see Section 7 . ¶ Note that if the server sends a TLS HelloRetryRequest (see Section 4.7 of [ QUIC-TLS ] ), the client will send another series of Initial packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "16-p4256-s89", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "These Initial packets will continue the cryptographic handshake and will contain CRYPTO frames starting at an offset matching the size of the CRYPTO frames sent in the first flight of Initial packets. ¶ 17.2.2.1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "16-p4257-s90", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Abandoning Initial Packets A client stops both sending and processing Initial packets when it sends its first Handshake packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4258-s91", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A server stops sending and processing Initial packets when it receives its first Handshake packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4259-s92", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Though packets might still be in flight or awaiting acknowledgment, no further Initial packets need to be exchanged beyond this point.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4260-s93", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Initial packet protection keys are discarded (see Section 4.9.1 of [ QUIC-TLS ] ) along with any loss recovery and congestion control state; see Section 6.4 of [ QUIC-RECOVERY ] . ¶ Any data in CRYPTO frames is discarded -- and no longer retransmitted -- when Initial keys are discarded. ¶ 17.2.3. 0-RTT A 0-RTT packet uses long headers with a type value of 0x01, followed by the Length and Packet Number fields; see Section 17.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "16-p4261-s94", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The first byte contains the Reserved and Packet Number Length bits; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4262-s95", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A 0-RTT packet is used to carry \"early\" data from the client to the server as part of the first flight, prior to handshake completion.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4263-s96", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "As part of the TLS handshake, the server can accept or reject this early data. ¶ See Section 2.3 of [ TLS13 ] for a discussion of 0-RTT data and its limitations. ¶ 0-RTT Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 1, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Length (i), Packet Number (8..32), Packet Payload (8..), } Figure 16 : 0-RTT Packet Packet numbers for 0-RTT protected packets use the same space as 1-RTT protected packets. ¶ After a client receives a Retry packet, 0-RTT packets are likely to have been lost or discarded by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4264-s97", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A client SHOULD attempt to resend data in 0-RTT packets after it sends a new Initial packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4265-s98", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "New packet numbers MUST be used for any new packets that are sent; as described in Section 17.2.5.3 , reusing packet numbers could compromise packet protection. ¶ A client only receives acknowledgments for its 0-RTT packets once the handshake is complete, as defined in Section 4.1.1 of [ QUIC-TLS ] . ¶ A client MUST NOT send 0-RTT packets once it starts processing 1-RTT packets from the server.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4266-s99", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "This means that 0-RTT packets cannot contain any response to frames from 1-RTT packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "16-p4267-s100", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "For instance, a client cannot send an ACK frame in a 0-RTT packet, because that can only acknowledge a 1-RTT packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "16-p4268-s101", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "An acknowledgment for a 1-RTT packet MUST be carried in a 1-RTT packet. ¶ A server SHOULD treat a violation of remembered limits ( Section 7.4.1 ) as a connection error of an appropriate type (for instance, a FLOW_CONTROL_ERROR for exceeding stream data limits). ¶ 17.2.4.", "facet": "other", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 3}
{"sent_id": "16-p4269-s102", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Handshake Packet A Handshake packet uses long headers with a type value of 0x02, followed by the Length and Packet Number fields; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4270-s103", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The first byte contains the Reserved and Packet Number Length bits; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4271-s104", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "It is used to carry cryptographic handshake messages and acknowledgments from the server and client. ¶ Handshake Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 2, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Length (i), Packet Number (8..32), Packet Payload (8..), } Figure 17 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4272-s105", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Handshake Protected Packet Once a client has received a Handshake packet from a server, it uses Handshake packets to send subsequent cryptographic handshake messages and acknowledgments to the server. ¶ The Destination Connection ID field in a Handshake packet contains a connection ID that is chosen by the recipient of the packet; the Source Connection ID includes the connection ID that the sender of the packet wishes to use; see Section 7.2 . ¶ Handshake packets have their own packet number space, and thus the first Handshake packet sent by a server contains a packet number of 0. ¶ The payload of this packet contains CRYPTO frames and could contain PING, PADDING, or ACK frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "sender", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "16-p4273-s106", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Handshake packets MAY contain CONNECTION_CLOSE frames of type 0x1c.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "16-p4274-s107", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Endpoints MUST treat receipt of Handshake packets with other frames as a connection error of type PROTOCOL_VIOLATION. ¶ Like Initial packets (see Section 17.2.2.1 ), data in CRYPTO frames for Handshake packets is discarded -- and no longer retransmitted -- when Handshake protection keys are discarded. ¶ 17.2.5.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "16-p4275-s108", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Retry Packet As shown in Figure 18 , a Retry packet uses a long packet header with a type value of 0x03.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4276-s109", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "It carries an address validation token created by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4277-s110", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "It is used by a server that wishes to perform a retry; see Section 8.1 . ¶ Retry Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 3, Unused (4), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Retry Token (..), Retry Integrity Tag (128), } Figure 18 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4278-s111", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Retry Packet A Retry packet does not contain any protected fields.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4279-s112", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The value in the Unused field is set to an arbitrary value by the server; a client MUST ignore these bits.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4280-s113", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "In addition to the fields from the long header, it contains these additional fields: ¶ Retry Token:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4281-s114", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "An opaque token that the server can use to validate the client's address. ¶ Retry Integrity Tag:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4282-s115", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Defined in Section 5.8 ( \"Retry Packet Integrity\" ) of [ QUIC-TLS ] . ¶ 17.2.5.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4283-s116", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Sending a Retry Packet The server populates the Destination Connection ID with the connection ID that the client included in the Source Connection ID of the Initial packet. ¶ The server includes a connection ID of its choice in the Source Connection ID field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4284-s117", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "This value MUST NOT be equal to the Destination Connection ID field of the packet sent by the client.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4285-s118", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A client MUST discard a Retry packet that contains a Source Connection ID field that is identical to the Destination Connection ID field of its Initial packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4286-s119", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The client MUST use the value from the Source Connection ID field of the Retry packet in the Destination Connection ID field of subsequent packets that it sends. ¶ A server MAY send Retry packets in response to Initial and 0-RTT packets.", "facet": "other", "normative": true, "modalities": ["MUST", "MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4287-s120", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A server can either discard or buffer 0-RTT packets that it receives.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4288-s121", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A server can send multiple Retry packets as it receives Initial or 0-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4289-s122", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A server MUST NOT send more than one Retry packet in response to a single UDP datagram. ¶ 17.2.5.2.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4290-s123", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Handling a Retry Packet A client MUST accept and process at most one Retry packet for each connection attempt.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4291-s124", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "After the client has received and processed an Initial or Retry packet from the server, it MUST discard any subsequent Retry packets that it receives. ¶ Clients MUST discard Retry packets that have a Retry Integrity Tag that cannot be validated; see Section 5.8 of [ QUIC-TLS ] .", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4292-s125", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "This diminishes an attacker's ability to inject a Retry packet and protects against accidental corruption of Retry packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4293-s126", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A client MUST discard a Retry packet with a zero-length Retry Token field. ¶ The client responds to a Retry packet with an Initial packet that includes the provided Retry token to continue connection establishment. ¶ A client sets the Destination Connection ID field of this Initial packet to the value from the Source Connection ID field in the Retry packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4294-s127", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Changing the Destination Connection ID field also results in a change to the keys used to protect the Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4295-s128", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "It also sets the Token field to the token provided in the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4296-s129", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The client MUST NOT change the Source Connection ID because the server could include the connection ID as part of its token validation logic; see Section 8.1.4 . ¶ A Retry packet does not include a packet number and cannot be explicitly acknowledged by a client. ¶ 17.2.5.3.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4297-s130", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Continuing a Handshake after Retry Subsequent Initial packets from the client include the connection ID and token values from the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4298-s131", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The client copies the Source Connection ID field from the Retry packet to the Destination Connection ID field and uses this value until an Initial packet with an updated value is received; see Section 7.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4299-s132", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The value of the Token field is copied to all subsequent Initial packets; see Section 8.1.2 . ¶ Other than updating the Destination Connection ID and Token fields, the Initial packet sent by the client is subject to the same restrictions as the first Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4300-s133", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A client MUST use the same cryptographic handshake message it included in this packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4301-s134", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A server MAY treat a packet that contains a different cryptographic handshake message as a connection error or discard it.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4302-s135", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Note that including a Token field reduces the available space for the cryptographic handshake message, which might result in the client needing to send multiple Initial packets. ¶ A client MAY attempt 0-RTT after receiving a Retry packet by sending 0-RTT packets to the connection ID provided by the server. ¶ A client MUST NOT reset the packet number for any packet number space after processing a Retry packet.", "facet": "other", "normative": true, "modalities": ["MAY", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4303-s136", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "In particular, 0-RTT packets contain confidential information that will most likely be retransmitted on receiving a Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4304-s137", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The keys used to protect these new 0-RTT packets will not change as a result of responding to a Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4305-s138", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "However, the data sent in these packets could be different than what was sent earlier.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4306-s139", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Sending these new packets with the same packet number is likely to compromise the packet protection for those packets because the same key and nonce could be used to protect different content.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4307-s140", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A server MAY abort the connection if it detects that the client reset the packet number. ¶ The connection IDs used in Initial and Retry packets exchanged between client and server are copied to the transport parameters and validated as described in Section 7.3 . ¶ 17.3.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4308-s141", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Short Header Packets This version of QUIC defines a single packet type that uses the short packet header. ¶ 17.3.1. 1-RTT Packet A 1-RTT packet uses a short packet header.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4309-s142", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "It is used after the version and 1-RTT keys are negotiated. ¶ 1-RTT Packet { Header Form (1) = 0, Fixed Bit (1) = 1, Spin Bit (1), Reserved Bits (2), Key Phase (1), Packet Number Length (2), Destination Connection ID (0..160), Packet Number (8..32), Packet Payload (8..), } Figure 19 : 1-RTT Packet 1-RTT packets contain the following fields: ¶ Header Form:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4310-s143", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The most significant bit (0x80) of byte 0 is set to 0 for the short header. ¶ Fixed Bit:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4311-s144", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The next bit (0x40) of byte 0 is set to 1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4312-s145", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Packets containing a zero value for this bit are not valid packets in this version and MUST be discarded.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4313-s146", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "A value of 1 for this bit allows QUIC to coexist with other protocols; see [ RFC7983 ] . ¶ Spin Bit:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4314-s147", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The third most significant bit (0x20) of byte 0 is the latency spin bit, set as described in Section 17.4 . ¶ Reserved Bits:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4315-s148", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The next two bits (those with a mask of 0x18) of byte 0 are reserved.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4316-s149", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4317-s150", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The value included prior to protection MUST be set to 0.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4318-s151", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "An endpoint MUST treat receipt of a packet that has a non-zero value for these bits, after removing both packet and header protection, as a connection error of type PROTOCOL_VIOLATION.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4319-s152", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Discarding such a packet after only removing header protection can expose the endpoint to attacks; see Section 9.5 of [ QUIC-TLS ] . ¶ Key Phase:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4320-s153", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The next bit (0x04) of byte 0 indicates the key phase, which allows a recipient of a packet to identify the packet protection keys that are used to protect the packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4321-s154", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "See [ QUIC-TLS ] for details.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4322-s155", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "This bit is protected using header protection; see Section 5.4 of [ QUIC-TLS ] . ¶ Packet Number Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4323-s156", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The least significant two bits (those with a mask of 0x03) of byte 0 contain the length of the Packet Number field, encoded as an unsigned two-bit integer that is one less than the length of the Packet Number field in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4324-s157", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "That is, the length of the Packet Number field is the value of this field plus one.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4325-s158", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] . ¶ Destination Connection ID:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4326-s159", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The Destination Connection ID is a connection ID that is chosen by the intended recipient of the packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4327-s160", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "See Section 5.1 for more details. ¶ Packet Number:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4328-s161", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The Packet Number field is 1 to 4 bytes long.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4329-s162", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The packet number is protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4330-s163", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The length of the Packet Number field is encoded in Packet Number Length field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4331-s164", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "See Section 17.1 for details. ¶ Packet Payload: 1-RTT packets always include a 1-RTT protected payload. ¶ The header form bit and the Destination Connection ID field of a short header packet are version independent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4332-s165", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The remaining fields are specific to the selected QUIC version.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4333-s166", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "See [ QUIC-INVARIANTS ] for details on how packets from different versions of QUIC are interpreted. ¶ 17.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4334-s167", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Latency Spin Bit The latency spin bit, which is defined for 1-RTT packets ( Section 17.3.1 ), enables passive latency monitoring from observation points on the network path throughout the duration of a connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4335-s168", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The server reflects the spin value received, while the client \"spins\" it after one RTT.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "16-p4336-s169", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "On-path observers can measure the time between two spin bit toggle events to estimate the end-to-end RTT of a connection. ¶ The spin bit is only present in 1-RTT packets, since it is possible to measure the initial RTT of a connection by observing the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4337-s170", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Therefore, the spin bit is available after version negotiation and connection establishment are completed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4338-s171", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "On-path measurement and use of the latency spin bit are further discussed in [ QUIC-MANAGEABILITY ] . ¶ The spin bit is an OPTIONAL feature of this version of QUIC.", "facet": "other", "normative": true, "modalities": ["OPTIONAL"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4339-s172", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "An endpoint that does not support this feature MUST disable it, as defined below. ¶ Each endpoint unilaterally decides if the spin bit is enabled or disabled for a connection.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4340-s173", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Implementations MUST allow administrators of clients and servers to disable the spin bit either globally or on a per-connection basis.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "16-p4341-s174", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Even when the spin bit is not disabled by the administrator, endpoints MUST disable their use of the spin bit for a random selection of at least one in every 16 network paths, or for one in every 16 connection IDs, in order to ensure that QUIC connections that disable the spin bit are commonly observed on the network.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4342-s175", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "As each endpoint disables the spin bit independently, this ensures that the spin bit signal is disabled on approximately one in eight network paths. ¶ When the spin bit is disabled, endpoints MAY set the spin bit to any value and MUST ignore any incoming value.", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4343-s176", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "It is RECOMMENDED that endpoints set the spin bit to a random value either chosen independently for each packet or chosen independently for each connection ID. ¶ If the spin bit is enabled for the connection, the endpoint maintains a spin value for each network path and sets the spin bit in the packet header to the currently stored value when a 1-RTT packet is sent on that path.", "facet": "other", "normative": true, "modalities": ["RECOMMENDED"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "16-p4344-s177", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "The spin value is initialized to 0 in the endpoint for each network path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "16-p4345-s178", "section": "16", "anchor": "#name-variable-length-integer-enc", "para_id": "16-p914", "text": "Each endpoint also remembers the highest packet number seen from its peer on each path. ¶ When a server receives a 1-RTT packet that increases the highest packet number seen by the server from the client on a given network path, it sets the spin value for that path to be equal to the spin bit in the received packet. ¶ When a client receives a 1-RTT packet that increases the highest packet number seen by the client from the server on a given network path, it sets the spin value for that path to the inverse of the spin bit in the received packet. ¶ An endpoint resets the spin value for a network path to 0 when changing the connection ID being used on that network path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17-p4346-s1", "section": "17", "anchor": "#name-packet-formats", "para_id": "17-p915", "text": "All numeric values are encoded in network byte order (that is, big endian), and all field sizes are in bits.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17-p4347-s2", "section": "17", "anchor": "#name-packet-formats", "para_id": "17-p915", "text": "Hexadecimal notation is used for describing the value of fields. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17-p4348-s1", "section": "17", "anchor": "#name-packet-formats", "para_id": "17-p916", "text": "17.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17-p4349-s2", "section": "17", "anchor": "#name-packet-formats", "para_id": "17-p916", "text": "Packet Number Encoding and Decoding Packet numbers are integers in the range 0 to 2 62 -1 ( Section 12.3 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17-p4350-s3", "section": "17", "anchor": "#name-packet-formats", "para_id": "17-p916", "text": "When present in long or short packet headers, they are encoded in 1 to 4 bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17-p4351-s4", "section": "17", "anchor": "#name-packet-formats", "para_id": "17-p916", "text": "The number of bits required to represent the packet number is reduced by including only the least significant bits of the packet number. ¶ The encoded packet number is protected as described in Section 5.4 of [ QUIC-TLS ] . ¶ Prior to receiving an acknowledgment for a packet number space, the full packet number MUST be included; it is not to be truncated, as described below. ¶ After an acknowledgment is received for a packet number space, the sender MUST use a packet number size able to represent more than twice as large a range as the difference between the largest acknowledged packet number and the packet number being sent.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17-p4352-s5", "section": "17", "anchor": "#name-packet-formats", "para_id": "17-p916", "text": "A peer receiving the packet will then correctly decode the packet number, unless the packet is delayed in transit such that it arrives after many higher-numbered packets have been received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17-p4353-s6", "section": "17", "anchor": "#name-packet-formats", "para_id": "17-p916", "text": "An endpoint SHOULD use a large enough packet number encoding to allow the packet number to be recovered even if the packet arrives after packets that are sent afterwards. ¶ As a result, the size of the packet number encoding is at least one bit more than the base-2 logarithm of the number of contiguous unacknowledged packet numbers, including the new packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17-p4354-s7", "section": "17", "anchor": "#name-packet-formats", "para_id": "17-p916", "text": "Pseudocode and an example for packet number encoding can be found in Appendix A.2 . ¶ At a receiver, protection of the packet number is removed prior to recovering the full packet number.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17-p4355-s8", "section": "17", "anchor": "#name-packet-formats", "para_id": "17-p916", "text": "The full packet number is then reconstructed based on the number of significant bits present, the value of those bits, and the largest packet number received in a successfully authenticated packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17-p4356-s9", "section": "17", "anchor": "#name-packet-formats", "para_id": "17-p916", "text": "Recovering the full packet number is necessary to successfully complete the removal of packet protection. ¶ Once header protection is removed, the packet number is decoded by finding the packet number value that is closest to the next expected packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17-p4357-s10", "section": "17", "anchor": "#name-packet-formats", "para_id": "17-p916", "text": "The next expected packet is the highest received packet number plus one.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17-p4358-s11", "section": "17", "anchor": "#name-packet-formats", "para_id": "17-p916", "text": "Pseudocode and an example for packet number decoding can be found in Appendix A.3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4359-s1", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p917", "text": "Packet numbers are integers in the range 0 to 2 62 -1 ( Section 12.3 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4360-s2", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p917", "text": "When present in long or short packet headers, they are encoded in 1 to 4 bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4361-s3", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p917", "text": "The number of bits required to represent the packet number is reduced by including only the least significant bits of the packet number. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4362-s1", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p918", "text": "The encoded packet number is protected as described in Section 5.4 of [ QUIC-TLS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4363-s1", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p919", "text": "Prior to receiving an acknowledgment for a packet number space, the full packet number MUST be included; it is not to be truncated, as described below. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4364-s1", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p920", "text": "After an acknowledgment is received for a packet number space, the sender MUST use a packet number size able to represent more than twice as large a range as the difference between the largest acknowledged packet number and the packet number being sent.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4365-s2", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p920", "text": "A peer receiving the packet will then correctly decode the packet number, unless the packet is delayed in transit such that it arrives after many higher-numbered packets have been received.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4366-s3", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p920", "text": "An endpoint SHOULD use a large enough packet number encoding to allow the packet number to be recovered even if the packet arrives after packets that are sent afterwards. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4367-s1", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p921", "text": "As a result, the size of the packet number encoding is at least one bit more than the base-2 logarithm of the number of contiguous unacknowledged packet numbers, including the new packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4368-s2", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p921", "text": "Pseudocode and an example for packet number encoding can be found in Appendix A.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4369-s1", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p922", "text": "At a receiver, protection of the packet number is removed prior to recovering the full packet number.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4370-s2", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p922", "text": "The full packet number is then reconstructed based on the number of significant bits present, the value of those bits, and the largest packet number received in a successfully authenticated packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4371-s3", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p922", "text": "Recovering the full packet number is necessary to successfully complete the removal of packet protection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4372-s1", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p923", "text": "Once header protection is removed, the packet number is decoded by finding the packet number value that is closest to the next expected packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4373-s2", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p923", "text": "The next expected packet is the highest received packet number plus one.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4374-s3", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p923", "text": "Pseudocode and an example for packet number decoding can be found in Appendix A.3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4375-s1", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "17.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4376-s2", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Long Header Packets Long Header Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2), Type-Specific Bits (4), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Type-Specific Payload (..), } Figure 13 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4377-s3", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Long Header Packet Format Long headers are used for packets that are sent prior to the establishment of 1-RTT keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4378-s4", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Once 1-RTT keys are available, a sender switches to sending packets using the short header ( Section 17.3 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4379-s5", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The long form allows for special packets -- such as the Version Negotiation packet -- to be represented in this uniform fixed-length packet format.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4380-s6", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Packets that use the long header contain the following fields: ¶ Header Form:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4381-s7", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The most significant bit (0x80) of byte 0 (the first byte) is set to 1 for long headers. ¶ Fixed Bit:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4382-s8", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The next bit (0x40) of byte 0 is set to 1, unless the packet is a Version Negotiation packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4383-s9", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Packets containing a zero value for this bit are not valid packets in this version and MUST be discarded.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4384-s10", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A value of 1 for this bit allows QUIC to coexist with other protocols; see [ RFC7983 ] . ¶ Long Packet Type:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4385-s11", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The next two bits (those with a mask of 0x30) of byte 0 contain a packet type.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4386-s12", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Packet types are listed in Table 5 . ¶ Type-Specific Bits:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4387-s13", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The semantics of the lower four bits (those with a mask of 0x0f) of byte 0 are determined by the packet type. ¶ Version:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4388-s14", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The QUIC Version is a 32-bit field that follows the first byte.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4389-s15", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "This field indicates the version of QUIC that is in use and determines how the rest of the protocol fields are interpreted. ¶ Destination Connection ID Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4390-s16", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The byte following the version contains the length in bytes of the Destination Connection ID field that follows it.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4391-s17", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "This length is encoded as an 8-bit unsigned integer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4392-s18", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "In QUIC version 1, this value MUST NOT exceed 20 bytes.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4393-s19", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Endpoints that receive a version 1 long header with a value larger than 20 MUST drop the packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4394-s20", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "In order to properly form a Version Negotiation packet, servers SHOULD be able to read longer connection IDs from other QUIC versions. ¶ Destination Connection ID:", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4395-s21", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The Destination Connection ID field follows the Destination Connection ID Length field, which indicates the length of this field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4396-s22", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Section 7.2 describes the use of this field in more detail. ¶ Source Connection ID Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4397-s23", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The byte following the Destination Connection ID contains the length in bytes of the Source Connection ID field that follows it.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4398-s24", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "This length is encoded as an 8-bit unsigned integer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4399-s25", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "In QUIC version 1, this value MUST NOT exceed 20 bytes.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4400-s26", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Endpoints that receive a version 1 long header with a value larger than 20 MUST drop the packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4401-s27", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "In order to properly form a Version Negotiation packet, servers SHOULD be able to read longer connection IDs from other QUIC versions. ¶ Source Connection ID:", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4402-s28", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The Source Connection ID field follows the Source Connection ID Length field, which indicates the length of this field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4403-s29", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Section 7.2 describes the use of this field in more detail. ¶ Type-Specific Payload:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4404-s30", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The remainder of the packet, if any, is type specific. ¶ In this version of QUIC, the following packet types with the long header are defined: ¶ Table 5 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4405-s31", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Long Header Packet Types Type Name Section 0x00 Initial Section 17.2.2 0x01 0-RTT Section 17.2.3 0x02 Handshake Section 17.2.4 0x03 Retry Section 17.2.5 The header form bit, Destination and Source Connection ID lengths, Destination and Source Connection ID fields, and Version fields of a long header packet are version independent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4406-s32", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The other fields in the first byte are version specific.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4407-s33", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "See [ QUIC-INVARIANTS ] for details on how packets from different versions of QUIC are interpreted. ¶ The interpretation of the fields and the payload are specific to a version and packet type.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4408-s34", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "While type-specific semantics for this version are described in the following sections, several long header packets in this version of QUIC contain these additional fields: ¶ Reserved Bits:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4409-s35", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Two bits (those with a mask of 0x0c) of byte 0 are reserved across multiple packet types.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4410-s36", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4411-s37", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The value included prior to protection MUST be set to 0.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4412-s38", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "An endpoint MUST treat receipt of a packet that has a non-zero value for these bits after removing both packet and header protection as a connection error of type PROTOCOL_VIOLATION.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4413-s39", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Discarding such a packet after only removing header protection can expose the endpoint to attacks; see Section 9.5 of [ QUIC-TLS ] . ¶ Packet Number Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4414-s40", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "In packet types that contain a Packet Number field, the least significant two bits (those with a mask of 0x03) of byte 0 contain the length of the Packet Number field, encoded as an unsigned two-bit integer that is one less than the length of the Packet Number field in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4415-s41", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "That is, the length of the Packet Number field is the value of this field plus one.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4416-s42", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] . ¶ Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4417-s43", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "This is the length of the remainder of the packet (that is, the Packet Number and Payload fields) in bytes, encoded as a variable-length integer ( Section 16 ). ¶ Packet Number:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4418-s44", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "This field is 1 to 4 bytes long.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4419-s45", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The packet number is protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4420-s46", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The length of the Packet Number field is encoded in the Packet Number Length bits of byte 0; see above. ¶ Packet Payload:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4421-s47", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "This is the payload of the packet -- containing a sequence of frames -- that is protected using packet protection. ¶ 17.2.1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.1-p4422-s48", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Version Negotiation Packet A Version Negotiation packet is inherently not version specific.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4423-s49", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Upon receipt by a client, it will be identified as a Version Negotiation packet based on the Version field having a value of 0. ¶ The Version Negotiation packet is a response to a client packet that contains a version that is not supported by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4424-s50", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "It is only sent by servers. ¶ The layout of a Version Negotiation packet is: ¶ Version Negotiation Packet { Header Form (1) = 1, Unused (7), Version (32) = 0, Destination Connection ID Length (8), Destination Connection ID (0..2040), Source Connection ID Length (8), Source Connection ID (0..2040), Supported Version (32) ..., } Figure 14 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4425-s51", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Version Negotiation Packet The value in the Unused field is set to an arbitrary value by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4426-s52", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Clients MUST ignore the value of this field.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4427-s53", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Where QUIC might be multiplexed with other protocols (see [ RFC7983 ] ), servers SHOULD set the most significant bit of this field (0x40) to 1 so that Version Negotiation packets appear to have the Fixed Bit field.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4428-s54", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Note that other versions of QUIC might not make a similar recommendation. ¶ The Version field of a Version Negotiation packet MUST be set to 0x00000000. ¶ The server MUST include the value from the Source Connection ID field of the packet it receives in the Destination Connection ID field.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4429-s55", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The value for Source Connection ID MUST be copied from the Destination Connection ID of the received packet, which is initially randomly selected by a client.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4430-s56", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Echoing both connection IDs gives clients some assurance that the server received the packet and that the Version Negotiation packet was not generated by an entity that did not observe the Initial packet. ¶ Future versions of QUIC could have different requirements for the lengths of connection IDs.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4431-s57", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "In particular, connection IDs might have a smaller minimum length or a greater maximum length.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4432-s58", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Version-specific rules for the connection ID therefore MUST NOT influence a decision about whether to send a Version Negotiation packet. ¶ The remainder of the Version Negotiation packet is a list of 32-bit versions that the server supports. ¶ A Version Negotiation packet is not acknowledged.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4433-s59", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "It is only sent in response to a packet that indicates an unsupported version; see Section 5.2.2 . ¶ The Version Negotiation packet does not include the Packet Number and Length fields present in other packets that use the long header form.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4434-s60", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Consequently, a Version Negotiation packet consumes an entire UDP datagram. ¶ A server MUST NOT send more than one Version Negotiation packet in response to a single UDP datagram. ¶ See Section 6 for a description of the version negotiation process. ¶ 17.2.2.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4435-s61", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Initial Packet An Initial packet uses long headers with a type value of 0x00.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4436-s62", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "It carries the first CRYPTO frames sent by the client and server to perform key exchange, and it carries ACK frames in either direction. ¶ Initial Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 0, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Token Length (i), Token (..), Length (i), Packet Number (8..32), Packet Payload (8..), } Figure 15 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.1-p4437-s63", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Initial Packet The Initial packet contains a long header as well as the Length and Packet Number fields; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4438-s64", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The first byte contains the Reserved and Packet Number Length bits; see also Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4439-s65", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Between the Source Connection ID and Length fields, there are two additional fields specific to the Initial packet. ¶ Token Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4440-s66", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A variable-length integer specifying the length of the Token field, in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4441-s67", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "This value is 0 if no token is present.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4442-s68", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Initial packets sent by the server MUST set the Token Length field to 0; clients that receive an Initial packet with a non-zero Token Length field MUST either discard the packet or generate a connection error of type PROTOCOL_VIOLATION. ¶ Token:", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4443-s69", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The value of the token that was previously provided in a Retry packet or NEW_TOKEN frame; see Section 8.1 . ¶ In order to prevent tampering by version-unaware middleboxes, Initial packets are protected with connection- and version-specific keys (Initial keys) as described in [ QUIC-TLS ] .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.1-p4444-s70", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "This protection does not provide confidentiality or integrity against attackers that can observe packets, but it does prevent attackers that cannot observe packets from spoofing Initial packets. ¶ The client and server use the Initial packet type for any packet that contains an initial cryptographic handshake message.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4445-s71", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "This includes all cases where a new packet containing the initial cryptographic message needs to be created, such as the packets sent after receiving a Retry packet; see Section 17.2.5 . ¶ A server sends its first Initial packet in response to a client Initial.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4446-s72", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A server MAY send multiple Initial packets.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4447-s73", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The cryptographic key exchange could require multiple round trips or retransmissions of this data. ¶ The payload of an Initial packet includes a CRYPTO frame (or frames) containing a cryptographic handshake message, ACK frames, or both.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.1-p4448-s74", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "PING, PADDING, and CONNECTION_CLOSE frames of type 0x1c are also permitted.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.1-p4449-s75", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "An endpoint that receives an Initial packet containing other frames can either discard the packet as spurious or treat it as a connection error. ¶ The first packet sent by a client always includes a CRYPTO frame that contains the start or all of the first cryptographic handshake message.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.1-p4450-s76", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The first CRYPTO frame sent always begins at an offset of 0; see Section 7 . ¶ Note that if the server sends a TLS HelloRetryRequest (see Section 4.7 of [ QUIC-TLS ] ), the client will send another series of Initial packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.1-p4451-s77", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "These Initial packets will continue the cryptographic handshake and will contain CRYPTO frames starting at an offset matching the size of the CRYPTO frames sent in the first flight of Initial packets. ¶ 17.2.2.1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.1-p4452-s78", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Abandoning Initial Packets A client stops both sending and processing Initial packets when it sends its first Handshake packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4453-s79", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A server stops sending and processing Initial packets when it receives its first Handshake packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4454-s80", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Though packets might still be in flight or awaiting acknowledgment, no further Initial packets need to be exchanged beyond this point.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4455-s81", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Initial packet protection keys are discarded (see Section 4.9.1 of [ QUIC-TLS ] ) along with any loss recovery and congestion control state; see Section 6.4 of [ QUIC-RECOVERY ] . ¶ Any data in CRYPTO frames is discarded -- and no longer retransmitted -- when Initial keys are discarded. ¶ 17.2.3. 0-RTT A 0-RTT packet uses long headers with a type value of 0x01, followed by the Length and Packet Number fields; see Section 17.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.1-p4456-s82", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The first byte contains the Reserved and Packet Number Length bits; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4457-s83", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A 0-RTT packet is used to carry \"early\" data from the client to the server as part of the first flight, prior to handshake completion.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4458-s84", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "As part of the TLS handshake, the server can accept or reject this early data. ¶ See Section 2.3 of [ TLS13 ] for a discussion of 0-RTT data and its limitations. ¶ 0-RTT Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 1, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Length (i), Packet Number (8..32), Packet Payload (8..), } Figure 16 : 0-RTT Packet Packet numbers for 0-RTT protected packets use the same space as 1-RTT protected packets. ¶ After a client receives a Retry packet, 0-RTT packets are likely to have been lost or discarded by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4459-s85", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A client SHOULD attempt to resend data in 0-RTT packets after it sends a new Initial packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4460-s86", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "New packet numbers MUST be used for any new packets that are sent; as described in Section 17.2.5.3 , reusing packet numbers could compromise packet protection. ¶ A client only receives acknowledgments for its 0-RTT packets once the handshake is complete, as defined in Section 4.1.1 of [ QUIC-TLS ] . ¶ A client MUST NOT send 0-RTT packets once it starts processing 1-RTT packets from the server.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4461-s87", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "This means that 0-RTT packets cannot contain any response to frames from 1-RTT packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.1-p4462-s88", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "For instance, a client cannot send an ACK frame in a 0-RTT packet, because that can only acknowledge a 1-RTT packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.1-p4463-s89", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "An acknowledgment for a 1-RTT packet MUST be carried in a 1-RTT packet. ¶ A server SHOULD treat a violation of remembered limits ( Section 7.4.1 ) as a connection error of an appropriate type (for instance, a FLOW_CONTROL_ERROR for exceeding stream data limits). ¶ 17.2.4.", "facet": "other", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4464-s90", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Handshake Packet A Handshake packet uses long headers with a type value of 0x02, followed by the Length and Packet Number fields; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4465-s91", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The first byte contains the Reserved and Packet Number Length bits; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4466-s92", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "It is used to carry cryptographic handshake messages and acknowledgments from the server and client. ¶ Handshake Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 2, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Length (i), Packet Number (8..32), Packet Payload (8..), } Figure 17 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4467-s93", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Handshake Protected Packet Once a client has received a Handshake packet from a server, it uses Handshake packets to send subsequent cryptographic handshake messages and acknowledgments to the server. ¶ The Destination Connection ID field in a Handshake packet contains a connection ID that is chosen by the recipient of the packet; the Source Connection ID includes the connection ID that the sender of the packet wishes to use; see Section 7.2 . ¶ Handshake packets have their own packet number space, and thus the first Handshake packet sent by a server contains a packet number of 0. ¶ The payload of this packet contains CRYPTO frames and could contain PING, PADDING, or ACK frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "sender", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.1-p4468-s94", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Handshake packets MAY contain CONNECTION_CLOSE frames of type 0x1c.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "17.1-p4469-s95", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Endpoints MUST treat receipt of Handshake packets with other frames as a connection error of type PROTOCOL_VIOLATION. ¶ Like Initial packets (see Section 17.2.2.1 ), data in CRYPTO frames for Handshake packets is discarded -- and no longer retransmitted -- when Handshake protection keys are discarded. ¶ 17.2.5.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "17.1-p4470-s96", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Retry Packet As shown in Figure 18 , a Retry packet uses a long packet header with a type value of 0x03.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4471-s97", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "It carries an address validation token created by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4472-s98", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "It is used by a server that wishes to perform a retry; see Section 8.1 . ¶ Retry Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 3, Unused (4), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Retry Token (..), Retry Integrity Tag (128), } Figure 18 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4473-s99", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Retry Packet A Retry packet does not contain any protected fields.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4474-s100", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The value in the Unused field is set to an arbitrary value by the server; a client MUST ignore these bits.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4475-s101", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "In addition to the fields from the long header, it contains these additional fields: ¶ Retry Token:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4476-s102", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "An opaque token that the server can use to validate the client's address. ¶ Retry Integrity Tag:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4477-s103", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Defined in Section 5.8 ( \"Retry Packet Integrity\" ) of [ QUIC-TLS ] . ¶ 17.2.5.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4478-s104", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Sending a Retry Packet The server populates the Destination Connection ID with the connection ID that the client included in the Source Connection ID of the Initial packet. ¶ The server includes a connection ID of its choice in the Source Connection ID field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4479-s105", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "This value MUST NOT be equal to the Destination Connection ID field of the packet sent by the client.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4480-s106", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A client MUST discard a Retry packet that contains a Source Connection ID field that is identical to the Destination Connection ID field of its Initial packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4481-s107", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The client MUST use the value from the Source Connection ID field of the Retry packet in the Destination Connection ID field of subsequent packets that it sends. ¶ A server MAY send Retry packets in response to Initial and 0-RTT packets.", "facet": "other", "normative": true, "modalities": ["MUST", "MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4482-s108", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A server can either discard or buffer 0-RTT packets that it receives.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4483-s109", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A server can send multiple Retry packets as it receives Initial or 0-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4484-s110", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A server MUST NOT send more than one Retry packet in response to a single UDP datagram. ¶ 17.2.5.2.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4485-s111", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Handling a Retry Packet A client MUST accept and process at most one Retry packet for each connection attempt.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4486-s112", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "After the client has received and processed an Initial or Retry packet from the server, it MUST discard any subsequent Retry packets that it receives. ¶ Clients MUST discard Retry packets that have a Retry Integrity Tag that cannot be validated; see Section 5.8 of [ QUIC-TLS ] .", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4487-s113", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "This diminishes an attacker's ability to inject a Retry packet and protects against accidental corruption of Retry packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4488-s114", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A client MUST discard a Retry packet with a zero-length Retry Token field. ¶ The client responds to a Retry packet with an Initial packet that includes the provided Retry token to continue connection establishment. ¶ A client sets the Destination Connection ID field of this Initial packet to the value from the Source Connection ID field in the Retry packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4489-s115", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Changing the Destination Connection ID field also results in a change to the keys used to protect the Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4490-s116", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "It also sets the Token field to the token provided in the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4491-s117", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The client MUST NOT change the Source Connection ID because the server could include the connection ID as part of its token validation logic; see Section 8.1.4 . ¶ A Retry packet does not include a packet number and cannot be explicitly acknowledged by a client. ¶ 17.2.5.3.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4492-s118", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Continuing a Handshake after Retry Subsequent Initial packets from the client include the connection ID and token values from the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4493-s119", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The client copies the Source Connection ID field from the Retry packet to the Destination Connection ID field and uses this value until an Initial packet with an updated value is received; see Section 7.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.1-p4494-s120", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The value of the Token field is copied to all subsequent Initial packets; see Section 8.1.2 . ¶ Other than updating the Destination Connection ID and Token fields, the Initial packet sent by the client is subject to the same restrictions as the first Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4495-s121", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A client MUST use the same cryptographic handshake message it included in this packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4496-s122", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A server MAY treat a packet that contains a different cryptographic handshake message as a connection error or discard it.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.1-p4497-s123", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Note that including a Token field reduces the available space for the cryptographic handshake message, which might result in the client needing to send multiple Initial packets. ¶ A client MAY attempt 0-RTT after receiving a Retry packet by sending 0-RTT packets to the connection ID provided by the server. ¶ A client MUST NOT reset the packet number for any packet number space after processing a Retry packet.", "facet": "other", "normative": true, "modalities": ["MAY", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.1-p4498-s124", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "In particular, 0-RTT packets contain confidential information that will most likely be retransmitted on receiving a Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4499-s125", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "The keys used to protect these new 0-RTT packets will not change as a result of responding to a Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4500-s126", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "However, the data sent in these packets could be different than what was sent earlier.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4501-s127", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "Sending these new packets with the same packet number is likely to compromise the packet protection for those packets because the same key and nonce could be used to protect different content.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.1-p4502-s128", "section": "17.1", "anchor": "#name-packet-number-encoding-and-", "para_id": "17.1-p924", "text": "A server MAY abort the connection if it detects that the client reset the packet number. ¶ The connection IDs used in Initial and Retry packets exchanged between client and server are copied to the transport parameters and validated as described in Section 7.3 . ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2-p4503-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p925", "text": "Long Header Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2), Type-Specific Bits (4), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Type-Specific Payload (..), } Figure 13 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4504-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p925", "text": "Long Header Packet Format", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4505-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p926", "text": "Long Header Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2), Type-Specific Bits (4), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Type-Specific Payload (..), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4506-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p927", "text": "Long Header Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2), Type-Specific Bits (4), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Type-Specific Payload (..), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4507-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p928", "text": "Figure 13 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4508-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p928", "text": "Long Header Packet Format", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4509-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p929", "text": "Long headers are used for packets that are sent prior to the establishment of 1-RTT keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4510-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p929", "text": "Once 1-RTT keys are available, a sender switches to sending packets using the short header ( Section 17.3 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4511-s3", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p929", "text": "The long form allows for special packets -- such as the Version Negotiation packet -- to be represented in this uniform fixed-length packet format.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4512-s4", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p929", "text": "Packets that use the long header contain the following fields: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4513-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p930", "text": "The most significant bit (0x80) of byte 0 (the first byte) is set to 1 for long headers. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4514-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p931", "text": "The next bit (0x40) of byte 0 is set to 1, unless the packet is a Version Negotiation packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4515-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p931", "text": "Packets containing a zero value for this bit are not valid packets in this version and MUST be discarded.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2-p4516-s3", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p931", "text": "A value of 1 for this bit allows QUIC to coexist with other protocols; see [ RFC7983 ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4517-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p932", "text": "The next two bits (those with a mask of 0x30) of byte 0 contain a packet type.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4518-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p932", "text": "Packet types are listed in Table 5 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4519-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p933", "text": "The semantics of the lower four bits (those with a mask of 0x0f) of byte 0 are determined by the packet type. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4520-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p934", "text": "The QUIC Version is a 32-bit field that follows the first byte.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4521-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p934", "text": "This field indicates the version of QUIC that is in use and determines how the rest of the protocol fields are interpreted. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4522-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p935", "text": "The byte following the version contains the length in bytes of the Destination Connection ID field that follows it.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4523-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p935", "text": "This length is encoded as an 8-bit unsigned integer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4524-s3", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p935", "text": "In QUIC version 1, this value MUST NOT exceed 20 bytes.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2-p4525-s4", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p935", "text": "Endpoints that receive a version 1 long header with a value larger than 20 MUST drop the packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2-p4526-s5", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p935", "text": "In order to properly form a Version Negotiation packet, servers SHOULD be able to read longer connection IDs from other QUIC versions. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2-p4527-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p936", "text": "The Destination Connection ID field follows the Destination Connection ID Length field, which indicates the length of this field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4528-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p936", "text": "Section 7.2 describes the use of this field in more detail. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4529-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p937", "text": "The byte following the Destination Connection ID contains the length in bytes of the Source Connection ID field that follows it.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4530-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p937", "text": "This length is encoded as an 8-bit unsigned integer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4531-s3", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p937", "text": "In QUIC version 1, this value MUST NOT exceed 20 bytes.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2-p4532-s4", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p937", "text": "Endpoints that receive a version 1 long header with a value larger than 20 MUST drop the packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2-p4533-s5", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p937", "text": "In order to properly form a Version Negotiation packet, servers SHOULD be able to read longer connection IDs from other QUIC versions. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2-p4534-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p938", "text": "The Source Connection ID field follows the Source Connection ID Length field, which indicates the length of this field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4535-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p938", "text": "Section 7.2 describes the use of this field in more detail. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4536-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p939", "text": "The remainder of the packet, if any, is type specific. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2-p4537-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p940", "text": "In this version of QUIC, the following packet types with the long header are defined: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4538-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p941", "text": "Table 5 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4539-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p941", "text": "Long Header Packet Types Type Name Section 0x00 Initial Section 17.2.2 0x01 0-RTT Section 17.2.3 0x02 Handshake Section 17.2.4 0x03 Retry Section 17.2.5", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4540-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p942", "text": "Table 5 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4541-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p942", "text": "Long Header Packet Types Type Name Section 0x00 Initial Section 17.2.2 0x01 0-RTT Section 17.2.3 0x02 Handshake Section 17.2.4 0x03 Retry Section 17.2.5", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4542-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p943", "text": "The header form bit, Destination and Source Connection ID lengths, Destination and Source Connection ID fields, and Version fields of a long header packet are version independent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4543-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p943", "text": "The other fields in the first byte are version specific.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4544-s3", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p943", "text": "See [ QUIC-INVARIANTS ] for details on how packets from different versions of QUIC are interpreted. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4545-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p944", "text": "The interpretation of the fields and the payload are specific to a version and packet type.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4546-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p944", "text": "While type-specific semantics for this version are described in the following sections, several long header packets in this version of QUIC contain these additional fields: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4547-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p945", "text": "Two bits (those with a mask of 0x0c) of byte 0 are reserved across multiple packet types.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4548-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p945", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4549-s3", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p945", "text": "The value included prior to protection MUST be set to 0.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2-p4550-s4", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p945", "text": "An endpoint MUST treat receipt of a packet that has a non-zero value for these bits after removing both packet and header protection as a connection error of type PROTOCOL_VIOLATION.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2-p4551-s5", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p945", "text": "Discarding such a packet after only removing header protection can expose the endpoint to attacks; see Section 9.5 of [ QUIC-TLS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4552-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p946", "text": "In packet types that contain a Packet Number field, the least significant two bits (those with a mask of 0x03) of byte 0 contain the length of the Packet Number field, encoded as an unsigned two-bit integer that is one less than the length of the Packet Number field in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4553-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p946", "text": "That is, the length of the Packet Number field is the value of this field plus one.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4554-s3", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p946", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4555-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p947", "text": "This is the length of the remainder of the packet (that is, the Packet Number and Payload fields) in bytes, encoded as a variable-length integer ( Section 16 ). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4556-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p948", "text": "This field is 1 to 4 bytes long.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4557-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p948", "text": "The packet number is protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4558-s3", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p948", "text": "The length of the Packet Number field is encoded in the Packet Number Length bits of byte 0; see above. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4559-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p949", "text": "This is the payload of the packet -- containing a sequence of frames -- that is protected using packet protection. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.2-p4560-s1", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "17.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4561-s2", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "Version Negotiation Packet A Version Negotiation packet is inherently not version specific.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4562-s3", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "Upon receipt by a client, it will be identified as a Version Negotiation packet based on the Version field having a value of 0. ¶ The Version Negotiation packet is a response to a client packet that contains a version that is not supported by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2-p4563-s4", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "It is only sent by servers. ¶ The layout of a Version Negotiation packet is: ¶ Version Negotiation Packet { Header Form (1) = 1, Unused (7), Version (32) = 0, Destination Connection ID Length (8), Destination Connection ID (0..2040), Source Connection ID Length (8), Source Connection ID (0..2040), Supported Version (32) ..., } Figure 14 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4564-s5", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "Version Negotiation Packet The value in the Unused field is set to an arbitrary value by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4565-s6", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "Clients MUST ignore the value of this field.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2-p4566-s7", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "Where QUIC might be multiplexed with other protocols (see [ RFC7983 ] ), servers SHOULD set the most significant bit of this field (0x40) to 1 so that Version Negotiation packets appear to have the Fixed Bit field.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2-p4567-s8", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "Note that other versions of QUIC might not make a similar recommendation. ¶ The Version field of a Version Negotiation packet MUST be set to 0x00000000. ¶ The server MUST include the value from the Source Connection ID field of the packet it receives in the Destination Connection ID field.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2-p4568-s9", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "The value for Source Connection ID MUST be copied from the Destination Connection ID of the received packet, which is initially randomly selected by a client.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2-p4569-s10", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "Echoing both connection IDs gives clients some assurance that the server received the packet and that the Version Negotiation packet was not generated by an entity that did not observe the Initial packet. ¶ Future versions of QUIC could have different requirements for the lengths of connection IDs.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2-p4570-s11", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "In particular, connection IDs might have a smaller minimum length or a greater maximum length.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4571-s12", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "Version-specific rules for the connection ID therefore MUST NOT influence a decision about whether to send a Version Negotiation packet. ¶ The remainder of the Version Negotiation packet is a list of 32-bit versions that the server supports. ¶ A Version Negotiation packet is not acknowledged.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2-p4572-s13", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "It is only sent in response to a packet that indicates an unsupported version; see Section 5.2.2 . ¶ The Version Negotiation packet does not include the Packet Number and Length fields present in other packets that use the long header form.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2-p4573-s14", "section": "17.2", "anchor": "#name-long-header-packets", "para_id": "17.2-p950", "text": "Consequently, a Version Negotiation packet consumes an entire UDP datagram. ¶ A server MUST NOT send more than one Version Negotiation packet in response to a single UDP datagram. ¶ See Section 6 for a description of the version negotiation process. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.1-p4574-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p951", "text": "A Version Negotiation packet is inherently not version specific.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4575-s2", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p951", "text": "Upon receipt by a client, it will be identified as a Version Negotiation packet based on the Version field having a value of 0. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.1-p4576-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p952", "text": "The Version Negotiation packet is a response to a client packet that contains a version that is not supported by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4577-s2", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p952", "text": "It is only sent by servers. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4578-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p953", "text": "The layout of a Version Negotiation packet is: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4579-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p954", "text": "Version Negotiation Packet { Header Form (1) = 1, Unused (7), Version (32) = 0, Destination Connection ID Length (8), Destination Connection ID (0..2040), Source Connection ID Length (8), Source Connection ID (0..2040), Supported Version (32) ..., } Figure 14 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4580-s2", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p954", "text": "Version Negotiation Packet", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4581-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p955", "text": "Version Negotiation Packet { Header Form (1) = 1, Unused (7), Version (32) = 0, Destination Connection ID Length (8), Destination Connection ID (0..2040), Source Connection ID Length (8), Source Connection ID (0..2040), Supported Version (32) ..., }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4582-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p956", "text": "Version Negotiation Packet { Header Form (1) = 1, Unused (7), Version (32) = 0, Destination Connection ID Length (8), Destination Connection ID (0..2040), Source Connection ID Length (8), Source Connection ID (0..2040), Supported Version (32) ..., }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4583-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p957", "text": "Figure 14 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4584-s2", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p957", "text": "Version Negotiation Packet", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4585-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p958", "text": "The value in the Unused field is set to an arbitrary value by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4586-s2", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p958", "text": "Clients MUST ignore the value of this field.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.1-p4587-s3", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p958", "text": "Where QUIC might be multiplexed with other protocols (see [ RFC7983 ] ), servers SHOULD set the most significant bit of this field (0x40) to 1 so that Version Negotiation packets appear to have the Fixed Bit field.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.1-p4588-s4", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p958", "text": "Note that other versions of QUIC might not make a similar recommendation. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4589-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p959", "text": "The Version field of a Version Negotiation packet MUST be set to 0x00000000. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.1-p4590-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p960", "text": "The server MUST include the value from the Source Connection ID field of the packet it receives in the Destination Connection ID field.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.1-p4591-s2", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p960", "text": "The value for Source Connection ID MUST be copied from the Destination Connection ID of the received packet, which is initially randomly selected by a client.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.1-p4592-s3", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p960", "text": "Echoing both connection IDs gives clients some assurance that the server received the packet and that the Version Negotiation packet was not generated by an entity that did not observe the Initial packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.1-p4593-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p961", "text": "Future versions of QUIC could have different requirements for the lengths of connection IDs.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4594-s2", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p961", "text": "In particular, connection IDs might have a smaller minimum length or a greater maximum length.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4595-s3", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p961", "text": "Version-specific rules for the connection ID therefore MUST NOT influence a decision about whether to send a Version Negotiation packet. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.1-p4596-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p962", "text": "The remainder of the Version Negotiation packet is a list of 32-bit versions that the server supports. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4597-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p963", "text": "A Version Negotiation packet is not acknowledged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.1-p4598-s2", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p963", "text": "It is only sent in response to a packet that indicates an unsupported version; see Section 5.2.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4599-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p964", "text": "The Version Negotiation packet does not include the Packet Number and Length fields present in other packets that use the long header form.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4600-s2", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p964", "text": "Consequently, a Version Negotiation packet consumes an entire UDP datagram. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4601-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p965", "text": "A server MUST NOT send more than one Version Negotiation packet in response to a single UDP datagram. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.1-p4602-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p966", "text": "See Section 6 for a description of the version negotiation process. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4603-s1", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "17.2.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4604-s2", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "Initial Packet An Initial packet uses long headers with a type value of 0x00.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4605-s3", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "It carries the first CRYPTO frames sent by the client and server to perform key exchange, and it carries ACK frames in either direction. ¶ Initial Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 0, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Token Length (i), Token (..), Length (i), Packet Number (8..32), Packet Payload (8..), } Figure 15 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.1-p4606-s4", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "Initial Packet The Initial packet contains a long header as well as the Length and Packet Number fields; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4607-s5", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "The first byte contains the Reserved and Packet Number Length bits; see also Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4608-s6", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "Between the Source Connection ID and Length fields, there are two additional fields specific to the Initial packet. ¶ Token Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4609-s7", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "A variable-length integer specifying the length of the Token field, in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4610-s8", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "This value is 0 if no token is present.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.1-p4611-s9", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "Initial packets sent by the server MUST set the Token Length field to 0; clients that receive an Initial packet with a non-zero Token Length field MUST either discard the packet or generate a connection error of type PROTOCOL_VIOLATION. ¶ Token:", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.1-p4612-s10", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "The value of the token that was previously provided in a Retry packet or NEW_TOKEN frame; see Section 8.1 . ¶ In order to prevent tampering by version-unaware middleboxes, Initial packets are protected with connection- and version-specific keys (Initial keys) as described in [ QUIC-TLS ] .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.2.1-p4613-s11", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "This protection does not provide confidentiality or integrity against attackers that can observe packets, but it does prevent attackers that cannot observe packets from spoofing Initial packets. ¶ The client and server use the Initial packet type for any packet that contains an initial cryptographic handshake message.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.1-p4614-s12", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "This includes all cases where a new packet containing the initial cryptographic message needs to be created, such as the packets sent after receiving a Retry packet; see Section 17.2.5 . ¶ A server sends its first Initial packet in response to a client Initial.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.1-p4615-s13", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "A server MAY send multiple Initial packets.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.1-p4616-s14", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "The cryptographic key exchange could require multiple round trips or retransmissions of this data. ¶ The payload of an Initial packet includes a CRYPTO frame (or frames) containing a cryptographic handshake message, ACK frames, or both.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.1-p4617-s15", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "PING, PADDING, and CONNECTION_CLOSE frames of type 0x1c are also permitted.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.2.1-p4618-s16", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "An endpoint that receives an Initial packet containing other frames can either discard the packet as spurious or treat it as a connection error. ¶ The first packet sent by a client always includes a CRYPTO frame that contains the start or all of the first cryptographic handshake message.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.1-p4619-s17", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "The first CRYPTO frame sent always begins at an offset of 0; see Section 7 . ¶ Note that if the server sends a TLS HelloRetryRequest (see Section 4.7 of [ QUIC-TLS ] ), the client will send another series of Initial packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.1-p4620-s18", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "These Initial packets will continue the cryptographic handshake and will contain CRYPTO frames starting at an offset matching the size of the CRYPTO frames sent in the first flight of Initial packets. ¶ 17.2.2.1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.2.1-p4621-s19", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "Abandoning Initial Packets A client stops both sending and processing Initial packets when it sends its first Handshake packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.1-p4622-s20", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "A server stops sending and processing Initial packets when it receives its first Handshake packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.1-p4623-s21", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "Though packets might still be in flight or awaiting acknowledgment, no further Initial packets need to be exchanged beyond this point.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.1-p4624-s22", "section": "17.2.1", "anchor": "#name-version-negotiation-packet", "para_id": "17.2.1-p967", "text": "Initial packet protection keys are discarded (see Section 4.9.1 of [ QUIC-TLS ] ) along with any loss recovery and congestion control state; see Section 6.4 of [ QUIC-RECOVERY ] . ¶ Any data in CRYPTO frames is discarded -- and no longer retransmitted -- when Initial keys are discarded. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.2-p4625-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p968", "text": "An Initial packet uses long headers with a type value of 0x00.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4626-s2", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p968", "text": "It carries the first CRYPTO frames sent by the client and server to perform key exchange, and it carries ACK frames in either direction. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.2-p4627-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p969", "text": "Initial Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 0, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Token Length (i), Token (..), Length (i), Packet Number (8..32), Packet Payload (8..), } Figure 15 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4628-s2", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p969", "text": "Initial Packet", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4629-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p970", "text": "Initial Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 0, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Token Length (i), Token (..), Length (i), Packet Number (8..32), Packet Payload (8..), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4630-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p971", "text": "Initial Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 0, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Token Length (i), Token (..), Length (i), Packet Number (8..32), Packet Payload (8..), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4631-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p972", "text": "Figure 15 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4632-s2", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p972", "text": "Initial Packet", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4633-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p973", "text": "The Initial packet contains a long header as well as the Length and Packet Number fields; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4634-s2", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p973", "text": "The first byte contains the Reserved and Packet Number Length bits; see also Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4635-s3", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p973", "text": "Between the Source Connection ID and Length fields, there are two additional fields specific to the Initial packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4636-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p974", "text": "A variable-length integer specifying the length of the Token field, in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4637-s2", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p974", "text": "This value is 0 if no token is present.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.2-p4638-s3", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p974", "text": "Initial packets sent by the server MUST set the Token Length field to 0; clients that receive an Initial packet with a non-zero Token Length field MUST either discard the packet or generate a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.2-p4639-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p975", "text": "The value of the token that was previously provided in a Retry packet or NEW_TOKEN frame; see Section 8.1 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.2.2-p4640-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p976", "text": "In order to prevent tampering by version-unaware middleboxes, Initial packets are protected with connection- and version-specific keys (Initial keys) as described in [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4641-s2", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p976", "text": "This protection does not provide confidentiality or integrity against attackers that can observe packets, but it does prevent attackers that cannot observe packets from spoofing Initial packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4642-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p977", "text": "The client and server use the Initial packet type for any packet that contains an initial cryptographic handshake message.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4643-s2", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p977", "text": "This includes all cases where a new packet containing the initial cryptographic message needs to be created, such as the packets sent after receiving a Retry packet; see Section 17.2.5 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4644-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p978", "text": "A server sends its first Initial packet in response to a client Initial.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.2-p4645-s2", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p978", "text": "A server MAY send multiple Initial packets.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.2-p4646-s3", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p978", "text": "The cryptographic key exchange could require multiple round trips or retransmissions of this data. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4647-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p979", "text": "The payload of an Initial packet includes a CRYPTO frame (or frames) containing a cryptographic handshake message, ACK frames, or both.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.2-p4648-s2", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p979", "text": "PING, PADDING, and CONNECTION_CLOSE frames of type 0x1c are also permitted.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.2.2-p4649-s3", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p979", "text": "An endpoint that receives an Initial packet containing other frames can either discard the packet as spurious or treat it as a connection error. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.2-p4650-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p980", "text": "The first packet sent by a client always includes a CRYPTO frame that contains the start or all of the first cryptographic handshake message.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.2.2-p4651-s2", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p980", "text": "The first CRYPTO frame sent always begins at an offset of 0; see Section 7 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.2.2-p4652-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p981", "text": "Note that if the server sends a TLS HelloRetryRequest (see Section 4.7 of [ QUIC-TLS ] ), the client will send another series of Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.2-p4653-s2", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p981", "text": "These Initial packets will continue the cryptographic handshake and will contain CRYPTO frames starting at an offset matching the size of the CRYPTO frames sent in the first flight of Initial packets. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.2.2-p4654-s1", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p982", "text": "17.2.2.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2-p4655-s2", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p982", "text": "Abandoning Initial Packets A client stops both sending and processing Initial packets when it sends its first Handshake packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.2-p4656-s3", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p982", "text": "A server stops sending and processing Initial packets when it receives its first Handshake packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.2-p4657-s4", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p982", "text": "Though packets might still be in flight or awaiting acknowledgment, no further Initial packets need to be exchanged beyond this point.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.2-p4658-s5", "section": "17.2.2", "anchor": "#name-initial-packet", "para_id": "17.2.2-p982", "text": "Initial packet protection keys are discarded (see Section 4.9.1 of [ QUIC-TLS ] ) along with any loss recovery and congestion control state; see Section 6.4 of [ QUIC-RECOVERY ] . ¶ Any data in CRYPTO frames is discarded -- and no longer retransmitted -- when Initial keys are discarded. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.2.1-p4659-s1", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p983", "text": "A client stops both sending and processing Initial packets when it sends its first Handshake packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.2.1-p4660-s2", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p983", "text": "A server stops sending and processing Initial packets when it receives its first Handshake packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.2.1-p4661-s3", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p983", "text": "Though packets might still be in flight or awaiting acknowledgment, no further Initial packets need to be exchanged beyond this point.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.2.1-p4662-s4", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p983", "text": "Initial packet protection keys are discarded (see Section 4.9.1 of [ QUIC-TLS ] ) along with any loss recovery and congestion control state; see Section 6.4 of [ QUIC-RECOVERY ] . ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.2.2.1-p4663-s1", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p984", "text": "Any data in CRYPTO frames is discarded -- and no longer retransmitted -- when Initial keys are discarded. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.2.1-p4664-s1", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p985", "text": "17.2.3. 0-RTT A 0-RTT packet uses long headers with a type value of 0x01, followed by the Length and Packet Number fields; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2.1-p4665-s2", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p985", "text": "The first byte contains the Reserved and Packet Number Length bits; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2.1-p4666-s3", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p985", "text": "A 0-RTT packet is used to carry \"early\" data from the client to the server as part of the first flight, prior to handshake completion.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.2.1-p4667-s4", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p985", "text": "As part of the TLS handshake, the server can accept or reject this early data. ¶ See Section 2.3 of [ TLS13 ] for a discussion of 0-RTT data and its limitations. ¶ 0-RTT Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 1, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Length (i), Packet Number (8..32), Packet Payload (8..), } Figure 16 : 0-RTT Packet Packet numbers for 0-RTT protected packets use the same space as 1-RTT protected packets. ¶ After a client receives a Retry packet, 0-RTT packets are likely to have been lost or discarded by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.2.1-p4668-s5", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p985", "text": "A client SHOULD attempt to resend data in 0-RTT packets after it sends a new Initial packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.2.1-p4669-s6", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p985", "text": "New packet numbers MUST be used for any new packets that are sent; as described in Section 17.2.5.3 , reusing packet numbers could compromise packet protection. ¶ A client only receives acknowledgments for its 0-RTT packets once the handshake is complete, as defined in Section 4.1.1 of [ QUIC-TLS ] . ¶ A client MUST NOT send 0-RTT packets once it starts processing 1-RTT packets from the server.", "facet": "other", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.2.1-p4670-s7", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p985", "text": "This means that 0-RTT packets cannot contain any response to frames from 1-RTT packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.2.2.1-p4671-s8", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p985", "text": "For instance, a client cannot send an ACK frame in a 0-RTT packet, because that can only acknowledge a 1-RTT packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.2.1-p4672-s9", "section": "17.2.2.1", "anchor": "#name-abandoning-initial-packets", "para_id": "17.2.2.1-p985", "text": "An acknowledgment for a 1-RTT packet MUST be carried in a 1-RTT packet. ¶ A server SHOULD treat a violation of remembered limits ( Section 7.4.1 ) as a connection error of an appropriate type (for instance, a FLOW_CONTROL_ERROR for exceeding stream data limits). ¶", "facet": "other", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 3}
{"sent_id": "17.2.3-p4673-s1", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p986", "text": "A 0-RTT packet uses long headers with a type value of 0x01, followed by the Length and Packet Number fields; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.3-p4674-s2", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p986", "text": "The first byte contains the Reserved and Packet Number Length bits; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.3-p4675-s3", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p986", "text": "A 0-RTT packet is used to carry \"early\" data from the client to the server as part of the first flight, prior to handshake completion.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.3-p4676-s4", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p986", "text": "As part of the TLS handshake, the server can accept or reject this early data. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.3-p4677-s1", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p987", "text": "See Section 2.3 of [ TLS13 ] for a discussion of 0-RTT data and its limitations. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.3-p4678-s1", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p988", "text": "0-RTT Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 1, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Length (i), Packet Number (8..32), Packet Payload (8..), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.3-p4679-s1", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p989", "text": "0-RTT Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 1, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Length (i), Packet Number (8..32), Packet Payload (8..), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.3-p4680-s1", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p990", "text": "Figure 16 : 0-RTT Packet", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.3-p4681-s1", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p991", "text": "Packet numbers for 0-RTT protected packets use the same space as 1-RTT protected packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.3-p4682-s1", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p992", "text": "After a client receives a Retry packet, 0-RTT packets are likely to have been lost or discarded by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.3-p4683-s2", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p992", "text": "A client SHOULD attempt to resend data in 0-RTT packets after it sends a new Initial packet.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.3-p4684-s3", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p992", "text": "New packet numbers MUST be used for any new packets that are sent; as described in Section 17.2.5.3 , reusing packet numbers could compromise packet protection. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.3-p4685-s1", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p993", "text": "A client only receives acknowledgments for its 0-RTT packets once the handshake is complete, as defined in Section 4.1.1 of [ QUIC-TLS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.3-p4686-s1", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p994", "text": "A client MUST NOT send 0-RTT packets once it starts processing 1-RTT packets from the server.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.3-p4687-s2", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p994", "text": "This means that 0-RTT packets cannot contain any response to frames from 1-RTT packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.2.3-p4688-s3", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p994", "text": "For instance, a client cannot send an ACK frame in a 0-RTT packet, because that can only acknowledge a 1-RTT packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.3-p4689-s4", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p994", "text": "An acknowledgment for a 1-RTT packet MUST be carried in a 1-RTT packet. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.3-p4690-s1", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p995", "text": "A server SHOULD treat a violation of remembered limits ( Section 7.4.1 ) as a connection error of an appropriate type (for instance, a FLOW_CONTROL_ERROR for exceeding stream data limits). ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": false, "score": 2}
{"sent_id": "17.2.3-p4691-s1", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p996", "text": "17.2.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.3-p4692-s2", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p996", "text": "Handshake Packet A Handshake packet uses long headers with a type value of 0x02, followed by the Length and Packet Number fields; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.3-p4693-s3", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p996", "text": "The first byte contains the Reserved and Packet Number Length bits; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.3-p4694-s4", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p996", "text": "It is used to carry cryptographic handshake messages and acknowledgments from the server and client. ¶ Handshake Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 2, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Length (i), Packet Number (8..32), Packet Payload (8..), } Figure 17 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.3-p4695-s5", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p996", "text": "Handshake Protected Packet Once a client has received a Handshake packet from a server, it uses Handshake packets to send subsequent cryptographic handshake messages and acknowledgments to the server. ¶ The Destination Connection ID field in a Handshake packet contains a connection ID that is chosen by the recipient of the packet; the Source Connection ID includes the connection ID that the sender of the packet wishes to use; see Section 7.2 . ¶ Handshake packets have their own packet number space, and thus the first Handshake packet sent by a server contains a packet number of 0. ¶ The payload of this packet contains CRYPTO frames and could contain PING, PADDING, or ACK frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "sender", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.3-p4696-s6", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p996", "text": "Handshake packets MAY contain CONNECTION_CLOSE frames of type 0x1c.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "17.2.3-p4697-s7", "section": "17.2.3", "anchor": "#name-0-rtt", "para_id": "17.2.3-p996", "text": "Endpoints MUST treat receipt of Handshake packets with other frames as a connection error of type PROTOCOL_VIOLATION. ¶ Like Initial packets (see Section 17.2.2.1 ), data in CRYPTO frames for Handshake packets is discarded -- and no longer retransmitted -- when Handshake protection keys are discarded. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "17.2.4-p4698-s1", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p997", "text": "A Handshake packet uses long headers with a type value of 0x02, followed by the Length and Packet Number fields; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4699-s2", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p997", "text": "The first byte contains the Reserved and Packet Number Length bits; see Section 17.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4700-s3", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p997", "text": "It is used to carry cryptographic handshake messages and acknowledgments from the server and client. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.4-p4701-s1", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p998", "text": "Handshake Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 2, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Length (i), Packet Number (8..32), Packet Payload (8..), } Figure 17 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4702-s2", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p998", "text": "Handshake Protected Packet", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4703-s1", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p999", "text": "Handshake Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 2, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Length (i), Packet Number (8..32), Packet Payload (8..), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4704-s1", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1000", "text": "Handshake Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 2, Reserved Bits (2), Packet Number Length (2), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Length (i), Packet Number (8..32), Packet Payload (8..), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4705-s1", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1001", "text": "Figure 17 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4706-s2", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1001", "text": "Handshake Protected Packet", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4707-s1", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1002", "text": "Once a client has received a Handshake packet from a server, it uses Handshake packets to send subsequent cryptographic handshake messages and acknowledgments to the server. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.4-p4708-s1", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1003", "text": "The Destination Connection ID field in a Handshake packet contains a connection ID that is chosen by the recipient of the packet; the Source Connection ID includes the connection ID that the sender of the packet wishes to use; see Section 7.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4709-s1", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1004", "text": "Handshake packets have their own packet number space, and thus the first Handshake packet sent by a server contains a packet number of 0. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4710-s1", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1005", "text": "The payload of this packet contains CRYPTO frames and could contain PING, PADDING, or ACK frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.4-p4711-s2", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1005", "text": "Handshake packets MAY contain CONNECTION_CLOSE frames of type 0x1c.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "17.2.4-p4712-s3", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1005", "text": "Endpoints MUST treat receipt of Handshake packets with other frames as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "17.2.4-p4713-s1", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1006", "text": "Like Initial packets (see Section 17.2.2.1 ), data in CRYPTO frames for Handshake packets is discarded -- and no longer retransmitted -- when Handshake protection keys are discarded. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.2.4-p4714-s1", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "17.2.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4715-s2", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "Retry Packet As shown in Figure 18 , a Retry packet uses a long packet header with a type value of 0x03.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4716-s3", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "It carries an address validation token created by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4717-s4", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "It is used by a server that wishes to perform a retry; see Section 8.1 . ¶ Retry Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 3, Unused (4), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Retry Token (..), Retry Integrity Tag (128), } Figure 18 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4718-s5", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "Retry Packet A Retry packet does not contain any protected fields.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4719-s6", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "The value in the Unused field is set to an arbitrary value by the server; a client MUST ignore these bits.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.4-p4720-s7", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "In addition to the fields from the long header, it contains these additional fields: ¶ Retry Token:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4721-s8", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "An opaque token that the server can use to validate the client's address. ¶ Retry Integrity Tag:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4722-s9", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "Defined in Section 5.8 ( \"Retry Packet Integrity\" ) of [ QUIC-TLS ] . ¶ 17.2.5.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4723-s10", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "Sending a Retry Packet The server populates the Destination Connection ID with the connection ID that the client included in the Source Connection ID of the Initial packet. ¶ The server includes a connection ID of its choice in the Source Connection ID field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4724-s11", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "This value MUST NOT be equal to the Destination Connection ID field of the packet sent by the client.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.4-p4725-s12", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "A client MUST discard a Retry packet that contains a Source Connection ID field that is identical to the Destination Connection ID field of its Initial packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.4-p4726-s13", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "The client MUST use the value from the Source Connection ID field of the Retry packet in the Destination Connection ID field of subsequent packets that it sends. ¶ A server MAY send Retry packets in response to Initial and 0-RTT packets.", "facet": "other", "normative": true, "modalities": ["MUST", "MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.4-p4727-s14", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "A server can either discard or buffer 0-RTT packets that it receives.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.4-p4728-s15", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "A server can send multiple Retry packets as it receives Initial or 0-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.4-p4729-s16", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "A server MUST NOT send more than one Retry packet in response to a single UDP datagram. ¶ 17.2.5.2.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.4-p4730-s17", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "Handling a Retry Packet A client MUST accept and process at most one Retry packet for each connection attempt.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.4-p4731-s18", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "After the client has received and processed an Initial or Retry packet from the server, it MUST discard any subsequent Retry packets that it receives. ¶ Clients MUST discard Retry packets that have a Retry Integrity Tag that cannot be validated; see Section 5.8 of [ QUIC-TLS ] .", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.4-p4732-s19", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "This diminishes an attacker's ability to inject a Retry packet and protects against accidental corruption of Retry packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4733-s20", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "A client MUST discard a Retry packet with a zero-length Retry Token field. ¶ The client responds to a Retry packet with an Initial packet that includes the provided Retry token to continue connection establishment. ¶ A client sets the Destination Connection ID field of this Initial packet to the value from the Source Connection ID field in the Retry packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.4-p4734-s21", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "Changing the Destination Connection ID field also results in a change to the keys used to protect the Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4735-s22", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "It also sets the Token field to the token provided in the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4736-s23", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "The client MUST NOT change the Source Connection ID because the server could include the connection ID as part of its token validation logic; see Section 8.1.4 . ¶ A Retry packet does not include a packet number and cannot be explicitly acknowledged by a client. ¶ 17.2.5.3.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.4-p4737-s24", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "Continuing a Handshake after Retry Subsequent Initial packets from the client include the connection ID and token values from the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4738-s25", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "The client copies the Source Connection ID field from the Retry packet to the Destination Connection ID field and uses this value until an Initial packet with an updated value is received; see Section 7.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.4-p4739-s26", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "The value of the Token field is copied to all subsequent Initial packets; see Section 8.1.2 . ¶ Other than updating the Destination Connection ID and Token fields, the Initial packet sent by the client is subject to the same restrictions as the first Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4740-s27", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "A client MUST use the same cryptographic handshake message it included in this packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.4-p4741-s28", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "A server MAY treat a packet that contains a different cryptographic handshake message as a connection error or discard it.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.4-p4742-s29", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "Note that including a Token field reduces the available space for the cryptographic handshake message, which might result in the client needing to send multiple Initial packets. ¶ A client MAY attempt 0-RTT after receiving a Retry packet by sending 0-RTT packets to the connection ID provided by the server. ¶ A client MUST NOT reset the packet number for any packet number space after processing a Retry packet.", "facet": "other", "normative": true, "modalities": ["MAY", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.4-p4743-s30", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "In particular, 0-RTT packets contain confidential information that will most likely be retransmitted on receiving a Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4744-s31", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "The keys used to protect these new 0-RTT packets will not change as a result of responding to a Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4745-s32", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "However, the data sent in these packets could be different than what was sent earlier.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4746-s33", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "Sending these new packets with the same packet number is likely to compromise the packet protection for those packets because the same key and nonce could be used to protect different content.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.4-p4747-s34", "section": "17.2.4", "anchor": "#name-handshake-packet", "para_id": "17.2.4-p1007", "text": "A server MAY abort the connection if it detects that the client reset the packet number. ¶ The connection IDs used in Initial and Retry packets exchanged between client and server are copied to the transport parameters and validated as described in Section 7.3 . ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.5-p4748-s1", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1008", "text": "As shown in Figure 18 , a Retry packet uses a long packet header with a type value of 0x03.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4749-s2", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1008", "text": "It carries an address validation token created by the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4750-s3", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1008", "text": "It is used by a server that wishes to perform a retry; see Section 8.1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4751-s1", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1009", "text": "Retry Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 3, Unused (4), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Retry Token (..), Retry Integrity Tag (128), } Figure 18 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4752-s2", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1009", "text": "Retry Packet", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4753-s1", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1010", "text": "Retry Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 3, Unused (4), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Retry Token (..), Retry Integrity Tag (128), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4754-s1", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1011", "text": "Retry Packet { Header Form (1) = 1, Fixed Bit (1) = 1, Long Packet Type (2) = 3, Unused (4), Version (32), Destination Connection ID Length (8), Destination Connection ID (0..160), Source Connection ID Length (8), Source Connection ID (0..160), Retry Token (..), Retry Integrity Tag (128), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4755-s1", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1012", "text": "Figure 18 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4756-s2", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1012", "text": "Retry Packet", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4757-s1", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1013", "text": "A Retry packet does not contain any protected fields.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4758-s2", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1013", "text": "The value in the Unused field is set to an arbitrary value by the server; a client MUST ignore these bits.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5-p4759-s3", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1013", "text": "In addition to the fields from the long header, it contains these additional fields: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4760-s1", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1014", "text": "An opaque token that the server can use to validate the client's address. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4761-s1", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1015", "text": "Defined in Section 5.8 ( \"Retry Packet Integrity\" ) of [ QUIC-TLS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4762-s1", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1016", "text": "17.2.5.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4763-s2", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1016", "text": "Sending a Retry Packet The server populates the Destination Connection ID with the connection ID that the client included in the Source Connection ID of the Initial packet. ¶ The server includes a connection ID of its choice in the Source Connection ID field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5-p4764-s3", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1016", "text": "This value MUST NOT be equal to the Destination Connection ID field of the packet sent by the client.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5-p4765-s4", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1016", "text": "A client MUST discard a Retry packet that contains a Source Connection ID field that is identical to the Destination Connection ID field of its Initial packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5-p4766-s5", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1016", "text": "The client MUST use the value from the Source Connection ID field of the Retry packet in the Destination Connection ID field of subsequent packets that it sends. ¶ A server MAY send Retry packets in response to Initial and 0-RTT packets.", "facet": "other", "normative": true, "modalities": ["MUST", "MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.5-p4767-s6", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1016", "text": "A server can either discard or buffer 0-RTT packets that it receives.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.5-p4768-s7", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1016", "text": "A server can send multiple Retry packets as it receives Initial or 0-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.5-p4769-s8", "section": "17.2.5", "anchor": "#name-retry-packet", "para_id": "17.2.5-p1016", "text": "A server MUST NOT send more than one Retry packet in response to a single UDP datagram. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.5.1-p4770-s1", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1017", "text": "The server populates the Destination Connection ID with the connection ID that the client included in the Source Connection ID of the Initial packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.1-p4771-s1", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1018", "text": "The server includes a connection ID of its choice in the Source Connection ID field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.1-p4772-s2", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1018", "text": "This value MUST NOT be equal to the Destination Connection ID field of the packet sent by the client.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.1-p4773-s3", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1018", "text": "A client MUST discard a Retry packet that contains a Source Connection ID field that is identical to the Destination Connection ID field of its Initial packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.1-p4774-s4", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1018", "text": "The client MUST use the value from the Source Connection ID field of the Retry packet in the Destination Connection ID field of subsequent packets that it sends. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.5.1-p4775-s1", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1019", "text": "A server MAY send Retry packets in response to Initial and 0-RTT packets.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.5.1-p4776-s2", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1019", "text": "A server can either discard or buffer 0-RTT packets that it receives.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.5.1-p4777-s3", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1019", "text": "A server can send multiple Retry packets as it receives Initial or 0-RTT packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.5.1-p4778-s4", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1019", "text": "A server MUST NOT send more than one Retry packet in response to a single UDP datagram. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.5.1-p4779-s1", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1020", "text": "17.2.5.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.1-p4780-s2", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1020", "text": "Handling a Retry Packet A client MUST accept and process at most one Retry packet for each connection attempt.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.1-p4781-s3", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1020", "text": "After the client has received and processed an Initial or Retry packet from the server, it MUST discard any subsequent Retry packets that it receives. ¶ Clients MUST discard Retry packets that have a Retry Integrity Tag that cannot be validated; see Section 5.8 of [ QUIC-TLS ] .", "facet": "other", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.5.1-p4782-s4", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1020", "text": "This diminishes an attacker's ability to inject a Retry packet and protects against accidental corruption of Retry packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.1-p4783-s5", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1020", "text": "A client MUST discard a Retry packet with a zero-length Retry Token field. ¶ The client responds to a Retry packet with an Initial packet that includes the provided Retry token to continue connection establishment. ¶ A client sets the Destination Connection ID field of this Initial packet to the value from the Source Connection ID field in the Retry packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.1-p4784-s6", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1020", "text": "Changing the Destination Connection ID field also results in a change to the keys used to protect the Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.1-p4785-s7", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1020", "text": "It also sets the Token field to the token provided in the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.1-p4786-s8", "section": "17.2.5.1", "anchor": "#name-sending-a-retry-packet", "para_id": "17.2.5.1-p1020", "text": "The client MUST NOT change the Source Connection ID because the server could include the connection ID as part of its token validation logic; see Section 8.1.4 . ¶ A Retry packet does not include a packet number and cannot be explicitly acknowledged by a client. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.5.2-p4787-s1", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1021", "text": "A client MUST accept and process at most one Retry packet for each connection attempt.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.2-p4788-s2", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1021", "text": "After the client has received and processed an Initial or Retry packet from the server, it MUST discard any subsequent Retry packets that it receives. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.5.2-p4789-s1", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1022", "text": "Clients MUST discard Retry packets that have a Retry Integrity Tag that cannot be validated; see Section 5.8 of [ QUIC-TLS ] .", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.2-p4790-s2", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1022", "text": "This diminishes an attacker's ability to inject a Retry packet and protects against accidental corruption of Retry packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.2-p4791-s3", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1022", "text": "A client MUST discard a Retry packet with a zero-length Retry Token field. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.2-p4792-s1", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1023", "text": "The client responds to a Retry packet with an Initial packet that includes the provided Retry token to continue connection establishment. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.2-p4793-s1", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1024", "text": "A client sets the Destination Connection ID field of this Initial packet to the value from the Source Connection ID field in the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.2-p4794-s2", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1024", "text": "Changing the Destination Connection ID field also results in a change to the keys used to protect the Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.2-p4795-s3", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1024", "text": "It also sets the Token field to the token provided in the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.2-p4796-s4", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1024", "text": "The client MUST NOT change the Source Connection ID because the server could include the connection ID as part of its token validation logic; see Section 8.1.4 . ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.2-p4797-s1", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1025", "text": "A Retry packet does not include a packet number and cannot be explicitly acknowledged by a client. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.5.2-p4798-s1", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1026", "text": "17.2.5.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.2-p4799-s2", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1026", "text": "Continuing a Handshake after Retry Subsequent Initial packets from the client include the connection ID and token values from the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.2-p4800-s3", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1026", "text": "The client copies the Source Connection ID field from the Retry packet to the Destination Connection ID field and uses this value until an Initial packet with an updated value is received; see Section 7.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.5.2-p4801-s4", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1026", "text": "The value of the Token field is copied to all subsequent Initial packets; see Section 8.1.2 . ¶ Other than updating the Destination Connection ID and Token fields, the Initial packet sent by the client is subject to the same restrictions as the first Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.2-p4802-s5", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1026", "text": "A client MUST use the same cryptographic handshake message it included in this packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.2-p4803-s6", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1026", "text": "A server MAY treat a packet that contains a different cryptographic handshake message as a connection error or discard it.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.2-p4804-s7", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1026", "text": "Note that including a Token field reduces the available space for the cryptographic handshake message, which might result in the client needing to send multiple Initial packets. ¶ A client MAY attempt 0-RTT after receiving a Retry packet by sending 0-RTT packets to the connection ID provided by the server. ¶ A client MUST NOT reset the packet number for any packet number space after processing a Retry packet.", "facet": "other", "normative": true, "modalities": ["MAY", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.5.2-p4805-s8", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1026", "text": "In particular, 0-RTT packets contain confidential information that will most likely be retransmitted on receiving a Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.2-p4806-s9", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1026", "text": "The keys used to protect these new 0-RTT packets will not change as a result of responding to a Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.2-p4807-s10", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1026", "text": "However, the data sent in these packets could be different than what was sent earlier.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.2-p4808-s11", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1026", "text": "Sending these new packets with the same packet number is likely to compromise the packet protection for those packets because the same key and nonce could be used to protect different content.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.2-p4809-s12", "section": "17.2.5.2", "anchor": "#name-handling-a-retry-packet", "para_id": "17.2.5.2-p1026", "text": "A server MAY abort the connection if it detects that the client reset the packet number. ¶ The connection IDs used in Initial and Retry packets exchanged between client and server are copied to the transport parameters and validated as described in Section 7.3 . ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.5.3-p4810-s1", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1027", "text": "Subsequent Initial packets from the client include the connection ID and token values from the Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4811-s2", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1027", "text": "The client copies the Source Connection ID field from the Retry packet to the Destination Connection ID field and uses this value until an Initial packet with an updated value is received; see Section 7.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.5.3-p4812-s3", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1027", "text": "The value of the Token field is copied to all subsequent Initial packets; see Section 8.1.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4813-s1", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1028", "text": "Other than updating the Destination Connection ID and Token fields, the Initial packet sent by the client is subject to the same restrictions as the first Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4814-s2", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1028", "text": "A client MUST use the same cryptographic handshake message it included in this packet.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.3-p4815-s3", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1028", "text": "A server MAY treat a packet that contains a different cryptographic handshake message as a connection error or discard it.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.3-p4816-s4", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1028", "text": "Note that including a Token field reduces the available space for the cryptographic handshake message, which might result in the client needing to send multiple Initial packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.2.5.3-p4817-s1", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1029", "text": "A client MAY attempt 0-RTT after receiving a Retry packet by sending 0-RTT packets to the connection ID provided by the server. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.3-p4818-s1", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1030", "text": "A client MUST NOT reset the packet number for any packet number space after processing a Retry packet.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.3-p4819-s2", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1030", "text": "In particular, 0-RTT packets contain confidential information that will most likely be retransmitted on receiving a Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4820-s3", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1030", "text": "The keys used to protect these new 0-RTT packets will not change as a result of responding to a Retry packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4821-s4", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1030", "text": "However, the data sent in these packets could be different than what was sent earlier.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4822-s5", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1030", "text": "Sending these new packets with the same packet number is likely to compromise the packet protection for those packets because the same key and nonce could be used to protect different content.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4823-s6", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1030", "text": "A server MAY abort the connection if it detects that the client reset the packet number. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.2.5.3-p4824-s1", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1031", "text": "The connection IDs used in Initial and Retry packets exchanged between client and server are copied to the transport parameters and validated as described in Section 7.3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4825-s1", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "17.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4826-s2", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "Short Header Packets This version of QUIC defines a single packet type that uses the short packet header. ¶ 17.3.1. 1-RTT Packet A 1-RTT packet uses a short packet header.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4827-s3", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "It is used after the version and 1-RTT keys are negotiated. ¶ 1-RTT Packet { Header Form (1) = 0, Fixed Bit (1) = 1, Spin Bit (1), Reserved Bits (2), Key Phase (1), Packet Number Length (2), Destination Connection ID (0..160), Packet Number (8..32), Packet Payload (8..), } Figure 19 : 1-RTT Packet 1-RTT packets contain the following fields: ¶ Header Form:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4828-s4", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "The most significant bit (0x80) of byte 0 is set to 0 for the short header. ¶ Fixed Bit:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4829-s5", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "The next bit (0x40) of byte 0 is set to 1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4830-s6", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "Packets containing a zero value for this bit are not valid packets in this version and MUST be discarded.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.3-p4831-s7", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "A value of 1 for this bit allows QUIC to coexist with other protocols; see [ RFC7983 ] . ¶ Spin Bit:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4832-s8", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "The third most significant bit (0x20) of byte 0 is the latency spin bit, set as described in Section 17.4 . ¶ Reserved Bits:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4833-s9", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "The next two bits (those with a mask of 0x18) of byte 0 are reserved.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4834-s10", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4835-s11", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "The value included prior to protection MUST be set to 0.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.3-p4836-s12", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "An endpoint MUST treat receipt of a packet that has a non-zero value for these bits, after removing both packet and header protection, as a connection error of type PROTOCOL_VIOLATION.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.2.5.3-p4837-s13", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "Discarding such a packet after only removing header protection can expose the endpoint to attacks; see Section 9.5 of [ QUIC-TLS ] . ¶ Key Phase:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4838-s14", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "The next bit (0x04) of byte 0 indicates the key phase, which allows a recipient of a packet to identify the packet protection keys that are used to protect the packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4839-s15", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "See [ QUIC-TLS ] for details.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4840-s16", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "This bit is protected using header protection; see Section 5.4 of [ QUIC-TLS ] . ¶ Packet Number Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4841-s17", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "The least significant two bits (those with a mask of 0x03) of byte 0 contain the length of the Packet Number field, encoded as an unsigned two-bit integer that is one less than the length of the Packet Number field in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4842-s18", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "That is, the length of the Packet Number field is the value of this field plus one.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4843-s19", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] . ¶ Destination Connection ID:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4844-s20", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "The Destination Connection ID is a connection ID that is chosen by the intended recipient of the packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4845-s21", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "See Section 5.1 for more details. ¶ Packet Number:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4846-s22", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "The Packet Number field is 1 to 4 bytes long.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4847-s23", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "The packet number is protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4848-s24", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "The length of the Packet Number field is encoded in Packet Number Length field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4849-s25", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "See Section 17.1 for details. ¶ Packet Payload: 1-RTT packets always include a 1-RTT protected payload. ¶ The header form bit and the Destination Connection ID field of a short header packet are version independent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4850-s26", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "The remaining fields are specific to the selected QUIC version.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.2.5.3-p4851-s27", "section": "17.2.5.3", "anchor": "#name-continuing-a-handshake-afte", "para_id": "17.2.5.3-p1032", "text": "See [ QUIC-INVARIANTS ] for details on how packets from different versions of QUIC are interpreted. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4852-s1", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1033", "text": "This version of QUIC defines a single packet type that uses the short packet header. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4853-s1", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "17.3.1. 1-RTT Packet A 1-RTT packet uses a short packet header.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4854-s2", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "It is used after the version and 1-RTT keys are negotiated. ¶ 1-RTT Packet { Header Form (1) = 0, Fixed Bit (1) = 1, Spin Bit (1), Reserved Bits (2), Key Phase (1), Packet Number Length (2), Destination Connection ID (0..160), Packet Number (8..32), Packet Payload (8..), } Figure 19 : 1-RTT Packet 1-RTT packets contain the following fields: ¶ Header Form:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4855-s3", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "The most significant bit (0x80) of byte 0 is set to 0 for the short header. ¶ Fixed Bit:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4856-s4", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "The next bit (0x40) of byte 0 is set to 1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4857-s5", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "Packets containing a zero value for this bit are not valid packets in this version and MUST be discarded.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.3-p4858-s6", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "A value of 1 for this bit allows QUIC to coexist with other protocols; see [ RFC7983 ] . ¶ Spin Bit:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4859-s7", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "The third most significant bit (0x20) of byte 0 is the latency spin bit, set as described in Section 17.4 . ¶ Reserved Bits:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4860-s8", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "The next two bits (those with a mask of 0x18) of byte 0 are reserved.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4861-s9", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4862-s10", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "The value included prior to protection MUST be set to 0.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.3-p4863-s11", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "An endpoint MUST treat receipt of a packet that has a non-zero value for these bits, after removing both packet and header protection, as a connection error of type PROTOCOL_VIOLATION.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.3-p4864-s12", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "Discarding such a packet after only removing header protection can expose the endpoint to attacks; see Section 9.5 of [ QUIC-TLS ] . ¶ Key Phase:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4865-s13", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "The next bit (0x04) of byte 0 indicates the key phase, which allows a recipient of a packet to identify the packet protection keys that are used to protect the packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4866-s14", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "See [ QUIC-TLS ] for details.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4867-s15", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "This bit is protected using header protection; see Section 5.4 of [ QUIC-TLS ] . ¶ Packet Number Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4868-s16", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "The least significant two bits (those with a mask of 0x03) of byte 0 contain the length of the Packet Number field, encoded as an unsigned two-bit integer that is one less than the length of the Packet Number field in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4869-s17", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "That is, the length of the Packet Number field is the value of this field plus one.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4870-s18", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] . ¶ Destination Connection ID:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4871-s19", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "The Destination Connection ID is a connection ID that is chosen by the intended recipient of the packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4872-s20", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "See Section 5.1 for more details. ¶ Packet Number:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4873-s21", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "The Packet Number field is 1 to 4 bytes long.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4874-s22", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "The packet number is protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4875-s23", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "The length of the Packet Number field is encoded in Packet Number Length field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4876-s24", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "See Section 17.1 for details. ¶ Packet Payload: 1-RTT packets always include a 1-RTT protected payload. ¶ The header form bit and the Destination Connection ID field of a short header packet are version independent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4877-s25", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "The remaining fields are specific to the selected QUIC version.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3-p4878-s26", "section": "17.3", "anchor": "#name-short-header-packets", "para_id": "17.3-p1034", "text": "See [ QUIC-INVARIANTS ] for details on how packets from different versions of QUIC are interpreted. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4879-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1035", "text": "A 1-RTT packet uses a short packet header.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4880-s2", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1035", "text": "It is used after the version and 1-RTT keys are negotiated. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4881-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1036", "text": "1-RTT Packet { Header Form (1) = 0, Fixed Bit (1) = 1, Spin Bit (1), Reserved Bits (2), Key Phase (1), Packet Number Length (2), Destination Connection ID (0..160), Packet Number (8..32), Packet Payload (8..), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4882-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1037", "text": "1-RTT Packet { Header Form (1) = 0, Fixed Bit (1) = 1, Spin Bit (1), Reserved Bits (2), Key Phase (1), Packet Number Length (2), Destination Connection ID (0..160), Packet Number (8..32), Packet Payload (8..), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4883-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1038", "text": "Figure 19 : 1-RTT Packet", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4884-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1039", "text": "1-RTT packets contain the following fields: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4885-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1040", "text": "The most significant bit (0x80) of byte 0 is set to 0 for the short header. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4886-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1041", "text": "The next bit (0x40) of byte 0 is set to 1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4887-s2", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1041", "text": "Packets containing a zero value for this bit are not valid packets in this version and MUST be discarded.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.3.1-p4888-s3", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1041", "text": "A value of 1 for this bit allows QUIC to coexist with other protocols; see [ RFC7983 ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4889-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1042", "text": "The third most significant bit (0x20) of byte 0 is the latency spin bit, set as described in Section 17.4 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4890-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1043", "text": "The next two bits (those with a mask of 0x18) of byte 0 are reserved.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4891-s2", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1043", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4892-s3", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1043", "text": "The value included prior to protection MUST be set to 0.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.3.1-p4893-s4", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1043", "text": "An endpoint MUST treat receipt of a packet that has a non-zero value for these bits, after removing both packet and header protection, as a connection error of type PROTOCOL_VIOLATION.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.3.1-p4894-s5", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1043", "text": "Discarding such a packet after only removing header protection can expose the endpoint to attacks; see Section 9.5 of [ QUIC-TLS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4895-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1044", "text": "The next bit (0x04) of byte 0 indicates the key phase, which allows a recipient of a packet to identify the packet protection keys that are used to protect the packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4896-s2", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1044", "text": "See [ QUIC-TLS ] for details.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4897-s3", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1044", "text": "This bit is protected using header protection; see Section 5.4 of [ QUIC-TLS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4898-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1045", "text": "The least significant two bits (those with a mask of 0x03) of byte 0 contain the length of the Packet Number field, encoded as an unsigned two-bit integer that is one less than the length of the Packet Number field in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4899-s2", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1045", "text": "That is, the length of the Packet Number field is the value of this field plus one.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4900-s3", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1045", "text": "These bits are protected using header protection; see Section 5.4 of [ QUIC-TLS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4901-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1046", "text": "The Destination Connection ID is a connection ID that is chosen by the intended recipient of the packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4902-s2", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1046", "text": "See Section 5.1 for more details. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4903-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1047", "text": "The Packet Number field is 1 to 4 bytes long.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4904-s2", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1047", "text": "The packet number is protected using header protection; see Section 5.4 of [ QUIC-TLS ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4905-s3", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1047", "text": "The length of the Packet Number field is encoded in Packet Number Length field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4906-s4", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1047", "text": "See Section 17.1 for details. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4907-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1048", "text": "1-RTT packets always include a 1-RTT protected payload. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4908-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1049", "text": "The header form bit and the Destination Connection ID field of a short header packet are version independent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4909-s2", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1049", "text": "The remaining fields are specific to the selected QUIC version.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4910-s3", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1049", "text": "See [ QUIC-INVARIANTS ] for details on how packets from different versions of QUIC are interpreted. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4911-s1", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1050", "text": "17.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4912-s2", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1050", "text": "Latency Spin Bit The latency spin bit, which is defined for 1-RTT packets ( Section 17.3.1 ), enables passive latency monitoring from observation points on the network path throughout the duration of a connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4913-s3", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1050", "text": "The server reflects the spin value received, while the client \"spins\" it after one RTT.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.3.1-p4914-s4", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1050", "text": "On-path observers can measure the time between two spin bit toggle events to estimate the end-to-end RTT of a connection. ¶ The spin bit is only present in 1-RTT packets, since it is possible to measure the initial RTT of a connection by observing the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4915-s5", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1050", "text": "Therefore, the spin bit is available after version negotiation and connection establishment are completed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4916-s6", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1050", "text": "On-path measurement and use of the latency spin bit are further discussed in [ QUIC-MANAGEABILITY ] . ¶ The spin bit is an OPTIONAL feature of this version of QUIC.", "facet": "other", "normative": true, "modalities": ["OPTIONAL"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.3.1-p4917-s7", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1050", "text": "An endpoint that does not support this feature MUST disable it, as defined below. ¶ Each endpoint unilaterally decides if the spin bit is enabled or disabled for a connection.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.3.1-p4918-s8", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1050", "text": "Implementations MUST allow administrators of clients and servers to disable the spin bit either globally or on a per-connection basis.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.3.1-p4919-s9", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1050", "text": "Even when the spin bit is not disabled by the administrator, endpoints MUST disable their use of the spin bit for a random selection of at least one in every 16 network paths, or for one in every 16 connection IDs, in order to ensure that QUIC connections that disable the spin bit are commonly observed on the network.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.3.1-p4920-s10", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1050", "text": "As each endpoint disables the spin bit independently, this ensures that the spin bit signal is disabled on approximately one in eight network paths. ¶ When the spin bit is disabled, endpoints MAY set the spin bit to any value and MUST ignore any incoming value.", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.3.1-p4921-s11", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1050", "text": "It is RECOMMENDED that endpoints set the spin bit to a random value either chosen independently for each packet or chosen independently for each connection ID. ¶ If the spin bit is enabled for the connection, the endpoint maintains a spin value for each network path and sets the spin bit in the packet header to the currently stored value when a 1-RTT packet is sent on that path.", "facet": "other", "normative": true, "modalities": ["RECOMMENDED"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.3.1-p4922-s12", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1050", "text": "The spin value is initialized to 0 in the endpoint for each network path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.3.1-p4923-s13", "section": "17.3.1", "anchor": "#name-1-rtt-packet", "para_id": "17.3.1-p1050", "text": "Each endpoint also remembers the highest packet number seen from its peer on each path. ¶ When a server receives a 1-RTT packet that increases the highest packet number seen by the server from the client on a given network path, it sets the spin value for that path to be equal to the spin bit in the received packet. ¶ When a client receives a 1-RTT packet that increases the highest packet number seen by the client from the server on a given network path, it sets the spin value for that path to the inverse of the spin bit in the received packet. ¶ An endpoint resets the spin value for a network path to 0 when changing the connection ID being used on that network path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4924-s1", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1051", "text": "The latency spin bit, which is defined for 1-RTT packets ( Section 17.3.1 ), enables passive latency monitoring from observation points on the network path throughout the duration of a connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4925-s2", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1051", "text": "The server reflects the spin value received, while the client \"spins\" it after one RTT.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4926-s3", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1051", "text": "On-path observers can measure the time between two spin bit toggle events to estimate the end-to-end RTT of a connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4927-s1", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1052", "text": "The spin bit is only present in 1-RTT packets, since it is possible to measure the initial RTT of a connection by observing the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4928-s2", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1052", "text": "Therefore, the spin bit is available after version negotiation and connection establishment are completed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4929-s3", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1052", "text": "On-path measurement and use of the latency spin bit are further discussed in [ QUIC-MANAGEABILITY ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4930-s1", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1053", "text": "The spin bit is an OPTIONAL feature of this version of QUIC.", "facet": "other", "normative": true, "modalities": ["OPTIONAL"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.4-p4931-s2", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1053", "text": "An endpoint that does not support this feature MUST disable it, as defined below. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.4-p4932-s1", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1054", "text": "Each endpoint unilaterally decides if the spin bit is enabled or disabled for a connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4933-s2", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1054", "text": "Implementations MUST allow administrators of clients and servers to disable the spin bit either globally or on a per-connection basis.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.4-p4934-s3", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1054", "text": "Even when the spin bit is not disabled by the administrator, endpoints MUST disable their use of the spin bit for a random selection of at least one in every 16 network paths, or for one in every 16 connection IDs, in order to ensure that QUIC connections that disable the spin bit are commonly observed on the network.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.4-p4935-s4", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1054", "text": "As each endpoint disables the spin bit independently, this ensures that the spin bit signal is disabled on approximately one in eight network paths. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4936-s1", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1055", "text": "When the spin bit is disabled, endpoints MAY set the spin bit to any value and MUST ignore any incoming value.", "facet": "other", "normative": true, "modalities": ["MAY", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.4-p4937-s2", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1055", "text": "It is RECOMMENDED that endpoints set the spin bit to a random value either chosen independently for each packet or chosen independently for each connection ID. ¶", "facet": "other", "normative": true, "modalities": ["RECOMMENDED"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.4-p4938-s1", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1056", "text": "If the spin bit is enabled for the connection, the endpoint maintains a spin value for each network path and sets the spin bit in the packet header to the currently stored value when a 1-RTT packet is sent on that path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4939-s2", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1056", "text": "The spin value is initialized to 0 in the endpoint for each network path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4940-s3", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1056", "text": "Each endpoint also remembers the highest packet number seen from its peer on each path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4941-s1", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1057", "text": "When a server receives a 1-RTT packet that increases the highest packet number seen by the server from the client on a given network path, it sets the spin value for that path to be equal to the spin bit in the received packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4942-s1", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1058", "text": "When a client receives a 1-RTT packet that increases the highest packet number seen by the client from the server on a given network path, it sets the spin value for that path to the inverse of the spin bit in the received packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4943-s1", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1059", "text": "An endpoint resets the spin value for a network path to 0 when changing the connection ID being used on that network path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4944-s1", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "18.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4945-s2", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Transport Parameter Encoding The extension_data field of the quic_transport_parameters extension defined in [ QUIC-TLS ] contains the QUIC transport parameters.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4946-s3", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "They are encoded as a sequence of transport parameters, as shown in Figure 20 : ¶ Transport Parameters { Transport Parameter (..) ..., } Figure 20 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4947-s4", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Sequence of Transport Parameters Each transport parameter is encoded as an (identifier, length, value) tuple, as shown in Figure 21 : ¶ Transport Parameter { Transport Parameter ID (i), Transport Parameter Length (i), Transport Parameter Value (..), } Figure 21 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4948-s5", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Transport Parameter Encoding The Transport Parameter Length field contains the length of the Transport Parameter Value field in bytes. ¶ QUIC encodes transport parameters into a sequence of bytes, which is then included in the cryptographic handshake. ¶ 18.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4949-s6", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Reserved Transport Parameters Transport parameters with an identifier of the form 31 * N + 27 for integer values of N are reserved to exercise the requirement that unknown transport parameters be ignored.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4950-s7", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "These transport parameters have no semantics and can carry arbitrary values. ¶ 18.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4951-s8", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Transport Parameter Definitions This section details the transport parameters defined in this document. ¶ Many transport parameters listed here have integer values.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4952-s9", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Those transport parameters that are identified as integers use a variable-length integer encoding; see Section 16 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4953-s10", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Transport parameters have a default value of 0 if the transport parameter is absent, unless otherwise stated. ¶ The following transport parameters are defined: ¶ original_destination_connection_id (0x00):", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.4-p4954-s11", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This parameter is the value of the Destination Connection ID field from the first Initial packet sent by the client; see Section 7.3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4955-s12", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This transport parameter is only sent by a server. ¶ max_idle_timeout (0x01):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4956-s13", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "The maximum idle timeout is a value in milliseconds that is encoded as an integer; see ( Section 10.1 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4957-s14", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Idle timeout is disabled when both endpoints omit this transport parameter or specify a value of 0. ¶ stateless_reset_token (0x02):", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.4-p4958-s15", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "A stateless reset token is used in verifying a stateless reset; see Section 10.3 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.4-p4959-s16", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This parameter is a sequence of 16 bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4960-s17", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This transport parameter MUST NOT be sent by a client but MAY be sent by a server.", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.4-p4961-s18", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "A server that does not send this transport parameter cannot use stateless reset ( Section 10.3 ) for the connection ID negotiated during the handshake. ¶ max_udp_payload_size (0x03):", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.4-p4962-s19", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "The maximum UDP payload size parameter is an integer value that limits the size of UDP payloads that the endpoint is willing to receive.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4963-s20", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "UDP datagrams with payloads larger than this limit are not likely to be processed by the receiver. ¶ The default for this parameter is the maximum permitted UDP payload of 65527.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4964-s21", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Values below 1200 are invalid. ¶ This limit does act as an additional constraint on datagram size in the same way as the path MTU, but it is a property of the endpoint and not the path; see Section 14 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4965-s22", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "It is expected that this is the space an endpoint dedicates to holding incoming packets. ¶ initial_max_data (0x04):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4966-s23", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "The initial maximum data parameter is an integer value that contains the initial value for the maximum amount of data that can be sent on the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4967-s24", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This is equivalent to sending a MAX_DATA ( Section 19.9 ) for the connection immediately after completing the handshake. ¶ initial_max_stream_data_bidi_local (0x05):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.4-p4968-s25", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This parameter is an integer value specifying the initial flow control limit for locally initiated bidirectional streams.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.4-p4969-s26", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This limit applies to newly created bidirectional streams opened by the endpoint that sends the transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4970-s27", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "In client transport parameters, this applies to streams with an identifier with the least significant two bits set to 0x00; in server transport parameters, this applies to streams with the least significant two bits set to 0x01. ¶ initial_max_stream_data_bidi_remote (0x06):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4971-s28", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This parameter is an integer value specifying the initial flow control limit for peer-initiated bidirectional streams.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.4-p4972-s29", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This limit applies to newly created bidirectional streams opened by the endpoint that receives the transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4973-s30", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "In client transport parameters, this applies to streams with an identifier with the least significant two bits set to 0x01; in server transport parameters, this applies to streams with the least significant two bits set to 0x00. ¶ initial_max_stream_data_uni (0x07):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4974-s31", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This parameter is an integer value specifying the initial flow control limit for unidirectional streams.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.4-p4975-s32", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This limit applies to newly created unidirectional streams opened by the endpoint that receives the transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4976-s33", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "In client transport parameters, this applies to streams with an identifier with the least significant two bits set to 0x03; in server transport parameters, this applies to streams with the least significant two bits set to 0x02. ¶ initial_max_streams_bidi (0x08):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4977-s34", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "The initial maximum bidirectional streams parameter is an integer value that contains the initial maximum number of bidirectional streams the endpoint that receives this transport parameter is permitted to initiate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4978-s35", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "If this parameter is absent or zero, the peer cannot open bidirectional streams until a MAX_STREAMS frame is sent.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "17.4-p4979-s36", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Setting this parameter is equivalent to sending a MAX_STREAMS ( Section 19.11 ) of the corresponding type with the same value. ¶ initial_max_streams_uni (0x09):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.4-p4980-s37", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "The initial maximum unidirectional streams parameter is an integer value that contains the initial maximum number of unidirectional streams the endpoint that receives this transport parameter is permitted to initiate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4981-s38", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "If this parameter is absent or zero, the peer cannot open unidirectional streams until a MAX_STREAMS frame is sent.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "17.4-p4982-s39", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Setting this parameter is equivalent to sending a MAX_STREAMS ( Section 19.11 ) of the corresponding type with the same value. ¶ ack_delay_exponent (0x0a):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.4-p4983-s40", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "The acknowledgment delay exponent is an integer value indicating an exponent used to decode the ACK Delay field in the ACK frame ( Section 19.3 ).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.4-p4984-s41", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "If this value is absent, a default value of 3 is assumed (indicating a multiplier of 8).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4985-s42", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Values above 20 are invalid. ¶ max_ack_delay (0x0b):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4986-s43", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "The maximum acknowledgment delay is an integer value indicating the maximum amount of time in milliseconds by which the endpoint will delay sending acknowledgments.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4987-s44", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This value SHOULD include the receiver's expected delays in alarms firing.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.4-p4988-s45", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "For example, if a receiver sets a timer for 5ms and alarms commonly fire up to 1ms late, then it should send a max_ack_delay of 6ms.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4989-s46", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "If this value is absent, a default of 25 milliseconds is assumed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4990-s47", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Values of 2 14 or greater are invalid. ¶ disable_active_migration (0x0c):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4991-s48", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "The disable active migration transport parameter is included if the endpoint does not support active connection migration ( Section 9 ) on the address being used during the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p4992-s49", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "An endpoint that receives this transport parameter MUST NOT use a new local address when sending to the address that the peer used during the handshake.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.4-p4993-s50", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This transport parameter does not prohibit connection migration after a client has acted on a preferred_address transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4994-s51", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This parameter is a zero-length value. ¶ preferred_address (0x0d):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4995-s52", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "The server's preferred address is used to effect a change in server address at the end of the handshake, as described in Section 9.6 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4996-s53", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This transport parameter is only sent by a server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4997-s54", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Servers MAY choose to only send a preferred address of one address family by sending an all-zero address and port (0.0.0.0:0 or [::]:0) for the other family.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.4-p4998-s55", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "IP addresses are encoded in network byte order. ¶ The preferred_address transport parameter contains an address and port for both IPv4 and IPv6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p4999-s56", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "The four-byte IPv4 Address field is followed by the associated two-byte IPv4 Port field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p5000-s57", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This is followed by a 16-byte IPv6 Address field and two-byte IPv6 Port field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p5001-s58", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "After address and port pairs, a Connection ID Length field describes the length of the following Connection ID field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p5002-s59", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Finally, a 16-byte Stateless Reset Token field includes the stateless reset token associated with the connection ID.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.4-p5003-s60", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "The format of this transport parameter is shown in Figure 22 below. ¶ The Connection ID field and the Stateless Reset Token field contain an alternative connection ID that has a sequence number of 1; see Section 5.1.1 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "17.4-p5004-s61", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Having these values sent alongside the preferred address ensures that there will be at least one unused active connection ID when the client initiates migration to the preferred address. ¶ The Connection ID and Stateless Reset Token fields of a preferred address are identical in syntax and semantics to the corresponding fields of a NEW_CONNECTION_ID frame ( Section 19.15 ).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.4-p5005-s62", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "A server that chooses a zero-length connection ID MUST NOT provide a preferred address.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.4-p5006-s63", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Similarly, a server MUST NOT include a zero-length connection ID in this transport parameter.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.4-p5007-s64", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "A client MUST treat a violation of these requirements as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶ Preferred Address { IPv4 Address (32), IPv4 Port (16), IPv6 Address (128), IPv6 Port (16), Connection ID Length (8), Connection ID (..), Stateless Reset Token (128), } Figure 22 :", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "17.4-p5008-s65", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "Preferred Address Format active_connection_id_limit (0x0e):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p5009-s66", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This is an integer value specifying the maximum number of connection IDs from the peer that an endpoint is willing to store.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p5010-s67", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This value includes the connection ID received during the handshake, that received in the preferred_address transport parameter, and those received in NEW_CONNECTION_ID frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.4-p5011-s68", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "The value of the active_connection_id_limit parameter MUST be at least 2.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "17.4-p5012-s69", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "An endpoint that receives a value less than 2 MUST close the connection with an error of type TRANSPORT_PARAMETER_ERROR.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "17.4-p5013-s70", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "If this transport parameter is absent, a default of 2 is assumed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p5014-s71", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "If an endpoint issues a zero-length connection ID, it will never send a NEW_CONNECTION_ID frame and therefore ignores the active_connection_id_limit value received from its peer. ¶ initial_source_connection_id (0x0f):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "17.4-p5015-s72", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This is the value that the endpoint included in the Source Connection ID field of the first Initial packet it sends for the connection; see Section 7.3 . ¶ retry_source_connection_id (0x10):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "17.4-p5016-s73", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This is the value that the server included in the Source Connection ID field of a Retry packet; see Section 7.3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "17.4-p5017-s74", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "This transport parameter is only sent by a server. ¶ If present, transport parameters that set initial per-stream flow control limits (initial_max_stream_data_bidi_local, initial_max_stream_data_bidi_remote, and initial_max_stream_data_uni) are equivalent to sending a MAX_STREAM_DATA frame ( Section 19.10 ) on every stream of the corresponding type immediately after opening.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "17.4-p5018-s75", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "If the transport parameter is absent, streams of that type start with a flow control limit of 0. ¶ A client MUST NOT include any server-only transport parameter: original_destination_connection_id, preferred_address, retry_source_connection_id, or stateless_reset_token.", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "17.4-p5019-s76", "section": "17.4", "anchor": "#name-latency-spin-bit", "para_id": "17.4-p1060", "text": "A server MUST treat receipt of any of these transport parameters as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18-p5020-s1", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1061", "text": "The extension_data field of the quic_transport_parameters extension defined in [ QUIC-TLS ] contains the QUIC transport parameters.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5021-s2", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1061", "text": "They are encoded as a sequence of transport parameters, as shown in Figure 20 : ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5022-s1", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1062", "text": "Transport Parameters { Transport Parameter (..) ..., } Figure 20 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5023-s2", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1062", "text": "Sequence of Transport Parameters", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5024-s1", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1063", "text": "Transport Parameters { Transport Parameter (..) ..., }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5025-s1", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1064", "text": "Transport Parameters { Transport Parameter (..) ..., }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5026-s1", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1065", "text": "Figure 20 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5027-s2", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1065", "text": "Sequence of Transport Parameters", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5028-s1", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1066", "text": "Each transport parameter is encoded as an (identifier, length, value) tuple, as shown in Figure 21 : ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5029-s1", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1067", "text": "Transport Parameter { Transport Parameter ID (i), Transport Parameter Length (i), Transport Parameter Value (..), } Figure 21 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5030-s2", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1067", "text": "Transport Parameter Encoding", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5031-s1", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1068", "text": "Transport Parameter { Transport Parameter ID (i), Transport Parameter Length (i), Transport Parameter Value (..), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5032-s1", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1069", "text": "Transport Parameter { Transport Parameter ID (i), Transport Parameter Length (i), Transport Parameter Value (..), }", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5033-s1", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1070", "text": "Figure 21 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5034-s2", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1070", "text": "Transport Parameter Encoding", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5035-s1", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1071", "text": "The Transport Parameter Length field contains the length of the Transport Parameter Value field in bytes. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5036-s1", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1072", "text": "QUIC encodes transport parameters into a sequence of bytes, which is then included in the cryptographic handshake. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18-p5037-s1", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1073", "text": "18.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5038-s2", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1073", "text": "Reserved Transport Parameters Transport parameters with an identifier of the form 31 * N + 27 for integer values of N are reserved to exercise the requirement that unknown transport parameters be ignored.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18-p5039-s3", "section": "18", "anchor": "#name-transport-parameter-encodin", "para_id": "18-p1073", "text": "These transport parameters have no semantics and can carry arbitrary values. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5040-s1", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1074", "text": "Transport parameters with an identifier of the form 31 * N + 27 for integer values of N are reserved to exercise the requirement that unknown transport parameters be ignored.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5041-s2", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1074", "text": "These transport parameters have no semantics and can carry arbitrary values. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5042-s1", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "18.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5043-s2", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Transport Parameter Definitions This section details the transport parameters defined in this document. ¶ Many transport parameters listed here have integer values.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5044-s3", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Those transport parameters that are identified as integers use a variable-length integer encoding; see Section 16 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5045-s4", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Transport parameters have a default value of 0 if the transport parameter is absent, unless otherwise stated. ¶ The following transport parameters are defined: ¶ original_destination_connection_id (0x00):", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.1-p5046-s5", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This parameter is the value of the Destination Connection ID field from the first Initial packet sent by the client; see Section 7.3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5047-s6", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This transport parameter is only sent by a server. ¶ max_idle_timeout (0x01):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5048-s7", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "The maximum idle timeout is a value in milliseconds that is encoded as an integer; see ( Section 10.1 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5049-s8", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Idle timeout is disabled when both endpoints omit this transport parameter or specify a value of 0. ¶ stateless_reset_token (0x02):", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.1-p5050-s9", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "A stateless reset token is used in verifying a stateless reset; see Section 10.3 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.1-p5051-s10", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This parameter is a sequence of 16 bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5052-s11", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This transport parameter MUST NOT be sent by a client but MAY be sent by a server.", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.1-p5053-s12", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "A server that does not send this transport parameter cannot use stateless reset ( Section 10.3 ) for the connection ID negotiated during the handshake. ¶ max_udp_payload_size (0x03):", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.1-p5054-s13", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "The maximum UDP payload size parameter is an integer value that limits the size of UDP payloads that the endpoint is willing to receive.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5055-s14", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "UDP datagrams with payloads larger than this limit are not likely to be processed by the receiver. ¶ The default for this parameter is the maximum permitted UDP payload of 65527.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5056-s15", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Values below 1200 are invalid. ¶ This limit does act as an additional constraint on datagram size in the same way as the path MTU, but it is a property of the endpoint and not the path; see Section 14 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5057-s16", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "It is expected that this is the space an endpoint dedicates to holding incoming packets. ¶ initial_max_data (0x04):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5058-s17", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "The initial maximum data parameter is an integer value that contains the initial value for the maximum amount of data that can be sent on the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5059-s18", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This is equivalent to sending a MAX_DATA ( Section 19.9 ) for the connection immediately after completing the handshake. ¶ initial_max_stream_data_bidi_local (0x05):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.1-p5060-s19", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This parameter is an integer value specifying the initial flow control limit for locally initiated bidirectional streams.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.1-p5061-s20", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This limit applies to newly created bidirectional streams opened by the endpoint that sends the transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5062-s21", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "In client transport parameters, this applies to streams with an identifier with the least significant two bits set to 0x00; in server transport parameters, this applies to streams with the least significant two bits set to 0x01. ¶ initial_max_stream_data_bidi_remote (0x06):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5063-s22", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This parameter is an integer value specifying the initial flow control limit for peer-initiated bidirectional streams.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.1-p5064-s23", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This limit applies to newly created bidirectional streams opened by the endpoint that receives the transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5065-s24", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "In client transport parameters, this applies to streams with an identifier with the least significant two bits set to 0x01; in server transport parameters, this applies to streams with the least significant two bits set to 0x00. ¶ initial_max_stream_data_uni (0x07):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5066-s25", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This parameter is an integer value specifying the initial flow control limit for unidirectional streams.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.1-p5067-s26", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This limit applies to newly created unidirectional streams opened by the endpoint that receives the transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5068-s27", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "In client transport parameters, this applies to streams with an identifier with the least significant two bits set to 0x03; in server transport parameters, this applies to streams with the least significant two bits set to 0x02. ¶ initial_max_streams_bidi (0x08):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5069-s28", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "The initial maximum bidirectional streams parameter is an integer value that contains the initial maximum number of bidirectional streams the endpoint that receives this transport parameter is permitted to initiate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5070-s29", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "If this parameter is absent or zero, the peer cannot open bidirectional streams until a MAX_STREAMS frame is sent.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.1-p5071-s30", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Setting this parameter is equivalent to sending a MAX_STREAMS ( Section 19.11 ) of the corresponding type with the same value. ¶ initial_max_streams_uni (0x09):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.1-p5072-s31", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "The initial maximum unidirectional streams parameter is an integer value that contains the initial maximum number of unidirectional streams the endpoint that receives this transport parameter is permitted to initiate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5073-s32", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "If this parameter is absent or zero, the peer cannot open unidirectional streams until a MAX_STREAMS frame is sent.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.1-p5074-s33", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Setting this parameter is equivalent to sending a MAX_STREAMS ( Section 19.11 ) of the corresponding type with the same value. ¶ ack_delay_exponent (0x0a):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.1-p5075-s34", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "The acknowledgment delay exponent is an integer value indicating an exponent used to decode the ACK Delay field in the ACK frame ( Section 19.3 ).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.1-p5076-s35", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "If this value is absent, a default value of 3 is assumed (indicating a multiplier of 8).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5077-s36", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Values above 20 are invalid. ¶ max_ack_delay (0x0b):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5078-s37", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "The maximum acknowledgment delay is an integer value indicating the maximum amount of time in milliseconds by which the endpoint will delay sending acknowledgments.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5079-s38", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This value SHOULD include the receiver's expected delays in alarms firing.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.1-p5080-s39", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "For example, if a receiver sets a timer for 5ms and alarms commonly fire up to 1ms late, then it should send a max_ack_delay of 6ms.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5081-s40", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "If this value is absent, a default of 25 milliseconds is assumed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5082-s41", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Values of 2 14 or greater are invalid. ¶ disable_active_migration (0x0c):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5083-s42", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "The disable active migration transport parameter is included if the endpoint does not support active connection migration ( Section 9 ) on the address being used during the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5084-s43", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "An endpoint that receives this transport parameter MUST NOT use a new local address when sending to the address that the peer used during the handshake.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "18.1-p5085-s44", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This transport parameter does not prohibit connection migration after a client has acted on a preferred_address transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5086-s45", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This parameter is a zero-length value. ¶ preferred_address (0x0d):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5087-s46", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "The server's preferred address is used to effect a change in server address at the end of the handshake, as described in Section 9.6 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5088-s47", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This transport parameter is only sent by a server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5089-s48", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Servers MAY choose to only send a preferred address of one address family by sending an all-zero address and port (0.0.0.0:0 or [::]:0) for the other family.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "18.1-p5090-s49", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "IP addresses are encoded in network byte order. ¶ The preferred_address transport parameter contains an address and port for both IPv4 and IPv6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5091-s50", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "The four-byte IPv4 Address field is followed by the associated two-byte IPv4 Port field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5092-s51", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This is followed by a 16-byte IPv6 Address field and two-byte IPv6 Port field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5093-s52", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "After address and port pairs, a Connection ID Length field describes the length of the following Connection ID field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5094-s53", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Finally, a 16-byte Stateless Reset Token field includes the stateless reset token associated with the connection ID.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.1-p5095-s54", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "The format of this transport parameter is shown in Figure 22 below. ¶ The Connection ID field and the Stateless Reset Token field contain an alternative connection ID that has a sequence number of 1; see Section 5.1.1 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.1-p5096-s55", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Having these values sent alongside the preferred address ensures that there will be at least one unused active connection ID when the client initiates migration to the preferred address. ¶ The Connection ID and Stateless Reset Token fields of a preferred address are identical in syntax and semantics to the corresponding fields of a NEW_CONNECTION_ID frame ( Section 19.15 ).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.1-p5097-s56", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "A server that chooses a zero-length connection ID MUST NOT provide a preferred address.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.1-p5098-s57", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Similarly, a server MUST NOT include a zero-length connection ID in this transport parameter.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.1-p5099-s58", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "A client MUST treat a violation of these requirements as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶ Preferred Address { IPv4 Address (32), IPv4 Port (16), IPv6 Address (128), IPv6 Port (16), Connection ID Length (8), Connection ID (..), Stateless Reset Token (128), } Figure 22 :", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.1-p5100-s59", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "Preferred Address Format active_connection_id_limit (0x0e):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5101-s60", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This is an integer value specifying the maximum number of connection IDs from the peer that an endpoint is willing to store.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5102-s61", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This value includes the connection ID received during the handshake, that received in the preferred_address transport parameter, and those received in NEW_CONNECTION_ID frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.1-p5103-s62", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "The value of the active_connection_id_limit parameter MUST be at least 2.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.1-p5104-s63", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "An endpoint that receives a value less than 2 MUST close the connection with an error of type TRANSPORT_PARAMETER_ERROR.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "18.1-p5105-s64", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "If this transport parameter is absent, a default of 2 is assumed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5106-s65", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "If an endpoint issues a zero-length connection ID, it will never send a NEW_CONNECTION_ID frame and therefore ignores the active_connection_id_limit value received from its peer. ¶ initial_source_connection_id (0x0f):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.1-p5107-s66", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This is the value that the endpoint included in the Source Connection ID field of the first Initial packet it sends for the connection; see Section 7.3 . ¶ retry_source_connection_id (0x10):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.1-p5108-s67", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This is the value that the server included in the Source Connection ID field of a Retry packet; see Section 7.3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.1-p5109-s68", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "This transport parameter is only sent by a server. ¶ If present, transport parameters that set initial per-stream flow control limits (initial_max_stream_data_bidi_local, initial_max_stream_data_bidi_remote, and initial_max_stream_data_uni) are equivalent to sending a MAX_STREAM_DATA frame ( Section 19.10 ) on every stream of the corresponding type immediately after opening.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.1-p5110-s69", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "If the transport parameter is absent, streams of that type start with a flow control limit of 0. ¶ A client MUST NOT include any server-only transport parameter: original_destination_connection_id, preferred_address, retry_source_connection_id, or stateless_reset_token.", "facet": "flow_control", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.1-p5111-s70", "section": "18.1", "anchor": "#name-reserved-transport-paramete", "para_id": "18.1-p1075", "text": "A server MUST treat receipt of any of these transport parameters as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5112-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1076", "text": "This section details the transport parameters defined in this document. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5113-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1077", "text": "Many transport parameters listed here have integer values.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5114-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1077", "text": "Those transport parameters that are identified as integers use a variable-length integer encoding; see Section 16 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5115-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1077", "text": "Transport parameters have a default value of 0 if the transport parameter is absent, unless otherwise stated. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5116-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1078", "text": "The following transport parameters are defined: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5117-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1079", "text": "This parameter is the value of the Destination Connection ID field from the first Initial packet sent by the client; see Section 7.3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5118-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1079", "text": "This transport parameter is only sent by a server. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5119-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1080", "text": "The maximum idle timeout is a value in milliseconds that is encoded as an integer; see ( Section 10.1 ).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5120-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1080", "text": "Idle timeout is disabled when both endpoints omit this transport parameter or specify a value of 0. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5121-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1081", "text": "A stateless reset token is used in verifying a stateless reset; see Section 10.3 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5122-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1081", "text": "This parameter is a sequence of 16 bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5123-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1081", "text": "This transport parameter MUST NOT be sent by a client but MAY be sent by a server.", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MAY"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5124-s4", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1081", "text": "A server that does not send this transport parameter cannot use stateless reset ( Section 10.3 ) for the connection ID negotiated during the handshake. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5125-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1082", "text": "The maximum UDP payload size parameter is an integer value that limits the size of UDP payloads that the endpoint is willing to receive.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5126-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1082", "text": "UDP datagrams with payloads larger than this limit are not likely to be processed by the receiver. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5127-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1083", "text": "The default for this parameter is the maximum permitted UDP payload of 65527.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5128-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1083", "text": "Values below 1200 are invalid. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5129-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1084", "text": "This limit does act as an additional constraint on datagram size in the same way as the path MTU, but it is a property of the endpoint and not the path; see Section 14 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5130-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1084", "text": "It is expected that this is the space an endpoint dedicates to holding incoming packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5131-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1085", "text": "The initial maximum data parameter is an integer value that contains the initial value for the maximum amount of data that can be sent on the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5132-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1085", "text": "This is equivalent to sending a MAX_DATA ( Section 19.9 ) for the connection immediately after completing the handshake. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5133-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1086", "text": "This parameter is an integer value specifying the initial flow control limit for locally initiated bidirectional streams.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5134-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1086", "text": "This limit applies to newly created bidirectional streams opened by the endpoint that sends the transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5135-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1086", "text": "In client transport parameters, this applies to streams with an identifier with the least significant two bits set to 0x00; in server transport parameters, this applies to streams with the least significant two bits set to 0x01. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5136-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1087", "text": "This parameter is an integer value specifying the initial flow control limit for peer-initiated bidirectional streams.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5137-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1087", "text": "This limit applies to newly created bidirectional streams opened by the endpoint that receives the transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5138-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1087", "text": "In client transport parameters, this applies to streams with an identifier with the least significant two bits set to 0x01; in server transport parameters, this applies to streams with the least significant two bits set to 0x00. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5139-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1088", "text": "This parameter is an integer value specifying the initial flow control limit for unidirectional streams.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5140-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1088", "text": "This limit applies to newly created unidirectional streams opened by the endpoint that receives the transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5141-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1088", "text": "In client transport parameters, this applies to streams with an identifier with the least significant two bits set to 0x03; in server transport parameters, this applies to streams with the least significant two bits set to 0x02. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5142-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1089", "text": "The initial maximum bidirectional streams parameter is an integer value that contains the initial maximum number of bidirectional streams the endpoint that receives this transport parameter is permitted to initiate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5143-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1089", "text": "If this parameter is absent or zero, the peer cannot open bidirectional streams until a MAX_STREAMS frame is sent.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5144-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1089", "text": "Setting this parameter is equivalent to sending a MAX_STREAMS ( Section 19.11 ) of the corresponding type with the same value. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5145-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1090", "text": "The initial maximum unidirectional streams parameter is an integer value that contains the initial maximum number of unidirectional streams the endpoint that receives this transport parameter is permitted to initiate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5146-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1090", "text": "If this parameter is absent or zero, the peer cannot open unidirectional streams until a MAX_STREAMS frame is sent.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5147-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1090", "text": "Setting this parameter is equivalent to sending a MAX_STREAMS ( Section 19.11 ) of the corresponding type with the same value. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5148-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1091", "text": "The acknowledgment delay exponent is an integer value indicating an exponent used to decode the ACK Delay field in the ACK frame ( Section 19.3 ).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5149-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1091", "text": "If this value is absent, a default value of 3 is assumed (indicating a multiplier of 8).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5150-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1091", "text": "Values above 20 are invalid. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5151-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1092", "text": "The maximum acknowledgment delay is an integer value indicating the maximum amount of time in milliseconds by which the endpoint will delay sending acknowledgments.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5152-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1092", "text": "This value SHOULD include the receiver's expected delays in alarms firing.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5153-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1092", "text": "For example, if a receiver sets a timer for 5ms and alarms commonly fire up to 1ms late, then it should send a max_ack_delay of 6ms.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5154-s4", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1092", "text": "If this value is absent, a default of 25 milliseconds is assumed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5155-s5", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1092", "text": "Values of 2 14 or greater are invalid. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5156-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1093", "text": "The disable active migration transport parameter is included if the endpoint does not support active connection migration ( Section 9 ) on the address being used during the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5157-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1093", "text": "An endpoint that receives this transport parameter MUST NOT use a new local address when sending to the address that the peer used during the handshake.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "18.2-p5158-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1093", "text": "This transport parameter does not prohibit connection migration after a client has acted on a preferred_address transport parameter.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5159-s4", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1093", "text": "This parameter is a zero-length value. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5160-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1094", "text": "The server's preferred address is used to effect a change in server address at the end of the handshake, as described in Section 9.6 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5161-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1094", "text": "This transport parameter is only sent by a server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5162-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1094", "text": "Servers MAY choose to only send a preferred address of one address family by sending an all-zero address and port (0.0.0.0:0 or [::]:0) for the other family.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "18.2-p5163-s4", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1094", "text": "IP addresses are encoded in network byte order. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5164-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1095", "text": "The preferred_address transport parameter contains an address and port for both IPv4 and IPv6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5165-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1095", "text": "The four-byte IPv4 Address field is followed by the associated two-byte IPv4 Port field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5166-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1095", "text": "This is followed by a 16-byte IPv6 Address field and two-byte IPv6 Port field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5167-s4", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1095", "text": "After address and port pairs, a Connection ID Length field describes the length of the following Connection ID field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5168-s5", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1095", "text": "Finally, a 16-byte Stateless Reset Token field includes the stateless reset token associated with the connection ID.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5169-s6", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1095", "text": "The format of this transport parameter is shown in Figure 22 below. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5170-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1096", "text": "The Connection ID field and the Stateless Reset Token field contain an alternative connection ID that has a sequence number of 1; see Section 5.1.1 .", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5171-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1096", "text": "Having these values sent alongside the preferred address ensures that there will be at least one unused active connection ID when the client initiates migration to the preferred address. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5172-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1097", "text": "The Connection ID and Stateless Reset Token fields of a preferred address are identical in syntax and semantics to the corresponding fields of a NEW_CONNECTION_ID frame ( Section 19.15 ).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5173-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1097", "text": "A server that chooses a zero-length connection ID MUST NOT provide a preferred address.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5174-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1097", "text": "Similarly, a server MUST NOT include a zero-length connection ID in this transport parameter.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5175-s4", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1097", "text": "A client MUST treat a violation of these requirements as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5176-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1098", "text": "Preferred Address { IPv4 Address (32), IPv4 Port (16), IPv6 Address (128), IPv6 Port (16), Connection ID Length (8), Connection ID (..), Stateless Reset Token (128), } Figure 22 :", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5177-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1098", "text": "Preferred Address Format", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5178-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1099", "text": "Preferred Address { IPv4 Address (32), IPv4 Port (16), IPv6 Address (128), IPv6 Port (16), Connection ID Length (8), Connection ID (..), Stateless Reset Token (128), }", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5179-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1100", "text": "Preferred Address { IPv4 Address (32), IPv4 Port (16), IPv6 Address (128), IPv6 Port (16), Connection ID Length (8), Connection ID (..), Stateless Reset Token (128), }", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5180-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1101", "text": "Figure 22 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5181-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1101", "text": "Preferred Address Format", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5182-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1102", "text": "This is an integer value specifying the maximum number of connection IDs from the peer that an endpoint is willing to store.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5183-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1102", "text": "This value includes the connection ID received during the handshake, that received in the preferred_address transport parameter, and those received in NEW_CONNECTION_ID frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5184-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1102", "text": "The value of the active_connection_id_limit parameter MUST be at least 2.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5185-s4", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1102", "text": "An endpoint that receives a value less than 2 MUST close the connection with an error of type TRANSPORT_PARAMETER_ERROR.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "18.2-p5186-s5", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1102", "text": "If this transport parameter is absent, a default of 2 is assumed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5187-s6", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1102", "text": "If an endpoint issues a zero-length connection ID, it will never send a NEW_CONNECTION_ID frame and therefore ignores the active_connection_id_limit value received from its peer. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5188-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1103", "text": "This is the value that the endpoint included in the Source Connection ID field of the first Initial packet it sends for the connection; see Section 7.3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5189-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1104", "text": "This is the value that the server included in the Source Connection ID field of a Retry packet; see Section 7.3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5190-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1104", "text": "This transport parameter is only sent by a server. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5191-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1105", "text": "If present, transport parameters that set initial per-stream flow control limits (initial_max_stream_data_bidi_local, initial_max_stream_data_bidi_remote, and initial_max_stream_data_uni) are equivalent to sending a MAX_STREAM_DATA frame ( Section 19.10 ) on every stream of the corresponding type immediately after opening.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5192-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1105", "text": "If the transport parameter is absent, streams of that type start with a flow control limit of 0. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5193-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1106", "text": "A client MUST NOT include any server-only transport parameter: original_destination_connection_id, preferred_address, retry_source_connection_id, or stateless_reset_token.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5194-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1106", "text": "A server MUST treat receipt of any of these transport parameters as a connection error of type TRANSPORT_PARAMETER_ERROR. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5195-s1", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "19.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5196-s2", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Frame Types and Formats As described in Section 12.4 , packets contain one or more frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5197-s3", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This section describes the format and semantics of the core QUIC frame types. ¶ 19.1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5198-s4", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "PADDING Frames A PADDING frame (type=0x00) has no semantic value.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5199-s5", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "PADDING frames can be used to increase the size of a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5200-s6", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Padding can be used to increase an Initial packet to the minimum required size or to provide protection against traffic analysis for protected packets. ¶ PADDING frames are formatted as shown in Figure 23 , which shows that PADDING frames have no content.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5201-s7", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "That is, a PADDING frame consists of the single byte that identifies the frame as a PADDING frame. ¶ PADDING Frame { Type (i) = 0x00, } Figure 23 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5202-s8", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "PADDING Frame Format 19.2.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5203-s9", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "PING Frames Endpoints can use PING frames (type=0x01) to verify that their peers are still alive or to check reachability to the peer. ¶ PING frames are formatted as shown in Figure 24 , which shows that PING frames have no content. ¶ PING Frame { Type (i) = 0x01, } Figure 24 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5204-s10", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "PING Frame Format The receiver of a PING frame simply needs to acknowledge the packet containing this frame. ¶ The PING frame can be used to keep a connection alive when an application or application protocol wishes to prevent the connection from timing out; see Section 10.1.2 . ¶ 19.3.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5205-s11", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "ACK Frames Receivers send ACK frames (types 0x02 and 0x03) to inform senders of packets they have received and processed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5206-s12", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The ACK frame contains one or more ACK Ranges.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5207-s13", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "ACK Ranges identify acknowledged packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5208-s14", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "If the frame type is 0x03, ACK frames also contain the cumulative count of QUIC packets with associated ECN marks received on the connection up until this point.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5209-s15", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "QUIC implementations MUST properly handle both types, and, if they have enabled ECN for packets they send, they SHOULD use the information in the ECN section to manage their congestion state. ¶ QUIC acknowledgments are irrevocable.", "facet": "state_machine", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5210-s16", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Once acknowledged, a packet remains acknowledged, even if it does not appear in a future ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5211-s17", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This is unlike reneging for TCP Selective Acknowledgments (SACKs) [ RFC2018 ] . ¶ Packets from different packet number spaces can be identified using the same numeric value.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5212-s18", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "An acknowledgment for a packet needs to indicate both a packet number and a packet number space.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5213-s19", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This is accomplished by having each ACK frame only acknowledge packet numbers in the same space as the packet in which the ACK frame is contained. ¶ Version Negotiation and Retry packets cannot be acknowledged because they do not contain a packet number.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5214-s20", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Rather than relying on ACK frames, these packets are implicitly acknowledged by the next Initial packet sent by the client. ¶ ACK frames are formatted as shown in Figure 25 . ¶ ACK Frame { Type (i) = 0x02..0x03, Largest Acknowledged (i), ACK Delay (i), ACK Range Count (i), First ACK Range (i), ACK Range (..) ..., [ECN Counts (..)], } Figure 25 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5215-s21", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "ACK Frame Format ACK frames contain the following fields: ¶ Largest Acknowledged:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5216-s22", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer representing the largest packet number the peer is acknowledging; this is usually the largest packet number that the peer has received prior to generating the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5217-s23", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Unlike the packet number in the QUIC long or short header, the value in an ACK frame is not truncated. ¶ ACK Delay:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5218-s24", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer encoding the acknowledgment delay in microseconds; see Section 13.2.5 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5219-s25", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "It is decoded by multiplying the value in the field by 2 to the power of the ack_delay_exponent transport parameter sent by the sender of the ACK frame; see Section 18.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5220-s26", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Compared to simply expressing the delay as an integer, this encoding allows for a larger range of values within the same number of bytes, at the cost of lower resolution. ¶ ACK Range Count:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5221-s27", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer specifying the number of ACK Range fields in the frame. ¶ First ACK Range:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5222-s28", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer indicating the number of contiguous packets preceding the Largest Acknowledged that are being acknowledged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5223-s29", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "That is, the smallest packet acknowledged in the range is determined by subtracting the First ACK Range value from the Largest Acknowledged field. ¶ ACK Ranges:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5224-s30", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Contains additional ranges of packets that are alternately not acknowledged (Gap) and acknowledged (ACK Range); see Section 19.3.1 . ¶ ECN Counts:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5225-s31", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The three ECN counts; see Section 19.3.2 . ¶ 19.3.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5226-s32", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "ACK Ranges Each ACK Range consists of alternating Gap and ACK Range Length values in descending packet number order.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5227-s33", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "ACK Ranges can be repeated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5228-s34", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The number of Gap and ACK Range Length values is determined by the ACK Range Count field; one of each value is present for each value in the ACK Range Count field. ¶ ACK Ranges are structured as shown in Figure 26 . ¶ ACK Range { Gap (i), ACK Range Length (i), } Figure 26 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5229-s35", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "ACK Ranges The fields that form each ACK Range are: ¶ Gap:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5230-s36", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer indicating the number of contiguous unacknowledged packets preceding the packet number one lower than the smallest in the preceding ACK Range. ¶ ACK Range Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5231-s37", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer indicating the number of contiguous acknowledged packets preceding the largest packet number, as determined by the preceding Gap. ¶ Gap and ACK Range Length values use a relative integer encoding for efficiency.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5232-s38", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Though each encoded value is positive, the values are subtracted, so that each ACK Range describes progressively lower-numbered packets. ¶ Each ACK Range acknowledges a contiguous range of packets by indicating the number of acknowledged packets that precede the largest packet number in that range.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5233-s39", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A value of 0 indicates that only the largest packet number is acknowledged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5234-s40", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Larger ACK Range values indicate a larger range, with corresponding lower values for the smallest packet number in the range.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5235-s41", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Thus, given a largest packet number for the range, the smallest value is determined by the following formula: ¶ smallest = largest - ack_range ¶ An ACK Range acknowledges all packets between the smallest packet number and the largest, inclusive. ¶ The largest value for an ACK Range is determined by cumulatively subtracting the size of all preceding ACK Range Lengths and Gaps. ¶ Each Gap indicates a range of packets that are not being acknowledged.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5236-s42", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The number of packets in the gap is one higher than the encoded value of the Gap field. ¶ The value of the Gap field establishes the largest packet number value for the subsequent ACK Range using the following formula: ¶ largest = previous_smallest - gap - 2 ¶ If any computed packet number is negative, an endpoint MUST generate a connection error of type FRAME_ENCODING_ERROR. ¶ 19.3.2.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5237-s43", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "ECN Counts The ACK frame uses the least significant bit of the type value (that is, type 0x03) to indicate ECN feedback and report receipt of QUIC packets with associated ECN codepoints of ECT(0), ECT(1), or ECN-CE in the packet's IP header.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5238-s44", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "ECN counts are only present when the ACK frame type is 0x03. ¶ When present, there are three ECN counts, as shown in Figure 27 . ¶ ECN Counts { ECT0 Count (i), ECT1 Count (i), ECN-CE Count (i), } Figure 27 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5239-s45", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "ECN Count Format The ECN count fields are: ¶ ECT0 Count:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5240-s46", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer representing the total number of packets received with the ECT(0) codepoint in the packet number space of the ACK frame. ¶ ECT1 Count:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5241-s47", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer representing the total number of packets received with the ECT(1) codepoint in the packet number space of the ACK frame. ¶ ECN-CE Count:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5242-s48", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer representing the total number of packets received with the ECN-CE codepoint in the packet number space of the ACK frame. ¶ ECN counts are maintained separately for each packet number space. ¶ 19.4.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5243-s49", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "RESET_STREAM Frames An endpoint uses a RESET_STREAM frame (type=0x04) to abruptly terminate the sending part of a stream. ¶ After sending a RESET_STREAM, an endpoint ceases transmission and retransmission of STREAM frames on the identified stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5244-s50", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A receiver of RESET_STREAM can discard any data that it already received on that stream. ¶ An endpoint that receives a RESET_STREAM frame for a send-only stream MUST terminate the connection with error STREAM_STATE_ERROR. ¶ RESET_STREAM frames are formatted as shown in Figure 28 . ¶ RESET_STREAM Frame { Type (i) = 0x04, Stream ID (i), Application Protocol Error Code (i), Final Size (i), } Figure 28 :", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "18.2-p5245-s51", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "RESET_STREAM Frame Format RESET_STREAM frames contain the following fields: ¶ Stream ID:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5246-s52", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer encoding of the stream ID of the stream being terminated. ¶ Application Protocol Error Code:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5247-s53", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer containing the application protocol error code (see Section 20.2 ) that indicates why the stream is being closed. ¶ Final Size:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5248-s54", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer indicating the final size of the stream by the RESET_STREAM sender, in units of bytes; see Section 4.5 . ¶ 19.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5249-s55", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "STOP_SENDING Frames An endpoint uses a STOP_SENDING frame (type=0x05) to communicate that incoming data is being discarded on receipt per application request.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5250-s56", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "STOP_SENDING requests that a peer cease transmission on a stream. ¶ A STOP_SENDING frame can be sent for streams in the \"Recv\" or \"Size Known\" states; see Section 3.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": ["Recv", "Size Known"], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "18.2-p5251-s57", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Receiving a STOP_SENDING frame for a locally initiated stream that has not yet been created MUST be treated as a connection error of type STREAM_STATE_ERROR.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "18.2-p5252-s58", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "An endpoint that receives a STOP_SENDING frame for a receive-only stream MUST terminate the connection with error STREAM_STATE_ERROR. ¶ STOP_SENDING frames are formatted as shown in Figure 29 . ¶ STOP_SENDING Frame { Type (i) = 0x05, Stream ID (i), Application Protocol Error Code (i), } Figure 29 :", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "18.2-p5253-s59", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "STOP_SENDING Frame Format STOP_SENDING frames contain the following fields: ¶ Stream ID:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5254-s60", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer carrying the stream ID of the stream being ignored. ¶ Application Protocol Error Code:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5255-s61", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer containing the application-specified reason the sender is ignoring the stream; see Section 20.2 . ¶ 19.6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5256-s62", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "CRYPTO Frames A CRYPTO frame (type=0x06) is used to transmit cryptographic handshake messages.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5257-s63", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "It can be sent in all packet types except 0-RTT.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5258-s64", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The CRYPTO frame offers the cryptographic protocol an in-order stream of bytes.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5259-s65", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "CRYPTO frames are functionally identical to STREAM frames, except that they do not bear a stream identifier; they are not flow controlled; and they do not carry markers for optional offset, optional length, and the end of the stream. ¶ CRYPTO frames are formatted as shown in Figure 30 . ¶ CRYPTO Frame { Type (i) = 0x06, Offset (i), Length (i), Crypto Data (..), } Figure 30 :", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5260-s66", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "CRYPTO Frame Format CRYPTO frames contain the following fields: ¶ Offset:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5261-s67", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer specifying the byte offset in the stream for the data in this CRYPTO frame. ¶ Length:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5262-s68", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer specifying the length of the Crypto Data field in this CRYPTO frame. ¶ Crypto Data:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5263-s69", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The cryptographic message data. ¶ There is a separate flow of cryptographic handshake data in each encryption level, each of which starts at an offset of 0.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5264-s70", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This implies that each encryption level is treated as a separate CRYPTO stream of data. ¶ The largest offset delivered on a stream -- the sum of the offset and data length -- cannot exceed 2 62 -1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5265-s71", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Receipt of a frame that exceeds this limit MUST be treated as a connection error of type FRAME_ENCODING_ERROR or CRYPTO_BUFFER_EXCEEDED. ¶ Unlike STREAM frames, which include a stream ID indicating to which stream the data belongs, the CRYPTO frame carries data for a single stream per encryption level.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "18.2-p5266-s72", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The stream does not have an explicit end, so CRYPTO frames do not have a FIN bit. ¶ 19.7.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5267-s73", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "NEW_TOKEN Frames A server sends a NEW_TOKEN frame (type=0x07) to provide the client with a token to send in the header of an Initial packet for a future connection. ¶ NEW_TOKEN frames are formatted as shown in Figure 31 . ¶ NEW_TOKEN Frame { Type (i) = 0x07, Token Length (i), Token (..), } Figure 31 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5268-s74", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "NEW_TOKEN Frame Format NEW_TOKEN frames contain the following fields: ¶ Token Length:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5269-s75", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer specifying the length of the token in bytes. ¶ Token:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5270-s76", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "An opaque blob that the client can use with a future Initial packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5271-s77", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The token MUST NOT be empty.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5272-s78", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A client MUST treat receipt of a NEW_TOKEN frame with an empty Token field as a connection error of type FRAME_ENCODING_ERROR. ¶ A client might receive multiple NEW_TOKEN frames that contain the same token value if packets containing the frame are incorrectly determined to be lost.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5273-s79", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Clients are responsible for discarding duplicate values, which might be used to link connection attempts; see Section 8.1.3 . ¶ Clients MUST NOT send NEW_TOKEN frames.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5274-s80", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A server MUST treat receipt of a NEW_TOKEN frame as a connection error of type PROTOCOL_VIOLATION. ¶ 19.8.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5275-s81", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "STREAM Frames STREAM frames implicitly create a stream and carry stream data.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5276-s82", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The Type field in the STREAM frame takes the form 0b00001XXX (or the set of values from 0x08 to 0x0f).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5277-s83", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The three low-order bits of the frame type determine the fields that are present in the frame: ¶ The OFF bit (0x04) in the frame type is set to indicate that there is an Offset field present.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5278-s84", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "When set to 1, the Offset field is present.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5279-s85", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "When set to 0, the Offset field is absent and the Stream Data starts at an offset of 0 (that is, the frame contains the first bytes of the stream, or the end of a stream that includes no data). ¶ The LEN bit (0x02) in the frame type is set to indicate that there is a Length field present.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5280-s86", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "If this bit is set to 0, the Length field is absent and the Stream Data field extends to the end of the packet.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5281-s87", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "If this bit is set to 1, the Length field is present. ¶ The FIN bit (0x01) indicates that the frame marks the end of the stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5282-s88", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The final size of the stream is the sum of the offset and the length of this frame. ¶ An endpoint MUST terminate the connection with error STREAM_STATE_ERROR if it receives a STREAM frame for a locally initiated stream that has not yet been created, or for a send-only stream. ¶ STREAM frames are formatted as shown in Figure 32 . ¶ STREAM Frame { Type (i) = 0x08..0x0f, Stream ID (i), [Offset (i)], [Length (i)], Stream Data (..), } Figure 32 :", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "18.2-p5283-s89", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "STREAM Frame Format STREAM frames contain the following fields: ¶ Stream ID:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5284-s90", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer indicating the stream ID of the stream; see Section 2.1 . ¶ Offset:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5285-s91", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer specifying the byte offset in the stream for the data in this STREAM frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5286-s92", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This field is present when the OFF bit is set to 1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5287-s93", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "When the Offset field is absent, the offset is 0. ¶ Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5288-s94", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer specifying the length of the Stream Data field in this STREAM frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5289-s95", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This field is present when the LEN bit is set to 1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5290-s96", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "When the LEN bit is set to 0, the Stream Data field consumes all the remaining bytes in the packet. ¶ Stream Data:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5291-s97", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The bytes from the designated stream to be delivered. ¶ When a Stream Data field has a length of 0, the offset in the STREAM frame is the offset of the next byte that would be sent. ¶ The first byte in the stream has an offset of 0.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5292-s98", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The largest offset delivered on a stream -- the sum of the offset and data length -- cannot exceed 2 62 -1, as it is not possible to provide flow control credit for that data.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5293-s99", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Receipt of a frame that exceeds this limit MUST be treated as a connection error of type FRAME_ENCODING_ERROR or FLOW_CONTROL_ERROR. ¶ 19.9.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5294-s100", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "MAX_DATA Frames A MAX_DATA frame (type=0x10) is used in flow control to inform the peer of the maximum amount of data that can be sent on the connection as a whole. ¶ MAX_DATA frames are formatted as shown in Figure 33 . ¶ MAX_DATA Frame { Type (i) = 0x10, Maximum Data (i), } Figure 33 :", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5295-s101", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "MAX_DATA Frame Format MAX_DATA frames contain the following field: ¶ Maximum Data:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5296-s102", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer indicating the maximum amount of data that can be sent on the entire connection, in units of bytes. ¶ All data sent in STREAM frames counts toward this limit.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5297-s103", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The sum of the final sizes on all streams -- including streams in terminal states -- MUST NOT exceed the value advertised by a receiver.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5298-s104", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "An endpoint MUST terminate a connection with an error of type FLOW_CONTROL_ERROR if it receives more data than the maximum data value that it has sent.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 3}
{"sent_id": "18.2-p5299-s105", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This includes violations of remembered limits in Early Data; see Section 7.4.1 . ¶ 19.10.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5300-s106", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "MAX_STREAM_DATA Frames A MAX_STREAM_DATA frame (type=0x11) is used in flow control to inform a peer of the maximum amount of data that can be sent on a stream. ¶ A MAX_STREAM_DATA frame can be sent for streams in the \"Recv\" state; see Section 3.2 .", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": ["Recv"], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "18.2-p5301-s107", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Receiving a MAX_STREAM_DATA frame for a locally initiated stream that has not yet been created MUST be treated as a connection error of type STREAM_STATE_ERROR.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "18.2-p5302-s108", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "An endpoint that receives a MAX_STREAM_DATA frame for a receive-only stream MUST terminate the connection with error STREAM_STATE_ERROR. ¶ MAX_STREAM_DATA frames are formatted as shown in Figure 34 . ¶ MAX_STREAM_DATA Frame { Type (i) = 0x11, Stream ID (i), Maximum Stream Data (i), } Figure 34 :", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "18.2-p5303-s109", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "MAX_STREAM_DATA Frame Format MAX_STREAM_DATA frames contain the following fields: ¶ Stream ID:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5304-s110", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The stream ID of the affected stream, encoded as a variable-length integer. ¶ Maximum Stream Data:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5305-s111", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer indicating the maximum amount of data that can be sent on the identified stream, in units of bytes. ¶ When counting data toward this limit, an endpoint accounts for the largest received offset of data that is sent or received on the stream.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5306-s112", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Loss or reordering can mean that the largest received offset on a stream can be greater than the total size of data received on that stream.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5307-s113", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Receiving STREAM frames might not increase the largest received offset. ¶ The data sent on a stream MUST NOT exceed the largest maximum stream data value advertised by the receiver.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["STREAM"], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "18.2-p5308-s114", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "An endpoint MUST terminate a connection with an error of type FLOW_CONTROL_ERROR if it receives more data than the largest maximum stream data that it has sent for the affected stream.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 3}
{"sent_id": "18.2-p5309-s115", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This includes violations of remembered limits in Early Data; see Section 7.4.1 . ¶ 19.11.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5310-s116", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "MAX_STREAMS Frames A MAX_STREAMS frame (type=0x12 or 0x13) informs the peer of the cumulative number of streams of a given type it is permitted to open.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5311-s117", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A MAX_STREAMS frame with a type of 0x12 applies to bidirectional streams, and a MAX_STREAMS frame with a type of 0x13 applies to unidirectional streams. ¶ MAX_STREAMS frames are formatted as shown in Figure 35 . ¶ MAX_STREAMS Frame { Type (i) = 0x12..0x13, Maximum Streams (i), } Figure 35 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5312-s118", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "MAX_STREAMS Frame Format MAX_STREAMS frames contain the following field: ¶ Maximum Streams:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5313-s119", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A count of the cumulative number of streams of the corresponding type that can be opened over the lifetime of the connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5314-s120", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This value cannot exceed 2 60 , as it is not possible to encode stream IDs larger than 2 62 -1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5315-s121", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Receipt of a frame that permits opening of a stream larger than this limit MUST be treated as a connection error of type FRAME_ENCODING_ERROR. ¶ Loss or reordering can cause an endpoint to receive a MAX_STREAMS frame with a lower stream limit than was previously received.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "18.2-p5316-s122", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "MAX_STREAMS frames that do not increase the stream limit MUST be ignored. ¶ An endpoint MUST NOT open more streams than permitted by the current stream limit set by its peer.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "18.2-p5317-s123", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "For instance, a server that receives a unidirectional stream limit of 3 is permitted to open streams 3, 7, and 11, but not stream 15.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5318-s124", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "An endpoint MUST terminate a connection with an error of type STREAM_LIMIT_ERROR if a peer opens more streams than was permitted.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "18.2-p5319-s125", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This includes violations of remembered limits in Early Data; see Section 7.4.1 . ¶ Note that these frames (and the corresponding transport parameters) do not describe the number of streams that can be opened concurrently.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5320-s126", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The limit includes streams that have been closed as well as those that are open. ¶ 19.12.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5321-s127", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "DATA_BLOCKED Frames A sender SHOULD send a DATA_BLOCKED frame (type=0x14) when it wishes to send data but is unable to do so due to connection-level flow control; see Section 4 .", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "18.2-p5322-s128", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "DATA_BLOCKED frames can be used as input to tuning of flow control algorithms; see Section 4.2 . ¶ DATA_BLOCKED frames are formatted as shown in Figure 36 . ¶ DATA_BLOCKED Frame { Type (i) = 0x14, Maximum Data (i), } Figure 36 :", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5323-s129", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "DATA_BLOCKED Frame Format DATA_BLOCKED frames contain the following field: ¶ Maximum Data:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5324-s130", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer indicating the connection-level limit at which blocking occurred. ¶ 19.13.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5325-s131", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "STREAM_DATA_BLOCKED Frames A sender SHOULD send a STREAM_DATA_BLOCKED frame (type=0x15) when it wishes to send data but is unable to do so due to stream-level flow control.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "18.2-p5326-s132", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This frame is analogous to DATA_BLOCKED ( Section 19.12 ). ¶ An endpoint that receives a STREAM_DATA_BLOCKED frame for a send-only stream MUST terminate the connection with error STREAM_STATE_ERROR. ¶ STREAM_DATA_BLOCKED frames are formatted as shown in Figure 37 . ¶ STREAM_DATA_BLOCKED Frame { Type (i) = 0x15, Stream ID (i), Maximum Stream Data (i), } Figure 37 :", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["DATA_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "18.2-p5327-s133", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "STREAM_DATA_BLOCKED Frame Format STREAM_DATA_BLOCKED frames contain the following fields: ¶ Stream ID:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5328-s134", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer indicating the stream that is blocked due to flow control. ¶ Maximum Stream Data:", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5329-s135", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer indicating the offset of the stream at which the blocking occurred. ¶ 19.14.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5330-s136", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "STREAMS_BLOCKED Frames A sender SHOULD send a STREAMS_BLOCKED frame (type=0x16 or 0x17) when it wishes to open a stream but is unable to do so due to the maximum stream limit set by its peer; see Section 19.11 .", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": ["peer", "sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "18.2-p5331-s137", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A STREAMS_BLOCKED frame of type 0x16 is used to indicate reaching the bidirectional stream limit, and a STREAMS_BLOCKED frame of type 0x17 is used to indicate reaching the unidirectional stream limit. ¶ A STREAMS_BLOCKED frame does not open the stream, but informs the peer that a new stream was needed and the stream limit prevented the creation of the stream. ¶ STREAMS_BLOCKED frames are formatted as shown in Figure 38 . ¶ STREAMS_BLOCKED Frame { Type (i) = 0x16..0x17, Maximum Streams (i), } Figure 38 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5332-s138", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "STREAMS_BLOCKED Frame Format STREAMS_BLOCKED frames contain the following field: ¶ Maximum Streams:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5333-s139", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer indicating the maximum number of streams allowed at the time the frame was sent.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5334-s140", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This value cannot exceed 2 60 , as it is not possible to encode stream IDs larger than 2 62 -1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5335-s141", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Receipt of a frame that encodes a larger stream ID MUST be treated as a connection error of type STREAM_LIMIT_ERROR or FRAME_ENCODING_ERROR. ¶ 19.15.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5336-s142", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "NEW_CONNECTION_ID Frames An endpoint sends a NEW_CONNECTION_ID frame (type=0x18) to provide its peer with alternative connection IDs that can be used to break linkability when migrating connections; see Section 9.5 . ¶ NEW_CONNECTION_ID frames are formatted as shown in Figure 39 . ¶ NEW_CONNECTION_ID Frame { Type (i) = 0x18, Sequence Number (i), Retire Prior To (i), Length (8), Connection ID (8..160), Stateless Reset Token (128), } Figure 39 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5337-s143", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "NEW_CONNECTION_ID Frame Format NEW_CONNECTION_ID frames contain the following fields: ¶ Sequence Number:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5338-s144", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The sequence number assigned to the connection ID by the sender, encoded as a variable-length integer; see Section 5.1.1 . ¶ Retire Prior To:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5339-s145", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer indicating which connection IDs should be retired; see Section 5.1.2 . ¶ Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5340-s146", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "An 8-bit unsigned integer containing the length of the connection ID.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5341-s147", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Values less than 1 and greater than 20 are invalid and MUST be treated as a connection error of type FRAME_ENCODING_ERROR. ¶ Connection ID:", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5342-s148", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A connection ID of the specified length. ¶ Stateless Reset Token:", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5343-s149", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A 128-bit value that will be used for a stateless reset when the associated connection ID is used; see Section 10.3 . ¶ An endpoint MUST NOT send this frame if it currently requires that its peer send packets with a zero-length Destination Connection ID.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5344-s150", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Changing the length of a connection ID to or from zero length makes it difficult to identify when the value of the connection ID changed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5345-s151", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "An endpoint that is sending packets with a zero-length Destination Connection ID MUST treat receipt of a NEW_CONNECTION_ID frame as a connection error of type PROTOCOL_VIOLATION. ¶ Transmission errors, timeouts, and retransmissions might cause the same NEW_CONNECTION_ID frame to be received multiple times.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5346-s152", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Receipt of the same frame multiple times MUST NOT be treated as a connection error.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5347-s153", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A receiver can use the sequence number supplied in the NEW_CONNECTION_ID frame to handle receiving the same NEW_CONNECTION_ID frame multiple times. ¶ If an endpoint receives a NEW_CONNECTION_ID frame that repeats a previously issued connection ID with a different Stateless Reset Token field value or a different Sequence Number field value, or if a sequence number is used for different connection IDs, the endpoint MAY treat that receipt as a connection error of type PROTOCOL_VIOLATION. ¶ The Retire Prior To field applies to connection IDs established during connection setup and the preferred_address transport parameter; see Section 5.1.2 .", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5348-s154", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The value in the Retire Prior To field MUST be less than or equal to the value in the Sequence Number field.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "18.2-p5349-s155", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Receiving a value in the Retire Prior To field that is greater than that in the Sequence Number field MUST be treated as a connection error of type FRAME_ENCODING_ERROR. ¶ Once a sender indicates a Retire Prior To value, smaller values sent in subsequent NEW_CONNECTION_ID frames have no effect.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5350-s156", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A receiver MUST ignore any Retire Prior To fields that do not increase the largest received Retire Prior To value. ¶ An endpoint that receives a NEW_CONNECTION_ID frame with a sequence number smaller than the Retire Prior To field of a previously received NEW_CONNECTION_ID frame MUST send a corresponding RETIRE_CONNECTION_ID frame that retires the newly received connection ID, unless it has already done so for that sequence number. ¶ 19.16.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5351-s157", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "RETIRE_CONNECTION_ID Frames An endpoint sends a RETIRE_CONNECTION_ID frame (type=0x19) to indicate that it will no longer use a connection ID that was issued by its peer.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5352-s158", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This includes the connection ID provided during the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5353-s159", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Sending a RETIRE_CONNECTION_ID frame also serves as a request to the peer to send additional connection IDs for future use; see Section 5.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5354-s160", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "New connection IDs can be delivered to a peer using the NEW_CONNECTION_ID frame ( Section 19.15 ). ¶ Retiring a connection ID invalidates the stateless reset token associated with that connection ID. ¶ RETIRE_CONNECTION_ID frames are formatted as shown in Figure 40 . ¶ RETIRE_CONNECTION_ID Frame { Type (i) = 0x19, Sequence Number (i), } Figure 40 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5355-s161", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "RETIRE_CONNECTION_ID Frame Format RETIRE_CONNECTION_ID frames contain the following field: ¶ Sequence Number:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5356-s162", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The sequence number of the connection ID being retired; see Section 5.1.2 . ¶ Receipt of a RETIRE_CONNECTION_ID frame containing a sequence number greater than any previously sent to the peer MUST be treated as a connection error of type PROTOCOL_VIOLATION. ¶ The sequence number specified in a RETIRE_CONNECTION_ID frame MUST NOT refer to the Destination Connection ID field of the packet in which the frame is contained.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5357-s163", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The peer MAY treat this as a connection error of type PROTOCOL_VIOLATION. ¶ An endpoint cannot send this frame if it was provided with a zero-length connection ID by its peer.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5358-s164", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "An endpoint that provides a zero-length connection ID MUST treat receipt of a RETIRE_CONNECTION_ID frame as a connection error of type PROTOCOL_VIOLATION. ¶ 19.17.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5359-s165", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "PATH_CHALLENGE Frames Endpoints can use PATH_CHALLENGE frames (type=0x1a) to check reachability to the peer and for path validation during connection migration. ¶ PATH_CHALLENGE frames are formatted as shown in Figure 41 . ¶ PATH_CHALLENGE Frame { Type (i) = 0x1a, Data (64), } Figure 41 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5360-s166", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "PATH_CHALLENGE Frame Format PATH_CHALLENGE frames contain the following field: ¶ Data:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5361-s167", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This 8-byte field contains arbitrary data. ¶ Including 64 bits of entropy in a PATH_CHALLENGE frame ensures that it is easier to receive the packet than it is to guess the value correctly. ¶ The recipient of this frame MUST generate a PATH_RESPONSE frame ( Section 19.18 ) containing the same Data value. ¶ 19.18.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5362-s168", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "PATH_RESPONSE Frames A PATH_RESPONSE frame (type=0x1b) is sent in response to a PATH_CHALLENGE frame. ¶ PATH_RESPONSE frames are formatted as shown in Figure 42 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5363-s169", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The format of a PATH_RESPONSE frame is identical to that of the PATH_CHALLENGE frame; see Section 19.17 . ¶ PATH_RESPONSE Frame { Type (i) = 0x1b, Data (64), } Figure 42 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5364-s170", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "PATH_RESPONSE Frame Format If the content of a PATH_RESPONSE frame does not match the content of a PATH_CHALLENGE frame previously sent by the endpoint, the endpoint MAY generate a connection error of type PROTOCOL_VIOLATION. ¶ 19.19.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5365-s171", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "CONNECTION_CLOSE Frames An endpoint sends a CONNECTION_CLOSE frame (type=0x1c or 0x1d) to notify its peer that the connection is being closed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5366-s172", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The CONNECTION_CLOSE frame with a type of 0x1c is used to signal errors at only the QUIC layer, or the absence of errors (with the NO_ERROR code).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5367-s173", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The CONNECTION_CLOSE frame with a type of 0x1d is used to signal an error with the application that uses QUIC. ¶ If there are open streams that have not been explicitly closed, they are implicitly closed when the connection is closed. ¶ CONNECTION_CLOSE frames are formatted as shown in Figure 43 . ¶ CONNECTION_CLOSE Frame { Type (i) = 0x1c..0x1d, Error Code (i), [Frame Type (i)], Reason Phrase Length (i), Reason Phrase (..), } Figure 43 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5368-s174", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "CONNECTION_CLOSE Frame Format CONNECTION_CLOSE frames contain the following fields: ¶ Error Code:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5369-s175", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer that indicates the reason for closing this connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5370-s176", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A CONNECTION_CLOSE frame of type 0x1c uses codes from the space defined in Section 20.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5371-s177", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A CONNECTION_CLOSE frame of type 0x1d uses codes defined by the application protocol; see Section 20.2 . ¶ Frame Type:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5372-s178", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer encoding the type of frame that triggered the error.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5373-s179", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A value of 0 (equivalent to the mention of the PADDING frame) is used when the frame type is unknown.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5374-s180", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The application-specific variant of CONNECTION_CLOSE (type 0x1d) does not include this field. ¶ Reason Phrase Length:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5375-s181", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A variable-length integer specifying the length of the reason phrase in bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5376-s182", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Because a CONNECTION_CLOSE frame cannot be split between packets, any limits on packet size will also limit the space available for a reason phrase. ¶ Reason Phrase:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5377-s183", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Additional diagnostic information for the closure.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "18.2-p5378-s184", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This can be zero length if the sender chooses not to give details beyond the Error Code value.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "18.2-p5379-s185", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This SHOULD be a UTF-8 encoded string [ RFC3629 ] , though the frame does not carry information, such as language tags, that would aid comprehension by any entity other than the one that created the text. ¶ The application-specific variant of CONNECTION_CLOSE (type 0x1d) can only be sent using 0-RTT or 1-RTT packets; see Section 12.5 .", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5380-s186", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "When an application wishes to abandon a connection during the handshake, an endpoint can send a CONNECTION_CLOSE frame (type 0x1c) with an error code of APPLICATION_ERROR in an Initial or Handshake packet. ¶ 19.20.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5381-s187", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "HANDSHAKE_DONE Frames The server uses a HANDSHAKE_DONE frame (type=0x1e) to signal confirmation of the handshake to the client. ¶ HANDSHAKE_DONE frames are formatted as shown in Figure 44 , which shows that HANDSHAKE_DONE frames have no content. ¶ HANDSHAKE_DONE Frame { Type (i) = 0x1e, } Figure 44 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5382-s188", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "HANDSHAKE_DONE Frame Format A HANDSHAKE_DONE frame can only be sent by the server.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5383-s189", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Servers MUST NOT send a HANDSHAKE_DONE frame before completing the handshake.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5384-s190", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "A server MUST treat receipt of a HANDSHAKE_DONE frame as a connection error of type PROTOCOL_VIOLATION. ¶ 19.21.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "18.2-p5385-s191", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Extension Frames QUIC frames do not use a self-describing encoding.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5386-s192", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "An endpoint therefore needs to understand the syntax of all frames before it can successfully process a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5387-s193", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "This allows for efficient encoding of frames, but it means that an endpoint cannot send a frame of a type that is unknown to its peer. ¶ An extension to QUIC that wishes to use a new type of frame MUST first ensure that a peer is able to understand the frame.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5388-s194", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "An endpoint can use a transport parameter to signal its willingness to receive extension frame types.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5389-s195", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "One transport parameter can indicate support for one or more extension frame types. ¶ Extensions that modify or replace core protocol functionality (including frame types) will be difficult to combine with other extensions that modify or replace the same functionality unless the behavior of the combination is explicitly defined.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "18.2-p5390-s196", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Such extensions SHOULD define their interaction with previously defined extensions modifying the same protocol components. ¶ Extension frames MUST be congestion controlled and MUST cause an ACK frame to be sent.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "18.2-p5391-s197", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "The exception is extension frames that replace or supplement the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "18.2-p5392-s198", "section": "18.2", "anchor": "#name-transport-parameter-definit", "para_id": "18.2-p1107", "text": "Extension frames are not included in flow control unless specified in the extension. ¶ An IANA registry is used to manage the assignment of frame types; see Section 22.4 . ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19-p5393-s1", "section": "19", "anchor": "#name-frame-types-and-formats", "para_id": "19-p1108", "text": "As described in Section 12.4 , packets contain one or more frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19-p5394-s2", "section": "19", "anchor": "#name-frame-types-and-formats", "para_id": "19-p1108", "text": "This section describes the format and semantics of the core QUIC frame types. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19-p5395-s1", "section": "19", "anchor": "#name-frame-types-and-formats", "para_id": "19-p1109", "text": "19.1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19-p5396-s2", "section": "19", "anchor": "#name-frame-types-and-formats", "para_id": "19-p1109", "text": "PADDING Frames A PADDING frame (type=0x00) has no semantic value.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19-p5397-s3", "section": "19", "anchor": "#name-frame-types-and-formats", "para_id": "19-p1109", "text": "PADDING frames can be used to increase the size of a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19-p5398-s4", "section": "19", "anchor": "#name-frame-types-and-formats", "para_id": "19-p1109", "text": "Padding can be used to increase an Initial packet to the minimum required size or to provide protection against traffic analysis for protected packets. ¶ PADDING frames are formatted as shown in Figure 23 , which shows that PADDING frames have no content.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19-p5399-s5", "section": "19", "anchor": "#name-frame-types-and-formats", "para_id": "19-p1109", "text": "That is, a PADDING frame consists of the single byte that identifies the frame as a PADDING frame. ¶ PADDING Frame { Type (i) = 0x00, } Figure 23 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19-p5400-s6", "section": "19", "anchor": "#name-frame-types-and-formats", "para_id": "19-p1109", "text": "PADDING Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5401-s1", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1110", "text": "A PADDING frame (type=0x00) has no semantic value.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5402-s2", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1110", "text": "PADDING frames can be used to increase the size of a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5403-s3", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1110", "text": "Padding can be used to increase an Initial packet to the minimum required size or to provide protection against traffic analysis for protected packets. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5404-s1", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1111", "text": "PADDING frames are formatted as shown in Figure 23 , which shows that PADDING frames have no content.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5405-s2", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1111", "text": "That is, a PADDING frame consists of the single byte that identifies the frame as a PADDING frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5406-s1", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1112", "text": "PADDING Frame { Type (i) = 0x00, } Figure 23 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5407-s2", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1112", "text": "PADDING Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5408-s1", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1113", "text": "PADDING Frame { Type (i) = 0x00, }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5409-s1", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1114", "text": "PADDING Frame { Type (i) = 0x00, }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5410-s1", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1115", "text": "Figure 23 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5411-s2", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1115", "text": "PADDING Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5412-s1", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1116", "text": "19.2.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5413-s2", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1116", "text": "PING Frames Endpoints can use PING frames (type=0x01) to verify that their peers are still alive or to check reachability to the peer. ¶ PING frames are formatted as shown in Figure 24 , which shows that PING frames have no content. ¶ PING Frame { Type (i) = 0x01, } Figure 24 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.1-p5414-s3", "section": "19.1", "anchor": "#name-padding-frames", "para_id": "19.1-p1116", "text": "PING Frame Format The receiver of a PING frame simply needs to acknowledge the packet containing this frame. ¶ The PING frame can be used to keep a connection alive when an application or application protocol wishes to prevent the connection from timing out; see Section 10.1.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5415-s1", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1117", "text": "Endpoints can use PING frames (type=0x01) to verify that their peers are still alive or to check reachability to the peer. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.2-p5416-s1", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1118", "text": "PING frames are formatted as shown in Figure 24 , which shows that PING frames have no content. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.2-p5417-s1", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1119", "text": "PING Frame { Type (i) = 0x01, } Figure 24 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.2-p5418-s2", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1119", "text": "PING Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.2-p5419-s1", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1120", "text": "PING Frame { Type (i) = 0x01, }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.2-p5420-s1", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1121", "text": "PING Frame { Type (i) = 0x01, }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.2-p5421-s1", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1122", "text": "Figure 24 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.2-p5422-s2", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1122", "text": "PING Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.2-p5423-s1", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1123", "text": "The receiver of a PING frame simply needs to acknowledge the packet containing this frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5424-s1", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1124", "text": "The PING frame can be used to keep a connection alive when an application or application protocol wishes to prevent the connection from timing out; see Section 10.1.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5425-s1", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "19.3.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.2-p5426-s2", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "ACK Frames Receivers send ACK frames (types 0x02 and 0x03) to inform senders of packets they have received and processed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5427-s3", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "The ACK frame contains one or more ACK Ranges.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5428-s4", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "ACK Ranges identify acknowledged packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5429-s5", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "If the frame type is 0x03, ACK frames also contain the cumulative count of QUIC packets with associated ECN marks received on the connection up until this point.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5430-s6", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "QUIC implementations MUST properly handle both types, and, if they have enabled ECN for packets they send, they SHOULD use the information in the ECN section to manage their congestion state. ¶ QUIC acknowledgments are irrevocable.", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.2-p5431-s7", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "Once acknowledged, a packet remains acknowledged, even if it does not appear in a future ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5432-s8", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "This is unlike reneging for TCP Selective Acknowledgments (SACKs) [ RFC2018 ] . ¶ Packets from different packet number spaces can be identified using the same numeric value.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5433-s9", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "An acknowledgment for a packet needs to indicate both a packet number and a packet number space.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5434-s10", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "This is accomplished by having each ACK frame only acknowledge packet numbers in the same space as the packet in which the ACK frame is contained. ¶ Version Negotiation and Retry packets cannot be acknowledged because they do not contain a packet number.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5435-s11", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "Rather than relying on ACK frames, these packets are implicitly acknowledged by the next Initial packet sent by the client. ¶ ACK frames are formatted as shown in Figure 25 . ¶ ACK Frame { Type (i) = 0x02..0x03, Largest Acknowledged (i), ACK Delay (i), ACK Range Count (i), First ACK Range (i), ACK Range (..) ..., [ECN Counts (..)], } Figure 25 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5436-s12", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "ACK Frame Format ACK frames contain the following fields: ¶ Largest Acknowledged:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5437-s13", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "A variable-length integer representing the largest packet number the peer is acknowledging; this is usually the largest packet number that the peer has received prior to generating the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5438-s14", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "Unlike the packet number in the QUIC long or short header, the value in an ACK frame is not truncated. ¶ ACK Delay:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5439-s15", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "A variable-length integer encoding the acknowledgment delay in microseconds; see Section 13.2.5 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5440-s16", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "It is decoded by multiplying the value in the field by 2 to the power of the ack_delay_exponent transport parameter sent by the sender of the ACK frame; see Section 18.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5441-s17", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "Compared to simply expressing the delay as an integer, this encoding allows for a larger range of values within the same number of bytes, at the cost of lower resolution. ¶ ACK Range Count:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5442-s18", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "A variable-length integer specifying the number of ACK Range fields in the frame. ¶ First ACK Range:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5443-s19", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "A variable-length integer indicating the number of contiguous packets preceding the Largest Acknowledged that are being acknowledged.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5444-s20", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "That is, the smallest packet acknowledged in the range is determined by subtracting the First ACK Range value from the Largest Acknowledged field. ¶ ACK Ranges:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5445-s21", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "Contains additional ranges of packets that are alternately not acknowledged (Gap) and acknowledged (ACK Range); see Section 19.3.1 . ¶ ECN Counts:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5446-s22", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "The three ECN counts; see Section 19.3.2 . ¶ 19.3.1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.2-p5447-s23", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "ACK Ranges Each ACK Range consists of alternating Gap and ACK Range Length values in descending packet number order.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5448-s24", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "ACK Ranges can be repeated.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5449-s25", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "The number of Gap and ACK Range Length values is determined by the ACK Range Count field; one of each value is present for each value in the ACK Range Count field. ¶ ACK Ranges are structured as shown in Figure 26 . ¶ ACK Range { Gap (i), ACK Range Length (i), } Figure 26 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5450-s26", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "ACK Ranges The fields that form each ACK Range are: ¶ Gap:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5451-s27", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "A variable-length integer indicating the number of contiguous unacknowledged packets preceding the packet number one lower than the smallest in the preceding ACK Range. ¶ ACK Range Length:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5452-s28", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "A variable-length integer indicating the number of contiguous acknowledged packets preceding the largest packet number, as determined by the preceding Gap. ¶ Gap and ACK Range Length values use a relative integer encoding for efficiency.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5453-s29", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "Though each encoded value is positive, the values are subtracted, so that each ACK Range describes progressively lower-numbered packets. ¶ Each ACK Range acknowledges a contiguous range of packets by indicating the number of acknowledged packets that precede the largest packet number in that range.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5454-s30", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "A value of 0 indicates that only the largest packet number is acknowledged.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5455-s31", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "Larger ACK Range values indicate a larger range, with corresponding lower values for the smallest packet number in the range.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5456-s32", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "Thus, given a largest packet number for the range, the smallest value is determined by the following formula: ¶ smallest = largest - ack_range ¶ An ACK Range acknowledges all packets between the smallest packet number and the largest, inclusive. ¶ The largest value for an ACK Range is determined by cumulatively subtracting the size of all preceding ACK Range Lengths and Gaps. ¶ Each Gap indicates a range of packets that are not being acknowledged.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5457-s33", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "The number of packets in the gap is one higher than the encoded value of the Gap field. ¶ The value of the Gap field establishes the largest packet number value for the subsequent ACK Range using the following formula: ¶ largest = previous_smallest - gap - 2 ¶ If any computed packet number is negative, an endpoint MUST generate a connection error of type FRAME_ENCODING_ERROR. ¶ 19.3.2.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.2-p5458-s34", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "ECN Counts The ACK frame uses the least significant bit of the type value (that is, type 0x03) to indicate ECN feedback and report receipt of QUIC packets with associated ECN codepoints of ECT(0), ECT(1), or ECN-CE in the packet's IP header.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5459-s35", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "ECN counts are only present when the ACK frame type is 0x03. ¶ When present, there are three ECN counts, as shown in Figure 27 . ¶ ECN Counts { ECT0 Count (i), ECT1 Count (i), ECN-CE Count (i), } Figure 27 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5460-s36", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "ECN Count Format The ECN count fields are: ¶ ECT0 Count:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.2-p5461-s37", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "A variable-length integer representing the total number of packets received with the ECT(0) codepoint in the packet number space of the ACK frame. ¶ ECT1 Count:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5462-s38", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "A variable-length integer representing the total number of packets received with the ECT(1) codepoint in the packet number space of the ACK frame. ¶ ECN-CE Count:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.2-p5463-s39", "section": "19.2", "anchor": "#name-ping-frames", "para_id": "19.2-p1125", "text": "A variable-length integer representing the total number of packets received with the ECN-CE codepoint in the packet number space of the ACK frame. ¶ ECN counts are maintained separately for each packet number space. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5464-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1126", "text": "Receivers send ACK frames (types 0x02 and 0x03) to inform senders of packets they have received and processed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5465-s2", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1126", "text": "The ACK frame contains one or more ACK Ranges.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5466-s3", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1126", "text": "ACK Ranges identify acknowledged packets.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5467-s4", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1126", "text": "If the frame type is 0x03, ACK frames also contain the cumulative count of QUIC packets with associated ECN marks received on the connection up until this point.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5468-s5", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1126", "text": "QUIC implementations MUST properly handle both types, and, if they have enabled ECN for packets they send, they SHOULD use the information in the ECN section to manage their congestion state. ¶", "facet": "frames", "normative": true, "modalities": ["MUST", "SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.3-p5469-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1127", "text": "QUIC acknowledgments are irrevocable.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5470-s2", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1127", "text": "Once acknowledged, a packet remains acknowledged, even if it does not appear in a future ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5471-s3", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1127", "text": "This is unlike reneging for TCP Selective Acknowledgments (SACKs) [ RFC2018 ] . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5472-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1128", "text": "Packets from different packet number spaces can be identified using the same numeric value.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3-p5473-s2", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1128", "text": "An acknowledgment for a packet needs to indicate both a packet number and a packet number space.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5474-s3", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1128", "text": "This is accomplished by having each ACK frame only acknowledge packet numbers in the same space as the packet in which the ACK frame is contained. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5475-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1129", "text": "Version Negotiation and Retry packets cannot be acknowledged because they do not contain a packet number.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5476-s2", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1129", "text": "Rather than relying on ACK frames, these packets are implicitly acknowledged by the next Initial packet sent by the client. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5477-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1130", "text": "ACK frames are formatted as shown in Figure 25 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5478-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1131", "text": "ACK Frame { Type (i) = 0x02..0x03, Largest Acknowledged (i), ACK Delay (i), ACK Range Count (i), First ACK Range (i), ACK Range (..) ..., [ECN Counts (..)], } Figure 25 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5479-s2", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1131", "text": "ACK Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5480-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1132", "text": "ACK Frame { Type (i) = 0x02..0x03, Largest Acknowledged (i), ACK Delay (i), ACK Range Count (i), First ACK Range (i), ACK Range (..) ..., [ECN Counts (..)], }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5481-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1133", "text": "ACK Frame { Type (i) = 0x02..0x03, Largest Acknowledged (i), ACK Delay (i), ACK Range Count (i), First ACK Range (i), ACK Range (..) ..., [ECN Counts (..)], }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5482-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1134", "text": "Figure 25 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3-p5483-s2", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1134", "text": "ACK Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5484-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1135", "text": "ACK frames contain the following fields: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5485-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1136", "text": "A variable-length integer representing the largest packet number the peer is acknowledging; this is usually the largest packet number that the peer has received prior to generating the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5486-s2", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1136", "text": "Unlike the packet number in the QUIC long or short header, the value in an ACK frame is not truncated. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5487-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1137", "text": "A variable-length integer encoding the acknowledgment delay in microseconds; see Section 13.2.5 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5488-s2", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1137", "text": "It is decoded by multiplying the value in the field by 2 to the power of the ack_delay_exponent transport parameter sent by the sender of the ACK frame; see Section 18.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5489-s3", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1137", "text": "Compared to simply expressing the delay as an integer, this encoding allows for a larger range of values within the same number of bytes, at the cost of lower resolution. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3-p5490-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1138", "text": "A variable-length integer specifying the number of ACK Range fields in the frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5491-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1139", "text": "A variable-length integer indicating the number of contiguous packets preceding the Largest Acknowledged that are being acknowledged.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5492-s2", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1139", "text": "That is, the smallest packet acknowledged in the range is determined by subtracting the First ACK Range value from the Largest Acknowledged field. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5493-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1140", "text": "Contains additional ranges of packets that are alternately not acknowledged (Gap) and acknowledged (ACK Range); see Section 19.3.1 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5494-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1141", "text": "The three ECN counts; see Section 19.3.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3-p5495-s1", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1142", "text": "19.3.1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3-p5496-s2", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1142", "text": "ACK Ranges Each ACK Range consists of alternating Gap and ACK Range Length values in descending packet number order.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5497-s3", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1142", "text": "ACK Ranges can be repeated.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5498-s4", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1142", "text": "The number of Gap and ACK Range Length values is determined by the ACK Range Count field; one of each value is present for each value in the ACK Range Count field. ¶ ACK Ranges are structured as shown in Figure 26 . ¶ ACK Range { Gap (i), ACK Range Length (i), } Figure 26 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5499-s5", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1142", "text": "ACK Ranges The fields that form each ACK Range are: ¶ Gap:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5500-s6", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1142", "text": "A variable-length integer indicating the number of contiguous unacknowledged packets preceding the packet number one lower than the smallest in the preceding ACK Range. ¶ ACK Range Length:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5501-s7", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1142", "text": "A variable-length integer indicating the number of contiguous acknowledged packets preceding the largest packet number, as determined by the preceding Gap. ¶ Gap and ACK Range Length values use a relative integer encoding for efficiency.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5502-s8", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1142", "text": "Though each encoded value is positive, the values are subtracted, so that each ACK Range describes progressively lower-numbered packets. ¶ Each ACK Range acknowledges a contiguous range of packets by indicating the number of acknowledged packets that precede the largest packet number in that range.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5503-s9", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1142", "text": "A value of 0 indicates that only the largest packet number is acknowledged.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5504-s10", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1142", "text": "Larger ACK Range values indicate a larger range, with corresponding lower values for the smallest packet number in the range.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5505-s11", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1142", "text": "Thus, given a largest packet number for the range, the smallest value is determined by the following formula: ¶ smallest = largest - ack_range ¶ An ACK Range acknowledges all packets between the smallest packet number and the largest, inclusive. ¶ The largest value for an ACK Range is determined by cumulatively subtracting the size of all preceding ACK Range Lengths and Gaps. ¶ Each Gap indicates a range of packets that are not being acknowledged.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3-p5506-s12", "section": "19.3", "anchor": "#name-ack-frames", "para_id": "19.3-p1142", "text": "The number of packets in the gap is one higher than the encoded value of the Gap field. ¶ The value of the Gap field establishes the largest packet number value for the subsequent ACK Range using the following formula: ¶ largest = previous_smallest - gap - 2 ¶ If any computed packet number is negative, an endpoint MUST generate a connection error of type FRAME_ENCODING_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.3.1-p5507-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1143", "text": "Each ACK Range consists of alternating Gap and ACK Range Length values in descending packet number order.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5508-s2", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1143", "text": "ACK Ranges can be repeated.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5509-s3", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1143", "text": "The number of Gap and ACK Range Length values is determined by the ACK Range Count field; one of each value is present for each value in the ACK Range Count field. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5510-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1144", "text": "ACK Ranges are structured as shown in Figure 26 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5511-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1145", "text": "ACK Range { Gap (i), ACK Range Length (i), } Figure 26 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5512-s2", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1145", "text": "ACK Ranges", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5513-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1146", "text": "ACK Range { Gap (i), ACK Range Length (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5514-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1147", "text": "ACK Range { Gap (i), ACK Range Length (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5515-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1148", "text": "Figure 26 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.1-p5516-s2", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1148", "text": "ACK Ranges", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5517-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1149", "text": "The fields that form each ACK Range are: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5518-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1150", "text": "A variable-length integer indicating the number of contiguous unacknowledged packets preceding the packet number one lower than the smallest in the preceding ACK Range. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5519-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1151", "text": "A variable-length integer indicating the number of contiguous acknowledged packets preceding the largest packet number, as determined by the preceding Gap. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5520-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1152", "text": "Gap and ACK Range Length values use a relative integer encoding for efficiency.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5521-s2", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1152", "text": "Though each encoded value is positive, the values are subtracted, so that each ACK Range describes progressively lower-numbered packets. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5522-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1153", "text": "Each ACK Range acknowledges a contiguous range of packets by indicating the number of acknowledged packets that precede the largest packet number in that range.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5523-s2", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1153", "text": "A value of 0 indicates that only the largest packet number is acknowledged.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5524-s3", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1153", "text": "Larger ACK Range values indicate a larger range, with corresponding lower values for the smallest packet number in the range.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5525-s4", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1153", "text": "Thus, given a largest packet number for the range, the smallest value is determined by the following formula: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.1-p5526-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1154", "text": "smallest = largest - ack_range ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.1-p5527-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1155", "text": "smallest = largest - ack_range", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.1-p5528-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1156", "text": "An ACK Range acknowledges all packets between the smallest packet number and the largest, inclusive. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5529-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1157", "text": "The largest value for an ACK Range is determined by cumulatively subtracting the size of all preceding ACK Range Lengths and Gaps. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5530-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1158", "text": "Each Gap indicates a range of packets that are not being acknowledged.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5531-s2", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1158", "text": "The number of packets in the gap is one higher than the encoded value of the Gap field. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.1-p5532-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1159", "text": "The value of the Gap field establishes the largest packet number value for the subsequent ACK Range using the following formula: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5533-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1160", "text": "largest = previous_smallest - gap - 2 ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.1-p5534-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1161", "text": "largest = previous_smallest - gap - 2", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.1-p5535-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1162", "text": "If any computed packet number is negative, an endpoint MUST generate a connection error of type FRAME_ENCODING_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.3.1-p5536-s1", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1163", "text": "19.3.2.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.1-p5537-s2", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1163", "text": "ECN Counts The ACK frame uses the least significant bit of the type value (that is, type 0x03) to indicate ECN feedback and report receipt of QUIC packets with associated ECN codepoints of ECT(0), ECT(1), or ECN-CE in the packet's IP header.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5538-s3", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1163", "text": "ECN counts are only present when the ACK frame type is 0x03. ¶ When present, there are three ECN counts, as shown in Figure 27 . ¶ ECN Counts { ECT0 Count (i), ECT1 Count (i), ECN-CE Count (i), } Figure 27 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5539-s4", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1163", "text": "ECN Count Format The ECN count fields are: ¶ ECT0 Count:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.1-p5540-s5", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1163", "text": "A variable-length integer representing the total number of packets received with the ECT(0) codepoint in the packet number space of the ACK frame. ¶ ECT1 Count:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5541-s6", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1163", "text": "A variable-length integer representing the total number of packets received with the ECT(1) codepoint in the packet number space of the ACK frame. ¶ ECN-CE Count:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.1-p5542-s7", "section": "19.3.1", "anchor": "#name-ack-ranges", "para_id": "19.3.1-p1163", "text": "A variable-length integer representing the total number of packets received with the ECN-CE codepoint in the packet number space of the ACK frame. ¶ ECN counts are maintained separately for each packet number space. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.2-p5543-s1", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1164", "text": "The ACK frame uses the least significant bit of the type value (that is, type 0x03) to indicate ECN feedback and report receipt of QUIC packets with associated ECN codepoints of ECT(0), ECT(1), or ECN-CE in the packet's IP header.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.2-p5544-s2", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1164", "text": "ECN counts are only present when the ACK frame type is 0x03. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.2-p5545-s1", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1165", "text": "When present, there are three ECN counts, as shown in Figure 27 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.2-p5546-s1", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1166", "text": "ECN Counts { ECT0 Count (i), ECT1 Count (i), ECN-CE Count (i), } Figure 27 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.2-p5547-s2", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1166", "text": "ECN Count Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.2-p5548-s1", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1167", "text": "ECN Counts { ECT0 Count (i), ECT1 Count (i), ECN-CE Count (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.2-p5549-s1", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1168", "text": "ECN Counts { ECT0 Count (i), ECT1 Count (i), ECN-CE Count (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.2-p5550-s1", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1169", "text": "Figure 27 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.2-p5551-s2", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1169", "text": "ECN Count Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.2-p5552-s1", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1170", "text": "The ECN count fields are: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.2-p5553-s1", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1171", "text": "A variable-length integer representing the total number of packets received with the ECT(0) codepoint in the packet number space of the ACK frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.2-p5554-s1", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1172", "text": "A variable-length integer representing the total number of packets received with the ECT(1) codepoint in the packet number space of the ACK frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.2-p5555-s1", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1173", "text": "A variable-length integer representing the total number of packets received with the ECN-CE codepoint in the packet number space of the ACK frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.3.2-p5556-s1", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1174", "text": "ECN counts are maintained separately for each packet number space. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.2-p5557-s1", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1175", "text": "19.4.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.2-p5558-s2", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1175", "text": "RESET_STREAM Frames An endpoint uses a RESET_STREAM frame (type=0x04) to abruptly terminate the sending part of a stream. ¶ After sending a RESET_STREAM, an endpoint ceases transmission and retransmission of STREAM frames on the identified stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.3.2-p5559-s3", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1175", "text": "A receiver of RESET_STREAM can discard any data that it already received on that stream. ¶ An endpoint that receives a RESET_STREAM frame for a send-only stream MUST terminate the connection with error STREAM_STATE_ERROR. ¶ RESET_STREAM frames are formatted as shown in Figure 28 . ¶ RESET_STREAM Frame { Type (i) = 0x04, Stream ID (i), Application Protocol Error Code (i), Final Size (i), } Figure 28 :", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.3.2-p5560-s4", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1175", "text": "RESET_STREAM Frame Format RESET_STREAM frames contain the following fields: ¶ Stream ID:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.3.2-p5561-s5", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1175", "text": "A variable-length integer encoding of the stream ID of the stream being terminated. ¶ Application Protocol Error Code:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.2-p5562-s6", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1175", "text": "A variable-length integer containing the application protocol error code (see Section 20.2 ) that indicates why the stream is being closed. ¶ Final Size:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.3.2-p5563-s7", "section": "19.3.2", "anchor": "#name-ecn-counts", "para_id": "19.3.2-p1175", "text": "A variable-length integer indicating the final size of the stream by the RESET_STREAM sender, in units of bytes; see Section 4.5 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.4-p5564-s1", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1176", "text": "An endpoint uses a RESET_STREAM frame (type=0x04) to abruptly terminate the sending part of a stream. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.4-p5565-s1", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1177", "text": "After sending a RESET_STREAM, an endpoint ceases transmission and retransmission of STREAM frames on the identified stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.4-p5566-s2", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1177", "text": "A receiver of RESET_STREAM can discard any data that it already received on that stream. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.4-p5567-s1", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1178", "text": "An endpoint that receives a RESET_STREAM frame for a send-only stream MUST terminate the connection with error STREAM_STATE_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.4-p5568-s1", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1179", "text": "RESET_STREAM frames are formatted as shown in Figure 28 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.4-p5569-s1", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1180", "text": "RESET_STREAM Frame { Type (i) = 0x04, Stream ID (i), Application Protocol Error Code (i), Final Size (i), } Figure 28 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.4-p5570-s2", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1180", "text": "RESET_STREAM Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.4-p5571-s1", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1181", "text": "RESET_STREAM Frame { Type (i) = 0x04, Stream ID (i), Application Protocol Error Code (i), Final Size (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.4-p5572-s1", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1182", "text": "RESET_STREAM Frame { Type (i) = 0x04, Stream ID (i), Application Protocol Error Code (i), Final Size (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.4-p5573-s1", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1183", "text": "Figure 28 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.4-p5574-s2", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1183", "text": "RESET_STREAM Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.4-p5575-s1", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1184", "text": "RESET_STREAM frames contain the following fields: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.4-p5576-s1", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1185", "text": "A variable-length integer encoding of the stream ID of the stream being terminated. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.4-p5577-s1", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1186", "text": "A variable-length integer containing the application protocol error code (see Section 20.2 ) that indicates why the stream is being closed. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.4-p5578-s1", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1187", "text": "A variable-length integer indicating the final size of the stream by the RESET_STREAM sender, in units of bytes; see Section 4.5 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.4-p5579-s1", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1188", "text": "19.5.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.4-p5580-s2", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1188", "text": "STOP_SENDING Frames An endpoint uses a STOP_SENDING frame (type=0x05) to communicate that incoming data is being discarded on receipt per application request.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.4-p5581-s3", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1188", "text": "STOP_SENDING requests that a peer cease transmission on a stream. ¶ A STOP_SENDING frame can be sent for streams in the \"Recv\" or \"Size Known\" states; see Section 3.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": ["Recv", "Size Known"], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "19.4-p5582-s4", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1188", "text": "Receiving a STOP_SENDING frame for a locally initiated stream that has not yet been created MUST be treated as a connection error of type STREAM_STATE_ERROR.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "19.4-p5583-s5", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1188", "text": "An endpoint that receives a STOP_SENDING frame for a receive-only stream MUST terminate the connection with error STREAM_STATE_ERROR. ¶ STOP_SENDING frames are formatted as shown in Figure 29 . ¶ STOP_SENDING Frame { Type (i) = 0x05, Stream ID (i), Application Protocol Error Code (i), } Figure 29 :", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.4-p5584-s6", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1188", "text": "STOP_SENDING Frame Format STOP_SENDING frames contain the following fields: ¶ Stream ID:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.4-p5585-s7", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1188", "text": "A variable-length integer carrying the stream ID of the stream being ignored. ¶ Application Protocol Error Code:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.4-p5586-s8", "section": "19.4", "anchor": "#name-reset_stream-frames", "para_id": "19.4-p1188", "text": "A variable-length integer containing the application-specified reason the sender is ignoring the stream; see Section 20.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.5-p5587-s1", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1189", "text": "An endpoint uses a STOP_SENDING frame (type=0x05) to communicate that incoming data is being discarded on receipt per application request.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.5-p5588-s2", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1189", "text": "STOP_SENDING requests that a peer cease transmission on a stream. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.5-p5589-s1", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1190", "text": "A STOP_SENDING frame can be sent for streams in the \"Recv\" or \"Size Known\" states; see Section 3.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": ["Recv", "Size Known"], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "19.5-p5590-s2", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1190", "text": "Receiving a STOP_SENDING frame for a locally initiated stream that has not yet been created MUST be treated as a connection error of type STREAM_STATE_ERROR.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "19.5-p5591-s3", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1190", "text": "An endpoint that receives a STOP_SENDING frame for a receive-only stream MUST terminate the connection with error STREAM_STATE_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.5-p5592-s1", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1191", "text": "STOP_SENDING frames are formatted as shown in Figure 29 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.5-p5593-s1", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1192", "text": "STOP_SENDING Frame { Type (i) = 0x05, Stream ID (i), Application Protocol Error Code (i), } Figure 29 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.5-p5594-s2", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1192", "text": "STOP_SENDING Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.5-p5595-s1", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1193", "text": "STOP_SENDING Frame { Type (i) = 0x05, Stream ID (i), Application Protocol Error Code (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.5-p5596-s1", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1194", "text": "STOP_SENDING Frame { Type (i) = 0x05, Stream ID (i), Application Protocol Error Code (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.5-p5597-s1", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1195", "text": "Figure 29 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.5-p5598-s2", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1195", "text": "STOP_SENDING Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.5-p5599-s1", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1196", "text": "STOP_SENDING frames contain the following fields: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.5-p5600-s1", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1197", "text": "A variable-length integer carrying the stream ID of the stream being ignored. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.5-p5601-s1", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1198", "text": "A variable-length integer containing the application-specified reason the sender is ignoring the stream; see Section 20.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.5-p5602-s1", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1199", "text": "19.6.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.5-p5603-s2", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1199", "text": "CRYPTO Frames A CRYPTO frame (type=0x06) is used to transmit cryptographic handshake messages.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.5-p5604-s3", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1199", "text": "It can be sent in all packet types except 0-RTT.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.5-p5605-s4", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1199", "text": "The CRYPTO frame offers the cryptographic protocol an in-order stream of bytes.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.5-p5606-s5", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1199", "text": "CRYPTO frames are functionally identical to STREAM frames, except that they do not bear a stream identifier; they are not flow controlled; and they do not carry markers for optional offset, optional length, and the end of the stream. ¶ CRYPTO frames are formatted as shown in Figure 30 . ¶ CRYPTO Frame { Type (i) = 0x06, Offset (i), Length (i), Crypto Data (..), } Figure 30 :", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.5-p5607-s6", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1199", "text": "CRYPTO Frame Format CRYPTO frames contain the following fields: ¶ Offset:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.5-p5608-s7", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1199", "text": "A variable-length integer specifying the byte offset in the stream for the data in this CRYPTO frame. ¶ Length:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.5-p5609-s8", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1199", "text": "A variable-length integer specifying the length of the Crypto Data field in this CRYPTO frame. ¶ Crypto Data:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.5-p5610-s9", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1199", "text": "The cryptographic message data. ¶ There is a separate flow of cryptographic handshake data in each encryption level, each of which starts at an offset of 0.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.5-p5611-s10", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1199", "text": "This implies that each encryption level is treated as a separate CRYPTO stream of data. ¶ The largest offset delivered on a stream -- the sum of the offset and data length -- cannot exceed 2 62 -1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.5-p5612-s11", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1199", "text": "Receipt of a frame that exceeds this limit MUST be treated as a connection error of type FRAME_ENCODING_ERROR or CRYPTO_BUFFER_EXCEEDED. ¶ Unlike STREAM frames, which include a stream ID indicating to which stream the data belongs, the CRYPTO frame carries data for a single stream per encryption level.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "19.5-p5613-s12", "section": "19.5", "anchor": "#name-stop_sending-frames", "para_id": "19.5-p1199", "text": "The stream does not have an explicit end, so CRYPTO frames do not have a FIN bit. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.6-p5614-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1200", "text": "A CRYPTO frame (type=0x06) is used to transmit cryptographic handshake messages.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5615-s2", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1200", "text": "It can be sent in all packet types except 0-RTT.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5616-s3", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1200", "text": "The CRYPTO frame offers the cryptographic protocol an in-order stream of bytes.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5617-s4", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1200", "text": "CRYPTO frames are functionally identical to STREAM frames, except that they do not bear a stream identifier; they are not flow controlled; and they do not carry markers for optional offset, optional length, and the end of the stream. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.6-p5618-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1201", "text": "CRYPTO frames are formatted as shown in Figure 30 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5619-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1202", "text": "CRYPTO Frame { Type (i) = 0x06, Offset (i), Length (i), Crypto Data (..), } Figure 30 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5620-s2", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1202", "text": "CRYPTO Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5621-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1203", "text": "CRYPTO Frame { Type (i) = 0x06, Offset (i), Length (i), Crypto Data (..), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5622-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1204", "text": "CRYPTO Frame { Type (i) = 0x06, Offset (i), Length (i), Crypto Data (..), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5623-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1205", "text": "Figure 30 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5624-s2", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1205", "text": "CRYPTO Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5625-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1206", "text": "CRYPTO frames contain the following fields: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5626-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1207", "text": "A variable-length integer specifying the byte offset in the stream for the data in this CRYPTO frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5627-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1208", "text": "A variable-length integer specifying the length of the Crypto Data field in this CRYPTO frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5628-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1209", "text": "The cryptographic message data. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5629-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1210", "text": "There is a separate flow of cryptographic handshake data in each encryption level, each of which starts at an offset of 0.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5630-s2", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1210", "text": "This implies that each encryption level is treated as a separate CRYPTO stream of data. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5631-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1211", "text": "The largest offset delivered on a stream -- the sum of the offset and data length -- cannot exceed 2 62 -1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5632-s2", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1211", "text": "Receipt of a frame that exceeds this limit MUST be treated as a connection error of type FRAME_ENCODING_ERROR or CRYPTO_BUFFER_EXCEEDED. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.6-p5633-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1212", "text": "Unlike STREAM frames, which include a stream ID indicating to which stream the data belongs, the CRYPTO frame carries data for a single stream per encryption level.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.6-p5634-s2", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1212", "text": "The stream does not have an explicit end, so CRYPTO frames do not have a FIN bit. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.6-p5635-s1", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1213", "text": "19.7.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5636-s2", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1213", "text": "NEW_TOKEN Frames A server sends a NEW_TOKEN frame (type=0x07) to provide the client with a token to send in the header of an Initial packet for a future connection. ¶ NEW_TOKEN frames are formatted as shown in Figure 31 . ¶ NEW_TOKEN Frame { Type (i) = 0x07, Token Length (i), Token (..), } Figure 31 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.6-p5637-s3", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1213", "text": "NEW_TOKEN Frame Format NEW_TOKEN frames contain the following fields: ¶ Token Length:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5638-s4", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1213", "text": "A variable-length integer specifying the length of the token in bytes. ¶ Token:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5639-s5", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1213", "text": "An opaque blob that the client can use with a future Initial packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.6-p5640-s6", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1213", "text": "The token MUST NOT be empty.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.6-p5641-s7", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1213", "text": "A client MUST treat receipt of a NEW_TOKEN frame with an empty Token field as a connection error of type FRAME_ENCODING_ERROR. ¶ A client might receive multiple NEW_TOKEN frames that contain the same token value if packets containing the frame are incorrectly determined to be lost.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.6-p5642-s8", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1213", "text": "Clients are responsible for discarding duplicate values, which might be used to link connection attempts; see Section 8.1.3 . ¶ Clients MUST NOT send NEW_TOKEN frames.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.6-p5643-s9", "section": "19.6", "anchor": "#name-crypto-frames", "para_id": "19.6-p1213", "text": "A server MUST treat receipt of a NEW_TOKEN frame as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.7-p5644-s1", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1214", "text": "A server sends a NEW_TOKEN frame (type=0x07) to provide the client with a token to send in the header of an Initial packet for a future connection. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.7-p5645-s1", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1215", "text": "NEW_TOKEN frames are formatted as shown in Figure 31 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5646-s1", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1216", "text": "NEW_TOKEN Frame { Type (i) = 0x07, Token Length (i), Token (..), } Figure 31 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5647-s2", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1216", "text": "NEW_TOKEN Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5648-s1", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1217", "text": "NEW_TOKEN Frame { Type (i) = 0x07, Token Length (i), Token (..), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5649-s1", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1218", "text": "NEW_TOKEN Frame { Type (i) = 0x07, Token Length (i), Token (..), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5650-s1", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1219", "text": "Figure 31 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5651-s2", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1219", "text": "NEW_TOKEN Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5652-s1", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1220", "text": "NEW_TOKEN frames contain the following fields: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5653-s1", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1221", "text": "A variable-length integer specifying the length of the token in bytes. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5654-s1", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1222", "text": "An opaque blob that the client can use with a future Initial packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5655-s2", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1222", "text": "The token MUST NOT be empty.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.7-p5656-s3", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1222", "text": "A client MUST treat receipt of a NEW_TOKEN frame with an empty Token field as a connection error of type FRAME_ENCODING_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.7-p5657-s1", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1223", "text": "A client might receive multiple NEW_TOKEN frames that contain the same token value if packets containing the frame are incorrectly determined to be lost.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.7-p5658-s2", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1223", "text": "Clients are responsible for discarding duplicate values, which might be used to link connection attempts; see Section 8.1.3 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5659-s1", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1224", "text": "Clients MUST NOT send NEW_TOKEN frames.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.7-p5660-s2", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1224", "text": "A server MUST treat receipt of a NEW_TOKEN frame as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.7-p5661-s1", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "19.8.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5662-s2", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "STREAM Frames STREAM frames implicitly create a stream and carry stream data.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.7-p5663-s3", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "The Type field in the STREAM frame takes the form 0b00001XXX (or the set of values from 0x08 to 0x0f).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.7-p5664-s4", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "The three low-order bits of the frame type determine the fields that are present in the frame: ¶ The OFF bit (0x04) in the frame type is set to indicate that there is an Offset field present.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5665-s5", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "When set to 1, the Offset field is present.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.7-p5666-s6", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "When set to 0, the Offset field is absent and the Stream Data starts at an offset of 0 (that is, the frame contains the first bytes of the stream, or the end of a stream that includes no data). ¶ The LEN bit (0x02) in the frame type is set to indicate that there is a Length field present.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.7-p5667-s7", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "If this bit is set to 0, the Length field is absent and the Stream Data field extends to the end of the packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.7-p5668-s8", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "If this bit is set to 1, the Length field is present. ¶ The FIN bit (0x01) indicates that the frame marks the end of the stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.7-p5669-s9", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "The final size of the stream is the sum of the offset and the length of this frame. ¶ An endpoint MUST terminate the connection with error STREAM_STATE_ERROR if it receives a STREAM frame for a locally initiated stream that has not yet been created, or for a send-only stream. ¶ STREAM frames are formatted as shown in Figure 32 . ¶ STREAM Frame { Type (i) = 0x08..0x0f, Stream ID (i), [Offset (i)], [Length (i)], Stream Data (..), } Figure 32 :", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.7-p5670-s10", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "STREAM Frame Format STREAM frames contain the following fields: ¶ Stream ID:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.7-p5671-s11", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "A variable-length integer indicating the stream ID of the stream; see Section 2.1 . ¶ Offset:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5672-s12", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "A variable-length integer specifying the byte offset in the stream for the data in this STREAM frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.7-p5673-s13", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "This field is present when the OFF bit is set to 1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.7-p5674-s14", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "When the Offset field is absent, the offset is 0. ¶ Length:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.7-p5675-s15", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "A variable-length integer specifying the length of the Stream Data field in this STREAM frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.7-p5676-s16", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "This field is present when the LEN bit is set to 1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.7-p5677-s17", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "When the LEN bit is set to 0, the Stream Data field consumes all the remaining bytes in the packet. ¶ Stream Data:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.7-p5678-s18", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "The bytes from the designated stream to be delivered. ¶ When a Stream Data field has a length of 0, the offset in the STREAM frame is the offset of the next byte that would be sent. ¶ The first byte in the stream has an offset of 0.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.7-p5679-s19", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "The largest offset delivered on a stream -- the sum of the offset and data length -- cannot exceed 2 62 -1, as it is not possible to provide flow control credit for that data.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.7-p5680-s20", "section": "19.7", "anchor": "#name-new_token-frames", "para_id": "19.7-p1225", "text": "Receipt of a frame that exceeds this limit MUST be treated as a connection error of type FRAME_ENCODING_ERROR or FLOW_CONTROL_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5681-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1226", "text": "STREAM frames implicitly create a stream and carry stream data.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5682-s2", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1226", "text": "The Type field in the STREAM frame takes the form 0b00001XXX (or the set of values from 0x08 to 0x0f).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5683-s3", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1226", "text": "The three low-order bits of the frame type determine the fields that are present in the frame: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.8-p5684-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1227", "text": "The OFF bit (0x04) in the frame type is set to indicate that there is an Offset field present.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.8-p5685-s2", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1227", "text": "When set to 1, the Offset field is present.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.8-p5686-s3", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1227", "text": "When set to 0, the Offset field is absent and the Stream Data starts at an offset of 0 (that is, the frame contains the first bytes of the stream, or the end of a stream that includes no data). ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.8-p5687-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1228", "text": "The LEN bit (0x02) in the frame type is set to indicate that there is a Length field present.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.8-p5688-s2", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1228", "text": "If this bit is set to 0, the Length field is absent and the Stream Data field extends to the end of the packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.8-p5689-s3", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1228", "text": "If this bit is set to 1, the Length field is present. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.8-p5690-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1229", "text": "The FIN bit (0x01) indicates that the frame marks the end of the stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.8-p5691-s2", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1229", "text": "The final size of the stream is the sum of the offset and the length of this frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.8-p5692-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1230", "text": "An endpoint MUST terminate the connection with error STREAM_STATE_ERROR if it receives a STREAM frame for a locally initiated stream that has not yet been created, or for a send-only stream. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.8-p5693-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1231", "text": "STREAM frames are formatted as shown in Figure 32 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5694-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1232", "text": "STREAM Frame { Type (i) = 0x08..0x0f, Stream ID (i), [Offset (i)], [Length (i)], Stream Data (..), } Figure 32 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5695-s2", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1232", "text": "STREAM Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5696-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1233", "text": "STREAM Frame { Type (i) = 0x08..0x0f, Stream ID (i), [Offset (i)], [Length (i)], Stream Data (..), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5697-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1234", "text": "STREAM Frame { Type (i) = 0x08..0x0f, Stream ID (i), [Offset (i)], [Length (i)], Stream Data (..), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5698-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1235", "text": "Figure 32 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.8-p5699-s2", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1235", "text": "STREAM Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5700-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1236", "text": "STREAM frames contain the following fields: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5701-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1237", "text": "A variable-length integer indicating the stream ID of the stream; see Section 2.1 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.8-p5702-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1238", "text": "A variable-length integer specifying the byte offset in the stream for the data in this STREAM frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5703-s2", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1238", "text": "This field is present when the OFF bit is set to 1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.8-p5704-s3", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1238", "text": "When the Offset field is absent, the offset is 0. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.8-p5705-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1239", "text": "A variable-length integer specifying the length of the Stream Data field in this STREAM frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5706-s2", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1239", "text": "This field is present when the LEN bit is set to 1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.8-p5707-s3", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1239", "text": "When the LEN bit is set to 0, the Stream Data field consumes all the remaining bytes in the packet. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.8-p5708-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1240", "text": "The bytes from the designated stream to be delivered. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.8-p5709-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1241", "text": "When a Stream Data field has a length of 0, the offset in the STREAM frame is the offset of the next byte that would be sent. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.8-p5710-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1242", "text": "The first byte in the stream has an offset of 0.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.8-p5711-s2", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1242", "text": "The largest offset delivered on a stream -- the sum of the offset and data length -- cannot exceed 2 62 -1, as it is not possible to provide flow control credit for that data.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.8-p5712-s3", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1242", "text": "Receipt of a frame that exceeds this limit MUST be treated as a connection error of type FRAME_ENCODING_ERROR or FLOW_CONTROL_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5713-s1", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1243", "text": "19.9.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.8-p5714-s2", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1243", "text": "MAX_DATA Frames A MAX_DATA frame (type=0x10) is used in flow control to inform the peer of the maximum amount of data that can be sent on the connection as a whole. ¶ MAX_DATA frames are formatted as shown in Figure 33 . ¶ MAX_DATA Frame { Type (i) = 0x10, Maximum Data (i), } Figure 33 :", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5715-s3", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1243", "text": "MAX_DATA Frame Format MAX_DATA frames contain the following field: ¶ Maximum Data:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5716-s4", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1243", "text": "A variable-length integer indicating the maximum amount of data that can be sent on the entire connection, in units of bytes. ¶ All data sent in STREAM frames counts toward this limit.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5717-s5", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1243", "text": "The sum of the final sizes on all streams -- including streams in terminal states -- MUST NOT exceed the value advertised by a receiver.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.8-p5718-s6", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1243", "text": "An endpoint MUST terminate a connection with an error of type FLOW_CONTROL_ERROR if it receives more data than the maximum data value that it has sent.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 4}
{"sent_id": "19.8-p5719-s7", "section": "19.8", "anchor": "#name-stream-frames", "para_id": "19.8-p1243", "text": "This includes violations of remembered limits in Early Data; see Section 7.4.1 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.9-p5720-s1", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1244", "text": "A MAX_DATA frame (type=0x10) is used in flow control to inform the peer of the maximum amount of data that can be sent on the connection as a whole. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.9-p5721-s1", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1245", "text": "MAX_DATA frames are formatted as shown in Figure 33 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.9-p5722-s1", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1246", "text": "MAX_DATA Frame { Type (i) = 0x10, Maximum Data (i), } Figure 33 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.9-p5723-s2", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1246", "text": "MAX_DATA Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.9-p5724-s1", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1247", "text": "MAX_DATA Frame { Type (i) = 0x10, Maximum Data (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.9-p5725-s1", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1248", "text": "MAX_DATA Frame { Type (i) = 0x10, Maximum Data (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.9-p5726-s1", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1249", "text": "Figure 33 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.9-p5727-s2", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1249", "text": "MAX_DATA Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.9-p5728-s1", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1250", "text": "MAX_DATA frames contain the following field: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.9-p5729-s1", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1251", "text": "A variable-length integer indicating the maximum amount of data that can be sent on the entire connection, in units of bytes. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.9-p5730-s1", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1252", "text": "All data sent in STREAM frames counts toward this limit.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.9-p5731-s2", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1252", "text": "The sum of the final sizes on all streams -- including streams in terminal states -- MUST NOT exceed the value advertised by a receiver.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.9-p5732-s3", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1252", "text": "An endpoint MUST terminate a connection with an error of type FLOW_CONTROL_ERROR if it receives more data than the maximum data value that it has sent.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 4}
{"sent_id": "19.9-p5733-s4", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1252", "text": "This includes violations of remembered limits in Early Data; see Section 7.4.1 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.9-p5734-s1", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1253", "text": "19.10.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.9-p5735-s2", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1253", "text": "MAX_STREAM_DATA Frames A MAX_STREAM_DATA frame (type=0x11) is used in flow control to inform a peer of the maximum amount of data that can be sent on a stream. ¶ A MAX_STREAM_DATA frame can be sent for streams in the \"Recv\" state; see Section 3.2 .", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": ["Recv"], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "19.9-p5736-s3", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1253", "text": "Receiving a MAX_STREAM_DATA frame for a locally initiated stream that has not yet been created MUST be treated as a connection error of type STREAM_STATE_ERROR.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "19.9-p5737-s4", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1253", "text": "An endpoint that receives a MAX_STREAM_DATA frame for a receive-only stream MUST terminate the connection with error STREAM_STATE_ERROR. ¶ MAX_STREAM_DATA frames are formatted as shown in Figure 34 . ¶ MAX_STREAM_DATA Frame { Type (i) = 0x11, Stream ID (i), Maximum Stream Data (i), } Figure 34 :", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.9-p5738-s5", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1253", "text": "MAX_STREAM_DATA Frame Format MAX_STREAM_DATA frames contain the following fields: ¶ Stream ID:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.9-p5739-s6", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1253", "text": "The stream ID of the affected stream, encoded as a variable-length integer. ¶ Maximum Stream Data:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.9-p5740-s7", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1253", "text": "A variable-length integer indicating the maximum amount of data that can be sent on the identified stream, in units of bytes. ¶ When counting data toward this limit, an endpoint accounts for the largest received offset of data that is sent or received on the stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.9-p5741-s8", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1253", "text": "Loss or reordering can mean that the largest received offset on a stream can be greater than the total size of data received on that stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.9-p5742-s9", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1253", "text": "Receiving STREAM frames might not increase the largest received offset. ¶ The data sent on a stream MUST NOT exceed the largest maximum stream data value advertised by the receiver.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": ["STREAM"], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.9-p5743-s10", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1253", "text": "An endpoint MUST terminate a connection with an error of type FLOW_CONTROL_ERROR if it receives more data than the largest maximum stream data that it has sent for the affected stream.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 4}
{"sent_id": "19.9-p5744-s11", "section": "19.9", "anchor": "#name-max_data-frames", "para_id": "19.9-p1253", "text": "This includes violations of remembered limits in Early Data; see Section 7.4.1 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.10-p5745-s1", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1254", "text": "A MAX_STREAM_DATA frame (type=0x11) is used in flow control to inform a peer of the maximum amount of data that can be sent on a stream. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.10-p5746-s1", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1255", "text": "A MAX_STREAM_DATA frame can be sent for streams in the \"Recv\" state; see Section 3.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": ["Recv"], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "19.10-p5747-s2", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1255", "text": "Receiving a MAX_STREAM_DATA frame for a locally initiated stream that has not yet been created MUST be treated as a connection error of type STREAM_STATE_ERROR.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "19.10-p5748-s3", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1255", "text": "An endpoint that receives a MAX_STREAM_DATA frame for a receive-only stream MUST terminate the connection with error STREAM_STATE_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.10-p5749-s1", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1256", "text": "MAX_STREAM_DATA frames are formatted as shown in Figure 34 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.10-p5750-s1", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1257", "text": "MAX_STREAM_DATA Frame { Type (i) = 0x11, Stream ID (i), Maximum Stream Data (i), } Figure 34 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.10-p5751-s2", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1257", "text": "MAX_STREAM_DATA Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.10-p5752-s1", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1258", "text": "MAX_STREAM_DATA Frame { Type (i) = 0x11, Stream ID (i), Maximum Stream Data (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.10-p5753-s1", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1259", "text": "MAX_STREAM_DATA Frame { Type (i) = 0x11, Stream ID (i), Maximum Stream Data (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.10-p5754-s1", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1260", "text": "Figure 34 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.10-p5755-s2", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1260", "text": "MAX_STREAM_DATA Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.10-p5756-s1", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1261", "text": "MAX_STREAM_DATA frames contain the following fields: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAM_DATA"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.10-p5757-s1", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1262", "text": "The stream ID of the affected stream, encoded as a variable-length integer. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.10-p5758-s1", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1263", "text": "A variable-length integer indicating the maximum amount of data that can be sent on the identified stream, in units of bytes. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.10-p5759-s1", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1264", "text": "When counting data toward this limit, an endpoint accounts for the largest received offset of data that is sent or received on the stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.10-p5760-s2", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1264", "text": "Loss or reordering can mean that the largest received offset on a stream can be greater than the total size of data received on that stream.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.10-p5761-s3", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1264", "text": "Receiving STREAM frames might not increase the largest received offset. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.10-p5762-s1", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1265", "text": "The data sent on a stream MUST NOT exceed the largest maximum stream data value advertised by the receiver.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.10-p5763-s2", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1265", "text": "An endpoint MUST terminate a connection with an error of type FLOW_CONTROL_ERROR if it receives more data than the largest maximum stream data that it has sent for the affected stream.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 4}
{"sent_id": "19.10-p5764-s3", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1265", "text": "This includes violations of remembered limits in Early Data; see Section 7.4.1 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.10-p5765-s1", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1266", "text": "19.11.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.10-p5766-s2", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1266", "text": "MAX_STREAMS Frames A MAX_STREAMS frame (type=0x12 or 0x13) informs the peer of the cumulative number of streams of a given type it is permitted to open.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.10-p5767-s3", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1266", "text": "A MAX_STREAMS frame with a type of 0x12 applies to bidirectional streams, and a MAX_STREAMS frame with a type of 0x13 applies to unidirectional streams. ¶ MAX_STREAMS frames are formatted as shown in Figure 35 . ¶ MAX_STREAMS Frame { Type (i) = 0x12..0x13, Maximum Streams (i), } Figure 35 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.10-p5768-s4", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1266", "text": "MAX_STREAMS Frame Format MAX_STREAMS frames contain the following field: ¶ Maximum Streams:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.10-p5769-s5", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1266", "text": "A count of the cumulative number of streams of the corresponding type that can be opened over the lifetime of the connection.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.10-p5770-s6", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1266", "text": "This value cannot exceed 2 60 , as it is not possible to encode stream IDs larger than 2 62 -1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.10-p5771-s7", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1266", "text": "Receipt of a frame that permits opening of a stream larger than this limit MUST be treated as a connection error of type FRAME_ENCODING_ERROR. ¶ Loss or reordering can cause an endpoint to receive a MAX_STREAMS frame with a lower stream limit than was previously received.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.10-p5772-s8", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1266", "text": "MAX_STREAMS frames that do not increase the stream limit MUST be ignored. ¶ An endpoint MUST NOT open more streams than permitted by the current stream limit set by its peer.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "19.10-p5773-s9", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1266", "text": "For instance, a server that receives a unidirectional stream limit of 3 is permitted to open streams 3, 7, and 11, but not stream 15.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.10-p5774-s10", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1266", "text": "An endpoint MUST terminate a connection with an error of type STREAM_LIMIT_ERROR if a peer opens more streams than was permitted.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.10-p5775-s11", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1266", "text": "This includes violations of remembered limits in Early Data; see Section 7.4.1 . ¶ Note that these frames (and the corresponding transport parameters) do not describe the number of streams that can be opened concurrently.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.10-p5776-s12", "section": "19.10", "anchor": "#name-max_stream_data-frames", "para_id": "19.10-p1266", "text": "The limit includes streams that have been closed as well as those that are open. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.11-p5777-s1", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1267", "text": "A MAX_STREAMS frame (type=0x12 or 0x13) informs the peer of the cumulative number of streams of a given type it is permitted to open.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.11-p5778-s2", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1267", "text": "A MAX_STREAMS frame with a type of 0x12 applies to bidirectional streams, and a MAX_STREAMS frame with a type of 0x13 applies to unidirectional streams. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.11-p5779-s1", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1268", "text": "MAX_STREAMS frames are formatted as shown in Figure 35 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.11-p5780-s1", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1269", "text": "MAX_STREAMS Frame { Type (i) = 0x12..0x13, Maximum Streams (i), } Figure 35 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.11-p5781-s2", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1269", "text": "MAX_STREAMS Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.11-p5782-s1", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1270", "text": "MAX_STREAMS Frame { Type (i) = 0x12..0x13, Maximum Streams (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.11-p5783-s1", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1271", "text": "MAX_STREAMS Frame { Type (i) = 0x12..0x13, Maximum Streams (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.11-p5784-s1", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1272", "text": "Figure 35 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.11-p5785-s2", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1272", "text": "MAX_STREAMS Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.11-p5786-s1", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1273", "text": "MAX_STREAMS frames contain the following field: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.11-p5787-s1", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1274", "text": "A count of the cumulative number of streams of the corresponding type that can be opened over the lifetime of the connection.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.11-p5788-s2", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1274", "text": "This value cannot exceed 2 60 , as it is not possible to encode stream IDs larger than 2 62 -1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.11-p5789-s3", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1274", "text": "Receipt of a frame that permits opening of a stream larger than this limit MUST be treated as a connection error of type FRAME_ENCODING_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.11-p5790-s1", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1275", "text": "Loss or reordering can cause an endpoint to receive a MAX_STREAMS frame with a lower stream limit than was previously received.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.11-p5791-s2", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1275", "text": "MAX_STREAMS frames that do not increase the stream limit MUST be ignored. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 5}
{"sent_id": "19.11-p5792-s1", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1276", "text": "An endpoint MUST NOT open more streams than permitted by the current stream limit set by its peer.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.11-p5793-s2", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1276", "text": "For instance, a server that receives a unidirectional stream limit of 3 is permitted to open streams 3, 7, and 11, but not stream 15.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.11-p5794-s3", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1276", "text": "An endpoint MUST terminate a connection with an error of type STREAM_LIMIT_ERROR if a peer opens more streams than was permitted.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.11-p5795-s4", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1276", "text": "This includes violations of remembered limits in Early Data; see Section 7.4.1 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.11-p5796-s1", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1277", "text": "Note that these frames (and the corresponding transport parameters) do not describe the number of streams that can be opened concurrently.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.11-p5797-s2", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1277", "text": "The limit includes streams that have been closed as well as those that are open. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.11-p5798-s1", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1278", "text": "19.12.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.11-p5799-s2", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1278", "text": "DATA_BLOCKED Frames A sender SHOULD send a DATA_BLOCKED frame (type=0x14) when it wishes to send data but is unable to do so due to connection-level flow control; see Section 4 .", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.11-p5800-s3", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1278", "text": "DATA_BLOCKED frames can be used as input to tuning of flow control algorithms; see Section 4.2 . ¶ DATA_BLOCKED frames are formatted as shown in Figure 36 . ¶ DATA_BLOCKED Frame { Type (i) = 0x14, Maximum Data (i), } Figure 36 :", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.11-p5801-s4", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1278", "text": "DATA_BLOCKED Frame Format DATA_BLOCKED frames contain the following field: ¶ Maximum Data:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.11-p5802-s5", "section": "19.11", "anchor": "#name-max_streams-frames", "para_id": "19.11-p1278", "text": "A variable-length integer indicating the connection-level limit at which blocking occurred. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.12-p5803-s1", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1279", "text": "A sender SHOULD send a DATA_BLOCKED frame (type=0x14) when it wishes to send data but is unable to do so due to connection-level flow control; see Section 4 .", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.12-p5804-s2", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1279", "text": "DATA_BLOCKED frames can be used as input to tuning of flow control algorithms; see Section 4.2 . ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.12-p5805-s1", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1280", "text": "DATA_BLOCKED frames are formatted as shown in Figure 36 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.12-p5806-s1", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1281", "text": "DATA_BLOCKED Frame { Type (i) = 0x14, Maximum Data (i), } Figure 36 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.12-p5807-s2", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1281", "text": "DATA_BLOCKED Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.12-p5808-s1", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1282", "text": "DATA_BLOCKED Frame { Type (i) = 0x14, Maximum Data (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.12-p5809-s1", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1283", "text": "DATA_BLOCKED Frame { Type (i) = 0x14, Maximum Data (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.12-p5810-s1", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1284", "text": "Figure 36 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.12-p5811-s2", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1284", "text": "DATA_BLOCKED Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.12-p5812-s1", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1285", "text": "DATA_BLOCKED frames contain the following field: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.12-p5813-s1", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1286", "text": "A variable-length integer indicating the connection-level limit at which blocking occurred. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.12-p5814-s1", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1287", "text": "19.13.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.12-p5815-s2", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1287", "text": "STREAM_DATA_BLOCKED Frames A sender SHOULD send a STREAM_DATA_BLOCKED frame (type=0x15) when it wishes to send data but is unable to do so due to stream-level flow control.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.12-p5816-s3", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1287", "text": "This frame is analogous to DATA_BLOCKED ( Section 19.12 ). ¶ An endpoint that receives a STREAM_DATA_BLOCKED frame for a send-only stream MUST terminate the connection with error STREAM_STATE_ERROR. ¶ STREAM_DATA_BLOCKED frames are formatted as shown in Figure 37 . ¶ STREAM_DATA_BLOCKED Frame { Type (i) = 0x15, Stream ID (i), Maximum Stream Data (i), } Figure 37 :", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["DATA_BLOCKED", "STREAM_DATA_BLOCKED"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.12-p5817-s4", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1287", "text": "STREAM_DATA_BLOCKED Frame Format STREAM_DATA_BLOCKED frames contain the following fields: ¶ Stream ID:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.12-p5818-s5", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1287", "text": "A variable-length integer indicating the stream that is blocked due to flow control. ¶ Maximum Stream Data:", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.12-p5819-s6", "section": "19.12", "anchor": "#name-data_blocked-frames", "para_id": "19.12-p1287", "text": "A variable-length integer indicating the offset of the stream at which the blocking occurred. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.13-p5820-s1", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1288", "text": "A sender SHOULD send a STREAM_DATA_BLOCKED frame (type=0x15) when it wishes to send data but is unable to do so due to stream-level flow control.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.13-p5821-s2", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1288", "text": "This frame is analogous to DATA_BLOCKED ( Section 19.12 ). ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.13-p5822-s1", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1289", "text": "An endpoint that receives a STREAM_DATA_BLOCKED frame for a send-only stream MUST terminate the connection with error STREAM_STATE_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.13-p5823-s1", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1290", "text": "STREAM_DATA_BLOCKED frames are formatted as shown in Figure 37 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.13-p5824-s1", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1291", "text": "STREAM_DATA_BLOCKED Frame { Type (i) = 0x15, Stream ID (i), Maximum Stream Data (i), } Figure 37 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.13-p5825-s2", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1291", "text": "STREAM_DATA_BLOCKED Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.13-p5826-s1", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1292", "text": "STREAM_DATA_BLOCKED Frame { Type (i) = 0x15, Stream ID (i), Maximum Stream Data (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.13-p5827-s1", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1293", "text": "STREAM_DATA_BLOCKED Frame { Type (i) = 0x15, Stream ID (i), Maximum Stream Data (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.13-p5828-s1", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1294", "text": "Figure 37 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.13-p5829-s2", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1294", "text": "STREAM_DATA_BLOCKED Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.13-p5830-s1", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1295", "text": "STREAM_DATA_BLOCKED frames contain the following fields: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM_DATA_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.13-p5831-s1", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1296", "text": "A variable-length integer indicating the stream that is blocked due to flow control. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.13-p5832-s1", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1297", "text": "A variable-length integer indicating the offset of the stream at which the blocking occurred. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.13-p5833-s1", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1298", "text": "19.14.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.13-p5834-s2", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1298", "text": "STREAMS_BLOCKED Frames A sender SHOULD send a STREAMS_BLOCKED frame (type=0x16 or 0x17) when it wishes to open a stream but is unable to do so due to the maximum stream limit set by its peer; see Section 19.11 .", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": ["peer", "sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.13-p5835-s3", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1298", "text": "A STREAMS_BLOCKED frame of type 0x16 is used to indicate reaching the bidirectional stream limit, and a STREAMS_BLOCKED frame of type 0x17 is used to indicate reaching the unidirectional stream limit. ¶ A STREAMS_BLOCKED frame does not open the stream, but informs the peer that a new stream was needed and the stream limit prevented the creation of the stream. ¶ STREAMS_BLOCKED frames are formatted as shown in Figure 38 . ¶ STREAMS_BLOCKED Frame { Type (i) = 0x16..0x17, Maximum Streams (i), } Figure 38 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.13-p5836-s4", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1298", "text": "STREAMS_BLOCKED Frame Format STREAMS_BLOCKED frames contain the following field: ¶ Maximum Streams:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.13-p5837-s5", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1298", "text": "A variable-length integer indicating the maximum number of streams allowed at the time the frame was sent.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.13-p5838-s6", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1298", "text": "This value cannot exceed 2 60 , as it is not possible to encode stream IDs larger than 2 62 -1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.13-p5839-s7", "section": "19.13", "anchor": "#name-stream_data_blocked-frames", "para_id": "19.13-p1298", "text": "Receipt of a frame that encodes a larger stream ID MUST be treated as a connection error of type STREAM_LIMIT_ERROR or FRAME_ENCODING_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5840-s1", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1299", "text": "A sender SHOULD send a STREAMS_BLOCKED frame (type=0x16 or 0x17) when it wishes to open a stream but is unable to do so due to the maximum stream limit set by its peer; see Section 19.11 .", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": ["peer", "sender"], "errors": []}, "event_cue": true, "score": 6}
{"sent_id": "19.14-p5841-s2", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1299", "text": "A STREAMS_BLOCKED frame of type 0x16 is used to indicate reaching the bidirectional stream limit, and a STREAMS_BLOCKED frame of type 0x17 is used to indicate reaching the unidirectional stream limit. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5842-s1", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1300", "text": "A STREAMS_BLOCKED frame does not open the stream, but informs the peer that a new stream was needed and the stream limit prevented the creation of the stream. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5843-s1", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1301", "text": "STREAMS_BLOCKED frames are formatted as shown in Figure 38 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5844-s1", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1302", "text": "STREAMS_BLOCKED Frame { Type (i) = 0x16..0x17, Maximum Streams (i), } Figure 38 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5845-s2", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1302", "text": "STREAMS_BLOCKED Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5846-s1", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1303", "text": "STREAMS_BLOCKED Frame { Type (i) = 0x16..0x17, Maximum Streams (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5847-s1", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1304", "text": "STREAMS_BLOCKED Frame { Type (i) = 0x16..0x17, Maximum Streams (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5848-s1", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1305", "text": "Figure 38 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.14-p5849-s2", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1305", "text": "STREAMS_BLOCKED Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5850-s1", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1306", "text": "STREAMS_BLOCKED frames contain the following field: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAMS_BLOCKED"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5851-s1", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1307", "text": "A variable-length integer indicating the maximum number of streams allowed at the time the frame was sent.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.14-p5852-s2", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1307", "text": "This value cannot exceed 2 60 , as it is not possible to encode stream IDs larger than 2 62 -1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.14-p5853-s3", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1307", "text": "Receipt of a frame that encodes a larger stream ID MUST be treated as a connection error of type STREAM_LIMIT_ERROR or FRAME_ENCODING_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5854-s1", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "19.15.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.14-p5855-s2", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "NEW_CONNECTION_ID Frames An endpoint sends a NEW_CONNECTION_ID frame (type=0x18) to provide its peer with alternative connection IDs that can be used to break linkability when migrating connections; see Section 9.5 . ¶ NEW_CONNECTION_ID frames are formatted as shown in Figure 39 . ¶ NEW_CONNECTION_ID Frame { Type (i) = 0x18, Sequence Number (i), Retire Prior To (i), Length (8), Connection ID (8..160), Stateless Reset Token (128), } Figure 39 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.14-p5856-s3", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "NEW_CONNECTION_ID Frame Format NEW_CONNECTION_ID frames contain the following fields: ¶ Sequence Number:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.14-p5857-s4", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "The sequence number assigned to the connection ID by the sender, encoded as a variable-length integer; see Section 5.1.1 . ¶ Retire Prior To:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.14-p5858-s5", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "A variable-length integer indicating which connection IDs should be retired; see Section 5.1.2 . ¶ Length:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.14-p5859-s6", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "An 8-bit unsigned integer containing the length of the connection ID.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.14-p5860-s7", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "Values less than 1 and greater than 20 are invalid and MUST be treated as a connection error of type FRAME_ENCODING_ERROR. ¶ Connection ID:", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5861-s8", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "A connection ID of the specified length. ¶ Stateless Reset Token:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.14-p5862-s9", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "A 128-bit value that will be used for a stateless reset when the associated connection ID is used; see Section 10.3 . ¶ An endpoint MUST NOT send this frame if it currently requires that its peer send packets with a zero-length Destination Connection ID.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.14-p5863-s10", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "Changing the length of a connection ID to or from zero length makes it difficult to identify when the value of the connection ID changed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.14-p5864-s11", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "An endpoint that is sending packets with a zero-length Destination Connection ID MUST treat receipt of a NEW_CONNECTION_ID frame as a connection error of type PROTOCOL_VIOLATION. ¶ Transmission errors, timeouts, and retransmissions might cause the same NEW_CONNECTION_ID frame to be received multiple times.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.14-p5865-s12", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "Receipt of the same frame multiple times MUST NOT be treated as a connection error.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5866-s13", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "A receiver can use the sequence number supplied in the NEW_CONNECTION_ID frame to handle receiving the same NEW_CONNECTION_ID frame multiple times. ¶ If an endpoint receives a NEW_CONNECTION_ID frame that repeats a previously issued connection ID with a different Stateless Reset Token field value or a different Sequence Number field value, or if a sequence number is used for different connection IDs, the endpoint MAY treat that receipt as a connection error of type PROTOCOL_VIOLATION. ¶ The Retire Prior To field applies to connection IDs established during connection setup and the preferred_address transport parameter; see Section 5.1.2 .", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.14-p5867-s14", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "The value in the Retire Prior To field MUST be less than or equal to the value in the Sequence Number field.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5868-s15", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "Receiving a value in the Retire Prior To field that is greater than that in the Sequence Number field MUST be treated as a connection error of type FRAME_ENCODING_ERROR. ¶ Once a sender indicates a Retire Prior To value, smaller values sent in subsequent NEW_CONNECTION_ID frames have no effect.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.14-p5869-s16", "section": "19.14", "anchor": "#name-streams_blocked-frames", "para_id": "19.14-p1308", "text": "A receiver MUST ignore any Retire Prior To fields that do not increase the largest received Retire Prior To value. ¶ An endpoint that receives a NEW_CONNECTION_ID frame with a sequence number smaller than the Retire Prior To field of a previously received NEW_CONNECTION_ID frame MUST send a corresponding RETIRE_CONNECTION_ID frame that retires the newly received connection ID, unless it has already done so for that sequence number. ¶", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.15-p5870-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1309", "text": "An endpoint sends a NEW_CONNECTION_ID frame (type=0x18) to provide its peer with alternative connection IDs that can be used to break linkability when migrating connections; see Section 9.5 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.15-p5871-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1310", "text": "NEW_CONNECTION_ID frames are formatted as shown in Figure 39 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5872-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1311", "text": "NEW_CONNECTION_ID Frame { Type (i) = 0x18, Sequence Number (i), Retire Prior To (i), Length (8), Connection ID (8..160), Stateless Reset Token (128), } Figure 39 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5873-s2", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1311", "text": "NEW_CONNECTION_ID Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5874-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1312", "text": "NEW_CONNECTION_ID Frame { Type (i) = 0x18, Sequence Number (i), Retire Prior To (i), Length (8), Connection ID (8..160), Stateless Reset Token (128), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5875-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1313", "text": "NEW_CONNECTION_ID Frame { Type (i) = 0x18, Sequence Number (i), Retire Prior To (i), Length (8), Connection ID (8..160), Stateless Reset Token (128), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5876-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1314", "text": "Figure 39 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5877-s2", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1314", "text": "NEW_CONNECTION_ID Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5878-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1315", "text": "NEW_CONNECTION_ID frames contain the following fields: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5879-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1316", "text": "The sequence number assigned to the connection ID by the sender, encoded as a variable-length integer; see Section 5.1.1 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5880-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1317", "text": "A variable-length integer indicating which connection IDs should be retired; see Section 5.1.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5881-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1318", "text": "An 8-bit unsigned integer containing the length of the connection ID.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5882-s2", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1318", "text": "Values less than 1 and greater than 20 are invalid and MUST be treated as a connection error of type FRAME_ENCODING_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.15-p5883-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1319", "text": "A connection ID of the specified length. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5884-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1320", "text": "A 128-bit value that will be used for a stateless reset when the associated connection ID is used; see Section 10.3 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.15-p5885-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1321", "text": "An endpoint MUST NOT send this frame if it currently requires that its peer send packets with a zero-length Destination Connection ID.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.15-p5886-s2", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1321", "text": "Changing the length of a connection ID to or from zero length makes it difficult to identify when the value of the connection ID changed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.15-p5887-s3", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1321", "text": "An endpoint that is sending packets with a zero-length Destination Connection ID MUST treat receipt of a NEW_CONNECTION_ID frame as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.15-p5888-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1322", "text": "Transmission errors, timeouts, and retransmissions might cause the same NEW_CONNECTION_ID frame to be received multiple times.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.15-p5889-s2", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1322", "text": "Receipt of the same frame multiple times MUST NOT be treated as a connection error.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.15-p5890-s3", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1322", "text": "A receiver can use the sequence number supplied in the NEW_CONNECTION_ID frame to handle receiving the same NEW_CONNECTION_ID frame multiple times. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5891-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1323", "text": "If an endpoint receives a NEW_CONNECTION_ID frame that repeats a previously issued connection ID with a different Stateless Reset Token field value or a different Sequence Number field value, or if a sequence number is used for different connection IDs, the endpoint MAY treat that receipt as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.15-p5892-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1324", "text": "The Retire Prior To field applies to connection IDs established during connection setup and the preferred_address transport parameter; see Section 5.1.2 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5893-s2", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1324", "text": "The value in the Retire Prior To field MUST be less than or equal to the value in the Sequence Number field.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.15-p5894-s3", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1324", "text": "Receiving a value in the Retire Prior To field that is greater than that in the Sequence Number field MUST be treated as a connection error of type FRAME_ENCODING_ERROR. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.15-p5895-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1325", "text": "Once a sender indicates a Retire Prior To value, smaller values sent in subsequent NEW_CONNECTION_ID frames have no effect.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5896-s2", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1325", "text": "A receiver MUST ignore any Retire Prior To fields that do not increase the largest received Retire Prior To value. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.15-p5897-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1326", "text": "An endpoint that receives a NEW_CONNECTION_ID frame with a sequence number smaller than the Retire Prior To field of a previously received NEW_CONNECTION_ID frame MUST send a corresponding RETIRE_CONNECTION_ID frame that retires the newly received connection ID, unless it has already done so for that sequence number. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.15-p5898-s1", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1327", "text": "19.16.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5899-s2", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1327", "text": "RETIRE_CONNECTION_ID Frames An endpoint sends a RETIRE_CONNECTION_ID frame (type=0x19) to indicate that it will no longer use a connection ID that was issued by its peer.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.15-p5900-s3", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1327", "text": "This includes the connection ID provided during the handshake.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5901-s4", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1327", "text": "Sending a RETIRE_CONNECTION_ID frame also serves as a request to the peer to send additional connection IDs for future use; see Section 5.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.15-p5902-s5", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1327", "text": "New connection IDs can be delivered to a peer using the NEW_CONNECTION_ID frame ( Section 19.15 ). ¶ Retiring a connection ID invalidates the stateless reset token associated with that connection ID. ¶ RETIRE_CONNECTION_ID frames are formatted as shown in Figure 40 . ¶ RETIRE_CONNECTION_ID Frame { Type (i) = 0x19, Sequence Number (i), } Figure 40 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5903-s6", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1327", "text": "RETIRE_CONNECTION_ID Frame Format RETIRE_CONNECTION_ID frames contain the following field: ¶ Sequence Number:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.15-p5904-s7", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1327", "text": "The sequence number of the connection ID being retired; see Section 5.1.2 . ¶ Receipt of a RETIRE_CONNECTION_ID frame containing a sequence number greater than any previously sent to the peer MUST be treated as a connection error of type PROTOCOL_VIOLATION. ¶ The sequence number specified in a RETIRE_CONNECTION_ID frame MUST NOT refer to the Destination Connection ID field of the packet in which the frame is contained.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.15-p5905-s8", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1327", "text": "The peer MAY treat this as a connection error of type PROTOCOL_VIOLATION. ¶ An endpoint cannot send this frame if it was provided with a zero-length connection ID by its peer.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.15-p5906-s9", "section": "19.15", "anchor": "#name-new_connection_id-frames", "para_id": "19.15-p1327", "text": "An endpoint that provides a zero-length connection ID MUST treat receipt of a RETIRE_CONNECTION_ID frame as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.16-p5907-s1", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1328", "text": "An endpoint sends a RETIRE_CONNECTION_ID frame (type=0x19) to indicate that it will no longer use a connection ID that was issued by its peer.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.16-p5908-s2", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1328", "text": "This includes the connection ID provided during the handshake.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5909-s3", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1328", "text": "Sending a RETIRE_CONNECTION_ID frame also serves as a request to the peer to send additional connection IDs for future use; see Section 5.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.16-p5910-s4", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1328", "text": "New connection IDs can be delivered to a peer using the NEW_CONNECTION_ID frame ( Section 19.15 ). ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5911-s1", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1329", "text": "Retiring a connection ID invalidates the stateless reset token associated with that connection ID. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5912-s1", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1330", "text": "RETIRE_CONNECTION_ID frames are formatted as shown in Figure 40 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5913-s1", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1331", "text": "RETIRE_CONNECTION_ID Frame { Type (i) = 0x19, Sequence Number (i), } Figure 40 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5914-s2", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1331", "text": "RETIRE_CONNECTION_ID Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5915-s1", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1332", "text": "RETIRE_CONNECTION_ID Frame { Type (i) = 0x19, Sequence Number (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5916-s1", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1333", "text": "RETIRE_CONNECTION_ID Frame { Type (i) = 0x19, Sequence Number (i), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5917-s1", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1334", "text": "Figure 40 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5918-s2", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1334", "text": "RETIRE_CONNECTION_ID Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5919-s1", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1335", "text": "RETIRE_CONNECTION_ID frames contain the following field: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5920-s1", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1336", "text": "The sequence number of the connection ID being retired; see Section 5.1.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5921-s1", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1337", "text": "Receipt of a RETIRE_CONNECTION_ID frame containing a sequence number greater than any previously sent to the peer MUST be treated as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.16-p5922-s1", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1338", "text": "The sequence number specified in a RETIRE_CONNECTION_ID frame MUST NOT refer to the Destination Connection ID field of the packet in which the frame is contained.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.16-p5923-s2", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1338", "text": "The peer MAY treat this as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.16-p5924-s1", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1339", "text": "An endpoint cannot send this frame if it was provided with a zero-length connection ID by its peer.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.16-p5925-s2", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1339", "text": "An endpoint that provides a zero-length connection ID MUST treat receipt of a RETIRE_CONNECTION_ID frame as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.16-p5926-s1", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1340", "text": "19.17.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5927-s2", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1340", "text": "PATH_CHALLENGE Frames Endpoints can use PATH_CHALLENGE frames (type=0x1a) to check reachability to the peer and for path validation during connection migration. ¶ PATH_CHALLENGE frames are formatted as shown in Figure 41 . ¶ PATH_CHALLENGE Frame { Type (i) = 0x1a, Data (64), } Figure 41 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5928-s3", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1340", "text": "PATH_CHALLENGE Frame Format PATH_CHALLENGE frames contain the following field: ¶ Data:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.16-p5929-s4", "section": "19.16", "anchor": "#name-retire_connection_id-frames", "para_id": "19.16-p1340", "text": "This 8-byte field contains arbitrary data. ¶ Including 64 bits of entropy in a PATH_CHALLENGE frame ensures that it is easier to receive the packet than it is to guess the value correctly. ¶ The recipient of this frame MUST generate a PATH_RESPONSE frame ( Section 19.18 ) containing the same Data value. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.17-p5930-s1", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1341", "text": "Endpoints can use PATH_CHALLENGE frames (type=0x1a) to check reachability to the peer and for path validation during connection migration. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.17-p5931-s1", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1342", "text": "PATH_CHALLENGE frames are formatted as shown in Figure 41 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.17-p5932-s1", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1343", "text": "PATH_CHALLENGE Frame { Type (i) = 0x1a, Data (64), } Figure 41 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.17-p5933-s2", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1343", "text": "PATH_CHALLENGE Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.17-p5934-s1", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1344", "text": "PATH_CHALLENGE Frame { Type (i) = 0x1a, Data (64), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.17-p5935-s1", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1345", "text": "PATH_CHALLENGE Frame { Type (i) = 0x1a, Data (64), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.17-p5936-s1", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1346", "text": "Figure 41 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.17-p5937-s2", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1346", "text": "PATH_CHALLENGE Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.17-p5938-s1", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1347", "text": "PATH_CHALLENGE frames contain the following field: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.17-p5939-s1", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1348", "text": "This 8-byte field contains arbitrary data. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.17-p5940-s1", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1349", "text": "Including 64 bits of entropy in a PATH_CHALLENGE frame ensures that it is easier to receive the packet than it is to guess the value correctly. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.17-p5941-s1", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1350", "text": "The recipient of this frame MUST generate a PATH_RESPONSE frame ( Section 19.18 ) containing the same Data value. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.17-p5942-s1", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1351", "text": "19.18.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.17-p5943-s2", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1351", "text": "PATH_RESPONSE Frames A PATH_RESPONSE frame (type=0x1b) is sent in response to a PATH_CHALLENGE frame. ¶ PATH_RESPONSE frames are formatted as shown in Figure 42 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.17-p5944-s3", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1351", "text": "The format of a PATH_RESPONSE frame is identical to that of the PATH_CHALLENGE frame; see Section 19.17 . ¶ PATH_RESPONSE Frame { Type (i) = 0x1b, Data (64), } Figure 42 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.17-p5945-s4", "section": "19.17", "anchor": "#name-path_challenge-frames", "para_id": "19.17-p1351", "text": "PATH_RESPONSE Frame Format If the content of a PATH_RESPONSE frame does not match the content of a PATH_CHALLENGE frame previously sent by the endpoint, the endpoint MAY generate a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.18-p5946-s1", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1352", "text": "A PATH_RESPONSE frame (type=0x1b) is sent in response to a PATH_CHALLENGE frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5947-s1", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1353", "text": "PATH_RESPONSE frames are formatted as shown in Figure 42 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5948-s2", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1353", "text": "The format of a PATH_RESPONSE frame is identical to that of the PATH_CHALLENGE frame; see Section 19.17 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5949-s1", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1354", "text": "PATH_RESPONSE Frame { Type (i) = 0x1b, Data (64), } Figure 42 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5950-s2", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1354", "text": "PATH_RESPONSE Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5951-s1", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1355", "text": "PATH_RESPONSE Frame { Type (i) = 0x1b, Data (64), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5952-s1", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1356", "text": "PATH_RESPONSE Frame { Type (i) = 0x1b, Data (64), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5953-s1", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1357", "text": "Figure 42 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5954-s2", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1357", "text": "PATH_RESPONSE Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5955-s1", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1358", "text": "If the content of a PATH_RESPONSE frame does not match the content of a PATH_CHALLENGE frame previously sent by the endpoint, the endpoint MAY generate a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.18-p5956-s1", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "19.19.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5957-s2", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "CONNECTION_CLOSE Frames An endpoint sends a CONNECTION_CLOSE frame (type=0x1c or 0x1d) to notify its peer that the connection is being closed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.18-p5958-s3", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "The CONNECTION_CLOSE frame with a type of 0x1c is used to signal errors at only the QUIC layer, or the absence of errors (with the NO_ERROR code).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5959-s4", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "The CONNECTION_CLOSE frame with a type of 0x1d is used to signal an error with the application that uses QUIC. ¶ If there are open streams that have not been explicitly closed, they are implicitly closed when the connection is closed. ¶ CONNECTION_CLOSE frames are formatted as shown in Figure 43 . ¶ CONNECTION_CLOSE Frame { Type (i) = 0x1c..0x1d, Error Code (i), [Frame Type (i)], Reason Phrase Length (i), Reason Phrase (..), } Figure 43 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.18-p5960-s5", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "CONNECTION_CLOSE Frame Format CONNECTION_CLOSE frames contain the following fields: ¶ Error Code:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5961-s6", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "A variable-length integer that indicates the reason for closing this connection.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5962-s7", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "A CONNECTION_CLOSE frame of type 0x1c uses codes from the space defined in Section 20.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5963-s8", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "A CONNECTION_CLOSE frame of type 0x1d uses codes defined by the application protocol; see Section 20.2 . ¶ Frame Type:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5964-s9", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "A variable-length integer encoding the type of frame that triggered the error.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5965-s10", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "A value of 0 (equivalent to the mention of the PADDING frame) is used when the frame type is unknown.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.18-p5966-s11", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "The application-specific variant of CONNECTION_CLOSE (type 0x1d) does not include this field. ¶ Reason Phrase Length:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5967-s12", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "A variable-length integer specifying the length of the reason phrase in bytes.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5968-s13", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "Because a CONNECTION_CLOSE frame cannot be split between packets, any limits on packet size will also limit the space available for a reason phrase. ¶ Reason Phrase:", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5969-s14", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "Additional diagnostic information for the closure.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.18-p5970-s15", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "This can be zero length if the sender chooses not to give details beyond the Error Code value.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.18-p5971-s16", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "This SHOULD be a UTF-8 encoded string [ RFC3629 ] , though the frame does not carry information, such as language tags, that would aid comprehension by any entity other than the one that created the text. ¶ The application-specific variant of CONNECTION_CLOSE (type 0x1d) can only be sent using 0-RTT or 1-RTT packets; see Section 12.5 .", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.18-p5972-s17", "section": "19.18", "anchor": "#name-path_response-frames", "para_id": "19.18-p1359", "text": "When an application wishes to abandon a connection during the handshake, an endpoint can send a CONNECTION_CLOSE frame (type 0x1c) with an error code of APPLICATION_ERROR in an Initial or Handshake packet. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.19-p5973-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1360", "text": "An endpoint sends a CONNECTION_CLOSE frame (type=0x1c or 0x1d) to notify its peer that the connection is being closed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.19-p5974-s2", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1360", "text": "The CONNECTION_CLOSE frame with a type of 0x1c is used to signal errors at only the QUIC layer, or the absence of errors (with the NO_ERROR code).", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5975-s3", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1360", "text": "The CONNECTION_CLOSE frame with a type of 0x1d is used to signal an error with the application that uses QUIC. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5976-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1361", "text": "If there are open streams that have not been explicitly closed, they are implicitly closed when the connection is closed. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.19-p5977-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1362", "text": "CONNECTION_CLOSE frames are formatted as shown in Figure 43 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5978-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1363", "text": "CONNECTION_CLOSE Frame { Type (i) = 0x1c..0x1d, Error Code (i), [Frame Type (i)], Reason Phrase Length (i), Reason Phrase (..), } Figure 43 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5979-s2", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1363", "text": "CONNECTION_CLOSE Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5980-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1364", "text": "CONNECTION_CLOSE Frame { Type (i) = 0x1c..0x1d, Error Code (i), [Frame Type (i)], Reason Phrase Length (i), Reason Phrase (..), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5981-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1365", "text": "CONNECTION_CLOSE Frame { Type (i) = 0x1c..0x1d, Error Code (i), [Frame Type (i)], Reason Phrase Length (i), Reason Phrase (..), }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5982-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1366", "text": "Figure 43 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5983-s2", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1366", "text": "CONNECTION_CLOSE Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5984-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1367", "text": "CONNECTION_CLOSE frames contain the following fields: ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5985-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1368", "text": "A variable-length integer that indicates the reason for closing this connection.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5986-s2", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1368", "text": "A CONNECTION_CLOSE frame of type 0x1c uses codes from the space defined in Section 20.1 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5987-s3", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1368", "text": "A CONNECTION_CLOSE frame of type 0x1d uses codes defined by the application protocol; see Section 20.2 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5988-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1369", "text": "A variable-length integer encoding the type of frame that triggered the error.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5989-s2", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1369", "text": "A value of 0 (equivalent to the mention of the PADDING frame) is used when the frame type is unknown.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.19-p5990-s3", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1369", "text": "The application-specific variant of CONNECTION_CLOSE (type 0x1d) does not include this field. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5991-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1370", "text": "A variable-length integer specifying the length of the reason phrase in bytes.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5992-s2", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1370", "text": "Because a CONNECTION_CLOSE frame cannot be split between packets, any limits on packet size will also limit the space available for a reason phrase. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5993-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1371", "text": "Additional diagnostic information for the closure.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5994-s2", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1371", "text": "This can be zero length if the sender chooses not to give details beyond the Error Code value.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.19-p5995-s3", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1371", "text": "This SHOULD be a UTF-8 encoded string [ RFC3629 ] , though the frame does not carry information, such as language tags, that would aid comprehension by any entity other than the one that created the text. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.19-p5996-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1372", "text": "The application-specific variant of CONNECTION_CLOSE (type 0x1d) can only be sent using 0-RTT or 1-RTT packets; see Section 12.5 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5997-s2", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1372", "text": "When an application wishes to abandon a connection during the handshake, an endpoint can send a CONNECTION_CLOSE frame (type 0x1c) with an error code of APPLICATION_ERROR in an Initial or Handshake packet. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.19-p5998-s1", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1373", "text": "19.20.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p5999-s2", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1373", "text": "HANDSHAKE_DONE Frames The server uses a HANDSHAKE_DONE frame (type=0x1e) to signal confirmation of the handshake to the client. ¶ HANDSHAKE_DONE frames are formatted as shown in Figure 44 , which shows that HANDSHAKE_DONE frames have no content. ¶ HANDSHAKE_DONE Frame { Type (i) = 0x1e, } Figure 44 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p6000-s3", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1373", "text": "HANDSHAKE_DONE Frame Format A HANDSHAKE_DONE frame can only be sent by the server.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.19-p6001-s4", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1373", "text": "Servers MUST NOT send a HANDSHAKE_DONE frame before completing the handshake.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.19-p6002-s5", "section": "19.19", "anchor": "#name-connection_close-frames", "para_id": "19.19-p1373", "text": "A server MUST treat receipt of a HANDSHAKE_DONE frame as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.20-p6003-s1", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1374", "text": "The server uses a HANDSHAKE_DONE frame (type=0x1e) to signal confirmation of the handshake to the client. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.20-p6004-s1", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1375", "text": "HANDSHAKE_DONE frames are formatted as shown in Figure 44 , which shows that HANDSHAKE_DONE frames have no content. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.20-p6005-s1", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1376", "text": "HANDSHAKE_DONE Frame { Type (i) = 0x1e, } Figure 44 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.20-p6006-s2", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1376", "text": "HANDSHAKE_DONE Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.20-p6007-s1", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1377", "text": "HANDSHAKE_DONE Frame { Type (i) = 0x1e, }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.20-p6008-s1", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1378", "text": "HANDSHAKE_DONE Frame { Type (i) = 0x1e, }", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.20-p6009-s1", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1379", "text": "Figure 44 :", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.20-p6010-s2", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1379", "text": "HANDSHAKE_DONE Frame Format", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.20-p6011-s1", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1380", "text": "A HANDSHAKE_DONE frame can only be sent by the server.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.20-p6012-s2", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1380", "text": "Servers MUST NOT send a HANDSHAKE_DONE frame before completing the handshake.", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.20-p6013-s3", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1380", "text": "A server MUST treat receipt of a HANDSHAKE_DONE frame as a connection error of type PROTOCOL_VIOLATION. ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.20-p6014-s1", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1381", "text": "19.21.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.20-p6015-s2", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1381", "text": "Extension Frames QUIC frames do not use a self-describing encoding.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.20-p6016-s3", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1381", "text": "An endpoint therefore needs to understand the syntax of all frames before it can successfully process a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.20-p6017-s4", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1381", "text": "This allows for efficient encoding of frames, but it means that an endpoint cannot send a frame of a type that is unknown to its peer. ¶ An extension to QUIC that wishes to use a new type of frame MUST first ensure that a peer is able to understand the frame.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.20-p6018-s5", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1381", "text": "An endpoint can use a transport parameter to signal its willingness to receive extension frame types.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.20-p6019-s6", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1381", "text": "One transport parameter can indicate support for one or more extension frame types. ¶ Extensions that modify or replace core protocol functionality (including frame types) will be difficult to combine with other extensions that modify or replace the same functionality unless the behavior of the combination is explicitly defined.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.20-p6020-s7", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1381", "text": "Such extensions SHOULD define their interaction with previously defined extensions modifying the same protocol components. ¶ Extension frames MUST be congestion controlled and MUST cause an ACK frame to be sent.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.20-p6021-s8", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1381", "text": "The exception is extension frames that replace or supplement the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.20-p6022-s9", "section": "19.20", "anchor": "#name-handshake_done-frames", "para_id": "19.20-p1381", "text": "Extension frames are not included in flow control unless specified in the extension. ¶ An IANA registry is used to manage the assignment of frame types; see Section 22.4 . ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6023-s1", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1382", "text": "QUIC frames do not use a self-describing encoding.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6024-s2", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1382", "text": "An endpoint therefore needs to understand the syntax of all frames before it can successfully process a packet.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6025-s3", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1382", "text": "This allows for efficient encoding of frames, but it means that an endpoint cannot send a frame of a type that is unknown to its peer. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.21-p6026-s1", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1383", "text": "An extension to QUIC that wishes to use a new type of frame MUST first ensure that a peer is able to understand the frame.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.21-p6027-s2", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1383", "text": "An endpoint can use a transport parameter to signal its willingness to receive extension frame types.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.21-p6028-s3", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1383", "text": "One transport parameter can indicate support for one or more extension frame types. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6029-s1", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1384", "text": "Extensions that modify or replace core protocol functionality (including frame types) will be difficult to combine with other extensions that modify or replace the same functionality unless the behavior of the combination is explicitly defined.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6030-s2", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1384", "text": "Such extensions SHOULD define their interaction with previously defined extensions modifying the same protocol components. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "19.21-p6031-s1", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1385", "text": "Extension frames MUST be congestion controlled and MUST cause an ACK frame to be sent.", "facet": "frames", "normative": true, "modalities": ["MUST", "MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.21-p6032-s2", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1385", "text": "The exception is extension frames that replace or supplement the ACK frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.21-p6033-s3", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1385", "text": "Extension frames are not included in flow control unless specified in the extension. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6034-s1", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1386", "text": "An IANA registry is used to manage the assignment of frame types; see Section 22.4 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6035-s1", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "20.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6036-s2", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "Error Codes QUIC transport error codes and application error codes are 62-bit unsigned integers. ¶ 20.1.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6037-s3", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "Transport Error Codes This section lists the defined QUIC transport error codes that can be used in a CONNECTION_CLOSE frame with a type of 0x1c.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6038-s4", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "These errors apply to the entire connection. ¶ NO_ERROR (0x00):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6039-s5", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "An endpoint uses this with CONNECTION_CLOSE to signal that the connection is being closed abruptly in the absence of any error. ¶ INTERNAL_ERROR (0x01):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6040-s6", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "The endpoint encountered an internal error and cannot continue with the connection. ¶ CONNECTION_REFUSED (0x02):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6041-s7", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "The server refused to accept a new connection. ¶ FLOW_CONTROL_ERROR (0x03):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6042-s8", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "An endpoint received more data than it permitted in its advertised data limits; see Section 4 . ¶ STREAM_LIMIT_ERROR (0x04):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.21-p6043-s9", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "An endpoint received a frame for a stream identifier that exceeded its advertised stream limit for the corresponding stream type. ¶ STREAM_STATE_ERROR (0x05):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.21-p6044-s10", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "An endpoint received a frame for a stream that was not in a state that permitted that frame; see Section 3 . ¶ FINAL_SIZE_ERROR (0x06):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": ["FINAL_SIZE_ERROR"]}, "event_cue": true, "score": 2}
{"sent_id": "19.21-p6045-s11", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "(1) An endpoint received a STREAM frame containing data that exceeded the previously established final size, (2) an endpoint received a STREAM frame or a RESET_STREAM frame containing a final size that was lower than the size of stream data that was already received, or (3) an endpoint received a STREAM frame or a RESET_STREAM frame containing a different final size to the one already established. ¶ FRAME_ENCODING_ERROR (0x07):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "19.21-p6046-s12", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "An endpoint received a frame that was badly formatted -- for instance, a frame of an unknown type or an ACK frame that has more acknowledgment ranges than the remainder of the packet could carry. ¶ TRANSPORT_PARAMETER_ERROR (0x08):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.21-p6047-s13", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "An endpoint received transport parameters that were badly formatted, included an invalid value, omitted a mandatory transport parameter, included a forbidden transport parameter, or were otherwise in error. ¶ CONNECTION_ID_LIMIT_ERROR (0x09):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.21-p6048-s14", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "The number of connection IDs provided by the peer exceeds the advertised active_connection_id_limit. ¶ PROTOCOL_VIOLATION (0x0a):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6049-s15", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "An endpoint detected an error with protocol compliance that was not covered by more specific error codes. ¶ INVALID_TOKEN (0x0b):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6050-s16", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "A server received a client Initial that contained an invalid Token field. ¶ APPLICATION_ERROR (0x0c):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.21-p6051-s17", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "The application or application protocol caused the connection to be closed. ¶ CRYPTO_BUFFER_EXCEEDED (0x0d):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6052-s18", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "An endpoint has received more data in CRYPTO frames than it can buffer. ¶ KEY_UPDATE_ERROR (0x0e):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.21-p6053-s19", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "An endpoint detected errors in performing key updates; see Section 6 of [ QUIC-TLS ] . ¶ AEAD_LIMIT_REACHED (0x0f):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6054-s20", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "An endpoint has reached the confidentiality or integrity limit for the AEAD algorithm used by the given connection. ¶ NO_VIABLE_PATH (0x10):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6055-s21", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "An endpoint has determined that the network path is incapable of supporting QUIC.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6056-s22", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "An endpoint is unlikely to receive a CONNECTION_CLOSE frame carrying this code except when the path does not support a large enough MTU. ¶ CRYPTO_ERROR (0x0100-0x01ff):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.21-p6057-s23", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "The cryptographic handshake failed.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6058-s24", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "A range of 256 values is reserved for carrying error codes specific to the cryptographic handshake that is used.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6059-s25", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "Codes for errors occurring when TLS is used for the cryptographic handshake are described in Section 4.8 of [ QUIC-TLS ] . ¶ See Section 22.5 for details on registering new error codes. ¶ In defining these error codes, several principles are applied.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "19.21-p6060-s26", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "Error conditions that might require specific action on the part of a recipient are given unique codes.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6061-s27", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "Errors that represent common conditions are given specific codes.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6062-s28", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "Absent either of these conditions, error codes are used to identify a general function of the stack, like flow control or transport parameter handling.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6063-s29", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "Finally, generic errors are provided for conditions where implementations are unable or unwilling to use more specific codes. ¶ 20.2.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6064-s30", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "Application Protocol Error Codes The management of application error codes is left to application protocols.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "19.21-p6065-s31", "section": "19.21", "anchor": "#name-extension-frames", "para_id": "19.21-p1387", "text": "Application protocol error codes are used for the RESET_STREAM frame ( Section 19.4 ), the STOP_SENDING frame ( Section 19.5 ), and the CONNECTION_CLOSE frame with a type of 0x1d ( Section 19.19 ). ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "20-p6066-s1", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1388", "text": "QUIC transport error codes and application error codes are 62-bit unsigned integers. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6067-s1", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "20.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6068-s2", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "Transport Error Codes This section lists the defined QUIC transport error codes that can be used in a CONNECTION_CLOSE frame with a type of 0x1c.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "20-p6069-s3", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "These errors apply to the entire connection. ¶ NO_ERROR (0x00):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6070-s4", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "An endpoint uses this with CONNECTION_CLOSE to signal that the connection is being closed abruptly in the absence of any error. ¶ INTERNAL_ERROR (0x01):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6071-s5", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "The endpoint encountered an internal error and cannot continue with the connection. ¶ CONNECTION_REFUSED (0x02):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6072-s6", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "The server refused to accept a new connection. ¶ FLOW_CONTROL_ERROR (0x03):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": ["FLOW_CONTROL_ERROR"]}, "event_cue": false, "score": 0}
{"sent_id": "20-p6073-s7", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "An endpoint received more data than it permitted in its advertised data limits; see Section 4 . ¶ STREAM_LIMIT_ERROR (0x04):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20-p6074-s8", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "An endpoint received a frame for a stream identifier that exceeded its advertised stream limit for the corresponding stream type. ¶ STREAM_STATE_ERROR (0x05):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20-p6075-s9", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "An endpoint received a frame for a stream that was not in a state that permitted that frame; see Section 3 . ¶ FINAL_SIZE_ERROR (0x06):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": ["FINAL_SIZE_ERROR"]}, "event_cue": true, "score": 2}
{"sent_id": "20-p6076-s10", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "(1) An endpoint received a STREAM frame containing data that exceeded the previously established final size, (2) an endpoint received a STREAM frame or a RESET_STREAM frame containing a final size that was lower than the size of stream data that was already received, or (3) an endpoint received a STREAM frame or a RESET_STREAM frame containing a different final size to the one already established. ¶ FRAME_ENCODING_ERROR (0x07):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "20-p6077-s11", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "An endpoint received a frame that was badly formatted -- for instance, a frame of an unknown type or an ACK frame that has more acknowledgment ranges than the remainder of the packet could carry. ¶ TRANSPORT_PARAMETER_ERROR (0x08):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20-p6078-s12", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "An endpoint received transport parameters that were badly formatted, included an invalid value, omitted a mandatory transport parameter, included a forbidden transport parameter, or were otherwise in error. ¶ CONNECTION_ID_LIMIT_ERROR (0x09):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20-p6079-s13", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "The number of connection IDs provided by the peer exceeds the advertised active_connection_id_limit. ¶ PROTOCOL_VIOLATION (0x0a):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6080-s14", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "An endpoint detected an error with protocol compliance that was not covered by more specific error codes. ¶ INVALID_TOKEN (0x0b):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6081-s15", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "A server received a client Initial that contained an invalid Token field. ¶ APPLICATION_ERROR (0x0c):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20-p6082-s16", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "The application or application protocol caused the connection to be closed. ¶ CRYPTO_BUFFER_EXCEEDED (0x0d):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6083-s17", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "An endpoint has received more data in CRYPTO frames than it can buffer. ¶ KEY_UPDATE_ERROR (0x0e):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20-p6084-s18", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "An endpoint detected errors in performing key updates; see Section 6 of [ QUIC-TLS ] . ¶ AEAD_LIMIT_REACHED (0x0f):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6085-s19", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "An endpoint has reached the confidentiality or integrity limit for the AEAD algorithm used by the given connection. ¶ NO_VIABLE_PATH (0x10):", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6086-s20", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "An endpoint has determined that the network path is incapable of supporting QUIC.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6087-s21", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "An endpoint is unlikely to receive a CONNECTION_CLOSE frame carrying this code except when the path does not support a large enough MTU. ¶ CRYPTO_ERROR (0x0100-0x01ff):", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20-p6088-s22", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "The cryptographic handshake failed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6089-s23", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "A range of 256 values is reserved for carrying error codes specific to the cryptographic handshake that is used.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6090-s24", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "Codes for errors occurring when TLS is used for the cryptographic handshake are described in Section 4.8 of [ QUIC-TLS ] . ¶ See Section 22.5 for details on registering new error codes. ¶ In defining these error codes, several principles are applied.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20-p6091-s25", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "Error conditions that might require specific action on the part of a recipient are given unique codes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6092-s26", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "Errors that represent common conditions are given specific codes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20-p6093-s27", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "Absent either of these conditions, error codes are used to identify a general function of the stack, like flow control or transport parameter handling.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "20-p6094-s28", "section": "20", "anchor": "#name-error-codes", "para_id": "20-p1389", "text": "Finally, generic errors are provided for conditions where implementations are unable or unwilling to use more specific codes. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6095-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1390", "text": "This section lists the defined QUIC transport error codes that can be used in a CONNECTION_CLOSE frame with a type of 0x1c.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "20.1-p6096-s2", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1390", "text": "These errors apply to the entire connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6097-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1391", "text": "An endpoint uses this with CONNECTION_CLOSE to signal that the connection is being closed abruptly in the absence of any error. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6098-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1392", "text": "The endpoint encountered an internal error and cannot continue with the connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6099-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1393", "text": "The server refused to accept a new connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6100-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1394", "text": "An endpoint received more data than it permitted in its advertised data limits; see Section 4 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.1-p6101-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1395", "text": "An endpoint received a frame for a stream identifier that exceeded its advertised stream limit for the corresponding stream type. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.1-p6102-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1396", "text": "An endpoint received a frame for a stream that was not in a state that permitted that frame; see Section 3 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.1-p6103-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1397", "text": "(1) An endpoint received a STREAM frame containing data that exceeded the previously established final size, (2) an endpoint received a STREAM frame or a RESET_STREAM frame containing a final size that was lower than the size of stream data that was already received, or (3) an endpoint received a STREAM frame or a RESET_STREAM frame containing a different final size to the one already established. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STREAM"], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "20.1-p6104-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1398", "text": "An endpoint received a frame that was badly formatted -- for instance, a frame of an unknown type or an ACK frame that has more acknowledgment ranges than the remainder of the packet could carry. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.1-p6105-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1399", "text": "An endpoint received transport parameters that were badly formatted, included an invalid value, omitted a mandatory transport parameter, included a forbidden transport parameter, or were otherwise in error. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.1-p6106-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1400", "text": "The number of connection IDs provided by the peer exceeds the advertised active_connection_id_limit. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6107-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1401", "text": "An endpoint detected an error with protocol compliance that was not covered by more specific error codes. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6108-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1402", "text": "A server received a client Initial that contained an invalid Token field. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.1-p6109-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1403", "text": "The application or application protocol caused the connection to be closed. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6110-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1404", "text": "An endpoint has received more data in CRYPTO frames than it can buffer. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.1-p6111-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1405", "text": "An endpoint detected errors in performing key updates; see Section 6 of [ QUIC-TLS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6112-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1406", "text": "An endpoint has reached the confidentiality or integrity limit for the AEAD algorithm used by the given connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6113-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1407", "text": "An endpoint has determined that the network path is incapable of supporting QUIC.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6114-s2", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1407", "text": "An endpoint is unlikely to receive a CONNECTION_CLOSE frame carrying this code except when the path does not support a large enough MTU. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.1-p6115-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1408", "text": "The cryptographic handshake failed.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6116-s2", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1408", "text": "A range of 256 values is reserved for carrying error codes specific to the cryptographic handshake that is used.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6117-s3", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1408", "text": "Codes for errors occurring when TLS is used for the cryptographic handshake are described in Section 4.8 of [ QUIC-TLS ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.1-p6118-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1409", "text": "See Section 22.5 for details on registering new error codes. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6119-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1410", "text": "In defining these error codes, several principles are applied.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6120-s2", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1410", "text": "Error conditions that might require specific action on the part of a recipient are given unique codes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6121-s3", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1410", "text": "Errors that represent common conditions are given specific codes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6122-s4", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1410", "text": "Absent either of these conditions, error codes are used to identify a general function of the stack, like flow control or transport parameter handling.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "20.1-p6123-s5", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1410", "text": "Finally, generic errors are provided for conditions where implementations are unable or unwilling to use more specific codes. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6124-s1", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1411", "text": "20.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6125-s2", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1411", "text": "Application Protocol Error Codes The management of application error codes is left to application protocols.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.1-p6126-s3", "section": "20.1", "anchor": "#name-transport-error-codes", "para_id": "20.1-p1411", "text": "Application protocol error codes are used for the RESET_STREAM frame ( Section 19.4 ), the STOP_SENDING frame ( Section 19.5 ), and the CONNECTION_CLOSE frame with a type of 0x1d ( Section 19.19 ). ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "20.2-p6127-s1", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1412", "text": "The management of application error codes is left to application protocols.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6128-s2", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1412", "text": "Application protocol error codes are used for the RESET_STREAM frame ( Section 19.4 ), the STOP_SENDING frame ( Section 19.5 ), and the CONNECTION_CLOSE frame with a type of 0x1d ( Section 19.19 ). ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["RESET_STREAM", "STOP_SENDING"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "20.2-p6129-s1", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "21.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6130-s2", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Security Considerations The goal of QUIC is to provide a secure transport connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6131-s3", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Section 21.1 provides an overview of those properties; subsequent sections discuss constraints and caveats regarding these properties, including descriptions of known attacks and countermeasures. ¶ 21.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6132-s4", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Overview of Security Properties A complete security analysis of QUIC is outside the scope of this document.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6133-s5", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This section provides an informal description of the desired security properties as an aid to implementers and to help guide protocol analysis. ¶ QUIC assumes the threat model described in [ SEC-CONS ] and provides protections against many of the attacks that arise from that model. ¶ For this purpose, attacks are divided into passive and active attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6134-s6", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Passive attackers have the ability to read packets from the network, while active attackers also have the ability to write packets into the network.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6135-s7", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "However, a passive attack could involve an attacker with the ability to cause a routing change or other modification in the path taken by packets that comprise a connection. ¶ Attackers are additionally categorized as either on-path attackers or off-path attackers.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6136-s8", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "An on-path attacker can read, modify, or remove any packet it observes such that the packet no longer reaches its destination, while an off-path attacker observes the packets but cannot prevent the original packet from reaching its intended destination.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6137-s9", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Both types of attackers can also transmit arbitrary packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6138-s10", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This definition differs from that of Section 3.5 of [ SEC-CONS ] in that an off-path attacker is able to observe packets. ¶ Properties of the handshake, protected packets, and connection migration are considered separately. ¶ 21.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6139-s11", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Handshake The QUIC handshake incorporates the TLS 1.3 handshake and inherits the cryptographic properties described in Appendix E.1 of [ TLS13 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6140-s12", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Many of the security properties of QUIC depend on the TLS handshake providing these properties.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6141-s13", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Any attack on the TLS handshake could affect QUIC. ¶ Any attack on the TLS handshake that compromises the secrecy or uniqueness of session keys, or the authentication of the participating peers, affects other security guarantees provided by QUIC that depend on those keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6142-s14", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "For instance, migration ( Section 9 ) depends on the efficacy of confidentiality protections, both for the negotiation of keys using the TLS handshake and for QUIC packet protection, to avoid linkability across network paths. ¶ An attack on the integrity of the TLS handshake might allow an attacker to affect the selection of application protocol or QUIC version. ¶ In addition to the properties provided by TLS, the QUIC handshake provides some defense against DoS attacks on the handshake. ¶ 21.1.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6143-s15", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Anti-Amplification Address validation ( Section 8 ) is used to verify that an entity that claims a given address is able to receive packets at that address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6144-s16", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Address validation limits amplification attack targets to addresses for which an attacker can observe packets. ¶ Prior to address validation, endpoints are limited in what they are able to send.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6145-s17", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Endpoints cannot send data toward an unvalidated address in excess of three times the data received from that address. ¶ Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6146-s18", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The anti-amplification limit only applies when an endpoint responds to packets received from an unvalidated address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6147-s19", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The anti-amplification limit does not apply to clients when establishing a new connection or when initiating connection migration. ¶ 21.1.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6148-s20", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Server-Side DoS Computing the server's first flight for a full handshake is potentially expensive, requiring both a signature and a key exchange computation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6149-s21", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "In order to prevent computational DoS attacks, the Retry packet provides a cheap token exchange mechanism that allows servers to validate a client's IP address prior to doing any expensive computations at the cost of a single round trip.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6150-s22", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "After a successful handshake, servers can issue new tokens to a client, which will allow new connection establishment without incurring this cost. ¶ 21.1.1.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6151-s23", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "On-Path Handshake Termination An on-path or off-path attacker can force a handshake to fail by replacing or racing Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6152-s24", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Once valid Initial packets have been exchanged, subsequent Handshake packets are protected with the Handshake keys, and an on-path attacker cannot force handshake failure other than by dropping packets to cause endpoints to abandon the attempt. ¶ An on-path attacker can also replace the addresses of packets on either side and therefore cause the client or server to have an incorrect view of the remote addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6153-s25", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Such an attack is indistinguishable from the functions performed by a NAT. ¶ 21.1.1.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6154-s26", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Parameter Negotiation The entire handshake is cryptographically protected, with the Initial packets being encrypted with per-version keys and the Handshake and later packets being encrypted with keys derived from the TLS key exchange.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6155-s27", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Further, parameter negotiation is folded into the TLS transcript and thus provides the same integrity guarantees as ordinary TLS negotiation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6156-s28", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "An attacker can observe the client's transport parameters (as long as it knows the version-specific salt) but cannot observe the server's transport parameters and cannot influence parameter negotiation. ¶ Connection IDs are unencrypted but integrity protected in all packets. ¶ This version of QUIC does not incorporate a version negotiation mechanism; implementations of incompatible versions will simply fail to establish a connection. ¶ 21.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6157-s29", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Protected Packets Packet protection ( Section 12.1 ) applies authenticated encryption to all packets except Version Negotiation packets, though Initial and Retry packets have limited protection due to the use of version-specific keying material; see [ QUIC-TLS ] for more details.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6158-s30", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This section considers passive and active attacks against protected packets. ¶ Both on-path and off-path attackers can mount a passive attack in which they save observed packets for an offline attack against packet protection at a future time; this is true for any observer of any packet on any network. ¶ An attacker that injects packets without being able to observe valid packets for a connection is unlikely to be successful, since packet protection ensures that valid packets are only generated by endpoints that possess the key material established during the handshake; see Sections 7 and 21.1.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6159-s31", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Similarly, any active attacker that observes packets and attempts to insert new data or modify existing data in those packets should not be able to generate packets deemed valid by the receiving endpoint, other than Initial packets. ¶ A spoofing attack, in which an active attacker rewrites unprotected parts of a packet that it forwards or injects, such as the source or destination address, is only effective if the attacker can forward packets to the original endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6160-s32", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Packet protection ensures that the packet payloads can only be processed by the endpoints that completed the handshake, and invalid packets are ignored by those endpoints. ¶ An attacker can also modify the boundaries between packets and UDP datagrams, causing multiple packets to be coalesced into a single datagram or splitting coalesced packets into multiple datagrams.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6161-s33", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Aside from datagrams containing Initial packets, which require padding, modification of how packets are arranged in datagrams has no functional effect on a connection, although it might change some performance characteristics. ¶ 21.1.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6162-s34", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Connection Migration Connection migration ( Section 9 ) provides endpoints with the ability to transition between IP addresses and ports on multiple paths, using one path at a time for transmission and receipt of non-probing frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "20.2-p6163-s35", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Path validation ( Section 8.2 ) establishes that a peer is both willing and able to receive packets sent on a particular path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6164-s36", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This helps reduce the effects of address spoofing by limiting the number of packets sent to a spoofed address. ¶ This section describes the intended security properties of connection migration under various types of DoS attacks. ¶ 21.1.3.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6165-s37", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "On-Path Active Attacks An attacker that can cause a packet it observes to no longer reach its intended destination is considered an on-path attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6166-s38", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "When an attacker is present between a client and server, endpoints are required to send packets through the attacker to establish connectivity on a given path. ¶ An on-path attacker can: ¶ Inspect packets ¶ Modify IP and UDP packet headers ¶ Inject new packets ¶ Delay packets ¶ Reorder packets ¶ Drop packets ¶ Split and merge datagrams along packet boundaries ¶ An on-path attacker cannot: ¶ Modify an authenticated portion of a packet and cause the recipient to accept that packet ¶ An on-path attacker has the opportunity to modify the packets that it observes; however, any modifications to an authenticated portion of a packet will cause it to be dropped by the receiving endpoint as invalid, as packet payloads are both authenticated and encrypted. ¶ QUIC aims to constrain the capabilities of an on-path attacker as follows: ¶ An on-path attacker can prevent the use of a path for a connection, causing the connection to fail if it cannot use a different path that does not contain the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6167-s39", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This can be achieved by dropping all packets, modifying them so that they fail to decrypt, or other methods. ¶ An on-path attacker can prevent migration to a new path for which the attacker is also on-path by causing path validation to fail on the new path. ¶ An on-path attacker cannot prevent a client from migrating to a path for which the attacker is not on-path. ¶ An on-path attacker can reduce the throughput of a connection by delaying packets or dropping them. ¶ An on-path attacker cannot cause an endpoint to accept a packet for which it has modified an authenticated portion of that packet. ¶ 21.1.3.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6168-s40", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Off-Path Active Attacks An off-path attacker is not directly on the path between a client and server but could be able to obtain copies of some or all packets sent between the client and the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6169-s41", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "It is also able to send copies of those packets to either endpoint. ¶ An off-path attacker can: ¶ Inspect packets ¶ Inject new packets ¶ Reorder injected packets ¶ An off-path attacker cannot: ¶ Modify packets sent by endpoints ¶ Delay packets ¶ Drop packets ¶ Reorder original packets ¶ An off-path attacker can create modified copies of packets that it has observed and inject those copies into the network, potentially with spoofed source and destination addresses. ¶ For the purposes of this discussion, it is assumed that an off-path attacker has the ability to inject a modified copy of a packet into the network that will reach the destination endpoint prior to the arrival of the original packet observed by the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6170-s42", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "In other words, an attacker has the ability to consistently \"win\" a race with the legitimate packets between the endpoints, potentially causing the original packet to be ignored by the recipient. ¶ It is also assumed that an attacker has the resources necessary to affect NAT state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "20.2-p6171-s43", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "In particular, an attacker can cause an endpoint to lose its NAT binding and then obtain the same port for use with its own traffic. ¶ QUIC aims to constrain the capabilities of an off-path attacker as follows: ¶ An off-path attacker can race packets and attempt to become a \"limited\" on-path attacker. ¶ An off-path attacker can cause path validation to succeed for forwarded packets with the source address listed as the off-path attacker as long as it can provide improved connectivity between the client and the server. ¶ An off-path attacker cannot cause a connection to close once the handshake has completed. ¶ An off-path attacker cannot cause migration to a new path to fail if it cannot observe the new path. ¶ An off-path attacker can become a limited on-path attacker during migration to a new path for which it is also an off-path attacker. ¶ An off-path attacker can become a limited on-path attacker by affecting shared NAT state such that it sends packets to the server from the same IP address and port that the client originally used. ¶ 21.1.3.3.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.2-p6172-s44", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Limited On-Path Active Attacks A limited on-path attacker is an off-path attacker that has offered improved routing of packets by duplicating and forwarding original packets between the server and the client, causing those packets to arrive before the original copies such that the original packets are dropped by the destination endpoint. ¶ A limited on-path attacker differs from an on-path attacker in that it is not on the original path between endpoints, and therefore the original packets sent by an endpoint are still reaching their destination.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6173-s45", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This means that a future failure to route copied packets to the destination faster than their original path will not prevent the original packets from reaching the destination. ¶ A limited on-path attacker can: ¶ Inspect packets ¶ Inject new packets ¶ Modify unencrypted packet headers ¶ Reorder packets ¶ A limited on-path attacker cannot: ¶ Delay packets so that they arrive later than packets sent on the original path ¶ Drop packets ¶ Modify the authenticated and encrypted portion of a packet and cause the recipient to accept that packet ¶ A limited on-path attacker can only delay packets up to the point that the original packets arrive before the duplicate packets, meaning that it cannot offer routing with worse latency than the original path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6174-s46", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "If a limited on-path attacker drops packets, the original copy will still arrive at the destination endpoint. ¶ QUIC aims to constrain the capabilities of a limited off-path attacker as follows: ¶ A limited on-path attacker cannot cause a connection to close once the handshake has completed. ¶ A limited on-path attacker cannot cause an idle connection to close if the client is first to resume activity. ¶ A limited on-path attacker can cause an idle connection to be deemed lost if the server is the first to resume activity. ¶ Note that these guarantees are the same guarantees provided for any NAT, for the same reasons. ¶ 21.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6175-s47", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Handshake Denial of Service As an encrypted and authenticated transport, QUIC provides a range of protections against denial of service.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6176-s48", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Once the cryptographic handshake is complete, QUIC endpoints discard most packets that are not authenticated, greatly limiting the ability of an attacker to interfere with existing connections. ¶ Once a connection is established, QUIC endpoints might accept some unauthenticated ICMP packets (see Section 14.2.1 ), but the use of these packets is extremely limited.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6177-s49", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The only other type of packet that an endpoint might accept is a stateless reset ( Section 10.3 ), which relies on the token being kept secret until it is used. ¶ During the creation of a connection, QUIC only provides protection against attacks from off the network path.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "20.2-p6178-s50", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "All QUIC packets contain proof that the recipient saw a preceding packet from its peer. ¶ Addresses cannot change during the handshake, so endpoints can discard packets that are received on a different network path. ¶ The Source and Destination Connection ID fields are the primary means of protection against an off-path attack during the handshake; see Section 8.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6179-s51", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "These are required to match those set by a peer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6180-s52", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Except for Initial and Stateless Resets, an endpoint only accepts packets that include a Destination Connection ID field that matches a value the endpoint previously chose.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "20.2-p6181-s53", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This is the only protection offered for Version Negotiation packets. ¶ The Destination Connection ID field in an Initial packet is selected by a client to be unpredictable, which serves an additional purpose.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6182-s54", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The packets that carry the cryptographic handshake are protected with a key that is derived from this connection ID and a salt specific to the QUIC version.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6183-s55", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This allows endpoints to use the same process for authenticating packets that they receive as they use after the cryptographic handshake completes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6184-s56", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Packets that cannot be authenticated are discarded.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6185-s57", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Protecting packets in this fashion provides a strong assurance that the sender of the packet saw the Initial packet and understood it. ¶ These protections are not intended to be effective against an attacker that is able to receive QUIC packets prior to the connection being established.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6186-s58", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Such an attacker can potentially send packets that will be accepted by QUIC endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6187-s59", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This version of QUIC attempts to detect this sort of attack, but it expects that endpoints will fail to establish a connection rather than recovering.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6188-s60", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "For the most part, the cryptographic handshake protocol [ QUIC-TLS ] is responsible for detecting tampering during the handshake. ¶ Endpoints are permitted to use other methods to detect and attempt to recover from interference with the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6189-s61", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Invalid packets can be identified and discarded using other methods, but no specific method is mandated in this document. ¶ 21.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6190-s62", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Amplification Attack An attacker might be able to receive an address validation token ( Section 8 ) from a server and then release the IP address it used to acquire that token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6191-s63", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "At a later time, the attacker can initiate a 0-RTT connection with a server by spoofing this same address, which might now address a different (victim) endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6192-s64", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The attacker can thus potentially cause the server to send an initial congestion window's worth of data towards the victim. ¶ Servers SHOULD provide mitigations for this attack by limiting the usage and lifetime of address validation tokens; see Section 8.1.3 . ¶ 21.4.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "20.2-p6193-s65", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Optimistic ACK Attack An endpoint that acknowledges packets it has not received might cause a congestion controller to permit sending at rates beyond what the network supports.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6194-s66", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "An endpoint MAY skip packet numbers when sending packets to detect this behavior.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "20.2-p6195-s67", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "An endpoint can then immediately close the connection with a connection error of type PROTOCOL_VIOLATION; see Section 10.2 . ¶ 21.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6196-s68", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Request Forgery Attacks A request forgery attack occurs where an endpoint causes its peer to issue a request towards a victim, with the request controlled by the endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6197-s69", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Request forgery attacks aim to provide an attacker with access to capabilities of its peer that might otherwise be unavailable to the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6198-s70", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "For a networking protocol, a request forgery attack is often used to exploit any implicit authorization conferred on the peer by the victim due to the peer's location in the network. ¶ For request forgery to be effective, an attacker needs to be able to influence what packets the peer sends and where these packets are sent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6199-s71", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "If an attacker can target a vulnerable service with a controlled payload, that service might perform actions that are attributed to the attacker's peer but are decided by the attacker. ¶ For example, cross-site request forgery [ CSRF ] exploits on the Web cause a client to issue requests that include authorization cookies [ COOKIE ] , allowing one site access to information and actions that are intended to be restricted to a different site. ¶ As QUIC runs over UDP, the primary attack modality of concern is one where an attacker can select the address to which its peer sends UDP datagrams and can control some of the unprotected content of those packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6200-s72", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "As much of the data sent by QUIC endpoints is protected, this includes control over ciphertext.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6201-s73", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "An attack is successful if an attacker can cause a peer to send a UDP datagram to a host that will perform some action based on content in the datagram. ¶ This section discusses ways in which QUIC might be used for request forgery attacks. ¶ This section also describes limited countermeasures that can be implemented by QUIC endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6202-s74", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "These mitigations can be employed unilaterally by a QUIC implementation or deployment, without potential targets for request forgery attacks taking action.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6203-s75", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "However, these countermeasures could be insufficient if UDP-based services do not properly authorize requests. ¶ Because the migration attack described in Section 21.5.4 is quite powerful and does not have adequate countermeasures, QUIC server implementations should assume that attackers can cause them to generate arbitrary UDP payloads to arbitrary destinations.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6204-s76", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "QUIC servers SHOULD NOT be deployed in networks that do not deploy ingress filtering [ BCP38 ] and also have inadequately secured UDP endpoints. ¶ Although it is not generally possible to ensure that clients are not co-located with vulnerable endpoints, this version of QUIC does not allow servers to migrate, thus preventing spoofed migration attacks on clients.", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "20.2-p6205-s77", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Any future extension that allows server migration MUST also define countermeasures for forgery attacks. ¶ 21.5.1.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "20.2-p6206-s78", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Control Options for Endpoints QUIC offers some opportunities for an attacker to influence or control where its peer sends UDP datagrams: ¶ initial connection establishment ( Section 7 ), where a server is able to choose where a client sends datagrams -- for example, by populating DNS records; ¶ preferred addresses ( Section 9.6 ), where a server is able to choose where a client sends datagrams; ¶ spoofed connection migrations ( Section 9.3.1 ), where a client is able to use source address spoofing to select where a server sends subsequent datagrams; and ¶ spoofed packets that cause a server to send a Version Negotiation packet ( Section 21.5.5 ). ¶ In all cases, the attacker can cause its peer to send datagrams to a victim that might not understand QUIC.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6207-s79", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "That is, these packets are sent by the peer prior to address validation; see Section 8 . ¶ Outside of the encrypted portion of packets, QUIC offers an endpoint several options for controlling the content of UDP datagrams that its peer sends.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6208-s80", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The Destination Connection ID field offers direct control over bytes that appear early in packets sent by the peer; see Section 5.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6209-s81", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The Token field in Initial packets offers a server control over other bytes of Initial packets; see Section 17.2.2 . ¶ There are no measures in this version of QUIC to prevent indirect control over the encrypted portions of packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6210-s82", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "It is necessary to assume that endpoints are able to control the contents of frames that a peer sends, especially those frames that convey application data, such as STREAM frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "20.2-p6211-s83", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Though this depends to some degree on details of the application protocol, some control is possible in many protocol usage contexts.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6212-s84", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "As the attacker has access to packet protection keys, they are likely to be capable of predicting how a peer will encrypt future packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6213-s85", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Successful control over datagram content then only requires that the attacker be able to predict the packet number and placement of frames in packets with some amount of reliability. ¶ This section assumes that limiting control over datagram content is not feasible.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.2-p6214-s86", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The focus of the mitigations in subsequent sections is on limiting the ways in which datagrams that are sent prior to address validation can be used for request forgery. ¶ 21.5.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6215-s87", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Request Forgery with Client Initial Packets An attacker acting as a server can choose the IP address and port on which it advertises its availability, so Initial packets from clients are assumed to be available for use in this sort of attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6216-s88", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The address validation implicit in the handshake ensures that -- for a new connection -- a client will not send other types of packets to a destination that does not understand QUIC or is not willing to accept a QUIC connection. ¶ Initial packet protection ( Section 5.2 of [ QUIC-TLS ] ) makes it difficult for servers to control the content of Initial packets sent by clients.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6217-s89", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "A client choosing an unpredictable Destination Connection ID ensures that servers are unable to control any of the encrypted portion of Initial packets from clients. ¶ However, the Token field is open to server control and does allow a server to use clients to mount request forgery attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6218-s90", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The use of tokens provided with the NEW_TOKEN frame ( Section 8.1.3 ) offers the only option for request forgery during connection establishment. ¶ Clients, however, are not obligated to use the NEW_TOKEN frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "20.2-p6219-s91", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Request forgery attacks that rely on the Token field can be avoided if clients send an empty Token field when the server address has changed from when the NEW_TOKEN frame was received. ¶ Clients could avoid using NEW_TOKEN if the server address changes.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.2-p6220-s92", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "However, not including a Token field could adversely affect performance.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6221-s93", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Servers could rely on NEW_TOKEN to enable the sending of data in excess of the three-times limit on sending data; see Section 8.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6222-s94", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "In particular, this affects cases where clients use 0-RTT to request data from servers. ¶ Sending a Retry packet ( Section 17.2.5 ) offers a server the option to change the Token field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6223-s95", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "After sending a Retry, the server can also control the Destination Connection ID field of subsequent Initial packets from the client.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6224-s96", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This also might allow indirect control over the encrypted content of Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6225-s97", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "However, the exchange of a Retry packet validates the server's address, thereby preventing the use of subsequent Initial packets for request forgery. ¶ 21.5.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6226-s98", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Request Forgery with Preferred Addresses Servers can specify a preferred address, which clients then migrate to after confirming the handshake; see Section 9.6 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6227-s99", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The Destination Connection ID field of packets that the client sends to a preferred address can be used for request forgery. ¶ A client MUST NOT send non-probing frames to a preferred address prior to validating that address; see Section 8 .", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "20.2-p6228-s100", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This greatly reduces the options that a server has to control the encrypted portion of datagrams. ¶ This document does not offer any additional countermeasures that are specific to the use of preferred addresses and can be implemented by endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6229-s101", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The generic measures described in Section 21.5.6 could be used as further mitigation. ¶ 21.5.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6230-s102", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Request Forgery with Spoofed Migration Clients are able to present a spoofed source address as part of an apparent connection migration to cause a server to send datagrams to that address. ¶ The Destination Connection ID field in any packets that a server subsequently sends to this spoofed address can be used for request forgery.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6231-s103", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "A client might also be able to influence the ciphertext. ¶ A server that only sends probing packets ( Section 9.1 ) to an address prior to address validation provides an attacker with only limited control over the encrypted portion of datagrams.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6232-s104", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "However, particularly for NAT rebinding, this can adversely affect performance.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6233-s105", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "If the server sends frames carrying application data, an attacker might be able to control most of the content of datagrams. ¶ This document does not offer specific countermeasures that can be implemented by endpoints, aside from the generic measures described in Section 21.5.6 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.2-p6234-s106", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "However, countermeasures for address spoofing at the network level -- in particular, ingress filtering [ BCP38 ] -- are especially effective against attacks that use spoofing and originate from an external network. ¶ 21.5.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6235-s107", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Request Forgery with Version Negotiation Clients that are able to present a spoofed source address on a packet can cause a server to send a Version Negotiation packet ( Section 17.2.1 ) to that address. ¶ The absence of size restrictions on the connection ID fields for packets of an unknown version increases the amount of data that the client controls from the resulting datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6236-s108", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The first byte of this packet is not under client control and the next four bytes are zero, but the client is able to control up to 512 bytes starting from the fifth byte. ¶ No specific countermeasures are provided for this attack, though generic protections ( Section 21.5.6 ) could apply.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6237-s109", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "In this case, ingress filtering [ BCP38 ] is also effective. ¶ 21.5.6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6238-s110", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Generic Request Forgery Countermeasures The most effective defense against request forgery attacks is to modify vulnerable services to use strong authentication.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6239-s111", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "However, this is not always something that is within the control of a QUIC deployment.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6240-s112", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This section outlines some other steps that QUIC endpoints could take unilaterally.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6241-s113", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "These additional steps are all discretionary because, depending on circumstances, they could interfere with or prevent legitimate uses. ¶ Services offered over loopback interfaces often lack proper authentication.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6242-s114", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Endpoints MAY prevent connection attempts or migration to a loopback address.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "20.2-p6243-s115", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Endpoints SHOULD NOT allow connections or migration to a loopback address if the same service was previously available at a different interface or if the address was provided by a service at a non-loopback address.", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "20.2-p6244-s116", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Endpoints that depend on these capabilities could offer an option to disable these protections. ¶ Similarly, endpoints could regard a change in address to a link-local address [ RFC4291 ] or an address in a private-use range [ RFC1918 ] from a global, unique-local [ RFC4193 ] , or non-private address as a potential attempt at request forgery.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6245-s117", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Endpoints could refuse to use these addresses entirely, but that carries a significant risk of interfering with legitimate uses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6246-s118", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Endpoints SHOULD NOT refuse to use an address unless they have specific knowledge about the network indicating that sending datagrams to unvalidated addresses in a given range is not safe. ¶ Endpoints MAY choose to reduce the risk of request forgery by not including values from NEW_TOKEN frames in Initial packets or by only sending probing frames in packets prior to completing address validation.", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "20.2-p6247-s119", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Note that this does not prevent an attacker from using the Destination Connection ID field for an attack. ¶ Endpoints are not expected to have specific information about the location of servers that could be vulnerable targets of a request forgery attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6248-s120", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "However, it might be possible over time to identify specific UDP ports that are common targets of attacks or particular patterns in datagrams that are used for attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6249-s121", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Endpoints MAY choose to avoid sending datagrams to these ports or not send datagrams that match these patterns prior to validating the destination address.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "20.2-p6250-s122", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Endpoints MAY retire connection IDs containing patterns known to be problematic without using them. ¶ Note:", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "20.2-p6251-s123", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Modifying endpoints to apply these protections is more efficient than deploying network-based protections, as endpoints do not need to perform any additional processing when sending to an address that has been validated. ¶ 21.6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6252-s124", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Slowloris Attacks The attacks commonly known as Slowloris [ SLOWLORIS ] try to keep many connections to the target endpoint open and hold them open as long as possible.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6253-s125", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "These attacks can be executed against a QUIC endpoint by generating the minimum amount of activity necessary to avoid being closed for inactivity.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6254-s126", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This might involve sending small amounts of data, gradually opening flow control windows in order to control the sender rate, or manufacturing ACK frames that simulate a high loss rate. ¶ QUIC deployments SHOULD provide mitigations for the Slowloris attacks, such as increasing the maximum number of clients the server will allow, limiting the number of connections a single IP address is allowed to make, imposing restrictions on the minimum transfer speed a connection is allowed to have, and restricting the length of time an endpoint is allowed to stay connected. ¶ 21.7.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "sender", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "20.2-p6255-s127", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Stream Fragmentation and Reassembly Attacks An adversarial sender might intentionally not send portions of the stream data, causing the receiver to commit resources for the unsent data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6256-s128", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This could cause a disproportionate receive buffer memory commitment and/or the creation of a large and inefficient data structure at the receiver. ¶ An adversarial receiver might intentionally not acknowledge packets containing stream data in an attempt to force the sender to store the unacknowledged stream data for retransmission. ¶ The attack on receivers is mitigated if flow control windows correspond to available memory.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.2-p6257-s129", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "However, some receivers will overcommit memory and advertise flow control offsets in the aggregate that exceed actual available memory.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "20.2-p6258-s130", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The overcommitment strategy can lead to better performance when endpoints are well behaved, but renders endpoints vulnerable to the stream fragmentation attack. ¶ QUIC deployments SHOULD provide mitigations for stream fragmentation attacks.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "20.2-p6259-s131", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Mitigations could consist of avoiding overcommitting memory, limiting the size of tracking data structures, delaying reassembly of STREAM frames, implementing heuristics based on the age and duration of reassembly holes, or some combination of these. ¶ 21.8.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "20.2-p6260-s132", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Stream Commitment Attack An adversarial endpoint can open a large number of streams, exhausting state on an endpoint.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "20.2-p6261-s133", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The adversarial endpoint could repeat the process on a large number of connections, in a manner similar to SYN flooding attacks in TCP. ¶ Normally, clients will open streams sequentially, as explained in Section 2.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6262-s134", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "However, when several streams are initiated at short intervals, loss or reordering can cause STREAM frames that open streams to be received out of sequence.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "20.2-p6263-s135", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "On receiving a higher-numbered stream ID, a receiver is required to open all intervening streams of the same type; see Section 3.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6264-s136", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Thus, on a new connection, opening stream 4000000 opens 1 million and 1 client-initiated bidirectional streams. ¶ The number of active streams is limited by the initial_max_streams_bidi and initial_max_streams_uni transport parameters as updated by any received MAX_STREAMS frames, as explained in Section 4.6 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "20.2-p6265-s137", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "If chosen judiciously, these limits mitigate the effect of the stream commitment attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6266-s138", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "However, setting the limit too low could affect performance when applications expect to open a large number of streams. ¶ 21.9.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6267-s139", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Peer Denial of Service QUIC and TLS both contain frames or messages that have legitimate uses in some contexts, but these frames or messages can be abused to cause a peer to expend processing resources without having any observable impact on the state of the connection. ¶ Messages can also be used to change and revert state in small or inconsequential ways, such as by sending small increments to flow control limits. ¶ If processing costs are disproportionately large in comparison to bandwidth consumption or effect on state, then this could allow a malicious peer to exhaust processing capacity. ¶ While there are legitimate uses for all messages, implementations SHOULD track cost of processing relative to progress and treat excessive quantities of any non-productive packets as indicative of an attack.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "20.2-p6268-s140", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Endpoints MAY respond to this condition with a connection error or by dropping packets. ¶ 21.10.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "20.2-p6269-s141", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Explicit Congestion Notification Attacks An on-path attacker could manipulate the value of ECN fields in the IP header to influence the sender's rate. [ RFC3168 ] discusses manipulations and their effects in more detail. ¶ A limited on-path attacker can duplicate and send packets with modified ECN fields to affect the sender's rate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6270-s142", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "If duplicate packets are discarded by a receiver, an attacker will need to race the duplicate packet against the original to be successful in this attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6271-s143", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Therefore, QUIC endpoints ignore the ECN field in an IP packet unless at least one QUIC packet in that IP packet is successfully processed; see Section 13.4 . ¶ 21.11.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6272-s144", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Stateless Reset Oracle Stateless resets create a possible denial-of-service attack analogous to a TCP reset injection.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "20.2-p6273-s145", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "This attack is possible if an attacker is able to cause a stateless reset token to be generated for a connection with a selected connection ID.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.2-p6274-s146", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "An attacker that can cause this token to be generated can reset an active connection with the same connection ID. ¶ If a packet can be routed to different instances that share a static key -- for example, by changing an IP address or port -- then an attacker can cause the server to send a stateless reset.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.2-p6275-s147", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "To defend against this style of denial of service, endpoints that share a static key for stateless resets (see Section 10.3.2 ) MUST be arranged so that packets with a given connection ID always arrive at an instance that has connection state, unless that connection is no longer active. ¶ More generally, servers MUST NOT generate a stateless reset if a connection with the corresponding connection ID could be active on any endpoint using the same static key. ¶ In the case of a cluster that uses dynamic load balancing, it is possible that a change in load-balancer configuration could occur while an active instance retains connection state.", "facet": "state_machine", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "20.2-p6276-s148", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Even if an instance retains connection state, the change in routing and resulting stateless reset will result in the connection being terminated.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.2-p6277-s149", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "If there is no chance of the packet being routed to the correct instance, it is better to send a stateless reset than wait for the connection to time out.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "20.2-p6278-s150", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "However, this is acceptable only if the routing cannot be influenced by an attacker. ¶ 21.12.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "20.2-p6279-s151", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Version Downgrade This document defines QUIC Version Negotiation packets ( Section 6 ), which can be used to negotiate the QUIC version used between two endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6280-s152", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "However, this document does not specify how this negotiation will be performed between this version and subsequent future versions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6281-s153", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "In particular, Version Negotiation packets do not contain any mechanism to prevent version downgrade attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6282-s154", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Future versions of QUIC that use Version Negotiation packets MUST define a mechanism that is robust against version downgrade attacks. ¶ 21.13.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "20.2-p6283-s155", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Targeted Attacks by Routing Deployments should limit the ability of an attacker to target a new connection to a particular server instance.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6284-s156", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Ideally, routing decisions are made independently of client-selected values, including addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6285-s157", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Once an instance is selected, a connection ID can be selected so that later packets are routed to the same instance. ¶ 21.14.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6286-s158", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Traffic Analysis The length of QUIC packets can reveal information about the length of the content of those packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6287-s159", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "The PADDING frame is provided so that endpoints have some ability to obscure the length of packet content; see Section 19.1 . ¶ Defeating traffic analysis is challenging and the subject of active research.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "20.2-p6288-s160", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Length is not the only way that information might leak.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "20.2-p6289-s161", "section": "20.2", "anchor": "#name-application-protocol-error-", "para_id": "20.2-p1413", "text": "Endpoints might also reveal sensitive information through other side channels, such as the timing of packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6290-s1", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1414", "text": "The goal of QUIC is to provide a secure transport connection.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6291-s2", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1414", "text": "Section 21.1 provides an overview of those properties; subsequent sections discuss constraints and caveats regarding these properties, including descriptions of known attacks and countermeasures. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6292-s1", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "21.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6293-s2", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Overview of Security Properties A complete security analysis of QUIC is outside the scope of this document.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6294-s3", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "This section provides an informal description of the desired security properties as an aid to implementers and to help guide protocol analysis. ¶ QUIC assumes the threat model described in [ SEC-CONS ] and provides protections against many of the attacks that arise from that model. ¶ For this purpose, attacks are divided into passive and active attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6295-s4", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Passive attackers have the ability to read packets from the network, while active attackers also have the ability to write packets into the network.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6296-s5", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "However, a passive attack could involve an attacker with the ability to cause a routing change or other modification in the path taken by packets that comprise a connection. ¶ Attackers are additionally categorized as either on-path attackers or off-path attackers.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6297-s6", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "An on-path attacker can read, modify, or remove any packet it observes such that the packet no longer reaches its destination, while an off-path attacker observes the packets but cannot prevent the original packet from reaching its intended destination.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6298-s7", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Both types of attackers can also transmit arbitrary packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6299-s8", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "This definition differs from that of Section 3.5 of [ SEC-CONS ] in that an off-path attacker is able to observe packets. ¶ Properties of the handshake, protected packets, and connection migration are considered separately. ¶ 21.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6300-s9", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Handshake The QUIC handshake incorporates the TLS 1.3 handshake and inherits the cryptographic properties described in Appendix E.1 of [ TLS13 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6301-s10", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Many of the security properties of QUIC depend on the TLS handshake providing these properties.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6302-s11", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Any attack on the TLS handshake could affect QUIC. ¶ Any attack on the TLS handshake that compromises the secrecy or uniqueness of session keys, or the authentication of the participating peers, affects other security guarantees provided by QUIC that depend on those keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6303-s12", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "For instance, migration ( Section 9 ) depends on the efficacy of confidentiality protections, both for the negotiation of keys using the TLS handshake and for QUIC packet protection, to avoid linkability across network paths. ¶ An attack on the integrity of the TLS handshake might allow an attacker to affect the selection of application protocol or QUIC version. ¶ In addition to the properties provided by TLS, the QUIC handshake provides some defense against DoS attacks on the handshake. ¶ 21.1.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6304-s13", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Anti-Amplification Address validation ( Section 8 ) is used to verify that an entity that claims a given address is able to receive packets at that address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21-p6305-s14", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Address validation limits amplification attack targets to addresses for which an attacker can observe packets. ¶ Prior to address validation, endpoints are limited in what they are able to send.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21-p6306-s15", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Endpoints cannot send data toward an unvalidated address in excess of three times the data received from that address. ¶ Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21-p6307-s16", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "The anti-amplification limit only applies when an endpoint responds to packets received from an unvalidated address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21-p6308-s17", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "The anti-amplification limit does not apply to clients when establishing a new connection or when initiating connection migration. ¶ 21.1.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21-p6309-s18", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Server-Side DoS Computing the server's first flight for a full handshake is potentially expensive, requiring both a signature and a key exchange computation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6310-s19", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "In order to prevent computational DoS attacks, the Retry packet provides a cheap token exchange mechanism that allows servers to validate a client's IP address prior to doing any expensive computations at the cost of a single round trip.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6311-s20", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "After a successful handshake, servers can issue new tokens to a client, which will allow new connection establishment without incurring this cost. ¶ 21.1.1.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6312-s21", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "On-Path Handshake Termination An on-path or off-path attacker can force a handshake to fail by replacing or racing Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6313-s22", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Once valid Initial packets have been exchanged, subsequent Handshake packets are protected with the Handshake keys, and an on-path attacker cannot force handshake failure other than by dropping packets to cause endpoints to abandon the attempt. ¶ An on-path attacker can also replace the addresses of packets on either side and therefore cause the client or server to have an incorrect view of the remote addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6314-s23", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Such an attack is indistinguishable from the functions performed by a NAT. ¶ 21.1.1.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6315-s24", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Parameter Negotiation The entire handshake is cryptographically protected, with the Initial packets being encrypted with per-version keys and the Handshake and later packets being encrypted with keys derived from the TLS key exchange.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6316-s25", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Further, parameter negotiation is folded into the TLS transcript and thus provides the same integrity guarantees as ordinary TLS negotiation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6317-s26", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "An attacker can observe the client's transport parameters (as long as it knows the version-specific salt) but cannot observe the server's transport parameters and cannot influence parameter negotiation. ¶ Connection IDs are unencrypted but integrity protected in all packets. ¶ This version of QUIC does not incorporate a version negotiation mechanism; implementations of incompatible versions will simply fail to establish a connection. ¶ 21.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6318-s27", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Protected Packets Packet protection ( Section 12.1 ) applies authenticated encryption to all packets except Version Negotiation packets, though Initial and Retry packets have limited protection due to the use of version-specific keying material; see [ QUIC-TLS ] for more details.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6319-s28", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "This section considers passive and active attacks against protected packets. ¶ Both on-path and off-path attackers can mount a passive attack in which they save observed packets for an offline attack against packet protection at a future time; this is true for any observer of any packet on any network. ¶ An attacker that injects packets without being able to observe valid packets for a connection is unlikely to be successful, since packet protection ensures that valid packets are only generated by endpoints that possess the key material established during the handshake; see Sections 7 and 21.1.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6320-s29", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Similarly, any active attacker that observes packets and attempts to insert new data or modify existing data in those packets should not be able to generate packets deemed valid by the receiving endpoint, other than Initial packets. ¶ A spoofing attack, in which an active attacker rewrites unprotected parts of a packet that it forwards or injects, such as the source or destination address, is only effective if the attacker can forward packets to the original endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21-p6321-s30", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Packet protection ensures that the packet payloads can only be processed by the endpoints that completed the handshake, and invalid packets are ignored by those endpoints. ¶ An attacker can also modify the boundaries between packets and UDP datagrams, causing multiple packets to be coalesced into a single datagram or splitting coalesced packets into multiple datagrams.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6322-s31", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Aside from datagrams containing Initial packets, which require padding, modification of how packets are arranged in datagrams has no functional effect on a connection, although it might change some performance characteristics. ¶ 21.1.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6323-s32", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Connection Migration Connection migration ( Section 9 ) provides endpoints with the ability to transition between IP addresses and ports on multiple paths, using one path at a time for transmission and receipt of non-probing frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21-p6324-s33", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Path validation ( Section 8.2 ) establishes that a peer is both willing and able to receive packets sent on a particular path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21-p6325-s34", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "This helps reduce the effects of address spoofing by limiting the number of packets sent to a spoofed address. ¶ This section describes the intended security properties of connection migration under various types of DoS attacks. ¶ 21.1.3.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6326-s35", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "On-Path Active Attacks An attacker that can cause a packet it observes to no longer reach its intended destination is considered an on-path attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6327-s36", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "When an attacker is present between a client and server, endpoints are required to send packets through the attacker to establish connectivity on a given path. ¶ An on-path attacker can: ¶ Inspect packets ¶ Modify IP and UDP packet headers ¶ Inject new packets ¶ Delay packets ¶ Reorder packets ¶ Drop packets ¶ Split and merge datagrams along packet boundaries ¶ An on-path attacker cannot: ¶ Modify an authenticated portion of a packet and cause the recipient to accept that packet ¶ An on-path attacker has the opportunity to modify the packets that it observes; however, any modifications to an authenticated portion of a packet will cause it to be dropped by the receiving endpoint as invalid, as packet payloads are both authenticated and encrypted. ¶ QUIC aims to constrain the capabilities of an on-path attacker as follows: ¶ An on-path attacker can prevent the use of a path for a connection, causing the connection to fail if it cannot use a different path that does not contain the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21-p6328-s37", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "This can be achieved by dropping all packets, modifying them so that they fail to decrypt, or other methods. ¶ An on-path attacker can prevent migration to a new path for which the attacker is also on-path by causing path validation to fail on the new path. ¶ An on-path attacker cannot prevent a client from migrating to a path for which the attacker is not on-path. ¶ An on-path attacker can reduce the throughput of a connection by delaying packets or dropping them. ¶ An on-path attacker cannot cause an endpoint to accept a packet for which it has modified an authenticated portion of that packet. ¶ 21.1.3.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6329-s38", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Off-Path Active Attacks An off-path attacker is not directly on the path between a client and server but could be able to obtain copies of some or all packets sent between the client and the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6330-s39", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "It is also able to send copies of those packets to either endpoint. ¶ An off-path attacker can: ¶ Inspect packets ¶ Inject new packets ¶ Reorder injected packets ¶ An off-path attacker cannot: ¶ Modify packets sent by endpoints ¶ Delay packets ¶ Drop packets ¶ Reorder original packets ¶ An off-path attacker can create modified copies of packets that it has observed and inject those copies into the network, potentially with spoofed source and destination addresses. ¶ For the purposes of this discussion, it is assumed that an off-path attacker has the ability to inject a modified copy of a packet into the network that will reach the destination endpoint prior to the arrival of the original packet observed by the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21-p6331-s40", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "In other words, an attacker has the ability to consistently \"win\" a race with the legitimate packets between the endpoints, potentially causing the original packet to be ignored by the recipient. ¶ It is also assumed that an attacker has the resources necessary to affect NAT state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21-p6332-s41", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "In particular, an attacker can cause an endpoint to lose its NAT binding and then obtain the same port for use with its own traffic. ¶ QUIC aims to constrain the capabilities of an off-path attacker as follows: ¶ An off-path attacker can race packets and attempt to become a \"limited\" on-path attacker. ¶ An off-path attacker can cause path validation to succeed for forwarded packets with the source address listed as the off-path attacker as long as it can provide improved connectivity between the client and the server. ¶ An off-path attacker cannot cause a connection to close once the handshake has completed. ¶ An off-path attacker cannot cause migration to a new path to fail if it cannot observe the new path. ¶ An off-path attacker can become a limited on-path attacker during migration to a new path for which it is also an off-path attacker. ¶ An off-path attacker can become a limited on-path attacker by affecting shared NAT state such that it sends packets to the server from the same IP address and port that the client originally used. ¶ 21.1.3.3.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21-p6333-s42", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "Limited On-Path Active Attacks A limited on-path attacker is an off-path attacker that has offered improved routing of packets by duplicating and forwarding original packets between the server and the client, causing those packets to arrive before the original copies such that the original packets are dropped by the destination endpoint. ¶ A limited on-path attacker differs from an on-path attacker in that it is not on the original path between endpoints, and therefore the original packets sent by an endpoint are still reaching their destination.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6334-s43", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "This means that a future failure to route copied packets to the destination faster than their original path will not prevent the original packets from reaching the destination. ¶ A limited on-path attacker can: ¶ Inspect packets ¶ Inject new packets ¶ Modify unencrypted packet headers ¶ Reorder packets ¶ A limited on-path attacker cannot: ¶ Delay packets so that they arrive later than packets sent on the original path ¶ Drop packets ¶ Modify the authenticated and encrypted portion of a packet and cause the recipient to accept that packet ¶ A limited on-path attacker can only delay packets up to the point that the original packets arrive before the duplicate packets, meaning that it cannot offer routing with worse latency than the original path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21-p6335-s44", "section": "21", "anchor": "#name-security-considerations", "para_id": "21-p1415", "text": "If a limited on-path attacker drops packets, the original copy will still arrive at the destination endpoint. ¶ QUIC aims to constrain the capabilities of a limited off-path attacker as follows: ¶ A limited on-path attacker cannot cause a connection to close once the handshake has completed. ¶ A limited on-path attacker cannot cause an idle connection to close if the client is first to resume activity. ¶ A limited on-path attacker can cause an idle connection to be deemed lost if the server is the first to resume activity. ¶ Note that these guarantees are the same guarantees provided for any NAT, for the same reasons. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1-p6336-s1", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1416", "text": "A complete security analysis of QUIC is outside the scope of this document.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6337-s2", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1416", "text": "This section provides an informal description of the desired security properties as an aid to implementers and to help guide protocol analysis. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6338-s1", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1417", "text": "QUIC assumes the threat model described in [ SEC-CONS ] and provides protections against many of the attacks that arise from that model. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6339-s1", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1418", "text": "For this purpose, attacks are divided into passive and active attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6340-s2", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1418", "text": "Passive attackers have the ability to read packets from the network, while active attackers also have the ability to write packets into the network.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6341-s3", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1418", "text": "However, a passive attack could involve an attacker with the ability to cause a routing change or other modification in the path taken by packets that comprise a connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6342-s1", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1419", "text": "Attackers are additionally categorized as either on-path attackers or off-path attackers.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6343-s2", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1419", "text": "An on-path attacker can read, modify, or remove any packet it observes such that the packet no longer reaches its destination, while an off-path attacker observes the packets but cannot prevent the original packet from reaching its intended destination.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6344-s3", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1419", "text": "Both types of attackers can also transmit arbitrary packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6345-s4", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1419", "text": "This definition differs from that of Section 3.5 of [ SEC-CONS ] in that an off-path attacker is able to observe packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6346-s1", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1420", "text": "Properties of the handshake, protected packets, and connection migration are considered separately. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6347-s1", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "21.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6348-s2", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "Handshake The QUIC handshake incorporates the TLS 1.3 handshake and inherits the cryptographic properties described in Appendix E.1 of [ TLS13 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6349-s3", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "Many of the security properties of QUIC depend on the TLS handshake providing these properties.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6350-s4", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "Any attack on the TLS handshake could affect QUIC. ¶ Any attack on the TLS handshake that compromises the secrecy or uniqueness of session keys, or the authentication of the participating peers, affects other security guarantees provided by QUIC that depend on those keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6351-s5", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "For instance, migration ( Section 9 ) depends on the efficacy of confidentiality protections, both for the negotiation of keys using the TLS handshake and for QUIC packet protection, to avoid linkability across network paths. ¶ An attack on the integrity of the TLS handshake might allow an attacker to affect the selection of application protocol or QUIC version. ¶ In addition to the properties provided by TLS, the QUIC handshake provides some defense against DoS attacks on the handshake. ¶ 21.1.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6352-s6", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "Anti-Amplification Address validation ( Section 8 ) is used to verify that an entity that claims a given address is able to receive packets at that address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1-p6353-s7", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "Address validation limits amplification attack targets to addresses for which an attacker can observe packets. ¶ Prior to address validation, endpoints are limited in what they are able to send.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1-p6354-s8", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "Endpoints cannot send data toward an unvalidated address in excess of three times the data received from that address. ¶ Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1-p6355-s9", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "The anti-amplification limit only applies when an endpoint responds to packets received from an unvalidated address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1-p6356-s10", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "The anti-amplification limit does not apply to clients when establishing a new connection or when initiating connection migration. ¶ 21.1.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1-p6357-s11", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "Server-Side DoS Computing the server's first flight for a full handshake is potentially expensive, requiring both a signature and a key exchange computation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6358-s12", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "In order to prevent computational DoS attacks, the Retry packet provides a cheap token exchange mechanism that allows servers to validate a client's IP address prior to doing any expensive computations at the cost of a single round trip.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6359-s13", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "After a successful handshake, servers can issue new tokens to a client, which will allow new connection establishment without incurring this cost. ¶ 21.1.1.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6360-s14", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "On-Path Handshake Termination An on-path or off-path attacker can force a handshake to fail by replacing or racing Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6361-s15", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "Once valid Initial packets have been exchanged, subsequent Handshake packets are protected with the Handshake keys, and an on-path attacker cannot force handshake failure other than by dropping packets to cause endpoints to abandon the attempt. ¶ An on-path attacker can also replace the addresses of packets on either side and therefore cause the client or server to have an incorrect view of the remote addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6362-s16", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "Such an attack is indistinguishable from the functions performed by a NAT. ¶ 21.1.1.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6363-s17", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "Parameter Negotiation The entire handshake is cryptographically protected, with the Initial packets being encrypted with per-version keys and the Handshake and later packets being encrypted with keys derived from the TLS key exchange.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6364-s18", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "Further, parameter negotiation is folded into the TLS transcript and thus provides the same integrity guarantees as ordinary TLS negotiation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1-p6365-s19", "section": "21.1", "anchor": "#name-overview-of-security-proper", "para_id": "21.1-p1421", "text": "An attacker can observe the client's transport parameters (as long as it knows the version-specific salt) but cannot observe the server's transport parameters and cannot influence parameter negotiation. ¶ Connection IDs are unencrypted but integrity protected in all packets. ¶ This version of QUIC does not incorporate a version negotiation mechanism; implementations of incompatible versions will simply fail to establish a connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1-p6366-s1", "section": "21.1.1", "anchor": "#name-handshake", "para_id": "21.1.1-p1422", "text": "The QUIC handshake incorporates the TLS 1.3 handshake and inherits the cryptographic properties described in Appendix E.1 of [ TLS13 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1-p6367-s2", "section": "21.1.1", "anchor": "#name-handshake", "para_id": "21.1.1-p1422", "text": "Many of the security properties of QUIC depend on the TLS handshake providing these properties.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1-p6368-s3", "section": "21.1.1", "anchor": "#name-handshake", "para_id": "21.1.1-p1422", "text": "Any attack on the TLS handshake could affect QUIC. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1-p6369-s1", "section": "21.1.1", "anchor": "#name-handshake", "para_id": "21.1.1-p1423", "text": "Any attack on the TLS handshake that compromises the secrecy or uniqueness of session keys, or the authentication of the participating peers, affects other security guarantees provided by QUIC that depend on those keys.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1-p6370-s2", "section": "21.1.1", "anchor": "#name-handshake", "para_id": "21.1.1-p1423", "text": "For instance, migration ( Section 9 ) depends on the efficacy of confidentiality protections, both for the negotiation of keys using the TLS handshake and for QUIC packet protection, to avoid linkability across network paths. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1-p6371-s1", "section": "21.1.1", "anchor": "#name-handshake", "para_id": "21.1.1-p1424", "text": "An attack on the integrity of the TLS handshake might allow an attacker to affect the selection of application protocol or QUIC version. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1-p6372-s1", "section": "21.1.1", "anchor": "#name-handshake", "para_id": "21.1.1-p1425", "text": "In addition to the properties provided by TLS, the QUIC handshake provides some defense against DoS attacks on the handshake. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1-p6373-s1", "section": "21.1.1", "anchor": "#name-handshake", "para_id": "21.1.1-p1426", "text": "21.1.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1-p6374-s2", "section": "21.1.1", "anchor": "#name-handshake", "para_id": "21.1.1-p1426", "text": "Anti-Amplification Address validation ( Section 8 ) is used to verify that an entity that claims a given address is able to receive packets at that address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.1-p6375-s3", "section": "21.1.1", "anchor": "#name-handshake", "para_id": "21.1.1-p1426", "text": "Address validation limits amplification attack targets to addresses for which an attacker can observe packets. ¶ Prior to address validation, endpoints are limited in what they are able to send.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.1-p6376-s4", "section": "21.1.1", "anchor": "#name-handshake", "para_id": "21.1.1-p1426", "text": "Endpoints cannot send data toward an unvalidated address in excess of three times the data received from that address. ¶ Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.1-p6377-s5", "section": "21.1.1", "anchor": "#name-handshake", "para_id": "21.1.1-p1426", "text": "The anti-amplification limit only applies when an endpoint responds to packets received from an unvalidated address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.1-p6378-s6", "section": "21.1.1", "anchor": "#name-handshake", "para_id": "21.1.1-p1426", "text": "The anti-amplification limit does not apply to clients when establishing a new connection or when initiating connection migration. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.1.1-p6379-s1", "section": "21.1.1.1", "anchor": "#name-anti-amplification", "para_id": "21.1.1.1-p1427", "text": "Address validation ( Section 8 ) is used to verify that an entity that claims a given address is able to receive packets at that address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.1.1-p6380-s2", "section": "21.1.1.1", "anchor": "#name-anti-amplification", "para_id": "21.1.1.1-p1427", "text": "Address validation limits amplification attack targets to addresses for which an attacker can observe packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.1-p6381-s1", "section": "21.1.1.1", "anchor": "#name-anti-amplification", "para_id": "21.1.1.1-p1428", "text": "Prior to address validation, endpoints are limited in what they are able to send.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.1.1-p6382-s2", "section": "21.1.1.1", "anchor": "#name-anti-amplification", "para_id": "21.1.1.1-p1428", "text": "Endpoints cannot send data toward an unvalidated address in excess of three times the data received from that address. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.1.1-p6383-s1", "section": "21.1.1.1", "anchor": "#name-anti-amplification", "para_id": "21.1.1.1-p1429", "text": "Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.1-p6384-s2", "section": "21.1.1.1", "anchor": "#name-anti-amplification", "para_id": "21.1.1.1-p1429", "text": "The anti-amplification limit only applies when an endpoint responds to packets received from an unvalidated address.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.1.1-p6385-s3", "section": "21.1.1.1", "anchor": "#name-anti-amplification", "para_id": "21.1.1.1-p1429", "text": "The anti-amplification limit does not apply to clients when establishing a new connection or when initiating connection migration. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.1.1-p6386-s1", "section": "21.1.1.1", "anchor": "#name-anti-amplification", "para_id": "21.1.1.1-p1430", "text": "21.1.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.1-p6387-s2", "section": "21.1.1.1", "anchor": "#name-anti-amplification", "para_id": "21.1.1.1-p1430", "text": "Server-Side DoS Computing the server's first flight for a full handshake is potentially expensive, requiring both a signature and a key exchange computation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.1-p6388-s3", "section": "21.1.1.1", "anchor": "#name-anti-amplification", "para_id": "21.1.1.1-p1430", "text": "In order to prevent computational DoS attacks, the Retry packet provides a cheap token exchange mechanism that allows servers to validate a client's IP address prior to doing any expensive computations at the cost of a single round trip.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.1-p6389-s4", "section": "21.1.1.1", "anchor": "#name-anti-amplification", "para_id": "21.1.1.1-p1430", "text": "After a successful handshake, servers can issue new tokens to a client, which will allow new connection establishment without incurring this cost. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.2-p6390-s1", "section": "21.1.1.2", "anchor": "#name-server-side-dos", "para_id": "21.1.1.2-p1431", "text": "Computing the server's first flight for a full handshake is potentially expensive, requiring both a signature and a key exchange computation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.2-p6391-s2", "section": "21.1.1.2", "anchor": "#name-server-side-dos", "para_id": "21.1.1.2-p1431", "text": "In order to prevent computational DoS attacks, the Retry packet provides a cheap token exchange mechanism that allows servers to validate a client's IP address prior to doing any expensive computations at the cost of a single round trip.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.2-p6392-s3", "section": "21.1.1.2", "anchor": "#name-server-side-dos", "para_id": "21.1.1.2-p1431", "text": "After a successful handshake, servers can issue new tokens to a client, which will allow new connection establishment without incurring this cost. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.2-p6393-s1", "section": "21.1.1.2", "anchor": "#name-server-side-dos", "para_id": "21.1.1.2-p1432", "text": "21.1.1.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.2-p6394-s2", "section": "21.1.1.2", "anchor": "#name-server-side-dos", "para_id": "21.1.1.2-p1432", "text": "On-Path Handshake Termination An on-path or off-path attacker can force a handshake to fail by replacing or racing Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.2-p6395-s3", "section": "21.1.1.2", "anchor": "#name-server-side-dos", "para_id": "21.1.1.2-p1432", "text": "Once valid Initial packets have been exchanged, subsequent Handshake packets are protected with the Handshake keys, and an on-path attacker cannot force handshake failure other than by dropping packets to cause endpoints to abandon the attempt. ¶ An on-path attacker can also replace the addresses of packets on either side and therefore cause the client or server to have an incorrect view of the remote addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.2-p6396-s4", "section": "21.1.1.2", "anchor": "#name-server-side-dos", "para_id": "21.1.1.2-p1432", "text": "Such an attack is indistinguishable from the functions performed by a NAT. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.3-p6397-s1", "section": "21.1.1.3", "anchor": "#name-on-path-handshake-terminati", "para_id": "21.1.1.3-p1433", "text": "An on-path or off-path attacker can force a handshake to fail by replacing or racing Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.3-p6398-s2", "section": "21.1.1.3", "anchor": "#name-on-path-handshake-terminati", "para_id": "21.1.1.3-p1433", "text": "Once valid Initial packets have been exchanged, subsequent Handshake packets are protected with the Handshake keys, and an on-path attacker cannot force handshake failure other than by dropping packets to cause endpoints to abandon the attempt. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.3-p6399-s1", "section": "21.1.1.3", "anchor": "#name-on-path-handshake-terminati", "para_id": "21.1.1.3-p1434", "text": "An on-path attacker can also replace the addresses of packets on either side and therefore cause the client or server to have an incorrect view of the remote addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.3-p6400-s2", "section": "21.1.1.3", "anchor": "#name-on-path-handshake-terminati", "para_id": "21.1.1.3-p1434", "text": "Such an attack is indistinguishable from the functions performed by a NAT. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.3-p6401-s1", "section": "21.1.1.3", "anchor": "#name-on-path-handshake-terminati", "para_id": "21.1.1.3-p1435", "text": "21.1.1.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.3-p6402-s2", "section": "21.1.1.3", "anchor": "#name-on-path-handshake-terminati", "para_id": "21.1.1.3-p1435", "text": "Parameter Negotiation The entire handshake is cryptographically protected, with the Initial packets being encrypted with per-version keys and the Handshake and later packets being encrypted with keys derived from the TLS key exchange.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.3-p6403-s3", "section": "21.1.1.3", "anchor": "#name-on-path-handshake-terminati", "para_id": "21.1.1.3-p1435", "text": "Further, parameter negotiation is folded into the TLS transcript and thus provides the same integrity guarantees as ordinary TLS negotiation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.3-p6404-s4", "section": "21.1.1.3", "anchor": "#name-on-path-handshake-terminati", "para_id": "21.1.1.3-p1435", "text": "An attacker can observe the client's transport parameters (as long as it knows the version-specific salt) but cannot observe the server's transport parameters and cannot influence parameter negotiation. ¶ Connection IDs are unencrypted but integrity protected in all packets. ¶ This version of QUIC does not incorporate a version negotiation mechanism; implementations of incompatible versions will simply fail to establish a connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.4-p6405-s1", "section": "21.1.1.4", "anchor": "#name-parameter-negotiation", "para_id": "21.1.1.4-p1436", "text": "The entire handshake is cryptographically protected, with the Initial packets being encrypted with per-version keys and the Handshake and later packets being encrypted with keys derived from the TLS key exchange.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.4-p6406-s2", "section": "21.1.1.4", "anchor": "#name-parameter-negotiation", "para_id": "21.1.1.4-p1436", "text": "Further, parameter negotiation is folded into the TLS transcript and thus provides the same integrity guarantees as ordinary TLS negotiation.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.4-p6407-s3", "section": "21.1.1.4", "anchor": "#name-parameter-negotiation", "para_id": "21.1.1.4-p1436", "text": "An attacker can observe the client's transport parameters (as long as it knows the version-specific salt) but cannot observe the server's transport parameters and cannot influence parameter negotiation. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.4-p6408-s1", "section": "21.1.1.4", "anchor": "#name-parameter-negotiation", "para_id": "21.1.1.4-p1437", "text": "Connection IDs are unencrypted but integrity protected in all packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.4-p6409-s1", "section": "21.1.1.4", "anchor": "#name-parameter-negotiation", "para_id": "21.1.1.4-p1438", "text": "This version of QUIC does not incorporate a version negotiation mechanism; implementations of incompatible versions will simply fail to establish a connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.4-p6410-s1", "section": "21.1.1.4", "anchor": "#name-parameter-negotiation", "para_id": "21.1.1.4-p1439", "text": "21.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.4-p6411-s2", "section": "21.1.1.4", "anchor": "#name-parameter-negotiation", "para_id": "21.1.1.4-p1439", "text": "Protected Packets Packet protection ( Section 12.1 ) applies authenticated encryption to all packets except Version Negotiation packets, though Initial and Retry packets have limited protection due to the use of version-specific keying material; see [ QUIC-TLS ] for more details.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.4-p6412-s3", "section": "21.1.1.4", "anchor": "#name-parameter-negotiation", "para_id": "21.1.1.4-p1439", "text": "This section considers passive and active attacks against protected packets. ¶ Both on-path and off-path attackers can mount a passive attack in which they save observed packets for an offline attack against packet protection at a future time; this is true for any observer of any packet on any network. ¶ An attacker that injects packets without being able to observe valid packets for a connection is unlikely to be successful, since packet protection ensures that valid packets are only generated by endpoints that possess the key material established during the handshake; see Sections 7 and 21.1.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.4-p6413-s4", "section": "21.1.1.4", "anchor": "#name-parameter-negotiation", "para_id": "21.1.1.4-p1439", "text": "Similarly, any active attacker that observes packets and attempts to insert new data or modify existing data in those packets should not be able to generate packets deemed valid by the receiving endpoint, other than Initial packets. ¶ A spoofing attack, in which an active attacker rewrites unprotected parts of a packet that it forwards or injects, such as the source or destination address, is only effective if the attacker can forward packets to the original endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.1.4-p6414-s5", "section": "21.1.1.4", "anchor": "#name-parameter-negotiation", "para_id": "21.1.1.4-p1439", "text": "Packet protection ensures that the packet payloads can only be processed by the endpoints that completed the handshake, and invalid packets are ignored by those endpoints. ¶ An attacker can also modify the boundaries between packets and UDP datagrams, causing multiple packets to be coalesced into a single datagram or splitting coalesced packets into multiple datagrams.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.1.4-p6415-s6", "section": "21.1.1.4", "anchor": "#name-parameter-negotiation", "para_id": "21.1.1.4-p1439", "text": "Aside from datagrams containing Initial packets, which require padding, modification of how packets are arranged in datagrams has no functional effect on a connection, although it might change some performance characteristics. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6416-s1", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1440", "text": "Packet protection ( Section 12.1 ) applies authenticated encryption to all packets except Version Negotiation packets, though Initial and Retry packets have limited protection due to the use of version-specific keying material; see [ QUIC-TLS ] for more details.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6417-s2", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1440", "text": "This section considers passive and active attacks against protected packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6418-s1", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1441", "text": "Both on-path and off-path attackers can mount a passive attack in which they save observed packets for an offline attack against packet protection at a future time; this is true for any observer of any packet on any network. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6419-s1", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1442", "text": "An attacker that injects packets without being able to observe valid packets for a connection is unlikely to be successful, since packet protection ensures that valid packets are only generated by endpoints that possess the key material established during the handshake; see Sections 7 and 21.1.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6420-s2", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1442", "text": "Similarly, any active attacker that observes packets and attempts to insert new data or modify existing data in those packets should not be able to generate packets deemed valid by the receiving endpoint, other than Initial packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6421-s1", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1443", "text": "A spoofing attack, in which an active attacker rewrites unprotected parts of a packet that it forwards or injects, such as the source or destination address, is only effective if the attacker can forward packets to the original endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.2-p6422-s2", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1443", "text": "Packet protection ensures that the packet payloads can only be processed by the endpoints that completed the handshake, and invalid packets are ignored by those endpoints. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6423-s1", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1444", "text": "An attacker can also modify the boundaries between packets and UDP datagrams, causing multiple packets to be coalesced into a single datagram or splitting coalesced packets into multiple datagrams.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6424-s2", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1444", "text": "Aside from datagrams containing Initial packets, which require padding, modification of how packets are arranged in datagrams has no functional effect on a connection, although it might change some performance characteristics. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6425-s1", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "21.1.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6426-s2", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "Connection Migration Connection migration ( Section 9 ) provides endpoints with the ability to transition between IP addresses and ports on multiple paths, using one path at a time for transmission and receipt of non-probing frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.1.2-p6427-s3", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "Path validation ( Section 8.2 ) establishes that a peer is both willing and able to receive packets sent on a particular path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.2-p6428-s4", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "This helps reduce the effects of address spoofing by limiting the number of packets sent to a spoofed address. ¶ This section describes the intended security properties of connection migration under various types of DoS attacks. ¶ 21.1.3.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6429-s5", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "On-Path Active Attacks An attacker that can cause a packet it observes to no longer reach its intended destination is considered an on-path attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6430-s6", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "When an attacker is present between a client and server, endpoints are required to send packets through the attacker to establish connectivity on a given path. ¶ An on-path attacker can: ¶ Inspect packets ¶ Modify IP and UDP packet headers ¶ Inject new packets ¶ Delay packets ¶ Reorder packets ¶ Drop packets ¶ Split and merge datagrams along packet boundaries ¶ An on-path attacker cannot: ¶ Modify an authenticated portion of a packet and cause the recipient to accept that packet ¶ An on-path attacker has the opportunity to modify the packets that it observes; however, any modifications to an authenticated portion of a packet will cause it to be dropped by the receiving endpoint as invalid, as packet payloads are both authenticated and encrypted. ¶ QUIC aims to constrain the capabilities of an on-path attacker as follows: ¶ An on-path attacker can prevent the use of a path for a connection, causing the connection to fail if it cannot use a different path that does not contain the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.2-p6431-s7", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "This can be achieved by dropping all packets, modifying them so that they fail to decrypt, or other methods. ¶ An on-path attacker can prevent migration to a new path for which the attacker is also on-path by causing path validation to fail on the new path. ¶ An on-path attacker cannot prevent a client from migrating to a path for which the attacker is not on-path. ¶ An on-path attacker can reduce the throughput of a connection by delaying packets or dropping them. ¶ An on-path attacker cannot cause an endpoint to accept a packet for which it has modified an authenticated portion of that packet. ¶ 21.1.3.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6432-s8", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "Off-Path Active Attacks An off-path attacker is not directly on the path between a client and server but could be able to obtain copies of some or all packets sent between the client and the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6433-s9", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "It is also able to send copies of those packets to either endpoint. ¶ An off-path attacker can: ¶ Inspect packets ¶ Inject new packets ¶ Reorder injected packets ¶ An off-path attacker cannot: ¶ Modify packets sent by endpoints ¶ Delay packets ¶ Drop packets ¶ Reorder original packets ¶ An off-path attacker can create modified copies of packets that it has observed and inject those copies into the network, potentially with spoofed source and destination addresses. ¶ For the purposes of this discussion, it is assumed that an off-path attacker has the ability to inject a modified copy of a packet into the network that will reach the destination endpoint prior to the arrival of the original packet observed by the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.2-p6434-s10", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "In other words, an attacker has the ability to consistently \"win\" a race with the legitimate packets between the endpoints, potentially causing the original packet to be ignored by the recipient. ¶ It is also assumed that an attacker has the resources necessary to affect NAT state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.1.2-p6435-s11", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "In particular, an attacker can cause an endpoint to lose its NAT binding and then obtain the same port for use with its own traffic. ¶ QUIC aims to constrain the capabilities of an off-path attacker as follows: ¶ An off-path attacker can race packets and attempt to become a \"limited\" on-path attacker. ¶ An off-path attacker can cause path validation to succeed for forwarded packets with the source address listed as the off-path attacker as long as it can provide improved connectivity between the client and the server. ¶ An off-path attacker cannot cause a connection to close once the handshake has completed. ¶ An off-path attacker cannot cause migration to a new path to fail if it cannot observe the new path. ¶ An off-path attacker can become a limited on-path attacker during migration to a new path for which it is also an off-path attacker. ¶ An off-path attacker can become a limited on-path attacker by affecting shared NAT state such that it sends packets to the server from the same IP address and port that the client originally used. ¶ 21.1.3.3.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.1.2-p6436-s12", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "Limited On-Path Active Attacks A limited on-path attacker is an off-path attacker that has offered improved routing of packets by duplicating and forwarding original packets between the server and the client, causing those packets to arrive before the original copies such that the original packets are dropped by the destination endpoint. ¶ A limited on-path attacker differs from an on-path attacker in that it is not on the original path between endpoints, and therefore the original packets sent by an endpoint are still reaching their destination.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6437-s13", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "This means that a future failure to route copied packets to the destination faster than their original path will not prevent the original packets from reaching the destination. ¶ A limited on-path attacker can: ¶ Inspect packets ¶ Inject new packets ¶ Modify unencrypted packet headers ¶ Reorder packets ¶ A limited on-path attacker cannot: ¶ Delay packets so that they arrive later than packets sent on the original path ¶ Drop packets ¶ Modify the authenticated and encrypted portion of a packet and cause the recipient to accept that packet ¶ A limited on-path attacker can only delay packets up to the point that the original packets arrive before the duplicate packets, meaning that it cannot offer routing with worse latency than the original path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.2-p6438-s14", "section": "21.1.2", "anchor": "#name-protected-packets-2", "para_id": "21.1.2-p1445", "text": "If a limited on-path attacker drops packets, the original copy will still arrive at the destination endpoint. ¶ QUIC aims to constrain the capabilities of a limited off-path attacker as follows: ¶ A limited on-path attacker cannot cause a connection to close once the handshake has completed. ¶ A limited on-path attacker cannot cause an idle connection to close if the client is first to resume activity. ¶ A limited on-path attacker can cause an idle connection to be deemed lost if the server is the first to resume activity. ¶ Note that these guarantees are the same guarantees provided for any NAT, for the same reasons. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3-p6439-s1", "section": "21.1.3", "anchor": "#name-connection-migration-2", "para_id": "21.1.3-p1446", "text": "Connection migration ( Section 9 ) provides endpoints with the ability to transition between IP addresses and ports on multiple paths, using one path at a time for transmission and receipt of non-probing frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.1.3-p6440-s2", "section": "21.1.3", "anchor": "#name-connection-migration-2", "para_id": "21.1.3-p1446", "text": "Path validation ( Section 8.2 ) establishes that a peer is both willing and able to receive packets sent on a particular path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3-p6441-s3", "section": "21.1.3", "anchor": "#name-connection-migration-2", "para_id": "21.1.3-p1446", "text": "This helps reduce the effects of address spoofing by limiting the number of packets sent to a spoofed address. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3-p6442-s1", "section": "21.1.3", "anchor": "#name-connection-migration-2", "para_id": "21.1.3-p1447", "text": "This section describes the intended security properties of connection migration under various types of DoS attacks. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3-p6443-s1", "section": "21.1.3", "anchor": "#name-connection-migration-2", "para_id": "21.1.3-p1448", "text": "21.1.3.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3-p6444-s2", "section": "21.1.3", "anchor": "#name-connection-migration-2", "para_id": "21.1.3-p1448", "text": "On-Path Active Attacks An attacker that can cause a packet it observes to no longer reach its intended destination is considered an on-path attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3-p6445-s3", "section": "21.1.3", "anchor": "#name-connection-migration-2", "para_id": "21.1.3-p1448", "text": "When an attacker is present between a client and server, endpoints are required to send packets through the attacker to establish connectivity on a given path. ¶ An on-path attacker can: ¶ Inspect packets ¶ Modify IP and UDP packet headers ¶ Inject new packets ¶ Delay packets ¶ Reorder packets ¶ Drop packets ¶ Split and merge datagrams along packet boundaries ¶ An on-path attacker cannot: ¶ Modify an authenticated portion of a packet and cause the recipient to accept that packet ¶ An on-path attacker has the opportunity to modify the packets that it observes; however, any modifications to an authenticated portion of a packet will cause it to be dropped by the receiving endpoint as invalid, as packet payloads are both authenticated and encrypted. ¶ QUIC aims to constrain the capabilities of an on-path attacker as follows: ¶ An on-path attacker can prevent the use of a path for a connection, causing the connection to fail if it cannot use a different path that does not contain the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3-p6446-s4", "section": "21.1.3", "anchor": "#name-connection-migration-2", "para_id": "21.1.3-p1448", "text": "This can be achieved by dropping all packets, modifying them so that they fail to decrypt, or other methods. ¶ An on-path attacker can prevent migration to a new path for which the attacker is also on-path by causing path validation to fail on the new path. ¶ An on-path attacker cannot prevent a client from migrating to a path for which the attacker is not on-path. ¶ An on-path attacker can reduce the throughput of a connection by delaying packets or dropping them. ¶ An on-path attacker cannot cause an endpoint to accept a packet for which it has modified an authenticated portion of that packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6447-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1449", "text": "An attacker that can cause a packet it observes to no longer reach its intended destination is considered an on-path attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6448-s2", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1449", "text": "When an attacker is present between a client and server, endpoints are required to send packets through the attacker to establish connectivity on a given path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.1-p6449-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1450", "text": "An on-path attacker can: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6450-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1451", "text": "Inspect packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6451-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1452", "text": "Modify IP and UDP packet headers ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6452-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1453", "text": "Inject new packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6453-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1454", "text": "Delay packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6454-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1455", "text": "Reorder packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6455-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1456", "text": "Drop packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6456-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1457", "text": "Split and merge datagrams along packet boundaries ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6457-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1458", "text": "An on-path attacker cannot: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6458-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1459", "text": "Modify an authenticated portion of a packet and cause the recipient to accept that packet ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6459-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1460", "text": "An on-path attacker has the opportunity to modify the packets that it observes; however, any modifications to an authenticated portion of a packet will cause it to be dropped by the receiving endpoint as invalid, as packet payloads are both authenticated and encrypted. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6460-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1461", "text": "QUIC aims to constrain the capabilities of an on-path attacker as follows: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6461-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1462", "text": "An on-path attacker can prevent the use of a path for a connection, causing the connection to fail if it cannot use a different path that does not contain the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.1-p6462-s2", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1462", "text": "This can be achieved by dropping all packets, modifying them so that they fail to decrypt, or other methods. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6463-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1463", "text": "An on-path attacker can prevent migration to a new path for which the attacker is also on-path by causing path validation to fail on the new path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6464-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1464", "text": "An on-path attacker cannot prevent a client from migrating to a path for which the attacker is not on-path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6465-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1465", "text": "An on-path attacker can reduce the throughput of a connection by delaying packets or dropping them. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6466-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1466", "text": "An on-path attacker cannot cause an endpoint to accept a packet for which it has modified an authenticated portion of that packet. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6467-s1", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1467", "text": "21.1.3.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6468-s2", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1467", "text": "Off-Path Active Attacks An off-path attacker is not directly on the path between a client and server but could be able to obtain copies of some or all packets sent between the client and the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.1-p6469-s3", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1467", "text": "It is also able to send copies of those packets to either endpoint. ¶ An off-path attacker can: ¶ Inspect packets ¶ Inject new packets ¶ Reorder injected packets ¶ An off-path attacker cannot: ¶ Modify packets sent by endpoints ¶ Delay packets ¶ Drop packets ¶ Reorder original packets ¶ An off-path attacker can create modified copies of packets that it has observed and inject those copies into the network, potentially with spoofed source and destination addresses. ¶ For the purposes of this discussion, it is assumed that an off-path attacker has the ability to inject a modified copy of a packet into the network that will reach the destination endpoint prior to the arrival of the original packet observed by the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.1-p6470-s4", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1467", "text": "In other words, an attacker has the ability to consistently \"win\" a race with the legitimate packets between the endpoints, potentially causing the original packet to be ignored by the recipient. ¶ It is also assumed that an attacker has the resources necessary to affect NAT state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.1.3.1-p6471-s5", "section": "21.1.3.1", "anchor": "#name-on-path-active-attacks", "para_id": "21.1.3.1-p1467", "text": "In particular, an attacker can cause an endpoint to lose its NAT binding and then obtain the same port for use with its own traffic. ¶ QUIC aims to constrain the capabilities of an off-path attacker as follows: ¶ An off-path attacker can race packets and attempt to become a \"limited\" on-path attacker. ¶ An off-path attacker can cause path validation to succeed for forwarded packets with the source address listed as the off-path attacker as long as it can provide improved connectivity between the client and the server. ¶ An off-path attacker cannot cause a connection to close once the handshake has completed. ¶ An off-path attacker cannot cause migration to a new path to fail if it cannot observe the new path. ¶ An off-path attacker can become a limited on-path attacker during migration to a new path for which it is also an off-path attacker. ¶ An off-path attacker can become a limited on-path attacker by affecting shared NAT state such that it sends packets to the server from the same IP address and port that the client originally used. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.1.3.2-p6472-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1468", "text": "An off-path attacker is not directly on the path between a client and server but could be able to obtain copies of some or all packets sent between the client and the server.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6473-s2", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1468", "text": "It is also able to send copies of those packets to either endpoint. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.2-p6474-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1469", "text": "An off-path attacker can: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6475-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1470", "text": "Inspect packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6476-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1471", "text": "Inject new packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6477-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1472", "text": "Reorder injected packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6478-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1473", "text": "An off-path attacker cannot: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6479-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1474", "text": "Modify packets sent by endpoints ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6480-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1475", "text": "Delay packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6481-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1476", "text": "Drop packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6482-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1477", "text": "Reorder original packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6483-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1478", "text": "An off-path attacker can create modified copies of packets that it has observed and inject those copies into the network, potentially with spoofed source and destination addresses. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6484-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1479", "text": "For the purposes of this discussion, it is assumed that an off-path attacker has the ability to inject a modified copy of a packet into the network that will reach the destination endpoint prior to the arrival of the original packet observed by the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6485-s2", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1479", "text": "In other words, an attacker has the ability to consistently \"win\" a race with the legitimate packets between the endpoints, potentially causing the original packet to be ignored by the recipient. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6486-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1480", "text": "It is also assumed that an attacker has the resources necessary to affect NAT state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.1.3.2-p6487-s2", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1480", "text": "In particular, an attacker can cause an endpoint to lose its NAT binding and then obtain the same port for use with its own traffic. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.2-p6488-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1481", "text": "QUIC aims to constrain the capabilities of an off-path attacker as follows: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6489-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1482", "text": "An off-path attacker can race packets and attempt to become a \"limited\" on-path attacker. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6490-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1483", "text": "An off-path attacker can cause path validation to succeed for forwarded packets with the source address listed as the off-path attacker as long as it can provide improved connectivity between the client and the server. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6491-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1484", "text": "An off-path attacker cannot cause a connection to close once the handshake has completed. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6492-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1485", "text": "An off-path attacker cannot cause migration to a new path to fail if it cannot observe the new path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.2-p6493-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1486", "text": "An off-path attacker can become a limited on-path attacker during migration to a new path for which it is also an off-path attacker. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6494-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1487", "text": "An off-path attacker can become a limited on-path attacker by affecting shared NAT state such that it sends packets to the server from the same IP address and port that the client originally used. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.1.3.2-p6495-s1", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1488", "text": "21.1.3.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6496-s2", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1488", "text": "Limited On-Path Active Attacks A limited on-path attacker is an off-path attacker that has offered improved routing of packets by duplicating and forwarding original packets between the server and the client, causing those packets to arrive before the original copies such that the original packets are dropped by the destination endpoint. ¶ A limited on-path attacker differs from an on-path attacker in that it is not on the original path between endpoints, and therefore the original packets sent by an endpoint are still reaching their destination.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6497-s3", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1488", "text": "This means that a future failure to route copied packets to the destination faster than their original path will not prevent the original packets from reaching the destination. ¶ A limited on-path attacker can: ¶ Inspect packets ¶ Inject new packets ¶ Modify unencrypted packet headers ¶ Reorder packets ¶ A limited on-path attacker cannot: ¶ Delay packets so that they arrive later than packets sent on the original path ¶ Drop packets ¶ Modify the authenticated and encrypted portion of a packet and cause the recipient to accept that packet ¶ A limited on-path attacker can only delay packets up to the point that the original packets arrive before the duplicate packets, meaning that it cannot offer routing with worse latency than the original path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.2-p6498-s4", "section": "21.1.3.2", "anchor": "#name-off-path-active-attacks", "para_id": "21.1.3.2-p1488", "text": "If a limited on-path attacker drops packets, the original copy will still arrive at the destination endpoint. ¶ QUIC aims to constrain the capabilities of a limited off-path attacker as follows: ¶ A limited on-path attacker cannot cause a connection to close once the handshake has completed. ¶ A limited on-path attacker cannot cause an idle connection to close if the client is first to resume activity. ¶ A limited on-path attacker can cause an idle connection to be deemed lost if the server is the first to resume activity. ¶ Note that these guarantees are the same guarantees provided for any NAT, for the same reasons. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.3-p6499-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1489", "text": "A limited on-path attacker is an off-path attacker that has offered improved routing of packets by duplicating and forwarding original packets between the server and the client, causing those packets to arrive before the original copies such that the original packets are dropped by the destination endpoint. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6500-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1490", "text": "A limited on-path attacker differs from an on-path attacker in that it is not on the original path between endpoints, and therefore the original packets sent by an endpoint are still reaching their destination.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6501-s2", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1490", "text": "This means that a future failure to route copied packets to the destination faster than their original path will not prevent the original packets from reaching the destination. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6502-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1491", "text": "A limited on-path attacker can: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6503-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1492", "text": "Inspect packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6504-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1493", "text": "Inject new packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6505-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1494", "text": "Modify unencrypted packet headers ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6506-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1495", "text": "Reorder packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6507-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1496", "text": "A limited on-path attacker cannot: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6508-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1497", "text": "Delay packets so that they arrive later than packets sent on the original path ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6509-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1498", "text": "Drop packets ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6510-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1499", "text": "Modify the authenticated and encrypted portion of a packet and cause the recipient to accept that packet ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6511-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1500", "text": "A limited on-path attacker can only delay packets up to the point that the original packets arrive before the duplicate packets, meaning that it cannot offer routing with worse latency than the original path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6512-s2", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1500", "text": "If a limited on-path attacker drops packets, the original copy will still arrive at the destination endpoint. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.3-p6513-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1501", "text": "QUIC aims to constrain the capabilities of a limited off-path attacker as follows: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6514-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1502", "text": "A limited on-path attacker cannot cause a connection to close once the handshake has completed. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6515-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1503", "text": "A limited on-path attacker cannot cause an idle connection to close if the client is first to resume activity. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.3-p6516-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1504", "text": "A limited on-path attacker can cause an idle connection to be deemed lost if the server is the first to resume activity. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.3-p6517-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1505", "text": "Note that these guarantees are the same guarantees provided for any NAT, for the same reasons. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6518-s1", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "21.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6519-s2", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "Handshake Denial of Service As an encrypted and authenticated transport, QUIC provides a range of protections against denial of service.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6520-s3", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "Once the cryptographic handshake is complete, QUIC endpoints discard most packets that are not authenticated, greatly limiting the ability of an attacker to interfere with existing connections. ¶ Once a connection is established, QUIC endpoints might accept some unauthenticated ICMP packets (see Section 14.2.1 ), but the use of these packets is extremely limited.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6521-s4", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "The only other type of packet that an endpoint might accept is a stateless reset ( Section 10.3 ), which relies on the token being kept secret until it is used. ¶ During the creation of a connection, QUIC only provides protection against attacks from off the network path.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.1.3.3-p6522-s5", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "All QUIC packets contain proof that the recipient saw a preceding packet from its peer. ¶ Addresses cannot change during the handshake, so endpoints can discard packets that are received on a different network path. ¶ The Source and Destination Connection ID fields are the primary means of protection against an off-path attack during the handshake; see Section 8.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.3-p6523-s6", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "These are required to match those set by a peer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6524-s7", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "Except for Initial and Stateless Resets, an endpoint only accepts packets that include a Destination Connection ID field that matches a value the endpoint previously chose.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.1.3.3-p6525-s8", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "This is the only protection offered for Version Negotiation packets. ¶ The Destination Connection ID field in an Initial packet is selected by a client to be unpredictable, which serves an additional purpose.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6526-s9", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "The packets that carry the cryptographic handshake are protected with a key that is derived from this connection ID and a salt specific to the QUIC version.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6527-s10", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "This allows endpoints to use the same process for authenticating packets that they receive as they use after the cryptographic handshake completes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.3-p6528-s11", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "Packets that cannot be authenticated are discarded.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6529-s12", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "Protecting packets in this fashion provides a strong assurance that the sender of the packet saw the Initial packet and understood it. ¶ These protections are not intended to be effective against an attacker that is able to receive QUIC packets prior to the connection being established.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.3-p6530-s13", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "Such an attacker can potentially send packets that will be accepted by QUIC endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.1.3.3-p6531-s14", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "This version of QUIC attempts to detect this sort of attack, but it expects that endpoints will fail to establish a connection rather than recovering.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6532-s15", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "For the most part, the cryptographic handshake protocol [ QUIC-TLS ] is responsible for detecting tampering during the handshake. ¶ Endpoints are permitted to use other methods to detect and attempt to recover from interference with the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.1.3.3-p6533-s16", "section": "21.1.3.3", "anchor": "#name-limited-on-path-active-atta", "para_id": "21.1.3.3-p1506", "text": "Invalid packets can be identified and discarded using other methods, but no specific method is mandated in this document. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6534-s1", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1507", "text": "As an encrypted and authenticated transport, QUIC provides a range of protections against denial of service.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6535-s2", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1507", "text": "Once the cryptographic handshake is complete, QUIC endpoints discard most packets that are not authenticated, greatly limiting the ability of an attacker to interfere with existing connections. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6536-s1", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1508", "text": "Once a connection is established, QUIC endpoints might accept some unauthenticated ICMP packets (see Section 14.2.1 ), but the use of these packets is extremely limited.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6537-s2", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1508", "text": "The only other type of packet that an endpoint might accept is a stateless reset ( Section 10.3 ), which relies on the token being kept secret until it is used. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.2-p6538-s1", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1509", "text": "During the creation of a connection, QUIC only provides protection against attacks from off the network path.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6539-s2", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1509", "text": "All QUIC packets contain proof that the recipient saw a preceding packet from its peer. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6540-s1", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1510", "text": "Addresses cannot change during the handshake, so endpoints can discard packets that are received on a different network path. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.2-p6541-s1", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1511", "text": "The Source and Destination Connection ID fields are the primary means of protection against an off-path attack during the handshake; see Section 8.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6542-s2", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1511", "text": "These are required to match those set by a peer.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6543-s3", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1511", "text": "Except for Initial and Stateless Resets, an endpoint only accepts packets that include a Destination Connection ID field that matches a value the endpoint previously chose.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.2-p6544-s4", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1511", "text": "This is the only protection offered for Version Negotiation packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6545-s1", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1512", "text": "The Destination Connection ID field in an Initial packet is selected by a client to be unpredictable, which serves an additional purpose.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6546-s2", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1512", "text": "The packets that carry the cryptographic handshake are protected with a key that is derived from this connection ID and a salt specific to the QUIC version.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6547-s3", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1512", "text": "This allows endpoints to use the same process for authenticating packets that they receive as they use after the cryptographic handshake completes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.2-p6548-s4", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1512", "text": "Packets that cannot be authenticated are discarded.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6549-s5", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1512", "text": "Protecting packets in this fashion provides a strong assurance that the sender of the packet saw the Initial packet and understood it. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6550-s1", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1513", "text": "These protections are not intended to be effective against an attacker that is able to receive QUIC packets prior to the connection being established.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.2-p6551-s2", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1513", "text": "Such an attacker can potentially send packets that will be accepted by QUIC endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.2-p6552-s3", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1513", "text": "This version of QUIC attempts to detect this sort of attack, but it expects that endpoints will fail to establish a connection rather than recovering.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6553-s4", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1513", "text": "For the most part, the cryptographic handshake protocol [ QUIC-TLS ] is responsible for detecting tampering during the handshake. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6554-s1", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1514", "text": "Endpoints are permitted to use other methods to detect and attempt to recover from interference with the handshake.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6555-s2", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1514", "text": "Invalid packets can be identified and discarded using other methods, but no specific method is mandated in this document. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6556-s1", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1515", "text": "21.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6557-s2", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1515", "text": "Amplification Attack An attacker might be able to receive an address validation token ( Section 8 ) from a server and then release the IP address it used to acquire that token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.2-p6558-s3", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1515", "text": "At a later time, the attacker can initiate a 0-RTT connection with a server by spoofing this same address, which might now address a different (victim) endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.2-p6559-s4", "section": "21.2", "anchor": "#name-handshake-denial-of-service", "para_id": "21.2-p1515", "text": "The attacker can thus potentially cause the server to send an initial congestion window's worth of data towards the victim. ¶ Servers SHOULD provide mitigations for this attack by limiting the usage and lifetime of address validation tokens; see Section 8.1.3 . ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.3-p6560-s1", "section": "21.3", "anchor": "#name-amplification-attack", "para_id": "21.3-p1516", "text": "An attacker might be able to receive an address validation token ( Section 8 ) from a server and then release the IP address it used to acquire that token.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.3-p6561-s2", "section": "21.3", "anchor": "#name-amplification-attack", "para_id": "21.3-p1516", "text": "At a later time, the attacker can initiate a 0-RTT connection with a server by spoofing this same address, which might now address a different (victim) endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.3-p6562-s3", "section": "21.3", "anchor": "#name-amplification-attack", "para_id": "21.3-p1516", "text": "The attacker can thus potentially cause the server to send an initial congestion window's worth of data towards the victim. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.3-p6563-s1", "section": "21.3", "anchor": "#name-amplification-attack", "para_id": "21.3-p1517", "text": "Servers SHOULD provide mitigations for this attack by limiting the usage and lifetime of address validation tokens; see Section 8.1.3 . ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.3-p6564-s1", "section": "21.3", "anchor": "#name-amplification-attack", "para_id": "21.3-p1518", "text": "21.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.3-p6565-s2", "section": "21.3", "anchor": "#name-amplification-attack", "para_id": "21.3-p1518", "text": "Optimistic ACK Attack An endpoint that acknowledges packets it has not received might cause a congestion controller to permit sending at rates beyond what the network supports.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.3-p6566-s3", "section": "21.3", "anchor": "#name-amplification-attack", "para_id": "21.3-p1518", "text": "An endpoint MAY skip packet numbers when sending packets to detect this behavior.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.3-p6567-s4", "section": "21.3", "anchor": "#name-amplification-attack", "para_id": "21.3-p1518", "text": "An endpoint can then immediately close the connection with a connection error of type PROTOCOL_VIOLATION; see Section 10.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6568-s1", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1519", "text": "An endpoint that acknowledges packets it has not received might cause a congestion controller to permit sending at rates beyond what the network supports.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6569-s2", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1519", "text": "An endpoint MAY skip packet numbers when sending packets to detect this behavior.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.4-p6570-s3", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1519", "text": "An endpoint can then immediately close the connection with a connection error of type PROTOCOL_VIOLATION; see Section 10.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6571-s1", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "21.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6572-s2", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Request Forgery Attacks A request forgery attack occurs where an endpoint causes its peer to issue a request towards a victim, with the request controlled by the endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6573-s3", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Request forgery attacks aim to provide an attacker with access to capabilities of its peer that might otherwise be unavailable to the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6574-s4", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "For a networking protocol, a request forgery attack is often used to exploit any implicit authorization conferred on the peer by the victim due to the peer's location in the network. ¶ For request forgery to be effective, an attacker needs to be able to influence what packets the peer sends and where these packets are sent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6575-s5", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "If an attacker can target a vulnerable service with a controlled payload, that service might perform actions that are attributed to the attacker's peer but are decided by the attacker. ¶ For example, cross-site request forgery [ CSRF ] exploits on the Web cause a client to issue requests that include authorization cookies [ COOKIE ] , allowing one site access to information and actions that are intended to be restricted to a different site. ¶ As QUIC runs over UDP, the primary attack modality of concern is one where an attacker can select the address to which its peer sends UDP datagrams and can control some of the unprotected content of those packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6576-s6", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "As much of the data sent by QUIC endpoints is protected, this includes control over ciphertext.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6577-s7", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "An attack is successful if an attacker can cause a peer to send a UDP datagram to a host that will perform some action based on content in the datagram. ¶ This section discusses ways in which QUIC might be used for request forgery attacks. ¶ This section also describes limited countermeasures that can be implemented by QUIC endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6578-s8", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "These mitigations can be employed unilaterally by a QUIC implementation or deployment, without potential targets for request forgery attacks taking action.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6579-s9", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "However, these countermeasures could be insufficient if UDP-based services do not properly authorize requests. ¶ Because the migration attack described in Section 21.5.4 is quite powerful and does not have adequate countermeasures, QUIC server implementations should assume that attackers can cause them to generate arbitrary UDP payloads to arbitrary destinations.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6580-s10", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "QUIC servers SHOULD NOT be deployed in networks that do not deploy ingress filtering [ BCP38 ] and also have inadequately secured UDP endpoints. ¶ Although it is not generally possible to ensure that clients are not co-located with vulnerable endpoints, this version of QUIC does not allow servers to migrate, thus preventing spoofed migration attacks on clients.", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.4-p6581-s11", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Any future extension that allows server migration MUST also define countermeasures for forgery attacks. ¶ 21.5.1.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.4-p6582-s12", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Control Options for Endpoints QUIC offers some opportunities for an attacker to influence or control where its peer sends UDP datagrams: ¶ initial connection establishment ( Section 7 ), where a server is able to choose where a client sends datagrams -- for example, by populating DNS records; ¶ preferred addresses ( Section 9.6 ), where a server is able to choose where a client sends datagrams; ¶ spoofed connection migrations ( Section 9.3.1 ), where a client is able to use source address spoofing to select where a server sends subsequent datagrams; and ¶ spoofed packets that cause a server to send a Version Negotiation packet ( Section 21.5.5 ). ¶ In all cases, the attacker can cause its peer to send datagrams to a victim that might not understand QUIC.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6583-s13", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "That is, these packets are sent by the peer prior to address validation; see Section 8 . ¶ Outside of the encrypted portion of packets, QUIC offers an endpoint several options for controlling the content of UDP datagrams that its peer sends.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6584-s14", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "The Destination Connection ID field offers direct control over bytes that appear early in packets sent by the peer; see Section 5.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6585-s15", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "The Token field in Initial packets offers a server control over other bytes of Initial packets; see Section 17.2.2 . ¶ There are no measures in this version of QUIC to prevent indirect control over the encrypted portions of packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6586-s16", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "It is necessary to assume that endpoints are able to control the contents of frames that a peer sends, especially those frames that convey application data, such as STREAM frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.4-p6587-s17", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Though this depends to some degree on details of the application protocol, some control is possible in many protocol usage contexts.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6588-s18", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "As the attacker has access to packet protection keys, they are likely to be capable of predicting how a peer will encrypt future packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6589-s19", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Successful control over datagram content then only requires that the attacker be able to predict the packet number and placement of frames in packets with some amount of reliability. ¶ This section assumes that limiting control over datagram content is not feasible.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.4-p6590-s20", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "The focus of the mitigations in subsequent sections is on limiting the ways in which datagrams that are sent prior to address validation can be used for request forgery. ¶ 21.5.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6591-s21", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Request Forgery with Client Initial Packets An attacker acting as a server can choose the IP address and port on which it advertises its availability, so Initial packets from clients are assumed to be available for use in this sort of attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6592-s22", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "The address validation implicit in the handshake ensures that -- for a new connection -- a client will not send other types of packets to a destination that does not understand QUIC or is not willing to accept a QUIC connection. ¶ Initial packet protection ( Section 5.2 of [ QUIC-TLS ] ) makes it difficult for servers to control the content of Initial packets sent by clients.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6593-s23", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "A client choosing an unpredictable Destination Connection ID ensures that servers are unable to control any of the encrypted portion of Initial packets from clients. ¶ However, the Token field is open to server control and does allow a server to use clients to mount request forgery attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6594-s24", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "The use of tokens provided with the NEW_TOKEN frame ( Section 8.1.3 ) offers the only option for request forgery during connection establishment. ¶ Clients, however, are not obligated to use the NEW_TOKEN frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.4-p6595-s25", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Request forgery attacks that rely on the Token field can be avoided if clients send an empty Token field when the server address has changed from when the NEW_TOKEN frame was received. ¶ Clients could avoid using NEW_TOKEN if the server address changes.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.4-p6596-s26", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "However, not including a Token field could adversely affect performance.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6597-s27", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Servers could rely on NEW_TOKEN to enable the sending of data in excess of the three-times limit on sending data; see Section 8.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6598-s28", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "In particular, this affects cases where clients use 0-RTT to request data from servers. ¶ Sending a Retry packet ( Section 17.2.5 ) offers a server the option to change the Token field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6599-s29", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "After sending a Retry, the server can also control the Destination Connection ID field of subsequent Initial packets from the client.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6600-s30", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "This also might allow indirect control over the encrypted content of Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6601-s31", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "However, the exchange of a Retry packet validates the server's address, thereby preventing the use of subsequent Initial packets for request forgery. ¶ 21.5.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6602-s32", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Request Forgery with Preferred Addresses Servers can specify a preferred address, which clients then migrate to after confirming the handshake; see Section 9.6 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6603-s33", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "The Destination Connection ID field of packets that the client sends to a preferred address can be used for request forgery. ¶ A client MUST NOT send non-probing frames to a preferred address prior to validating that address; see Section 8 .", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.4-p6604-s34", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "This greatly reduces the options that a server has to control the encrypted portion of datagrams. ¶ This document does not offer any additional countermeasures that are specific to the use of preferred addresses and can be implemented by endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6605-s35", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "The generic measures described in Section 21.5.6 could be used as further mitigation. ¶ 21.5.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6606-s36", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Request Forgery with Spoofed Migration Clients are able to present a spoofed source address as part of an apparent connection migration to cause a server to send datagrams to that address. ¶ The Destination Connection ID field in any packets that a server subsequently sends to this spoofed address can be used for request forgery.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6607-s37", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "A client might also be able to influence the ciphertext. ¶ A server that only sends probing packets ( Section 9.1 ) to an address prior to address validation provides an attacker with only limited control over the encrypted portion of datagrams.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6608-s38", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "However, particularly for NAT rebinding, this can adversely affect performance.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6609-s39", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "If the server sends frames carrying application data, an attacker might be able to control most of the content of datagrams. ¶ This document does not offer specific countermeasures that can be implemented by endpoints, aside from the generic measures described in Section 21.5.6 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.4-p6610-s40", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "However, countermeasures for address spoofing at the network level -- in particular, ingress filtering [ BCP38 ] -- are especially effective against attacks that use spoofing and originate from an external network. ¶ 21.5.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6611-s41", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Request Forgery with Version Negotiation Clients that are able to present a spoofed source address on a packet can cause a server to send a Version Negotiation packet ( Section 17.2.1 ) to that address. ¶ The absence of size restrictions on the connection ID fields for packets of an unknown version increases the amount of data that the client controls from the resulting datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.4-p6612-s42", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "The first byte of this packet is not under client control and the next four bytes are zero, but the client is able to control up to 512 bytes starting from the fifth byte. ¶ No specific countermeasures are provided for this attack, though generic protections ( Section 21.5.6 ) could apply.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6613-s43", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "In this case, ingress filtering [ BCP38 ] is also effective. ¶ 21.5.6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6614-s44", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Generic Request Forgery Countermeasures The most effective defense against request forgery attacks is to modify vulnerable services to use strong authentication.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6615-s45", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "However, this is not always something that is within the control of a QUIC deployment.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6616-s46", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "This section outlines some other steps that QUIC endpoints could take unilaterally.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6617-s47", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "These additional steps are all discretionary because, depending on circumstances, they could interfere with or prevent legitimate uses. ¶ Services offered over loopback interfaces often lack proper authentication.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6618-s48", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Endpoints MAY prevent connection attempts or migration to a loopback address.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.4-p6619-s49", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Endpoints SHOULD NOT allow connections or migration to a loopback address if the same service was previously available at a different interface or if the address was provided by a service at a non-loopback address.", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.4-p6620-s50", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Endpoints that depend on these capabilities could offer an option to disable these protections. ¶ Similarly, endpoints could regard a change in address to a link-local address [ RFC4291 ] or an address in a private-use range [ RFC1918 ] from a global, unique-local [ RFC4193 ] , or non-private address as a potential attempt at request forgery.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6621-s51", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Endpoints could refuse to use these addresses entirely, but that carries a significant risk of interfering with legitimate uses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6622-s52", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Endpoints SHOULD NOT refuse to use an address unless they have specific knowledge about the network indicating that sending datagrams to unvalidated addresses in a given range is not safe. ¶ Endpoints MAY choose to reduce the risk of request forgery by not including values from NEW_TOKEN frames in Initial packets or by only sending probing frames in packets prior to completing address validation.", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "21.4-p6623-s53", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Note that this does not prevent an attacker from using the Destination Connection ID field for an attack. ¶ Endpoints are not expected to have specific information about the location of servers that could be vulnerable targets of a request forgery attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6624-s54", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "However, it might be possible over time to identify specific UDP ports that are common targets of attacks or particular patterns in datagrams that are used for attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.4-p6625-s55", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Endpoints MAY choose to avoid sending datagrams to these ports or not send datagrams that match these patterns prior to validating the destination address.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.4-p6626-s56", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Endpoints MAY retire connection IDs containing patterns known to be problematic without using them. ¶ Note:", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.4-p6627-s57", "section": "21.4", "anchor": "#name-optimistic-ack-attack", "para_id": "21.4-p1520", "text": "Modifying endpoints to apply these protections is more efficient than deploying network-based protections, as endpoints do not need to perform any additional processing when sending to an address that has been validated. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5-p6628-s1", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1521", "text": "A request forgery attack occurs where an endpoint causes its peer to issue a request towards a victim, with the request controlled by the endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6629-s2", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1521", "text": "Request forgery attacks aim to provide an attacker with access to capabilities of its peer that might otherwise be unavailable to the attacker.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6630-s3", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1521", "text": "For a networking protocol, a request forgery attack is often used to exploit any implicit authorization conferred on the peer by the victim due to the peer's location in the network. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6631-s1", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1522", "text": "For request forgery to be effective, an attacker needs to be able to influence what packets the peer sends and where these packets are sent.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5-p6632-s2", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1522", "text": "If an attacker can target a vulnerable service with a controlled payload, that service might perform actions that are attributed to the attacker's peer but are decided by the attacker. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5-p6633-s1", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1523", "text": "For example, cross-site request forgery [ CSRF ] exploits on the Web cause a client to issue requests that include authorization cookies [ COOKIE ] , allowing one site access to information and actions that are intended to be restricted to a different site. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6634-s1", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1524", "text": "As QUIC runs over UDP, the primary attack modality of concern is one where an attacker can select the address to which its peer sends UDP datagrams and can control some of the unprotected content of those packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5-p6635-s2", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1524", "text": "As much of the data sent by QUIC endpoints is protected, this includes control over ciphertext.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6636-s3", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1524", "text": "An attack is successful if an attacker can cause a peer to send a UDP datagram to a host that will perform some action based on content in the datagram. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5-p6637-s1", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1525", "text": "This section discusses ways in which QUIC might be used for request forgery attacks. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6638-s1", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1526", "text": "This section also describes limited countermeasures that can be implemented by QUIC endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6639-s2", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1526", "text": "These mitigations can be employed unilaterally by a QUIC implementation or deployment, without potential targets for request forgery attacks taking action.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6640-s3", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1526", "text": "However, these countermeasures could be insufficient if UDP-based services do not properly authorize requests. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5-p6641-s1", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1527", "text": "Because the migration attack described in Section 21.5.4 is quite powerful and does not have adequate countermeasures, QUIC server implementations should assume that attackers can cause them to generate arbitrary UDP payloads to arbitrary destinations.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6642-s2", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1527", "text": "QUIC servers SHOULD NOT be deployed in networks that do not deploy ingress filtering [ BCP38 ] and also have inadequately secured UDP endpoints. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.5-p6643-s1", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1528", "text": "Although it is not generally possible to ensure that clients are not co-located with vulnerable endpoints, this version of QUIC does not allow servers to migrate, thus preventing spoofed migration attacks on clients.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6644-s2", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1528", "text": "Any future extension that allows server migration MUST also define countermeasures for forgery attacks. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.5-p6645-s1", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1529", "text": "21.5.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6646-s2", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1529", "text": "Control Options for Endpoints QUIC offers some opportunities for an attacker to influence or control where its peer sends UDP datagrams: ¶ initial connection establishment ( Section 7 ), where a server is able to choose where a client sends datagrams -- for example, by populating DNS records; ¶ preferred addresses ( Section 9.6 ), where a server is able to choose where a client sends datagrams; ¶ spoofed connection migrations ( Section 9.3.1 ), where a client is able to use source address spoofing to select where a server sends subsequent datagrams; and ¶ spoofed packets that cause a server to send a Version Negotiation packet ( Section 21.5.5 ). ¶ In all cases, the attacker can cause its peer to send datagrams to a victim that might not understand QUIC.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "peer", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5-p6647-s3", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1529", "text": "That is, these packets are sent by the peer prior to address validation; see Section 8 . ¶ Outside of the encrypted portion of packets, QUIC offers an endpoint several options for controlling the content of UDP datagrams that its peer sends.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5-p6648-s4", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1529", "text": "The Destination Connection ID field offers direct control over bytes that appear early in packets sent by the peer; see Section 5.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6649-s5", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1529", "text": "The Token field in Initial packets offers a server control over other bytes of Initial packets; see Section 17.2.2 . ¶ There are no measures in this version of QUIC to prevent indirect control over the encrypted portions of packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6650-s6", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1529", "text": "It is necessary to assume that endpoints are able to control the contents of frames that a peer sends, especially those frames that convey application data, such as STREAM frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.5-p6651-s7", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1529", "text": "Though this depends to some degree on details of the application protocol, some control is possible in many protocol usage contexts.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6652-s8", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1529", "text": "As the attacker has access to packet protection keys, they are likely to be capable of predicting how a peer will encrypt future packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5-p6653-s9", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1529", "text": "Successful control over datagram content then only requires that the attacker be able to predict the packet number and placement of frames in packets with some amount of reliability. ¶ This section assumes that limiting control over datagram content is not feasible.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.5-p6654-s10", "section": "21.5", "anchor": "#name-request-forgery-attacks", "para_id": "21.5-p1529", "text": "The focus of the mitigations in subsequent sections is on limiting the ways in which datagrams that are sent prior to address validation can be used for request forgery. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6655-s1", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1530", "text": "QUIC offers some opportunities for an attacker to influence or control where its peer sends UDP datagrams: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.1-p6656-s1", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1531", "text": "initial connection establishment ( Section 7 ), where a server is able to choose where a client sends datagrams -- for example, by populating DNS records; ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.1-p6657-s1", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1532", "text": "preferred addresses ( Section 9.6 ), where a server is able to choose where a client sends datagrams; ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.1-p6658-s1", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1533", "text": "spoofed connection migrations ( Section 9.3.1 ), where a client is able to use source address spoofing to select where a server sends subsequent datagrams; and ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.1-p6659-s1", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1534", "text": "spoofed packets that cause a server to send a Version Negotiation packet ( Section 21.5.5 ). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.1-p6660-s1", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1535", "text": "In all cases, the attacker can cause its peer to send datagrams to a victim that might not understand QUIC.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.1-p6661-s2", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1535", "text": "That is, these packets are sent by the peer prior to address validation; see Section 8 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6662-s1", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1536", "text": "Outside of the encrypted portion of packets, QUIC offers an endpoint several options for controlling the content of UDP datagrams that its peer sends.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.1-p6663-s2", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1536", "text": "The Destination Connection ID field offers direct control over bytes that appear early in packets sent by the peer; see Section 5.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6664-s3", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1536", "text": "The Token field in Initial packets offers a server control over other bytes of Initial packets; see Section 17.2.2 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6665-s1", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1537", "text": "There are no measures in this version of QUIC to prevent indirect control over the encrypted portions of packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6666-s2", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1537", "text": "It is necessary to assume that endpoints are able to control the contents of frames that a peer sends, especially those frames that convey application data, such as STREAM frames.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": ["endpoint", "peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.5.1-p6667-s3", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1537", "text": "Though this depends to some degree on details of the application protocol, some control is possible in many protocol usage contexts.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6668-s4", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1537", "text": "As the attacker has access to packet protection keys, they are likely to be capable of predicting how a peer will encrypt future packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6669-s5", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1537", "text": "Successful control over datagram content then only requires that the attacker be able to predict the packet number and placement of frames in packets with some amount of reliability. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.5.1-p6670-s1", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1538", "text": "This section assumes that limiting control over datagram content is not feasible.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6671-s2", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1538", "text": "The focus of the mitigations in subsequent sections is on limiting the ways in which datagrams that are sent prior to address validation can be used for request forgery. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6672-s1", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1539", "text": "21.5.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6673-s2", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1539", "text": "Request Forgery with Client Initial Packets An attacker acting as a server can choose the IP address and port on which it advertises its availability, so Initial packets from clients are assumed to be available for use in this sort of attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6674-s3", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1539", "text": "The address validation implicit in the handshake ensures that -- for a new connection -- a client will not send other types of packets to a destination that does not understand QUIC or is not willing to accept a QUIC connection. ¶ Initial packet protection ( Section 5.2 of [ QUIC-TLS ] ) makes it difficult for servers to control the content of Initial packets sent by clients.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.1-p6675-s4", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1539", "text": "A client choosing an unpredictable Destination Connection ID ensures that servers are unable to control any of the encrypted portion of Initial packets from clients. ¶ However, the Token field is open to server control and does allow a server to use clients to mount request forgery attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6676-s5", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1539", "text": "The use of tokens provided with the NEW_TOKEN frame ( Section 8.1.3 ) offers the only option for request forgery during connection establishment. ¶ Clients, however, are not obligated to use the NEW_TOKEN frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.5.1-p6677-s6", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1539", "text": "Request forgery attacks that rely on the Token field can be avoided if clients send an empty Token field when the server address has changed from when the NEW_TOKEN frame was received. ¶ Clients could avoid using NEW_TOKEN if the server address changes.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.5.1-p6678-s7", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1539", "text": "However, not including a Token field could adversely affect performance.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6679-s8", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1539", "text": "Servers could rely on NEW_TOKEN to enable the sending of data in excess of the three-times limit on sending data; see Section 8.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6680-s9", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1539", "text": "In particular, this affects cases where clients use 0-RTT to request data from servers. ¶ Sending a Retry packet ( Section 17.2.5 ) offers a server the option to change the Token field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6681-s10", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1539", "text": "After sending a Retry, the server can also control the Destination Connection ID field of subsequent Initial packets from the client.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6682-s11", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1539", "text": "This also might allow indirect control over the encrypted content of Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.1-p6683-s12", "section": "21.5.1", "anchor": "#name-control-options-for-endpoin", "para_id": "21.5.1-p1539", "text": "However, the exchange of a Retry packet validates the server's address, thereby preventing the use of subsequent Initial packets for request forgery. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6684-s1", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1540", "text": "An attacker acting as a server can choose the IP address and port on which it advertises its availability, so Initial packets from clients are assumed to be available for use in this sort of attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6685-s2", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1540", "text": "The address validation implicit in the handshake ensures that -- for a new connection -- a client will not send other types of packets to a destination that does not understand QUIC or is not willing to accept a QUIC connection. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.2-p6686-s1", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1541", "text": "Initial packet protection ( Section 5.2 of [ QUIC-TLS ] ) makes it difficult for servers to control the content of Initial packets sent by clients.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6687-s2", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1541", "text": "A client choosing an unpredictable Destination Connection ID ensures that servers are unable to control any of the encrypted portion of Initial packets from clients. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6688-s1", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1542", "text": "However, the Token field is open to server control and does allow a server to use clients to mount request forgery attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6689-s2", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1542", "text": "The use of tokens provided with the NEW_TOKEN frame ( Section 8.1.3 ) offers the only option for request forgery during connection establishment. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.5.2-p6690-s1", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1543", "text": "Clients, however, are not obligated to use the NEW_TOKEN frame.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.5.2-p6691-s2", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1543", "text": "Request forgery attacks that rely on the Token field can be avoided if clients send an empty Token field when the server address has changed from when the NEW_TOKEN frame was received. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.5.2-p6692-s1", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1544", "text": "Clients could avoid using NEW_TOKEN if the server address changes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.2-p6693-s2", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1544", "text": "However, not including a Token field could adversely affect performance.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6694-s3", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1544", "text": "Servers could rely on NEW_TOKEN to enable the sending of data in excess of the three-times limit on sending data; see Section 8.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6695-s4", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1544", "text": "In particular, this affects cases where clients use 0-RTT to request data from servers. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6696-s1", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1545", "text": "Sending a Retry packet ( Section 17.2.5 ) offers a server the option to change the Token field.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6697-s2", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1545", "text": "After sending a Retry, the server can also control the Destination Connection ID field of subsequent Initial packets from the client.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6698-s3", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1545", "text": "This also might allow indirect control over the encrypted content of Initial packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6699-s4", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1545", "text": "However, the exchange of a Retry packet validates the server's address, thereby preventing the use of subsequent Initial packets for request forgery. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6700-s1", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1546", "text": "21.5.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6701-s2", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1546", "text": "Request Forgery with Preferred Addresses Servers can specify a preferred address, which clients then migrate to after confirming the handshake; see Section 9.6 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.2-p6702-s3", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1546", "text": "The Destination Connection ID field of packets that the client sends to a preferred address can be used for request forgery. ¶ A client MUST NOT send non-probing frames to a preferred address prior to validating that address; see Section 8 .", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.5.2-p6703-s4", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1546", "text": "This greatly reduces the options that a server has to control the encrypted portion of datagrams. ¶ This document does not offer any additional countermeasures that are specific to the use of preferred addresses and can be implemented by endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.2-p6704-s5", "section": "21.5.2", "anchor": "#name-request-forgery-with-client", "para_id": "21.5.2-p1546", "text": "The generic measures described in Section 21.5.6 could be used as further mitigation. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.3-p6705-s1", "section": "21.5.3", "anchor": "#name-request-forgery-with-prefer", "para_id": "21.5.3-p1547", "text": "Servers can specify a preferred address, which clients then migrate to after confirming the handshake; see Section 9.6 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.3-p6706-s2", "section": "21.5.3", "anchor": "#name-request-forgery-with-prefer", "para_id": "21.5.3-p1547", "text": "The Destination Connection ID field of packets that the client sends to a preferred address can be used for request forgery. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.3-p6707-s1", "section": "21.5.3", "anchor": "#name-request-forgery-with-prefer", "para_id": "21.5.3-p1548", "text": "A client MUST NOT send non-probing frames to a preferred address prior to validating that address; see Section 8 .", "facet": "frames", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.5.3-p6708-s2", "section": "21.5.3", "anchor": "#name-request-forgery-with-prefer", "para_id": "21.5.3-p1548", "text": "This greatly reduces the options that a server has to control the encrypted portion of datagrams. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.3-p6709-s1", "section": "21.5.3", "anchor": "#name-request-forgery-with-prefer", "para_id": "21.5.3-p1549", "text": "This document does not offer any additional countermeasures that are specific to the use of preferred addresses and can be implemented by endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.3-p6710-s2", "section": "21.5.3", "anchor": "#name-request-forgery-with-prefer", "para_id": "21.5.3-p1549", "text": "The generic measures described in Section 21.5.6 could be used as further mitigation. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.3-p6711-s1", "section": "21.5.3", "anchor": "#name-request-forgery-with-prefer", "para_id": "21.5.3-p1550", "text": "21.5.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.3-p6712-s2", "section": "21.5.3", "anchor": "#name-request-forgery-with-prefer", "para_id": "21.5.3-p1550", "text": "Request Forgery with Spoofed Migration Clients are able to present a spoofed source address as part of an apparent connection migration to cause a server to send datagrams to that address. ¶ The Destination Connection ID field in any packets that a server subsequently sends to this spoofed address can be used for request forgery.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.3-p6713-s3", "section": "21.5.3", "anchor": "#name-request-forgery-with-prefer", "para_id": "21.5.3-p1550", "text": "A client might also be able to influence the ciphertext. ¶ A server that only sends probing packets ( Section 9.1 ) to an address prior to address validation provides an attacker with only limited control over the encrypted portion of datagrams.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.3-p6714-s4", "section": "21.5.3", "anchor": "#name-request-forgery-with-prefer", "para_id": "21.5.3-p1550", "text": "However, particularly for NAT rebinding, this can adversely affect performance.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.3-p6715-s5", "section": "21.5.3", "anchor": "#name-request-forgery-with-prefer", "para_id": "21.5.3-p1550", "text": "If the server sends frames carrying application data, an attacker might be able to control most of the content of datagrams. ¶ This document does not offer specific countermeasures that can be implemented by endpoints, aside from the generic measures described in Section 21.5.6 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.5.3-p6716-s6", "section": "21.5.3", "anchor": "#name-request-forgery-with-prefer", "para_id": "21.5.3-p1550", "text": "However, countermeasures for address spoofing at the network level -- in particular, ingress filtering [ BCP38 ] -- are especially effective against attacks that use spoofing and originate from an external network. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.4-p6717-s1", "section": "21.5.4", "anchor": "#name-request-forgery-with-spoofe", "para_id": "21.5.4-p1551", "text": "Clients are able to present a spoofed source address as part of an apparent connection migration to cause a server to send datagrams to that address. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.4-p6718-s1", "section": "21.5.4", "anchor": "#name-request-forgery-with-spoofe", "para_id": "21.5.4-p1552", "text": "The Destination Connection ID field in any packets that a server subsequently sends to this spoofed address can be used for request forgery.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.4-p6719-s2", "section": "21.5.4", "anchor": "#name-request-forgery-with-spoofe", "para_id": "21.5.4-p1552", "text": "A client might also be able to influence the ciphertext. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.4-p6720-s1", "section": "21.5.4", "anchor": "#name-request-forgery-with-spoofe", "para_id": "21.5.4-p1553", "text": "A server that only sends probing packets ( Section 9.1 ) to an address prior to address validation provides an attacker with only limited control over the encrypted portion of datagrams.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.4-p6721-s2", "section": "21.5.4", "anchor": "#name-request-forgery-with-spoofe", "para_id": "21.5.4-p1553", "text": "However, particularly for NAT rebinding, this can adversely affect performance.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.4-p6722-s3", "section": "21.5.4", "anchor": "#name-request-forgery-with-spoofe", "para_id": "21.5.4-p1553", "text": "If the server sends frames carrying application data, an attacker might be able to control most of the content of datagrams. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.5.4-p6723-s1", "section": "21.5.4", "anchor": "#name-request-forgery-with-spoofe", "para_id": "21.5.4-p1554", "text": "This document does not offer specific countermeasures that can be implemented by endpoints, aside from the generic measures described in Section 21.5.6 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.4-p6724-s2", "section": "21.5.4", "anchor": "#name-request-forgery-with-spoofe", "para_id": "21.5.4-p1554", "text": "However, countermeasures for address spoofing at the network level -- in particular, ingress filtering [ BCP38 ] -- are especially effective against attacks that use spoofing and originate from an external network. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.4-p6725-s1", "section": "21.5.4", "anchor": "#name-request-forgery-with-spoofe", "para_id": "21.5.4-p1555", "text": "21.5.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.4-p6726-s2", "section": "21.5.4", "anchor": "#name-request-forgery-with-spoofe", "para_id": "21.5.4-p1555", "text": "Request Forgery with Version Negotiation Clients that are able to present a spoofed source address on a packet can cause a server to send a Version Negotiation packet ( Section 17.2.1 ) to that address. ¶ The absence of size restrictions on the connection ID fields for packets of an unknown version increases the amount of data that the client controls from the resulting datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.4-p6727-s3", "section": "21.5.4", "anchor": "#name-request-forgery-with-spoofe", "para_id": "21.5.4-p1555", "text": "The first byte of this packet is not under client control and the next four bytes are zero, but the client is able to control up to 512 bytes starting from the fifth byte. ¶ No specific countermeasures are provided for this attack, though generic protections ( Section 21.5.6 ) could apply.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.4-p6728-s4", "section": "21.5.4", "anchor": "#name-request-forgery-with-spoofe", "para_id": "21.5.4-p1555", "text": "In this case, ingress filtering [ BCP38 ] is also effective. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6729-s1", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1556", "text": "Clients that are able to present a spoofed source address on a packet can cause a server to send a Version Negotiation packet ( Section 17.2.1 ) to that address. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "server"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.5-p6730-s1", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1557", "text": "The absence of size restrictions on the connection ID fields for packets of an unknown version increases the amount of data that the client controls from the resulting datagram.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6731-s2", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1557", "text": "The first byte of this packet is not under client control and the next four bytes are zero, but the client is able to control up to 512 bytes starting from the fifth byte. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6732-s1", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1558", "text": "No specific countermeasures are provided for this attack, though generic protections ( Section 21.5.6 ) could apply.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6733-s2", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1558", "text": "In this case, ingress filtering [ BCP38 ] is also effective. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6734-s1", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "21.5.6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6735-s2", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "Generic Request Forgery Countermeasures The most effective defense against request forgery attacks is to modify vulnerable services to use strong authentication.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6736-s3", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "However, this is not always something that is within the control of a QUIC deployment.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6737-s4", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "This section outlines some other steps that QUIC endpoints could take unilaterally.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6738-s5", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "These additional steps are all discretionary because, depending on circumstances, they could interfere with or prevent legitimate uses. ¶ Services offered over loopback interfaces often lack proper authentication.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6739-s6", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "Endpoints MAY prevent connection attempts or migration to a loopback address.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.5.5-p6740-s7", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "Endpoints SHOULD NOT allow connections or migration to a loopback address if the same service was previously available at a different interface or if the address was provided by a service at a non-loopback address.", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.5.5-p6741-s8", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "Endpoints that depend on these capabilities could offer an option to disable these protections. ¶ Similarly, endpoints could regard a change in address to a link-local address [ RFC4291 ] or an address in a private-use range [ RFC1918 ] from a global, unique-local [ RFC4193 ] , or non-private address as a potential attempt at request forgery.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6742-s9", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "Endpoints could refuse to use these addresses entirely, but that carries a significant risk of interfering with legitimate uses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6743-s10", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "Endpoints SHOULD NOT refuse to use an address unless they have specific knowledge about the network indicating that sending datagrams to unvalidated addresses in a given range is not safe. ¶ Endpoints MAY choose to reduce the risk of request forgery by not including values from NEW_TOKEN frames in Initial packets or by only sending probing frames in packets prior to completing address validation.", "facet": "frames", "normative": true, "modalities": ["SHOULD NOT", "MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "21.5.5-p6744-s11", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "Note that this does not prevent an attacker from using the Destination Connection ID field for an attack. ¶ Endpoints are not expected to have specific information about the location of servers that could be vulnerable targets of a request forgery attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6745-s12", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "However, it might be possible over time to identify specific UDP ports that are common targets of attacks or particular patterns in datagrams that are used for attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.5-p6746-s13", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "Endpoints MAY choose to avoid sending datagrams to these ports or not send datagrams that match these patterns prior to validating the destination address.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.5.5-p6747-s14", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "Endpoints MAY retire connection IDs containing patterns known to be problematic without using them. ¶ Note:", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.5.5-p6748-s15", "section": "21.5.5", "anchor": "#name-request-forgery-with-versio", "para_id": "21.5.5-p1559", "text": "Modifying endpoints to apply these protections is more efficient than deploying network-based protections, as endpoints do not need to perform any additional processing when sending to an address that has been validated. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.6-p6749-s1", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1560", "text": "The most effective defense against request forgery attacks is to modify vulnerable services to use strong authentication.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6750-s2", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1560", "text": "However, this is not always something that is within the control of a QUIC deployment.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6751-s3", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1560", "text": "This section outlines some other steps that QUIC endpoints could take unilaterally.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6752-s4", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1560", "text": "These additional steps are all discretionary because, depending on circumstances, they could interfere with or prevent legitimate uses. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6753-s1", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1561", "text": "Services offered over loopback interfaces often lack proper authentication.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6754-s2", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1561", "text": "Endpoints MAY prevent connection attempts or migration to a loopback address.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.5.6-p6755-s3", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1561", "text": "Endpoints SHOULD NOT allow connections or migration to a loopback address if the same service was previously available at a different interface or if the address was provided by a service at a non-loopback address.", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.5.6-p6756-s4", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1561", "text": "Endpoints that depend on these capabilities could offer an option to disable these protections. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6757-s1", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1562", "text": "Similarly, endpoints could regard a change in address to a link-local address [ RFC4291 ] or an address in a private-use range [ RFC1918 ] from a global, unique-local [ RFC4193 ] , or non-private address as a potential attempt at request forgery.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6758-s2", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1562", "text": "Endpoints could refuse to use these addresses entirely, but that carries a significant risk of interfering with legitimate uses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6759-s3", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1562", "text": "Endpoints SHOULD NOT refuse to use an address unless they have specific knowledge about the network indicating that sending datagrams to unvalidated addresses in a given range is not safe. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.5.6-p6760-s1", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1563", "text": "Endpoints MAY choose to reduce the risk of request forgery by not including values from NEW_TOKEN frames in Initial packets or by only sending probing frames in packets prior to completing address validation.", "facet": "frames", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "21.5.6-p6761-s2", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1563", "text": "Note that this does not prevent an attacker from using the Destination Connection ID field for an attack. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6762-s1", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1564", "text": "Endpoints are not expected to have specific information about the location of servers that could be vulnerable targets of a request forgery attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6763-s2", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1564", "text": "However, it might be possible over time to identify specific UDP ports that are common targets of attacks or particular patterns in datagrams that are used for attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6764-s3", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1564", "text": "Endpoints MAY choose to avoid sending datagrams to these ports or not send datagrams that match these patterns prior to validating the destination address.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.5.6-p6765-s4", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1564", "text": "Endpoints MAY retire connection IDs containing patterns known to be problematic without using them. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.5.6-p6766-s1", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1565", "text": "Note:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6767-s2", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1565", "text": "Modifying endpoints to apply these protections is more efficient than deploying network-based protections, as endpoints do not need to perform any additional processing when sending to an address that has been validated. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.5.6-p6768-s1", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1566", "text": "21.6.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6769-s2", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1566", "text": "Slowloris Attacks The attacks commonly known as Slowloris [ SLOWLORIS ] try to keep many connections to the target endpoint open and hold them open as long as possible.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6770-s3", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1566", "text": "These attacks can be executed against a QUIC endpoint by generating the minimum amount of activity necessary to avoid being closed for inactivity.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.5.6-p6771-s4", "section": "21.5.6", "anchor": "#name-generic-request-forgery-cou", "para_id": "21.5.6-p1566", "text": "This might involve sending small amounts of data, gradually opening flow control windows in order to control the sender rate, or manufacturing ACK frames that simulate a high loss rate. ¶ QUIC deployments SHOULD provide mitigations for the Slowloris attacks, such as increasing the maximum number of clients the server will allow, limiting the number of connections a single IP address is allowed to make, imposing restrictions on the minimum transfer speed a connection is allowed to have, and restricting the length of time an endpoint is allowed to stay connected. ¶", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "sender", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.6-p6772-s1", "section": "21.6", "anchor": "#name-slowloris-attacks", "para_id": "21.6-p1567", "text": "The attacks commonly known as Slowloris [ SLOWLORIS ] try to keep many connections to the target endpoint open and hold them open as long as possible.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.6-p6773-s2", "section": "21.6", "anchor": "#name-slowloris-attacks", "para_id": "21.6-p1567", "text": "These attacks can be executed against a QUIC endpoint by generating the minimum amount of activity necessary to avoid being closed for inactivity.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.6-p6774-s3", "section": "21.6", "anchor": "#name-slowloris-attacks", "para_id": "21.6-p1567", "text": "This might involve sending small amounts of data, gradually opening flow control windows in order to control the sender rate, or manufacturing ACK frames that simulate a high loss rate. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.6-p6775-s1", "section": "21.6", "anchor": "#name-slowloris-attacks", "para_id": "21.6-p1568", "text": "QUIC deployments SHOULD provide mitigations for the Slowloris attacks, such as increasing the maximum number of clients the server will allow, limiting the number of connections a single IP address is allowed to make, imposing restrictions on the minimum transfer speed a connection is allowed to have, and restricting the length of time an endpoint is allowed to stay connected. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint", "server"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.6-p6776-s1", "section": "21.6", "anchor": "#name-slowloris-attacks", "para_id": "21.6-p1569", "text": "21.7.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.6-p6777-s2", "section": "21.6", "anchor": "#name-slowloris-attacks", "para_id": "21.6-p1569", "text": "Stream Fragmentation and Reassembly Attacks An adversarial sender might intentionally not send portions of the stream data, causing the receiver to commit resources for the unsent data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.6-p6778-s3", "section": "21.6", "anchor": "#name-slowloris-attacks", "para_id": "21.6-p1569", "text": "This could cause a disproportionate receive buffer memory commitment and/or the creation of a large and inefficient data structure at the receiver. ¶ An adversarial receiver might intentionally not acknowledge packets containing stream data in an attempt to force the sender to store the unacknowledged stream data for retransmission. ¶ The attack on receivers is mitigated if flow control windows correspond to available memory.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.6-p6779-s4", "section": "21.6", "anchor": "#name-slowloris-attacks", "para_id": "21.6-p1569", "text": "However, some receivers will overcommit memory and advertise flow control offsets in the aggregate that exceed actual available memory.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.6-p6780-s5", "section": "21.6", "anchor": "#name-slowloris-attacks", "para_id": "21.6-p1569", "text": "The overcommitment strategy can lead to better performance when endpoints are well behaved, but renders endpoints vulnerable to the stream fragmentation attack. ¶ QUIC deployments SHOULD provide mitigations for stream fragmentation attacks.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.6-p6781-s6", "section": "21.6", "anchor": "#name-slowloris-attacks", "para_id": "21.6-p1569", "text": "Mitigations could consist of avoiding overcommitting memory, limiting the size of tracking data structures, delaying reassembly of STREAM frames, implementing heuristics based on the age and duration of reassembly holes, or some combination of these. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "21.7-p6782-s1", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1570", "text": "An adversarial sender might intentionally not send portions of the stream data, causing the receiver to commit resources for the unsent data.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.7-p6783-s2", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1570", "text": "This could cause a disproportionate receive buffer memory commitment and/or the creation of a large and inefficient data structure at the receiver. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.7-p6784-s1", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1571", "text": "An adversarial receiver might intentionally not acknowledge packets containing stream data in an attempt to force the sender to store the unacknowledged stream data for retransmission. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver", "sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.7-p6785-s1", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1572", "text": "The attack on receivers is mitigated if flow control windows correspond to available memory.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.7-p6786-s2", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1572", "text": "However, some receivers will overcommit memory and advertise flow control offsets in the aggregate that exceed actual available memory.", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.7-p6787-s3", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1572", "text": "The overcommitment strategy can lead to better performance when endpoints are well behaved, but renders endpoints vulnerable to the stream fragmentation attack. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.7-p6788-s1", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1573", "text": "QUIC deployments SHOULD provide mitigations for stream fragmentation attacks.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.7-p6789-s2", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1573", "text": "Mitigations could consist of avoiding overcommitting memory, limiting the size of tracking data structures, delaying reassembly of STREAM frames, implementing heuristics based on the age and duration of reassembly holes, or some combination of these. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "21.7-p6790-s1", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1574", "text": "21.8.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.7-p6791-s2", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1574", "text": "Stream Commitment Attack An adversarial endpoint can open a large number of streams, exhausting state on an endpoint.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.7-p6792-s3", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1574", "text": "The adversarial endpoint could repeat the process on a large number of connections, in a manner similar to SYN flooding attacks in TCP. ¶ Normally, clients will open streams sequentially, as explained in Section 2.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client", "endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.7-p6793-s4", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1574", "text": "However, when several streams are initiated at short intervals, loss or reordering can cause STREAM frames that open streams to be received out of sequence.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.7-p6794-s5", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1574", "text": "On receiving a higher-numbered stream ID, a receiver is required to open all intervening streams of the same type; see Section 3.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.7-p6795-s6", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1574", "text": "Thus, on a new connection, opening stream 4000000 opens 1 million and 1 client-initiated bidirectional streams. ¶ The number of active streams is limited by the initial_max_streams_bidi and initial_max_streams_uni transport parameters as updated by any received MAX_STREAMS frames, as explained in Section 4.6 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": ["client"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.7-p6796-s7", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1574", "text": "If chosen judiciously, these limits mitigate the effect of the stream commitment attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.7-p6797-s8", "section": "21.7", "anchor": "#name-stream-fragmentation-and-re", "para_id": "21.7-p1574", "text": "However, setting the limit too low could affect performance when applications expect to open a large number of streams. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.8-p6798-s1", "section": "21.8", "anchor": "#name-stream-commitment-attack", "para_id": "21.8-p1575", "text": "An adversarial endpoint can open a large number of streams, exhausting state on an endpoint.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.8-p6799-s2", "section": "21.8", "anchor": "#name-stream-commitment-attack", "para_id": "21.8-p1575", "text": "The adversarial endpoint could repeat the process on a large number of connections, in a manner similar to SYN flooding attacks in TCP. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.8-p6800-s1", "section": "21.8", "anchor": "#name-stream-commitment-attack", "para_id": "21.8-p1576", "text": "Normally, clients will open streams sequentially, as explained in Section 2.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.8-p6801-s2", "section": "21.8", "anchor": "#name-stream-commitment-attack", "para_id": "21.8-p1576", "text": "However, when several streams are initiated at short intervals, loss or reordering can cause STREAM frames that open streams to be received out of sequence.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["STREAM"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.8-p6802-s3", "section": "21.8", "anchor": "#name-stream-commitment-attack", "para_id": "21.8-p1576", "text": "On receiving a higher-numbered stream ID, a receiver is required to open all intervening streams of the same type; see Section 3.2 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.8-p6803-s4", "section": "21.8", "anchor": "#name-stream-commitment-attack", "para_id": "21.8-p1576", "text": "Thus, on a new connection, opening stream 4000000 opens 1 million and 1 client-initiated bidirectional streams. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.8-p6804-s1", "section": "21.8", "anchor": "#name-stream-commitment-attack", "para_id": "21.8-p1577", "text": "The number of active streams is limited by the initial_max_streams_bidi and initial_max_streams_uni transport parameters as updated by any received MAX_STREAMS frames, as explained in Section 4.6 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": ["MAX_STREAMS"], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.8-p6805-s2", "section": "21.8", "anchor": "#name-stream-commitment-attack", "para_id": "21.8-p1577", "text": "If chosen judiciously, these limits mitigate the effect of the stream commitment attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.8-p6806-s3", "section": "21.8", "anchor": "#name-stream-commitment-attack", "para_id": "21.8-p1577", "text": "However, setting the limit too low could affect performance when applications expect to open a large number of streams. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.8-p6807-s1", "section": "21.8", "anchor": "#name-stream-commitment-attack", "para_id": "21.8-p1578", "text": "21.9.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.8-p6808-s2", "section": "21.8", "anchor": "#name-stream-commitment-attack", "para_id": "21.8-p1578", "text": "Peer Denial of Service QUIC and TLS both contain frames or messages that have legitimate uses in some contexts, but these frames or messages can be abused to cause a peer to expend processing resources without having any observable impact on the state of the connection. ¶ Messages can also be used to change and revert state in small or inconsequential ways, such as by sending small increments to flow control limits. ¶ If processing costs are disproportionately large in comparison to bandwidth consumption or effect on state, then this could allow a malicious peer to exhaust processing capacity. ¶ While there are legitimate uses for all messages, implementations SHOULD track cost of processing relative to progress and treat excessive quantities of any non-productive packets as indicative of an attack.", "facet": "flow_control", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.8-p6809-s3", "section": "21.8", "anchor": "#name-stream-commitment-attack", "para_id": "21.8-p1578", "text": "Endpoints MAY respond to this condition with a connection error or by dropping packets. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.9-p6810-s1", "section": "21.9", "anchor": "#name-peer-denial-of-service", "para_id": "21.9-p1579", "text": "QUIC and TLS both contain frames or messages that have legitimate uses in some contexts, but these frames or messages can be abused to cause a peer to expend processing resources without having any observable impact on the state of the connection. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.9-p6811-s1", "section": "21.9", "anchor": "#name-peer-denial-of-service", "para_id": "21.9-p1580", "text": "Messages can also be used to change and revert state in small or inconsequential ways, such as by sending small increments to flow control limits. ¶", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.9-p6812-s1", "section": "21.9", "anchor": "#name-peer-denial-of-service", "para_id": "21.9-p1581", "text": "If processing costs are disproportionately large in comparison to bandwidth consumption or effect on state, then this could allow a malicious peer to exhaust processing capacity. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.9-p6813-s1", "section": "21.9", "anchor": "#name-peer-denial-of-service", "para_id": "21.9-p1582", "text": "While there are legitimate uses for all messages, implementations SHOULD track cost of processing relative to progress and treat excessive quantities of any non-productive packets as indicative of an attack.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.9-p6814-s2", "section": "21.9", "anchor": "#name-peer-denial-of-service", "para_id": "21.9-p1582", "text": "Endpoints MAY respond to this condition with a connection error or by dropping packets. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.9-p6815-s1", "section": "21.9", "anchor": "#name-peer-denial-of-service", "para_id": "21.9-p1583", "text": "21.10.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.9-p6816-s2", "section": "21.9", "anchor": "#name-peer-denial-of-service", "para_id": "21.9-p1583", "text": "Explicit Congestion Notification Attacks An on-path attacker could manipulate the value of ECN fields in the IP header to influence the sender's rate. [ RFC3168 ] discusses manipulations and their effects in more detail. ¶ A limited on-path attacker can duplicate and send packets with modified ECN fields to affect the sender's rate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.9-p6817-s3", "section": "21.9", "anchor": "#name-peer-denial-of-service", "para_id": "21.9-p1583", "text": "If duplicate packets are discarded by a receiver, an attacker will need to race the duplicate packet against the original to be successful in this attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.9-p6818-s4", "section": "21.9", "anchor": "#name-peer-denial-of-service", "para_id": "21.9-p1583", "text": "Therefore, QUIC endpoints ignore the ECN field in an IP packet unless at least one QUIC packet in that IP packet is successfully processed; see Section 13.4 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.10-p6819-s1", "section": "21.10", "anchor": "#name-explicit-congestion-notifica", "para_id": "21.10-p1584", "text": "An on-path attacker could manipulate the value of ECN fields in the IP header to influence the sender's rate. [ RFC3168 ] discusses manipulations and their effects in more detail. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.10-p6820-s1", "section": "21.10", "anchor": "#name-explicit-congestion-notifica", "para_id": "21.10-p1585", "text": "A limited on-path attacker can duplicate and send packets with modified ECN fields to affect the sender's rate.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["sender"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.10-p6821-s2", "section": "21.10", "anchor": "#name-explicit-congestion-notifica", "para_id": "21.10-p1585", "text": "If duplicate packets are discarded by a receiver, an attacker will need to race the duplicate packet against the original to be successful in this attack.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["receiver"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.10-p6822-s3", "section": "21.10", "anchor": "#name-explicit-congestion-notifica", "para_id": "21.10-p1585", "text": "Therefore, QUIC endpoints ignore the ECN field in an IP packet unless at least one QUIC packet in that IP packet is successfully processed; see Section 13.4 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.10-p6823-s1", "section": "21.10", "anchor": "#name-explicit-congestion-notifica", "para_id": "21.10-p1586", "text": "21.11.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.10-p6824-s2", "section": "21.10", "anchor": "#name-explicit-congestion-notifica", "para_id": "21.10-p1586", "text": "Stateless Reset Oracle Stateless resets create a possible denial-of-service attack analogous to a TCP reset injection.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.10-p6825-s3", "section": "21.10", "anchor": "#name-explicit-congestion-notifica", "para_id": "21.10-p1586", "text": "This attack is possible if an attacker is able to cause a stateless reset token to be generated for a connection with a selected connection ID.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.10-p6826-s4", "section": "21.10", "anchor": "#name-explicit-congestion-notifica", "para_id": "21.10-p1586", "text": "An attacker that can cause this token to be generated can reset an active connection with the same connection ID. ¶ If a packet can be routed to different instances that share a static key -- for example, by changing an IP address or port -- then an attacker can cause the server to send a stateless reset.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.10-p6827-s5", "section": "21.10", "anchor": "#name-explicit-congestion-notifica", "para_id": "21.10-p1586", "text": "To defend against this style of denial of service, endpoints that share a static key for stateless resets (see Section 10.3.2 ) MUST be arranged so that packets with a given connection ID always arrive at an instance that has connection state, unless that connection is no longer active. ¶ More generally, servers MUST NOT generate a stateless reset if a connection with the corresponding connection ID could be active on any endpoint using the same static key. ¶ In the case of a cluster that uses dynamic load balancing, it is possible that a change in load-balancer configuration could occur while an active instance retains connection state.", "facet": "state_machine", "normative": true, "modalities": ["MUST", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.10-p6828-s6", "section": "21.10", "anchor": "#name-explicit-congestion-notifica", "para_id": "21.10-p1586", "text": "Even if an instance retains connection state, the change in routing and resulting stateless reset will result in the connection being terminated.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.10-p6829-s7", "section": "21.10", "anchor": "#name-explicit-congestion-notifica", "para_id": "21.10-p1586", "text": "If there is no chance of the packet being routed to the correct instance, it is better to send a stateless reset than wait for the connection to time out.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.10-p6830-s8", "section": "21.10", "anchor": "#name-explicit-congestion-notifica", "para_id": "21.10-p1586", "text": "However, this is acceptable only if the routing cannot be influenced by an attacker. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.11-p6831-s1", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1587", "text": "Stateless resets create a possible denial-of-service attack analogous to a TCP reset injection.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.11-p6832-s2", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1587", "text": "This attack is possible if an attacker is able to cause a stateless reset token to be generated for a connection with a selected connection ID.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.11-p6833-s3", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1587", "text": "An attacker that can cause this token to be generated can reset an active connection with the same connection ID. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.11-p6834-s1", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1588", "text": "If a packet can be routed to different instances that share a static key -- for example, by changing an IP address or port -- then an attacker can cause the server to send a stateless reset.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.11-p6835-s2", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1588", "text": "To defend against this style of denial of service, endpoints that share a static key for stateless resets (see Section 10.3.2 ) MUST be arranged so that packets with a given connection ID always arrive at an instance that has connection state, unless that connection is no longer active. ¶", "facet": "state_machine", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "21.11-p6836-s1", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1589", "text": "More generally, servers MUST NOT generate a stateless reset if a connection with the corresponding connection ID could be active on any endpoint using the same static key. ¶", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": ["endpoint", "server"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.11-p6837-s1", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1590", "text": "In the case of a cluster that uses dynamic load balancing, it is possible that a change in load-balancer configuration could occur while an active instance retains connection state.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.11-p6838-s2", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1590", "text": "Even if an instance retains connection state, the change in routing and resulting stateless reset will result in the connection being terminated.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.11-p6839-s3", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1590", "text": "If there is no chance of the packet being routed to the correct instance, it is better to send a stateless reset than wait for the connection to time out.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "21.11-p6840-s4", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1590", "text": "However, this is acceptable only if the routing cannot be influenced by an attacker. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.11-p6841-s1", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1591", "text": "21.12.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.11-p6842-s2", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1591", "text": "Version Downgrade This document defines QUIC Version Negotiation packets ( Section 6 ), which can be used to negotiate the QUIC version used between two endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.11-p6843-s3", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1591", "text": "However, this document does not specify how this negotiation will be performed between this version and subsequent future versions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.11-p6844-s4", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1591", "text": "In particular, Version Negotiation packets do not contain any mechanism to prevent version downgrade attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.11-p6845-s5", "section": "21.11", "anchor": "#name-stateless-reset-oracle", "para_id": "21.11-p1591", "text": "Future versions of QUIC that use Version Negotiation packets MUST define a mechanism that is robust against version downgrade attacks. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.12-p6846-s1", "section": "21.12", "anchor": "#name-version-downgrade", "para_id": "21.12-p1592", "text": "This document defines QUIC Version Negotiation packets ( Section 6 ), which can be used to negotiate the QUIC version used between two endpoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.12-p6847-s2", "section": "21.12", "anchor": "#name-version-downgrade", "para_id": "21.12-p1592", "text": "However, this document does not specify how this negotiation will be performed between this version and subsequent future versions.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.12-p6848-s3", "section": "21.12", "anchor": "#name-version-downgrade", "para_id": "21.12-p1592", "text": "In particular, Version Negotiation packets do not contain any mechanism to prevent version downgrade attacks.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.12-p6849-s4", "section": "21.12", "anchor": "#name-version-downgrade", "para_id": "21.12-p1592", "text": "Future versions of QUIC that use Version Negotiation packets MUST define a mechanism that is robust against version downgrade attacks. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.12-p6850-s1", "section": "21.12", "anchor": "#name-version-downgrade", "para_id": "21.12-p1593", "text": "21.13.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.12-p6851-s2", "section": "21.12", "anchor": "#name-version-downgrade", "para_id": "21.12-p1593", "text": "Targeted Attacks by Routing Deployments should limit the ability of an attacker to target a new connection to a particular server instance.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.12-p6852-s3", "section": "21.12", "anchor": "#name-version-downgrade", "para_id": "21.12-p1593", "text": "Ideally, routing decisions are made independently of client-selected values, including addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.12-p6853-s4", "section": "21.12", "anchor": "#name-version-downgrade", "para_id": "21.12-p1593", "text": "Once an instance is selected, a connection ID can be selected so that later packets are routed to the same instance. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.13-p6854-s1", "section": "21.13", "anchor": "#name-targeted-attacks-by-routing", "para_id": "21.13-p1594", "text": "Deployments should limit the ability of an attacker to target a new connection to a particular server instance.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.13-p6855-s2", "section": "21.13", "anchor": "#name-targeted-attacks-by-routing", "para_id": "21.13-p1594", "text": "Ideally, routing decisions are made independently of client-selected values, including addresses.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["client"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.13-p6856-s3", "section": "21.13", "anchor": "#name-targeted-attacks-by-routing", "para_id": "21.13-p1594", "text": "Once an instance is selected, a connection ID can be selected so that later packets are routed to the same instance. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.13-p6857-s1", "section": "21.13", "anchor": "#name-targeted-attacks-by-routing", "para_id": "21.13-p1595", "text": "21.14.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.13-p6858-s2", "section": "21.13", "anchor": "#name-targeted-attacks-by-routing", "para_id": "21.13-p1595", "text": "Traffic Analysis The length of QUIC packets can reveal information about the length of the content of those packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.13-p6859-s3", "section": "21.13", "anchor": "#name-targeted-attacks-by-routing", "para_id": "21.13-p1595", "text": "The PADDING frame is provided so that endpoints have some ability to obscure the length of packet content; see Section 19.1 . ¶ Defeating traffic analysis is challenging and the subject of active research.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.13-p6860-s4", "section": "21.13", "anchor": "#name-targeted-attacks-by-routing", "para_id": "21.13-p1595", "text": "Length is not the only way that information might leak.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.13-p6861-s5", "section": "21.13", "anchor": "#name-targeted-attacks-by-routing", "para_id": "21.13-p1595", "text": "Endpoints might also reveal sensitive information through other side channels, such as the timing of packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6862-s1", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1596", "text": "The length of QUIC packets can reveal information about the length of the content of those packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6863-s2", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1596", "text": "The PADDING frame is provided so that endpoints have some ability to obscure the length of packet content; see Section 19.1 . ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.14-p6864-s1", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1597", "text": "Defeating traffic analysis is challenging and the subject of active research.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6865-s2", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1597", "text": "Length is not the only way that information might leak.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6866-s3", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1597", "text": "Endpoints might also reveal sensitive information through other side channels, such as the timing of packets. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6867-s1", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "22.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6868-s2", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "IANA Considerations This document establishes several registries for the management of codepoints in QUIC.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6869-s3", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "These registries operate on a common set of policies as defined in Section 22.1 . ¶ 22.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6870-s4", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Registration Policies for QUIC Registries All QUIC registries allow for both provisional and permanent registration of codepoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6871-s5", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "This section documents policies that are common to these registries. ¶ 22.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6872-s6", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Provisional Registrations Provisional registrations of codepoints are intended to allow for private use and experimentation with extensions to QUIC.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6873-s7", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Provisional registrations only require the inclusion of the codepoint value and contact information.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6874-s8", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "However, provisional registrations could be reclaimed and reassigned for another purpose. ¶ Provisional registrations require Expert Review, as defined in Section 4.5 of [ RFC8126 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6875-s9", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "The designated expert or experts are advised that only registrations for an excessive proportion of remaining codepoint space or the very first unassigned value (see Section 22.1.2 ) can be rejected. ¶ Provisional registrations will include a Date field that indicates when the registration was last updated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "21.14-p6876-s10", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "A request to update the date on any provisional registration can be made without review from the designated expert(s). ¶ All QUIC registries include the following fields to support provisional registration: ¶ Value:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6877-s11", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "The assigned codepoint. ¶ Status: \"permanent\" or \"provisional\". ¶ Specification:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6878-s12", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "A reference to a publicly available specification for the value. ¶ Date:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6879-s13", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "The date of the last update to the registration. ¶ Change Controller:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6880-s14", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "The entity that is responsible for the definition of the registration. ¶ Contact:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6881-s15", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Contact details for the registrant. ¶ Notes:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6882-s16", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Supplementary notes about the registration. ¶ Provisional registrations MAY omit the Specification and Notes fields, plus any additional fields that might be required for a permanent registration.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.14-p6883-s17", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "The Date field is not required as part of requesting a registration, as it is set to the date the registration is created or updated. ¶ 22.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6884-s18", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Selecting Codepoints New requests for codepoints from QUIC registries SHOULD use a randomly selected codepoint that excludes both existing allocations and the first unallocated codepoint in the selected space.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.14-p6885-s19", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Requests for multiple codepoints MAY use a contiguous range.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.14-p6886-s20", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "This minimizes the risk that differing semantics are attributed to the same codepoint by different implementations. ¶ The use of the first unassigned codepoint is reserved for allocation using the Standards Action policy; see Section 4.9 of [ RFC8126 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6887-s21", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "The early codepoint assignment process [ EARLY-ASSIGN ] can be used for these values. ¶ For codepoints that are encoded in variable-length integers ( Section 16 ), such as frame types, codepoints that encode to four or eight bytes (that is, values 2 14 and above) SHOULD be used unless the usage is especially sensitive to having a longer encoding. ¶ Applications to register codepoints in QUIC registries MAY include a requested codepoint as part of the registration.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "21.14-p6888-s22", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "IANA MUST allocate the selected codepoint if the codepoint is unassigned and the requirements of the registration policy are met. ¶ 22.1.3.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.14-p6889-s23", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Reclaiming Provisional Codepoints A request might be made to remove an unused provisional registration from the registry to reclaim space in a registry, or a portion of the registry (such as the 64-16383 range for codepoints that use variable-length encodings).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6890-s24", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "This SHOULD be done only for the codepoints with the earliest recorded date, and entries that have been updated less than a year prior SHOULD NOT be reclaimed. ¶ A request to remove a codepoint MUST be reviewed by the designated experts.", "facet": "other", "normative": true, "modalities": ["SHOULD", "SHOULD NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.14-p6891-s25", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "The experts MUST attempt to determine whether the codepoint is still in use.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.14-p6892-s26", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Experts are advised to contact the listed contacts for the registration, plus as wide a set of protocol implementers as possible in order to determine whether any use of the codepoint is known.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6893-s27", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "The experts are also advised to allow at least four weeks for responses. ¶ If any use of the codepoints is identified by this search or a request to update the registration is made, the codepoint MUST NOT be reclaimed.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.14-p6894-s28", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Instead, the date on the registration is updated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6895-s29", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "A note might be added for the registration recording relevant information that was learned. ¶ If no use of the codepoint was identified and no request was made to update the registration, the codepoint MAY be removed from the registry. ¶ This review and consultation process also applies to requests to change a provisional registration into a permanent registration, except that the goal is not to determine whether there is no use of the codepoint but to determine that the registration is an accurate representation of any deployed usage. ¶ 22.1.4.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.14-p6896-s30", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Permanent Registrations Permanent registrations in QUIC registries use the Specification Required policy ( Section 4.6 of [ RFC8126 ] ), unless otherwise specified.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6897-s31", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "The designated expert or experts verify that a specification exists and is readily accessible.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6898-s32", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Experts are encouraged to be biased towards approving registrations unless they are abusive, frivolous, or actively harmful (not merely aesthetically displeasing or architecturally dubious).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6899-s33", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "The creation of a registry MAY specify additional constraints on permanent registrations. ¶ The creation of a registry MAY identify a range of codepoints where registrations are governed by a different registration policy.", "facet": "other", "normative": true, "modalities": ["MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.14-p6900-s34", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "For instance, the \"QUIC Frame Types\" registry ( Section 22.4 ) has a stricter policy for codepoints in the range from 0 to 63. ¶ Any stricter requirements for permanent registrations do not prevent provisional registrations for affected codepoints.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.14-p6901-s35", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "For instance, a provisional registration for a frame type of 61 could be requested. ¶ All registrations made by Standards Track publications MUST be permanent. ¶ All registrations in this document are assigned a permanent status and list a change controller of the IETF and a contact of the QUIC Working Group (quic@ietf.org). ¶ 22.2.", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "21.14-p6902-s36", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "QUIC Versions Registry IANA has added a registry for \"QUIC Versions\" under a \"QUIC\" heading. ¶ The \"QUIC Versions\" registry governs a 32-bit space; see Section 15 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6903-s37", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "This registry follows the registration policy from Section 22.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6904-s38", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Permanent registrations in this registry are assigned using the Specification Required policy ( Section 4.6 of [ RFC8126 ] ). ¶ The codepoint of 0x00000001 for the protocol is assigned with permanent status to the protocol defined in this document.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6905-s39", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "The codepoint of 0x00000000 is permanently reserved; the note for this codepoint indicates that this version is reserved for version negotiation. ¶ All codepoints that follow the pattern 0x?a?a?a?a are reserved, MUST NOT be assigned by IANA, and MUST NOT appear in the listing of assigned values. ¶ 22.3.", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.14-p6906-s40", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "QUIC Transport Parameters Registry IANA has added a registry for \"QUIC Transport Parameters\" under a \"QUIC\" heading. ¶ The \"QUIC Transport Parameters\" registry governs a 62-bit space.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6907-s41", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "This registry follows the registration policy from Section 22.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6908-s42", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Permanent registrations in this registry are assigned using the Specification Required policy ( Section 4.6 of [ RFC8126 ] ), except for values between 0x00 and 0x3f (in hexadecimal), inclusive, which are assigned using Standards Action or IESG Approval as defined in Sections 4.9 and 4.10 of [ RFC8126 ] . ¶ In addition to the fields listed in Section 22.1.1 , permanent registrations in this registry MUST include the following field: ¶ Parameter Name:", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.14-p6909-s43", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "A short mnemonic for the parameter. ¶ The initial contents of this registry are shown in Table 6 . ¶ Table 6 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6910-s44", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Initial QUIC Transport Parameters Registry Entries Value Parameter Name Specification 0x00 original_destination_connection_id Section 18.2 0x01 max_idle_timeout Section 18.2 0x02 stateless_reset_token Section 18.2 0x03 max_udp_payload_size Section 18.2 0x04 initial_max_data Section 18.2 0x05 initial_max_stream_data_bidi_local Section 18.2 0x06 initial_max_stream_data_bidi_remote Section 18.2 0x07 initial_max_stream_data_uni Section 18.2 0x08 initial_max_streams_bidi Section 18.2 0x09 initial_max_streams_uni Section 18.2 0x0a ack_delay_exponent Section 18.2 0x0b max_ack_delay Section 18.2 0x0c disable_active_migration Section 18.2 0x0d preferred_address Section 18.2 0x0e active_connection_id_limit Section 18.2 0x0f initial_source_connection_id Section 18.2 0x10 retry_source_connection_id Section 18.2 Each value of the form 31 * N + 27 for integer values of N (that is, 27, 58, 89, ...) are reserved; these values MUST NOT be assigned by IANA and MUST NOT appear in the listing of assigned values. ¶ 22.4.", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "21.14-p6911-s45", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "QUIC Frame Types Registry IANA has added a registry for \"QUIC Frame Types\" under a \"QUIC\" heading. ¶ The \"QUIC Frame Types\" registry governs a 62-bit space.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.14-p6912-s46", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "This registry follows the registration policy from Section 22.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6913-s47", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Permanent registrations in this registry are assigned using the Specification Required policy ( Section 4.6 of [ RFC8126 ] ), except for values between 0x00 and 0x3f (in hexadecimal), inclusive, which are assigned using Standards Action or IESG Approval as defined in Sections 4.9 and 4.10 of [ RFC8126 ] . ¶ In addition to the fields listed in Section 22.1.1 , permanent registrations in this registry MUST include the following field: ¶ Frame Type Name:", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "21.14-p6914-s48", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "A short mnemonic for the frame type. ¶ In addition to the advice in Section 22.1 , specifications for new permanent registrations SHOULD describe the means by which an endpoint might determine that it can send the identified type of frame.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "21.14-p6915-s49", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "An accompanying transport parameter registration is expected for most registrations; see Section 22.3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6916-s50", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Specifications for permanent registrations also need to describe the format and assigned semantics of any fields in the frame. ¶ The initial contents of this registry are tabulated in Table 3 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "21.14-p6917-s51", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Note that the registry does not include the \"Pkts\" and \"Spec\" columns from Table 3 . ¶ 22.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6918-s52", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "QUIC Transport Error Codes Registry IANA has added a registry for \"QUIC Transport Error Codes\" under a \"QUIC\" heading. ¶ The \"QUIC Transport Error Codes\" registry governs a 62-bit space.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6919-s53", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "This space is split into three ranges that are governed by different policies.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6920-s54", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Permanent registrations in this registry are assigned using the Specification Required policy ( Section 4.6 of [ RFC8126 ] ), except for values between 0x00 and 0x3f (in hexadecimal), inclusive, which are assigned using Standards Action or IESG Approval as defined in Sections 4.9 and 4.10 of [ RFC8126 ] . ¶ In addition to the fields listed in Section 22.1.1 , permanent registrations in this registry MUST include the following fields: ¶ Code:", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "21.14-p6921-s55", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "A short mnemonic for the parameter. ¶ Description:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "21.14-p6922-s56", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "A brief description of the error code semantics, which MAY be a summary if a specification reference is provided. ¶ The initial contents of this registry are shown in Table 7 . ¶ Table 7 :", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "21.14-p6923-s57", "section": "21.14", "anchor": "#name-traffic-analysis", "para_id": "21.14-p1598", "text": "Initial QUIC Transport Error Codes Registry Entries Value Code Description Specification 0x00 NO_ERROR No error Section 20 0x01 INTERNAL_ERROR Implementation error Section 20 0x02 CONNECTION_REFUSED Server refuses a connection Section 20 0x03 FLOW_CONTROL_ERROR Flow control error Section 20 0x04 STREAM_LIMIT_ERROR Too many streams opened Section 20 0x05 STREAM_STATE_ERROR Frame received in invalid stream state Section 20 0x06 FINAL_SIZE_ERROR Change to final size Section 20 0x07 FRAME_ENCODING_ERROR Frame encoding error Section 20 0x08 TRANSPORT_PARAMETER_ERROR Error in transport parameters Section 20 0x09 CONNECTION_ID_LIMIT_ERROR Too many connection IDs received Section 20 0x0a PROTOCOL_VIOLATION Generic protocol violation Section 20 0x0b INVALID_TOKEN Invalid Token received Section 20 0x0c APPLICATION_ERROR Application error Section 20 0x0d CRYPTO_BUFFER_EXCEEDED CRYPTO data buffer overflowed Section 20 0x0e KEY_UPDATE_ERROR Invalid packet protection update Section 20 0x0f AEAD_LIMIT_REACHED Excessive use of packet protection keys Section 20 0x10 NO_VIABLE_PATH No viable network path exists Section 20 0x0100-​0x01ff CRYPTO_ERROR TLS alert code Section 20", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": ["FINAL_SIZE_ERROR", "FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 2}
{"sent_id": "22-p6924-s1", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1599", "text": "This document establishes several registries for the management of codepoints in QUIC.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6925-s2", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1599", "text": "These registries operate on a common set of policies as defined in Section 22.1 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6926-s1", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "22.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6927-s2", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "Registration Policies for QUIC Registries All QUIC registries allow for both provisional and permanent registration of codepoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6928-s3", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "This section documents policies that are common to these registries. ¶ 22.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6929-s4", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "Provisional Registrations Provisional registrations of codepoints are intended to allow for private use and experimentation with extensions to QUIC.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6930-s5", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "Provisional registrations only require the inclusion of the codepoint value and contact information.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6931-s6", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "However, provisional registrations could be reclaimed and reassigned for another purpose. ¶ Provisional registrations require Expert Review, as defined in Section 4.5 of [ RFC8126 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6932-s7", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "The designated expert or experts are advised that only registrations for an excessive proportion of remaining codepoint space or the very first unassigned value (see Section 22.1.2 ) can be rejected. ¶ Provisional registrations will include a Date field that indicates when the registration was last updated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "22-p6933-s8", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "A request to update the date on any provisional registration can be made without review from the designated expert(s). ¶ All QUIC registries include the following fields to support provisional registration: ¶ Value:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6934-s9", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "The assigned codepoint. ¶ Status: \"permanent\" or \"provisional\". ¶ Specification:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6935-s10", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "A reference to a publicly available specification for the value. ¶ Date:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6936-s11", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "The date of the last update to the registration. ¶ Change Controller:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6937-s12", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "The entity that is responsible for the definition of the registration. ¶ Contact:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6938-s13", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "Contact details for the registrant. ¶ Notes:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6939-s14", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "Supplementary notes about the registration. ¶ Provisional registrations MAY omit the Specification and Notes fields, plus any additional fields that might be required for a permanent registration.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22-p6940-s15", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "The Date field is not required as part of requesting a registration, as it is set to the date the registration is created or updated. ¶ 22.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6941-s16", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "Selecting Codepoints New requests for codepoints from QUIC registries SHOULD use a randomly selected codepoint that excludes both existing allocations and the first unallocated codepoint in the selected space.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22-p6942-s17", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "Requests for multiple codepoints MAY use a contiguous range.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22-p6943-s18", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "This minimizes the risk that differing semantics are attributed to the same codepoint by different implementations. ¶ The use of the first unassigned codepoint is reserved for allocation using the Standards Action policy; see Section 4.9 of [ RFC8126 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6944-s19", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "The early codepoint assignment process [ EARLY-ASSIGN ] can be used for these values. ¶ For codepoints that are encoded in variable-length integers ( Section 16 ), such as frame types, codepoints that encode to four or eight bytes (that is, values 2 14 and above) SHOULD be used unless the usage is especially sensitive to having a longer encoding. ¶ Applications to register codepoints in QUIC registries MAY include a requested codepoint as part of the registration.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "22-p6945-s20", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "IANA MUST allocate the selected codepoint if the codepoint is unassigned and the requirements of the registration policy are met. ¶ 22.1.3.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "22-p6946-s21", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "Reclaiming Provisional Codepoints A request might be made to remove an unused provisional registration from the registry to reclaim space in a registry, or a portion of the registry (such as the 64-16383 range for codepoints that use variable-length encodings).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6947-s22", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "This SHOULD be done only for the codepoints with the earliest recorded date, and entries that have been updated less than a year prior SHOULD NOT be reclaimed. ¶ A request to remove a codepoint MUST be reviewed by the designated experts.", "facet": "other", "normative": true, "modalities": ["SHOULD", "SHOULD NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22-p6948-s23", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "The experts MUST attempt to determine whether the codepoint is still in use.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22-p6949-s24", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "Experts are advised to contact the listed contacts for the registration, plus as wide a set of protocol implementers as possible in order to determine whether any use of the codepoint is known.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6950-s25", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "The experts are also advised to allow at least four weeks for responses. ¶ If any use of the codepoints is identified by this search or a request to update the registration is made, the codepoint MUST NOT be reclaimed.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "22-p6951-s26", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "Instead, the date on the registration is updated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6952-s27", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "A note might be added for the registration recording relevant information that was learned. ¶ If no use of the codepoint was identified and no request was made to update the registration, the codepoint MAY be removed from the registry. ¶ This review and consultation process also applies to requests to change a provisional registration into a permanent registration, except that the goal is not to determine whether there is no use of the codepoint but to determine that the registration is an accurate representation of any deployed usage. ¶ 22.1.4.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "22-p6953-s28", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "Permanent Registrations Permanent registrations in QUIC registries use the Specification Required policy ( Section 4.6 of [ RFC8126 ] ), unless otherwise specified.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6954-s29", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "The designated expert or experts verify that a specification exists and is readily accessible.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6955-s30", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "Experts are encouraged to be biased towards approving registrations unless they are abusive, frivolous, or actively harmful (not merely aesthetically displeasing or architecturally dubious).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22-p6956-s31", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "The creation of a registry MAY specify additional constraints on permanent registrations. ¶ The creation of a registry MAY identify a range of codepoints where registrations are governed by a different registration policy.", "facet": "other", "normative": true, "modalities": ["MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22-p6957-s32", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "For instance, the \"QUIC Frame Types\" registry ( Section 22.4 ) has a stricter policy for codepoints in the range from 0 to 63. ¶ Any stricter requirements for permanent registrations do not prevent provisional registrations for affected codepoints.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "22-p6958-s33", "section": "22", "anchor": "#name-iana-considerations", "para_id": "22-p1600", "text": "For instance, a provisional registration for a frame type of 61 could be requested. ¶ All registrations made by Standards Track publications MUST be permanent. ¶ All registrations in this document are assigned a permanent status and list a change controller of the IETF and a contact of the QUIC Working Group (quic@ietf.org). ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "22.1-p6959-s1", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1601", "text": "All QUIC registries allow for both provisional and permanent registration of codepoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1-p6960-s2", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1601", "text": "This section documents policies that are common to these registries. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1-p6961-s1", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1602", "text": "22.1.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1-p6962-s2", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1602", "text": "Provisional Registrations Provisional registrations of codepoints are intended to allow for private use and experimentation with extensions to QUIC.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1-p6963-s3", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1602", "text": "Provisional registrations only require the inclusion of the codepoint value and contact information.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1-p6964-s4", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1602", "text": "However, provisional registrations could be reclaimed and reassigned for another purpose. ¶ Provisional registrations require Expert Review, as defined in Section 4.5 of [ RFC8126 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1-p6965-s5", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1602", "text": "The designated expert or experts are advised that only registrations for an excessive proportion of remaining codepoint space or the very first unassigned value (see Section 22.1.2 ) can be rejected. ¶ Provisional registrations will include a Date field that indicates when the registration was last updated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "22.1-p6966-s6", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1602", "text": "A request to update the date on any provisional registration can be made without review from the designated expert(s). ¶ All QUIC registries include the following fields to support provisional registration: ¶ Value:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1-p6967-s7", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1602", "text": "The assigned codepoint. ¶ Status: \"permanent\" or \"provisional\". ¶ Specification:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1-p6968-s8", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1602", "text": "A reference to a publicly available specification for the value. ¶ Date:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1-p6969-s9", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1602", "text": "The date of the last update to the registration. ¶ Change Controller:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1-p6970-s10", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1602", "text": "The entity that is responsible for the definition of the registration. ¶ Contact:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1-p6971-s11", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1602", "text": "Contact details for the registrant. ¶ Notes:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1-p6972-s12", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1602", "text": "Supplementary notes about the registration. ¶ Provisional registrations MAY omit the Specification and Notes fields, plus any additional fields that might be required for a permanent registration.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1-p6973-s13", "section": "22.1", "anchor": "#name-registration-policies-for-q", "para_id": "22.1-p1602", "text": "The Date field is not required as part of requesting a registration, as it is set to the date the registration is created or updated. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6974-s1", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1603", "text": "Provisional registrations of codepoints are intended to allow for private use and experimentation with extensions to QUIC.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6975-s2", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1603", "text": "Provisional registrations only require the inclusion of the codepoint value and contact information.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6976-s3", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1603", "text": "However, provisional registrations could be reclaimed and reassigned for another purpose. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6977-s1", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1604", "text": "Provisional registrations require Expert Review, as defined in Section 4.5 of [ RFC8126 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6978-s2", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1604", "text": "The designated expert or experts are advised that only registrations for an excessive proportion of remaining codepoint space or the very first unassigned value (see Section 22.1.2 ) can be rejected. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6979-s1", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1605", "text": "Provisional registrations will include a Date field that indicates when the registration was last updated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "22.1.1-p6980-s2", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1605", "text": "A request to update the date on any provisional registration can be made without review from the designated expert(s). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6981-s1", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1606", "text": "All QUIC registries include the following fields to support provisional registration: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6982-s1", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1607", "text": "The assigned codepoint. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6983-s1", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1608", "text": "\"permanent\" or \"provisional\". ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6984-s1", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1609", "text": "A reference to a publicly available specification for the value. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6985-s1", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1610", "text": "The date of the last update to the registration. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6986-s1", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1611", "text": "The entity that is responsible for the definition of the registration. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6987-s1", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1612", "text": "Contact details for the registrant. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6988-s1", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1613", "text": "Supplementary notes about the registration. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6989-s1", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1614", "text": "Provisional registrations MAY omit the Specification and Notes fields, plus any additional fields that might be required for a permanent registration.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.1-p6990-s2", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1614", "text": "The Date field is not required as part of requesting a registration, as it is set to the date the registration is created or updated. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6991-s1", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1615", "text": "22.1.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6992-s2", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1615", "text": "Selecting Codepoints New requests for codepoints from QUIC registries SHOULD use a randomly selected codepoint that excludes both existing allocations and the first unallocated codepoint in the selected space.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.1-p6993-s3", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1615", "text": "Requests for multiple codepoints MAY use a contiguous range.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.1-p6994-s4", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1615", "text": "This minimizes the risk that differing semantics are attributed to the same codepoint by different implementations. ¶ The use of the first unassigned codepoint is reserved for allocation using the Standards Action policy; see Section 4.9 of [ RFC8126 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.1-p6995-s5", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1615", "text": "The early codepoint assignment process [ EARLY-ASSIGN ] can be used for these values. ¶ For codepoints that are encoded in variable-length integers ( Section 16 ), such as frame types, codepoints that encode to four or eight bytes (that is, values 2 14 and above) SHOULD be used unless the usage is especially sensitive to having a longer encoding. ¶ Applications to register codepoints in QUIC registries MAY include a requested codepoint as part of the registration.", "facet": "frames", "normative": true, "modalities": ["SHOULD", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "22.1.1-p6996-s6", "section": "22.1.1", "anchor": "#name-provisional-registrations", "para_id": "22.1.1-p1615", "text": "IANA MUST allocate the selected codepoint if the codepoint is unassigned and the requirements of the registration policy are met. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "22.1.2-p6997-s1", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1616", "text": "New requests for codepoints from QUIC registries SHOULD use a randomly selected codepoint that excludes both existing allocations and the first unallocated codepoint in the selected space.", "facet": "other", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.2-p6998-s2", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1616", "text": "Requests for multiple codepoints MAY use a contiguous range.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.2-p6999-s3", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1616", "text": "This minimizes the risk that differing semantics are attributed to the same codepoint by different implementations. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.2-p7000-s1", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1617", "text": "The use of the first unassigned codepoint is reserved for allocation using the Standards Action policy; see Section 4.9 of [ RFC8126 ] .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.2-p7001-s2", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1617", "text": "The early codepoint assignment process [ EARLY-ASSIGN ] can be used for these values. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.2-p7002-s1", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1618", "text": "For codepoints that are encoded in variable-length integers ( Section 16 ), such as frame types, codepoints that encode to four or eight bytes (that is, values 2 14 and above) SHOULD be used unless the usage is especially sensitive to having a longer encoding. ¶", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "22.1.2-p7003-s1", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1619", "text": "Applications to register codepoints in QUIC registries MAY include a requested codepoint as part of the registration.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.2-p7004-s2", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1619", "text": "IANA MUST allocate the selected codepoint if the codepoint is unassigned and the requirements of the registration policy are met. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "22.1.2-p7005-s1", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1620", "text": "22.1.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.2-p7006-s2", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1620", "text": "Reclaiming Provisional Codepoints A request might be made to remove an unused provisional registration from the registry to reclaim space in a registry, or a portion of the registry (such as the 64-16383 range for codepoints that use variable-length encodings).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.2-p7007-s3", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1620", "text": "This SHOULD be done only for the codepoints with the earliest recorded date, and entries that have been updated less than a year prior SHOULD NOT be reclaimed. ¶ A request to remove a codepoint MUST be reviewed by the designated experts.", "facet": "other", "normative": true, "modalities": ["SHOULD", "SHOULD NOT", "MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.2-p7008-s4", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1620", "text": "The experts MUST attempt to determine whether the codepoint is still in use.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.2-p7009-s5", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1620", "text": "Experts are advised to contact the listed contacts for the registration, plus as wide a set of protocol implementers as possible in order to determine whether any use of the codepoint is known.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.2-p7010-s6", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1620", "text": "The experts are also advised to allow at least four weeks for responses. ¶ If any use of the codepoints is identified by this search or a request to update the registration is made, the codepoint MUST NOT be reclaimed.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "22.1.2-p7011-s7", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1620", "text": "Instead, the date on the registration is updated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.2-p7012-s8", "section": "22.1.2", "anchor": "#name-selecting-codepoints", "para_id": "22.1.2-p1620", "text": "A note might be added for the registration recording relevant information that was learned. ¶ If no use of the codepoint was identified and no request was made to update the registration, the codepoint MAY be removed from the registry. ¶ This review and consultation process also applies to requests to change a provisional registration into a permanent registration, except that the goal is not to determine whether there is no use of the codepoint but to determine that the registration is an accurate representation of any deployed usage. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "22.1.3-p7013-s1", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1621", "text": "A request might be made to remove an unused provisional registration from the registry to reclaim space in a registry, or a portion of the registry (such as the 64-16383 range for codepoints that use variable-length encodings).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.3-p7014-s2", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1621", "text": "This SHOULD be done only for the codepoints with the earliest recorded date, and entries that have been updated less than a year prior SHOULD NOT be reclaimed. ¶", "facet": "other", "normative": true, "modalities": ["SHOULD", "SHOULD NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.3-p7015-s1", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1622", "text": "A request to remove a codepoint MUST be reviewed by the designated experts.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.3-p7016-s2", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1622", "text": "The experts MUST attempt to determine whether the codepoint is still in use.", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.3-p7017-s3", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1622", "text": "Experts are advised to contact the listed contacts for the registration, plus as wide a set of protocol implementers as possible in order to determine whether any use of the codepoint is known.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.3-p7018-s4", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1622", "text": "The experts are also advised to allow at least four weeks for responses. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.3-p7019-s1", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1623", "text": "If any use of the codepoints is identified by this search or a request to update the registration is made, the codepoint MUST NOT be reclaimed.", "facet": "other", "normative": true, "modalities": ["MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "22.1.3-p7020-s2", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1623", "text": "Instead, the date on the registration is updated.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.3-p7021-s3", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1623", "text": "A note might be added for the registration recording relevant information that was learned. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.3-p7022-s1", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1624", "text": "If no use of the codepoint was identified and no request was made to update the registration, the codepoint MAY be removed from the registry. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "22.1.3-p7023-s1", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1625", "text": "This review and consultation process also applies to requests to change a provisional registration into a permanent registration, except that the goal is not to determine whether there is no use of the codepoint but to determine that the registration is an accurate representation of any deployed usage. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.3-p7024-s1", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1626", "text": "22.1.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.3-p7025-s2", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1626", "text": "Permanent Registrations Permanent registrations in QUIC registries use the Specification Required policy ( Section 4.6 of [ RFC8126 ] ), unless otherwise specified.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.3-p7026-s3", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1626", "text": "The designated expert or experts verify that a specification exists and is readily accessible.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.3-p7027-s4", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1626", "text": "Experts are encouraged to be biased towards approving registrations unless they are abusive, frivolous, or actively harmful (not merely aesthetically displeasing or architecturally dubious).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.3-p7028-s5", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1626", "text": "The creation of a registry MAY specify additional constraints on permanent registrations. ¶ The creation of a registry MAY identify a range of codepoints where registrations are governed by a different registration policy.", "facet": "other", "normative": true, "modalities": ["MAY", "MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.3-p7029-s6", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1626", "text": "For instance, the \"QUIC Frame Types\" registry ( Section 22.4 ) has a stricter policy for codepoints in the range from 0 to 63. ¶ Any stricter requirements for permanent registrations do not prevent provisional registrations for affected codepoints.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "22.1.3-p7030-s7", "section": "22.1.3", "anchor": "#name-reclaiming-provisional-code", "para_id": "22.1.3-p1626", "text": "For instance, a provisional registration for a frame type of 61 could be requested. ¶ All registrations made by Standards Track publications MUST be permanent. ¶ All registrations in this document are assigned a permanent status and list a change controller of the IETF and a contact of the QUIC Working Group (quic@ietf.org). ¶", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "22.1.4-p7031-s1", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1627", "text": "Permanent registrations in QUIC registries use the Specification Required policy ( Section 4.6 of [ RFC8126 ] ), unless otherwise specified.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.4-p7032-s2", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1627", "text": "The designated expert or experts verify that a specification exists and is readily accessible.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.4-p7033-s3", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1627", "text": "Experts are encouraged to be biased towards approving registrations unless they are abusive, frivolous, or actively harmful (not merely aesthetically displeasing or architecturally dubious).", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.4-p7034-s4", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1627", "text": "The creation of a registry MAY specify additional constraints on permanent registrations. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.4-p7035-s1", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1628", "text": "The creation of a registry MAY identify a range of codepoints where registrations are governed by a different registration policy.", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.4-p7036-s2", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1628", "text": "For instance, the \"QUIC Frame Types\" registry ( Section 22.4 ) has a stricter policy for codepoints in the range from 0 to 63. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "22.1.4-p7037-s1", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1629", "text": "Any stricter requirements for permanent registrations do not prevent provisional registrations for affected codepoints.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.4-p7038-s2", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1629", "text": "For instance, a provisional registration for a frame type of 61 could be requested. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "22.1.4-p7039-s1", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1630", "text": "All registrations made by Standards Track publications MUST be permanent. ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.1.4-p7040-s1", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1631", "text": "All registrations in this document are assigned a permanent status and list a change controller of the IETF and a contact of the QUIC Working Group (quic@ietf.org). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.4-p7041-s1", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1632", "text": "22.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.4-p7042-s2", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1632", "text": "QUIC Versions Registry IANA has added a registry for \"QUIC Versions\" under a \"QUIC\" heading. ¶ The \"QUIC Versions\" registry governs a 32-bit space; see Section 15 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.4-p7043-s3", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1632", "text": "This registry follows the registration policy from Section 22.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.4-p7044-s4", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1632", "text": "Permanent registrations in this registry are assigned using the Specification Required policy ( Section 4.6 of [ RFC8126 ] ). ¶ The codepoint of 0x00000001 for the protocol is assigned with permanent status to the protocol defined in this document.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.1.4-p7045-s5", "section": "22.1.4", "anchor": "#name-permanent-registrations", "para_id": "22.1.4-p1632", "text": "The codepoint of 0x00000000 is permanently reserved; the note for this codepoint indicates that this version is reserved for version negotiation. ¶ All codepoints that follow the pattern 0x?a?a?a?a are reserved, MUST NOT be assigned by IANA, and MUST NOT appear in the listing of assigned values. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.2-p7046-s1", "section": "22.2", "anchor": "#name-quic-versions-registry", "para_id": "22.2-p1633", "text": "IANA has added a registry for \"QUIC Versions\" under a \"QUIC\" heading. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.2-p7047-s1", "section": "22.2", "anchor": "#name-quic-versions-registry", "para_id": "22.2-p1634", "text": "The \"QUIC Versions\" registry governs a 32-bit space; see Section 15 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.2-p7048-s2", "section": "22.2", "anchor": "#name-quic-versions-registry", "para_id": "22.2-p1634", "text": "This registry follows the registration policy from Section 22.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.2-p7049-s3", "section": "22.2", "anchor": "#name-quic-versions-registry", "para_id": "22.2-p1634", "text": "Permanent registrations in this registry are assigned using the Specification Required policy ( Section 4.6 of [ RFC8126 ] ). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.2-p7050-s1", "section": "22.2", "anchor": "#name-quic-versions-registry", "para_id": "22.2-p1635", "text": "The codepoint of 0x00000001 for the protocol is assigned with permanent status to the protocol defined in this document.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.2-p7051-s2", "section": "22.2", "anchor": "#name-quic-versions-registry", "para_id": "22.2-p1635", "text": "The codepoint of 0x00000000 is permanently reserved; the note for this codepoint indicates that this version is reserved for version negotiation. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.2-p7052-s1", "section": "22.2", "anchor": "#name-quic-versions-registry", "para_id": "22.2-p1636", "text": "All codepoints that follow the pattern 0x?a?a?a?a are reserved, MUST NOT be assigned by IANA, and MUST NOT appear in the listing of assigned values. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.2-p7053-s1", "section": "22.2", "anchor": "#name-quic-versions-registry", "para_id": "22.2-p1637", "text": "22.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.2-p7054-s2", "section": "22.2", "anchor": "#name-quic-versions-registry", "para_id": "22.2-p1637", "text": "QUIC Transport Parameters Registry IANA has added a registry for \"QUIC Transport Parameters\" under a \"QUIC\" heading. ¶ The \"QUIC Transport Parameters\" registry governs a 62-bit space.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.2-p7055-s3", "section": "22.2", "anchor": "#name-quic-versions-registry", "para_id": "22.2-p1637", "text": "This registry follows the registration policy from Section 22.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.2-p7056-s4", "section": "22.2", "anchor": "#name-quic-versions-registry", "para_id": "22.2-p1637", "text": "Permanent registrations in this registry are assigned using the Specification Required policy ( Section 4.6 of [ RFC8126 ] ), except for values between 0x00 and 0x3f (in hexadecimal), inclusive, which are assigned using Standards Action or IESG Approval as defined in Sections 4.9 and 4.10 of [ RFC8126 ] . ¶ In addition to the fields listed in Section 22.1.1 , permanent registrations in this registry MUST include the following field: ¶ Parameter Name:", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.2-p7057-s5", "section": "22.2", "anchor": "#name-quic-versions-registry", "para_id": "22.2-p1637", "text": "A short mnemonic for the parameter. ¶ The initial contents of this registry are shown in Table 6 . ¶ Table 6 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.2-p7058-s6", "section": "22.2", "anchor": "#name-quic-versions-registry", "para_id": "22.2-p1637", "text": "Initial QUIC Transport Parameters Registry Entries Value Parameter Name Specification 0x00 original_destination_connection_id Section 18.2 0x01 max_idle_timeout Section 18.2 0x02 stateless_reset_token Section 18.2 0x03 max_udp_payload_size Section 18.2 0x04 initial_max_data Section 18.2 0x05 initial_max_stream_data_bidi_local Section 18.2 0x06 initial_max_stream_data_bidi_remote Section 18.2 0x07 initial_max_stream_data_uni Section 18.2 0x08 initial_max_streams_bidi Section 18.2 0x09 initial_max_streams_uni Section 18.2 0x0a ack_delay_exponent Section 18.2 0x0b max_ack_delay Section 18.2 0x0c disable_active_migration Section 18.2 0x0d preferred_address Section 18.2 0x0e active_connection_id_limit Section 18.2 0x0f initial_source_connection_id Section 18.2 0x10 retry_source_connection_id Section 18.2 Each value of the form 31 * N + 27 for integer values of N (that is, 27, 58, 89, ...) are reserved; these values MUST NOT be assigned by IANA and MUST NOT appear in the listing of assigned values. ¶", "facet": "state_machine", "normative": true, "modalities": ["MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "22.3-p7059-s1", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1638", "text": "IANA has added a registry for \"QUIC Transport Parameters\" under a \"QUIC\" heading. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.3-p7060-s1", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1639", "text": "The \"QUIC Transport Parameters\" registry governs a 62-bit space.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.3-p7061-s2", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1639", "text": "This registry follows the registration policy from Section 22.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.3-p7062-s3", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1639", "text": "Permanent registrations in this registry are assigned using the Specification Required policy ( Section 4.6 of [ RFC8126 ] ), except for values between 0x00 and 0x3f (in hexadecimal), inclusive, which are assigned using Standards Action or IESG Approval as defined in Sections 4.9 and 4.10 of [ RFC8126 ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.3-p7063-s1", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1640", "text": "In addition to the fields listed in Section 22.1.1 , permanent registrations in this registry MUST include the following field: ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.3-p7064-s1", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1641", "text": "A short mnemonic for the parameter. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.3-p7065-s1", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1642", "text": "The initial contents of this registry are shown in Table 6 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.3-p7066-s1", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1643", "text": "Table 6 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.3-p7067-s2", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1643", "text": "Initial QUIC Transport Parameters Registry Entries Value Parameter Name Specification 0x00 original_destination_connection_id Section 18.2 0x01 max_idle_timeout Section 18.2 0x02 stateless_reset_token Section 18.2 0x03 max_udp_payload_size Section 18.2 0x04 initial_max_data Section 18.2 0x05 initial_max_stream_data_bidi_local Section 18.2 0x06 initial_max_stream_data_bidi_remote Section 18.2 0x07 initial_max_stream_data_uni Section 18.2 0x08 initial_max_streams_bidi Section 18.2 0x09 initial_max_streams_uni Section 18.2 0x0a ack_delay_exponent Section 18.2 0x0b max_ack_delay Section 18.2 0x0c disable_active_migration Section 18.2 0x0d preferred_address Section 18.2 0x0e active_connection_id_limit Section 18.2 0x0f initial_source_connection_id Section 18.2 0x10 retry_source_connection_id Section 18.2", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "22.3-p7068-s1", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1644", "text": "Table 6 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.3-p7069-s2", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1644", "text": "Initial QUIC Transport Parameters Registry Entries Value Parameter Name Specification 0x00 original_destination_connection_id Section 18.2 0x01 max_idle_timeout Section 18.2 0x02 stateless_reset_token Section 18.2 0x03 max_udp_payload_size Section 18.2 0x04 initial_max_data Section 18.2 0x05 initial_max_stream_data_bidi_local Section 18.2 0x06 initial_max_stream_data_bidi_remote Section 18.2 0x07 initial_max_stream_data_uni Section 18.2 0x08 initial_max_streams_bidi Section 18.2 0x09 initial_max_streams_uni Section 18.2 0x0a ack_delay_exponent Section 18.2 0x0b max_ack_delay Section 18.2 0x0c disable_active_migration Section 18.2 0x0d preferred_address Section 18.2 0x0e active_connection_id_limit Section 18.2 0x0f initial_source_connection_id Section 18.2 0x10 retry_source_connection_id Section 18.2", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "22.3-p7070-s1", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1645", "text": "Each value of the form 31 * N + 27 for integer values of N (that is, 27, 58, 89, ...) are reserved; these values MUST NOT be assigned by IANA and MUST NOT appear in the listing of assigned values. ¶", "facet": "other", "normative": true, "modalities": ["MUST NOT", "MUST NOT"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.3-p7071-s1", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1646", "text": "22.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.3-p7072-s2", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1646", "text": "QUIC Frame Types Registry IANA has added a registry for \"QUIC Frame Types\" under a \"QUIC\" heading. ¶ The \"QUIC Frame Types\" registry governs a 62-bit space.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "22.3-p7073-s3", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1646", "text": "This registry follows the registration policy from Section 22.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.3-p7074-s4", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1646", "text": "Permanent registrations in this registry are assigned using the Specification Required policy ( Section 4.6 of [ RFC8126 ] ), except for values between 0x00 and 0x3f (in hexadecimal), inclusive, which are assigned using Standards Action or IESG Approval as defined in Sections 4.9 and 4.10 of [ RFC8126 ] . ¶ In addition to the fields listed in Section 22.1.1 , permanent registrations in this registry MUST include the following field: ¶ Frame Type Name:", "facet": "frames", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 3}
{"sent_id": "22.3-p7075-s5", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1646", "text": "A short mnemonic for the frame type. ¶ In addition to the advice in Section 22.1 , specifications for new permanent registrations SHOULD describe the means by which an endpoint might determine that it can send the identified type of frame.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "22.3-p7076-s6", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1646", "text": "An accompanying transport parameter registration is expected for most registrations; see Section 22.3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.3-p7077-s7", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1646", "text": "Specifications for permanent registrations also need to describe the format and assigned semantics of any fields in the frame. ¶ The initial contents of this registry are tabulated in Table 3 .", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "22.3-p7078-s8", "section": "22.3", "anchor": "#name-quic-transport-parameters-r", "para_id": "22.3-p1646", "text": "Note that the registry does not include the \"Pkts\" and \"Spec\" columns from Table 3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.4-p7079-s1", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1647", "text": "IANA has added a registry for \"QUIC Frame Types\" under a \"QUIC\" heading. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "22.4-p7080-s1", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1648", "text": "The \"QUIC Frame Types\" registry governs a 62-bit space.", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "22.4-p7081-s2", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1648", "text": "This registry follows the registration policy from Section 22.1 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.4-p7082-s3", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1648", "text": "Permanent registrations in this registry are assigned using the Specification Required policy ( Section 4.6 of [ RFC8126 ] ), except for values between 0x00 and 0x3f (in hexadecimal), inclusive, which are assigned using Standards Action or IESG Approval as defined in Sections 4.9 and 4.10 of [ RFC8126 ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.4-p7083-s1", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1649", "text": "In addition to the fields listed in Section 22.1.1 , permanent registrations in this registry MUST include the following field: ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.4-p7084-s1", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1650", "text": "A short mnemonic for the frame type. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "22.4-p7085-s1", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1651", "text": "In addition to the advice in Section 22.1 , specifications for new permanent registrations SHOULD describe the means by which an endpoint might determine that it can send the identified type of frame.", "facet": "frames", "normative": true, "modalities": ["SHOULD"], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 4}
{"sent_id": "22.4-p7086-s2", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1651", "text": "An accompanying transport parameter registration is expected for most registrations; see Section 22.3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.4-p7087-s3", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1651", "text": "Specifications for permanent registrations also need to describe the format and assigned semantics of any fields in the frame. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "22.4-p7088-s1", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1652", "text": "The initial contents of this registry are tabulated in Table 3 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.4-p7089-s2", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1652", "text": "Note that the registry does not include the \"Pkts\" and \"Spec\" columns from Table 3 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.4-p7090-s1", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1653", "text": "22.5.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.4-p7091-s2", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1653", "text": "QUIC Transport Error Codes Registry IANA has added a registry for \"QUIC Transport Error Codes\" under a \"QUIC\" heading. ¶ The \"QUIC Transport Error Codes\" registry governs a 62-bit space.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.4-p7092-s3", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1653", "text": "This space is split into three ranges that are governed by different policies.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.4-p7093-s4", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1653", "text": "Permanent registrations in this registry are assigned using the Specification Required policy ( Section 4.6 of [ RFC8126 ] ), except for values between 0x00 and 0x3f (in hexadecimal), inclusive, which are assigned using Standards Action or IESG Approval as defined in Sections 4.9 and 4.10 of [ RFC8126 ] . ¶ In addition to the fields listed in Section 22.1.1 , permanent registrations in this registry MUST include the following fields: ¶ Code:", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.4-p7094-s5", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1653", "text": "A short mnemonic for the parameter. ¶ Description:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.4-p7095-s6", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1653", "text": "A brief description of the error code semantics, which MAY be a summary if a specification reference is provided. ¶ The initial contents of this registry are shown in Table 7 . ¶ Table 7 :", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "22.4-p7096-s7", "section": "22.4", "anchor": "#name-quic-frame-types-registry", "para_id": "22.4-p1653", "text": "Initial QUIC Transport Error Codes Registry Entries Value Code Description Specification 0x00 NO_ERROR No error Section 20 0x01 INTERNAL_ERROR Implementation error Section 20 0x02 CONNECTION_REFUSED Server refuses a connection Section 20 0x03 FLOW_CONTROL_ERROR Flow control error Section 20 0x04 STREAM_LIMIT_ERROR Too many streams opened Section 20 0x05 STREAM_STATE_ERROR Frame received in invalid stream state Section 20 0x06 FINAL_SIZE_ERROR Change to final size Section 20 0x07 FRAME_ENCODING_ERROR Frame encoding error Section 20 0x08 TRANSPORT_PARAMETER_ERROR Error in transport parameters Section 20 0x09 CONNECTION_ID_LIMIT_ERROR Too many connection IDs received Section 20 0x0a PROTOCOL_VIOLATION Generic protocol violation Section 20 0x0b INVALID_TOKEN Invalid Token received Section 20 0x0c APPLICATION_ERROR Application error Section 20 0x0d CRYPTO_BUFFER_EXCEEDED CRYPTO data buffer overflowed Section 20 0x0e KEY_UPDATE_ERROR Invalid packet protection update Section 20 0x0f AEAD_LIMIT_REACHED Excessive use of packet protection keys Section 20 0x10 NO_VIABLE_PATH No viable network path exists Section 20 0x0100-​0x01ff CRYPTO_ERROR TLS alert code Section 20", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": ["FINAL_SIZE_ERROR", "FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 2}
{"sent_id": "22.5-p7097-s1", "section": "22.5", "anchor": "#name-quic-transport-error-codes-", "para_id": "22.5-p1654", "text": "IANA has added a registry for \"QUIC Transport Error Codes\" under a \"QUIC\" heading. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.5-p7098-s1", "section": "22.5", "anchor": "#name-quic-transport-error-codes-", "para_id": "22.5-p1655", "text": "The \"QUIC Transport Error Codes\" registry governs a 62-bit space.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.5-p7099-s2", "section": "22.5", "anchor": "#name-quic-transport-error-codes-", "para_id": "22.5-p1655", "text": "This space is split into three ranges that are governed by different policies.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.5-p7100-s3", "section": "22.5", "anchor": "#name-quic-transport-error-codes-", "para_id": "22.5-p1655", "text": "Permanent registrations in this registry are assigned using the Specification Required policy ( Section 4.6 of [ RFC8126 ] ), except for values between 0x00 and 0x3f (in hexadecimal), inclusive, which are assigned using Standards Action or IESG Approval as defined in Sections 4.9 and 4.10 of [ RFC8126 ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.5-p7101-s1", "section": "22.5", "anchor": "#name-quic-transport-error-codes-", "para_id": "22.5-p1656", "text": "In addition to the fields listed in Section 22.1.1 , permanent registrations in this registry MUST include the following fields: ¶", "facet": "other", "normative": true, "modalities": ["MUST"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 2}
{"sent_id": "22.5-p7102-s1", "section": "22.5", "anchor": "#name-quic-transport-error-codes-", "para_id": "22.5-p1657", "text": "A short mnemonic for the parameter. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.5-p7103-s1", "section": "22.5", "anchor": "#name-quic-transport-error-codes-", "para_id": "22.5-p1658", "text": "A brief description of the error code semantics, which MAY be a summary if a specification reference is provided. ¶", "facet": "other", "normative": true, "modalities": ["MAY"], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 3}
{"sent_id": "22.5-p7104-s1", "section": "22.5", "anchor": "#name-quic-transport-error-codes-", "para_id": "22.5-p1659", "text": "The initial contents of this registry are shown in Table 7 . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.5-p7105-s1", "section": "22.5", "anchor": "#name-quic-transport-error-codes-", "para_id": "22.5-p1660", "text": "Table 7 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.5-p7106-s2", "section": "22.5", "anchor": "#name-quic-transport-error-codes-", "para_id": "22.5-p1660", "text": "Initial QUIC Transport Error Codes Registry Entries Value Code Description Specification 0x00 NO_ERROR No error Section 20 0x01 INTERNAL_ERROR Implementation error Section 20 0x02 CONNECTION_REFUSED Server refuses a connection Section 20 0x03 FLOW_CONTROL_ERROR Flow control error Section 20 0x04 STREAM_LIMIT_ERROR Too many streams opened Section 20 0x05 STREAM_STATE_ERROR Frame received in invalid stream state Section 20 0x06 FINAL_SIZE_ERROR Change to final size Section 20 0x07 FRAME_ENCODING_ERROR Frame encoding error Section 20 0x08 TRANSPORT_PARAMETER_ERROR Error in transport parameters Section 20 0x09 CONNECTION_ID_LIMIT_ERROR Too many connection IDs received Section 20 0x0a PROTOCOL_VIOLATION Generic protocol violation Section 20 0x0b INVALID_TOKEN Invalid Token received Section 20 0x0c APPLICATION_ERROR Application error Section 20 0x0d CRYPTO_BUFFER_EXCEEDED CRYPTO data buffer overflowed Section 20 0x0e KEY_UPDATE_ERROR Invalid packet protection update Section 20 0x0f AEAD_LIMIT_REACHED Excessive use of packet protection keys Section 20 0x10 NO_VIABLE_PATH No viable network path exists Section 20 0x0100-​0x01ff CRYPTO_ERROR TLS alert code Section 20", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": ["FINAL_SIZE_ERROR", "FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 2}
{"sent_id": "22.5-p7107-s1", "section": "22.5", "anchor": "#name-quic-transport-error-codes-", "para_id": "22.5-p1661", "text": "Table 7 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "22.5-p7108-s2", "section": "22.5", "anchor": "#name-quic-transport-error-codes-", "para_id": "22.5-p1661", "text": "Initial QUIC Transport Error Codes Registry Entries Value Code Description Specification 0x00 NO_ERROR No error Section 20 0x01 INTERNAL_ERROR Implementation error Section 20 0x02 CONNECTION_REFUSED Server refuses a connection Section 20 0x03 FLOW_CONTROL_ERROR Flow control error Section 20 0x04 STREAM_LIMIT_ERROR Too many streams opened Section 20 0x05 STREAM_STATE_ERROR Frame received in invalid stream state Section 20 0x06 FINAL_SIZE_ERROR Change to final size Section 20 0x07 FRAME_ENCODING_ERROR Frame encoding error Section 20 0x08 TRANSPORT_PARAMETER_ERROR Error in transport parameters Section 20 0x09 CONNECTION_ID_LIMIT_ERROR Too many connection IDs received Section 20 0x0a PROTOCOL_VIOLATION Generic protocol violation Section 20 0x0b INVALID_TOKEN Invalid Token received Section 20 0x0c APPLICATION_ERROR Application error Section 20 0x0d CRYPTO_BUFFER_EXCEEDED CRYPTO data buffer overflowed Section 20 0x0e KEY_UPDATE_ERROR Invalid packet protection update Section 20 0x0f AEAD_LIMIT_REACHED Excessive use of packet protection keys Section 20 0x10 NO_VIABLE_PATH No viable network path exists Section 20 0x0100-​0x01ff CRYPTO_ERROR TLS alert code Section 20", "facet": "flow_control", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["server"], "errors": ["FINAL_SIZE_ERROR", "FLOW_CONTROL_ERROR"]}, "event_cue": true, "score": 2}
{"sent_id": "23.1-p7109-s1", "section": "23.1", "anchor": "#name-normative-references", "para_id": "23.1-p1662", "text": "Ferguson, P. and D.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.1-p7110-s2", "section": "23.1", "anchor": "#name-normative-references", "para_id": "23.1-p1662", "text": "Senie , \"Network Ingress Filtering:", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.1-p7111-s3", "section": "23.1", "anchor": "#name-normative-references", "para_id": "23.1-p1662", "text": "Defeating Denial of Service Attacks which employ IP Source Address Spoofing\" , BCP 38 , RFC 2827 , May 2000 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7112-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "Appendix A.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7113-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "Pseudocode The pseudocode in this section describes sample algorithms.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7114-s3", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "These algorithms are intended to be correct and clear, rather than being optimally performant. ¶ The pseudocode segments in this section are licensed as Code Components; see the Copyright Notice. ¶ A.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7115-s4", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "Sample Variable-Length Integer Decoding The pseudocode in Figure 45 shows how a variable-length integer can be read from a stream of bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7116-s5", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "The function ReadVarint takes a single argument -- a sequence of bytes, which can be read in network byte order. ¶ ReadVarint(data): // The length of variable-length integers is encoded in the // first two bits of the first byte. v = data.next_byte() prefix = v >> 6 length = 1 << prefix // Once the length is known, remove these bits and read any // remaining bytes. v = v & 0x3f repeat length-1 times: v = (v << 8) + data.next_byte() return v Figure 45 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7117-s6", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "Sample Variable-Length Integer Decoding Algorithm For example, the eight-byte sequence 0xc2197c5eff14e88c decodes to the decimal value 151,288,809,941,952,652; the four-byte sequence 0x9d7f3e7d decodes to 494,878,333; the two-byte sequence 0x7bbd decodes to 15,293; and the single byte 0x25 decodes to 37 (as does the two-byte sequence 0x4025). ¶ A.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7118-s7", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "Sample Packet Number Encoding Algorithm The pseudocode in Figure 46 shows how an implementation can select an appropriate size for packet number encodings. ¶ The EncodePacketNumber function takes two arguments: ¶ full_pn is the full packet number of the packet being sent. ¶ largest_acked is the largest packet number that has been acknowledged by the peer in the current packet number space, if any. ¶ EncodePacketNumber(full_pn, largest_acked): // The number of bits must be at least one more // than the base-2 logarithm of the number of contiguous // unacknowledged packet numbers, including the new packet. if largest_acked is None: num_unacked = full_pn + 1 else: num_unacked = full_pn - largest_acked min_bits = log(num_unacked, 2) + 1 num_bytes = ceil(min_bits / 8) // Encode the integer value and truncate to // the num_bytes least significant bytes. return encode(full_pn, num_bytes) Figure 46 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7119-s8", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "Sample Packet Number Encoding Algorithm For example, if an endpoint has received an acknowledgment for packet 0xabe8b3 and is sending a packet with a number of 0xac5c02, there are 29,519 (0x734f) outstanding packet numbers.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7120-s9", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "In order to represent at least twice this range (59,038 packets, or 0xe69e), 16 bits are required. ¶ In the same state, sending a packet with a number of 0xace8fe uses the 24-bit encoding, because at least 18 bits are required to represent twice the range (131,222 packets, or 0x020096). ¶ A.3.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "23.2-p7121-s10", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "Sample Packet Number Decoding Algorithm The pseudocode in Figure 47 includes an example algorithm for decoding packet numbers after header protection has been removed. ¶ The DecodePacketNumber function takes three arguments: ¶ largest_pn is the largest packet number that has been successfully processed in the current packet number space. ¶ truncated_pn is the value of the Packet Number field. ¶ pn_nbits is the number of bits in the Packet Number field (8, 16, 24, or 32). ¶ DecodePacketNumber(largest_pn, truncated_pn, pn_nbits): expected_pn = largest_pn + 1 pn_win = 1 << pn_nbits pn_hwin = pn_win / 2 pn_mask = pn_win - 1 // The incoming packet number should be greater than // expected_pn - pn_hwin and less than or equal to // expected_pn + pn_hwin // // This means we cannot just strip the trailing bits from // expected_pn and add the truncated_pn because that might // yield a value outside the window. // // The following code calculates a candidate value and // makes sure it's within the packet number window. // Note the extra checks to prevent overflow and underflow. candidate_pn = (expected_pn & ~pn_mask) | truncated_pn if candidate_pn <= expected_pn - pn_hwin and candidate_pn < (1 << 62) - pn_win: return candidate_pn + pn_win if candidate_pn > expected_pn + pn_hwin and candidate_pn >= pn_win: return candidate_pn - pn_win return candidate_pn Figure 47 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7122-s11", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "Sample Packet Number Decoding Algorithm For example, if the highest successfully authenticated packet had a packet number of 0xa82f30ea, then a packet containing a 16-bit value of 0x9b32 will be decoded as 0xa82f9b32. ¶ A.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7123-s12", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "Sample ECN Validation Algorithm Each time an endpoint commences sending on a new network path, it determines whether the path supports ECN; see Section 13.4 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7124-s13", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "If the path supports ECN, the goal is to use ECN.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7125-s14", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "Endpoints might also periodically reassess a path that was determined to not support ECN. ¶ This section describes one method for testing new paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7126-s15", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "This algorithm is intended to show how a path might be tested for ECN support.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7127-s16", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "Endpoints can implement different methods. ¶ The path is assigned an ECN state that is one of \"testing\", \"unknown\", \"failed\", or \"capable\".", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "23.2-p7128-s17", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "On paths with a \"testing\" or \"capable\" state, the endpoint sends packets with an ECT marking -- ECT(0) by default; otherwise, the endpoint sends unmarked packets. ¶ To start testing a path, the ECN state is set to \"testing\", and existing ECN counts are remembered as a baseline. ¶ The testing period runs for a number of packets or a limited time, as determined by the endpoint.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "23.2-p7129-s18", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "The goal is not to limit the duration of the testing period but to ensure that enough marked packets are sent for received ECN counts to provide a clear indication of how the path treats marked packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7130-s19", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "Section 13.4.2 suggests limiting this to ten packets or three times the PTO. ¶ After the testing period ends, the ECN state for the path becomes \"unknown\".", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "23.2-p7131-s20", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "From the \"unknown\" state, successful validation of the ECN counts in an ACK frame (see Section 13.4.2.1 ) causes the ECN state for the path to become \"capable\", unless no marked packet has been acknowledged. ¶ If validation of ECN counts fails at any time, the ECN state for the affected path becomes \"failed\".", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "23.2-p7132-s21", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "An endpoint can also mark the ECN state for a path as \"failed\" if marked packets are all declared lost or if they are all ECN-CE marked. ¶ Following this algorithm ensures that ECN is rarely disabled for paths that properly support ECN.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "23.2-p7133-s22", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "Any path that incorrectly modifies markings will cause ECN to be disabled.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7134-s23", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1663", "text": "For those rare cases where marked packets are discarded by the path, the short duration of the testing period limits the number of losses incurred. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7135-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1664", "text": "The pseudocode in this section describes sample algorithms.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7136-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1664", "text": "These algorithms are intended to be correct and clear, rather than being optimally performant. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7137-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1665", "text": "The pseudocode segments in this section are licensed as Code Components; see the Copyright Notice. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7138-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1666", "text": "A.1.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7139-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1666", "text": "Sample Variable-Length Integer Decoding The pseudocode in Figure 45 shows how a variable-length integer can be read from a stream of bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7140-s3", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1666", "text": "The function ReadVarint takes a single argument -- a sequence of bytes, which can be read in network byte order. ¶ ReadVarint(data): // The length of variable-length integers is encoded in the // first two bits of the first byte. v = data.next_byte() prefix = v >> 6 length = 1 << prefix // Once the length is known, remove these bits and read any // remaining bytes. v = v & 0x3f repeat length-1 times: v = (v << 8) + data.next_byte() return v Figure 45 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7141-s4", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1666", "text": "Sample Variable-Length Integer Decoding Algorithm For example, the eight-byte sequence 0xc2197c5eff14e88c decodes to the decimal value 151,288,809,941,952,652; the four-byte sequence 0x9d7f3e7d decodes to 494,878,333; the two-byte sequence 0x7bbd decodes to 15,293; and the single byte 0x25 decodes to 37 (as does the two-byte sequence 0x4025). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7142-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1667", "text": "The pseudocode in Figure 45 shows how a variable-length integer can be read from a stream of bytes.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7143-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1667", "text": "The function ReadVarint takes a single argument -- a sequence of bytes, which can be read in network byte order. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7144-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1668", "text": "ReadVarint(data): // The length of variable-length integers is encoded in the // first two bits of the first byte. v = data.next_byte() prefix = v >> 6 length = 1 << prefix // Once the length is known, remove these bits and read any // remaining bytes. v = v & 0x3f repeat length-1 times: v = (v << 8) + data.next_byte() return v Figure 45 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7145-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1668", "text": "Sample Variable-Length Integer Decoding Algorithm", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7146-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1669", "text": "ReadVarint(data): // The length of variable-length integers is encoded in the // first two bits of the first byte. v = data.next_byte() prefix = v >> 6 length = 1 << prefix // Once the length is known, remove these bits and read any // remaining bytes. v = v & 0x3f repeat length-1 times: v = (v << 8) + data.next_byte() return v", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7147-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1670", "text": "ReadVarint(data): // The length of variable-length integers is encoded in the // first two bits of the first byte. v = data.next_byte() prefix = v >> 6 length = 1 << prefix // Once the length is known, remove these bits and read any // remaining bytes. v = v & 0x3f repeat length-1 times: v = (v << 8) + data.next_byte() return v", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7148-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1671", "text": "Figure 45 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7149-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1671", "text": "Sample Variable-Length Integer Decoding Algorithm", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7150-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1672", "text": "For example, the eight-byte sequence 0xc2197c5eff14e88c decodes to the decimal value 151,288,809,941,952,652; the four-byte sequence 0x9d7f3e7d decodes to 494,878,333; the two-byte sequence 0x7bbd decodes to 15,293; and the single byte 0x25 decodes to 37 (as does the two-byte sequence 0x4025). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7151-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1673", "text": "A.2.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7152-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1673", "text": "Sample Packet Number Encoding Algorithm The pseudocode in Figure 46 shows how an implementation can select an appropriate size for packet number encodings. ¶ The EncodePacketNumber function takes two arguments: ¶ full_pn is the full packet number of the packet being sent. ¶ largest_acked is the largest packet number that has been acknowledged by the peer in the current packet number space, if any. ¶ EncodePacketNumber(full_pn, largest_acked): // The number of bits must be at least one more // than the base-2 logarithm of the number of contiguous // unacknowledged packet numbers, including the new packet. if largest_acked is None: num_unacked = full_pn + 1 else: num_unacked = full_pn - largest_acked min_bits = log(num_unacked, 2) + 1 num_bytes = ceil(min_bits / 8) // Encode the integer value and truncate to // the num_bytes least significant bytes. return encode(full_pn, num_bytes) Figure 46 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7153-s3", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1673", "text": "Sample Packet Number Encoding Algorithm For example, if an endpoint has received an acknowledgment for packet 0xabe8b3 and is sending a packet with a number of 0xac5c02, there are 29,519 (0x734f) outstanding packet numbers.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7154-s4", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1673", "text": "In order to represent at least twice this range (59,038 packets, or 0xe69e), 16 bits are required. ¶ In the same state, sending a packet with a number of 0xace8fe uses the 24-bit encoding, because at least 18 bits are required to represent twice the range (131,222 packets, or 0x020096). ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "23.2-p7155-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1674", "text": "The pseudocode in Figure 46 shows how an implementation can select an appropriate size for packet number encodings. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7156-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1675", "text": "The EncodePacketNumber function takes two arguments: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7157-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1676", "text": "full_pn is the full packet number of the packet being sent. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7158-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1677", "text": "largest_acked is the largest packet number that has been acknowledged by the peer in the current packet number space, if any. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["peer"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7159-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1678", "text": "EncodePacketNumber(full_pn, largest_acked): // The number of bits must be at least one more // than the base-2 logarithm of the number of contiguous // unacknowledged packet numbers, including the new packet. if largest_acked is None: num_unacked = full_pn + 1 else: num_unacked = full_pn - largest_acked min_bits = log(num_unacked, 2) + 1 num_bytes = ceil(min_bits / 8) // Encode the integer value and truncate to // the num_bytes least significant bytes. return encode(full_pn, num_bytes) Figure 46 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7160-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1678", "text": "Sample Packet Number Encoding Algorithm", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7161-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1679", "text": "EncodePacketNumber(full_pn, largest_acked): // The number of bits must be at least one more // than the base-2 logarithm of the number of contiguous // unacknowledged packet numbers, including the new packet. if largest_acked is None: num_unacked = full_pn + 1 else: num_unacked = full_pn - largest_acked min_bits = log(num_unacked, 2) + 1 num_bytes = ceil(min_bits / 8) // Encode the integer value and truncate to // the num_bytes least significant bytes. return encode(full_pn, num_bytes)", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7162-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1680", "text": "EncodePacketNumber(full_pn, largest_acked): // The number of bits must be at least one more // than the base-2 logarithm of the number of contiguous // unacknowledged packet numbers, including the new packet. if largest_acked is None: num_unacked = full_pn + 1 else: num_unacked = full_pn - largest_acked min_bits = log(num_unacked, 2) + 1 num_bytes = ceil(min_bits / 8) // Encode the integer value and truncate to // the num_bytes least significant bytes. return encode(full_pn, num_bytes)", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7163-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1681", "text": "Figure 46 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7164-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1681", "text": "Sample Packet Number Encoding Algorithm", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7165-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1682", "text": "For example, if an endpoint has received an acknowledgment for packet 0xabe8b3 and is sending a packet with a number of 0xac5c02, there are 29,519 (0x734f) outstanding packet numbers.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7166-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1682", "text": "In order to represent at least twice this range (59,038 packets, or 0xe69e), 16 bits are required. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7167-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1683", "text": "In the same state, sending a packet with a number of 0xace8fe uses the 24-bit encoding, because at least 18 bits are required to represent twice the range (131,222 packets, or 0x020096). ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "23.2-p7168-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1684", "text": "A.3.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7169-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1684", "text": "Sample Packet Number Decoding Algorithm The pseudocode in Figure 47 includes an example algorithm for decoding packet numbers after header protection has been removed. ¶ The DecodePacketNumber function takes three arguments: ¶ largest_pn is the largest packet number that has been successfully processed in the current packet number space. ¶ truncated_pn is the value of the Packet Number field. ¶ pn_nbits is the number of bits in the Packet Number field (8, 16, 24, or 32). ¶ DecodePacketNumber(largest_pn, truncated_pn, pn_nbits): expected_pn = largest_pn + 1 pn_win = 1 << pn_nbits pn_hwin = pn_win / 2 pn_mask = pn_win - 1 // The incoming packet number should be greater than // expected_pn - pn_hwin and less than or equal to // expected_pn + pn_hwin // // This means we cannot just strip the trailing bits from // expected_pn and add the truncated_pn because that might // yield a value outside the window. // // The following code calculates a candidate value and // makes sure it's within the packet number window. // Note the extra checks to prevent overflow and underflow. candidate_pn = (expected_pn & ~pn_mask) | truncated_pn if candidate_pn <= expected_pn - pn_hwin and candidate_pn < (1 << 62) - pn_win: return candidate_pn + pn_win if candidate_pn > expected_pn + pn_hwin and candidate_pn >= pn_win: return candidate_pn - pn_win return candidate_pn Figure 47 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7170-s3", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1684", "text": "Sample Packet Number Decoding Algorithm For example, if the highest successfully authenticated packet had a packet number of 0xa82f30ea, then a packet containing a 16-bit value of 0x9b32 will be decoded as 0xa82f9b32. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7171-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1685", "text": "The pseudocode in Figure 47 includes an example algorithm for decoding packet numbers after header protection has been removed. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7172-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1686", "text": "The DecodePacketNumber function takes three arguments: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7173-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1687", "text": "largest_pn is the largest packet number that has been successfully processed in the current packet number space. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7174-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1688", "text": "truncated_pn is the value of the Packet Number field. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7175-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1689", "text": "pn_nbits is the number of bits in the Packet Number field (8, 16, 24, or 32). ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7176-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1690", "text": "DecodePacketNumber(largest_pn, truncated_pn, pn_nbits): expected_pn = largest_pn + 1 pn_win = 1 << pn_nbits pn_hwin = pn_win / 2 pn_mask = pn_win - 1 // The incoming packet number should be greater than // expected_pn - pn_hwin and less than or equal to // expected_pn + pn_hwin // // This means we cannot just strip the trailing bits from // expected_pn and add the truncated_pn because that might // yield a value outside the window. // // The following code calculates a candidate value and // makes sure it's within the packet number window. // Note the extra checks to prevent overflow and underflow. candidate_pn = (expected_pn & ~pn_mask) | truncated_pn if candidate_pn <= expected_pn - pn_hwin and candidate_pn < (1 << 62) - pn_win: return candidate_pn + pn_win if candidate_pn > expected_pn + pn_hwin and candidate_pn >= pn_win: return candidate_pn - pn_win return candidate_pn Figure 47 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7177-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1690", "text": "Sample Packet Number Decoding Algorithm", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7178-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1691", "text": "DecodePacketNumber(largest_pn, truncated_pn, pn_nbits): expected_pn = largest_pn + 1 pn_win = 1 << pn_nbits pn_hwin = pn_win / 2 pn_mask = pn_win - 1 // The incoming packet number should be greater than // expected_pn - pn_hwin and less than or equal to // expected_pn + pn_hwin // // This means we cannot just strip the trailing bits from // expected_pn and add the truncated_pn because that might // yield a value outside the window. // // The following code calculates a candidate value and // makes sure it's within the packet number window. // Note the extra checks to prevent overflow and underflow. candidate_pn = (expected_pn & ~pn_mask) | truncated_pn if candidate_pn <= expected_pn - pn_hwin and candidate_pn < (1 << 62) - pn_win: return candidate_pn + pn_win if candidate_pn > expected_pn + pn_hwin and candidate_pn >= pn_win: return candidate_pn - pn_win return candidate_pn", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7179-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1692", "text": "DecodePacketNumber(largest_pn, truncated_pn, pn_nbits): expected_pn = largest_pn + 1 pn_win = 1 << pn_nbits pn_hwin = pn_win / 2 pn_mask = pn_win - 1 // The incoming packet number should be greater than // expected_pn - pn_hwin and less than or equal to // expected_pn + pn_hwin // // This means we cannot just strip the trailing bits from // expected_pn and add the truncated_pn because that might // yield a value outside the window. // // The following code calculates a candidate value and // makes sure it's within the packet number window. // Note the extra checks to prevent overflow and underflow. candidate_pn = (expected_pn & ~pn_mask) | truncated_pn if candidate_pn <= expected_pn - pn_hwin and candidate_pn < (1 << 62) - pn_win: return candidate_pn + pn_win if candidate_pn > expected_pn + pn_hwin and candidate_pn >= pn_win: return candidate_pn - pn_win return candidate_pn", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7180-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1693", "text": "Figure 47 :", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7181-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1693", "text": "Sample Packet Number Decoding Algorithm", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7182-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1694", "text": "For example, if the highest successfully authenticated packet had a packet number of 0xa82f30ea, then a packet containing a 16-bit value of 0x9b32 will be decoded as 0xa82f9b32. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7183-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1695", "text": "A.4.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7184-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1695", "text": "Sample ECN Validation Algorithm Each time an endpoint commences sending on a new network path, it determines whether the path supports ECN; see Section 13.4 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7185-s3", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1695", "text": "If the path supports ECN, the goal is to use ECN.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7186-s4", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1695", "text": "Endpoints might also periodically reassess a path that was determined to not support ECN. ¶ This section describes one method for testing new paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7187-s5", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1695", "text": "This algorithm is intended to show how a path might be tested for ECN support.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7188-s6", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1695", "text": "Endpoints can implement different methods. ¶ The path is assigned an ECN state that is one of \"testing\", \"unknown\", \"failed\", or \"capable\".", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "23.2-p7189-s7", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1695", "text": "On paths with a \"testing\" or \"capable\" state, the endpoint sends packets with an ECT marking -- ECT(0) by default; otherwise, the endpoint sends unmarked packets. ¶ To start testing a path, the ECN state is set to \"testing\", and existing ECN counts are remembered as a baseline. ¶ The testing period runs for a number of packets or a limited time, as determined by the endpoint.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "23.2-p7190-s8", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1695", "text": "The goal is not to limit the duration of the testing period but to ensure that enough marked packets are sent for received ECN counts to provide a clear indication of how the path treats marked packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7191-s9", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1695", "text": "Section 13.4.2 suggests limiting this to ten packets or three times the PTO. ¶ After the testing period ends, the ECN state for the path becomes \"unknown\".", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "23.2-p7192-s10", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1695", "text": "From the \"unknown\" state, successful validation of the ECN counts in an ACK frame (see Section 13.4.2.1 ) causes the ECN state for the path to become \"capable\", unless no marked packet has been acknowledged. ¶ If validation of ECN counts fails at any time, the ECN state for the affected path becomes \"failed\".", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "23.2-p7193-s11", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1695", "text": "An endpoint can also mark the ECN state for a path as \"failed\" if marked packets are all declared lost or if they are all ECN-CE marked. ¶ Following this algorithm ensures that ECN is rarely disabled for paths that properly support ECN.", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "23.2-p7194-s12", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1695", "text": "Any path that incorrectly modifies markings will cause ECN to be disabled.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7195-s13", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1695", "text": "For those rare cases where marked packets are discarded by the path, the short duration of the testing period limits the number of losses incurred. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7196-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1696", "text": "Each time an endpoint commences sending on a new network path, it determines whether the path supports ECN; see Section 13.4 .", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7197-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1696", "text": "If the path supports ECN, the goal is to use ECN.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7198-s3", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1696", "text": "Endpoints might also periodically reassess a path that was determined to not support ECN. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7199-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1697", "text": "This section describes one method for testing new paths.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7200-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1697", "text": "This algorithm is intended to show how a path might be tested for ECN support.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7201-s3", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1697", "text": "Endpoints can implement different methods. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7202-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1698", "text": "The path is assigned an ECN state that is one of \"testing\", \"unknown\", \"failed\", or \"capable\".", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "23.2-p7203-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1698", "text": "On paths with a \"testing\" or \"capable\" state, the endpoint sends packets with an ECT marking -- ECT(0) by default; otherwise, the endpoint sends unmarked packets. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "23.2-p7204-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1699", "text": "To start testing a path, the ECN state is set to \"testing\", and existing ECN counts are remembered as a baseline. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "23.2-p7205-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1700", "text": "The testing period runs for a number of packets or a limited time, as determined by the endpoint.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7206-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1700", "text": "The goal is not to limit the duration of the testing period but to ensure that enough marked packets are sent for received ECN counts to provide a clear indication of how the path treats marked packets.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7207-s3", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1700", "text": "Section 13.4.2 suggests limiting this to ten packets or three times the PTO. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7208-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1701", "text": "After the testing period ends, the ECN state for the path becomes \"unknown\".", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 1}
{"sent_id": "23.2-p7209-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1701", "text": "From the \"unknown\" state, successful validation of the ECN counts in an ACK frame (see Section 13.4.2.1 ) causes the ECN state for the path to become \"capable\", unless no marked packet has been acknowledged. ¶", "facet": "frames", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "23.2-p7210-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1702", "text": "If validation of ECN counts fails at any time, the ECN state for the affected path becomes \"failed\".", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "23.2-p7211-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1702", "text": "An endpoint can also mark the ECN state for a path as \"failed\" if marked packets are all declared lost or if they are all ECN-CE marked. ¶", "facet": "state_machine", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": ["endpoint"], "errors": []}, "event_cue": true, "score": 2}
{"sent_id": "23.2-p7212-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1703", "text": "Following this algorithm ensures that ECN is rarely disabled for paths that properly support ECN.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7213-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1703", "text": "Any path that incorrectly modifies markings will cause ECN to be disabled.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7214-s3", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1703", "text": "For those rare cases where marked packets are discarded by the path, the short duration of the testing period limits the number of losses incurred. ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7215-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1704", "text": "Contributors The original design and rationale behind this protocol draw significantly from work by Jim Roskind [ EARLY-DESIGN ] . ¶ The IETF QUIC Working Group received an enormous amount of support from many people.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7216-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1704", "text": "The following people provided substantive contributions to this document: ¶ Alessandro Ghedini ¶ Alyssa Wilk ¶ Antoine Delignat-Lavaud ¶ Brian Trammell ¶ Christian Huitema ¶ Colin Perkins ¶ David Schinazi ¶ Dmitri Tikhonov ¶ Eric Kinnear ¶ Eric Rescorla ¶ Gorry Fairhurst ¶ Ian Swett ¶ Igor Lubashev ¶ 奥 一穂 ( Kazuho Oku ) ¶ Lars Eggert ¶ Lucas Pardue ¶ Magnus Westerlund ¶ Marten Seemann ¶ Martin Duke ¶ Mike Bishop ¶ Mikkel Fahnøe Jørgensen ¶ Mirja Kühlewind ¶ Nick Banks ¶ Nick Harper ¶ Patrick McManus ¶ Roberto Peon ¶ Ryan Hamilton ¶ Subodh Iyengar ¶ Tatsuhiro Tsujikawa ¶ Ted Hardie ¶ Tom Jones ¶ Victor Vasiliev ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7217-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1705", "text": "The original design and rationale behind this protocol draw significantly from work by Jim Roskind [ EARLY-DESIGN ] . ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7218-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1706", "text": "The IETF QUIC Working Group received an enormous amount of support from many people.", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": true, "score": 1}
{"sent_id": "23.2-p7219-s2", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1706", "text": "The following people provided substantive contributions to this document: ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7220-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1707", "text": "Alessandro Ghedini ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7221-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1708", "text": "Alessandro Ghedini ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7222-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1709", "text": "Alyssa Wilk ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7223-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1710", "text": "Alyssa Wilk ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7224-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1711", "text": "Antoine Delignat-Lavaud ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7225-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1712", "text": "Antoine Delignat-Lavaud ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7226-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1713", "text": "Brian Trammell ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7227-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1714", "text": "Brian Trammell ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7228-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1715", "text": "Christian Huitema ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7229-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1716", "text": "Christian Huitema ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7230-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1717", "text": "Colin Perkins ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7231-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1718", "text": "Colin Perkins ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7232-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1719", "text": "David Schinazi ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7233-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1720", "text": "David Schinazi ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7234-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1721", "text": "Dmitri Tikhonov ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7235-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1722", "text": "Dmitri Tikhonov ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7236-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1723", "text": "Eric Kinnear ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7237-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1724", "text": "Eric Kinnear ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7238-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1725", "text": "Eric Rescorla ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7239-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1726", "text": "Eric Rescorla ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7240-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1727", "text": "Gorry Fairhurst ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7241-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1728", "text": "Gorry Fairhurst ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7242-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1729", "text": "Ian Swett ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7243-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1730", "text": "Ian Swett ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7244-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1731", "text": "Igor Lubashev ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7245-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1732", "text": "Igor Lubashev ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7246-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1733", "text": "奥 一穂 ( Kazuho Oku ) ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7247-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1734", "text": "奥 一穂 ( Kazuho Oku ) ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7248-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1735", "text": "Lars Eggert ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7249-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1736", "text": "Lars Eggert ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7250-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1737", "text": "Lucas Pardue ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7251-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1738", "text": "Lucas Pardue ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7252-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1739", "text": "Magnus Westerlund ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7253-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1740", "text": "Magnus Westerlund ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7254-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1741", "text": "Marten Seemann ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7255-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1742", "text": "Marten Seemann ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7256-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1743", "text": "Martin Duke ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7257-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1744", "text": "Martin Duke ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7258-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1745", "text": "Mike Bishop ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7259-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1746", "text": "Mike Bishop ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7260-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1747", "text": "Mikkel Fahnøe Jørgensen ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7261-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1748", "text": "Mikkel Fahnøe Jørgensen ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7262-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1749", "text": "Mirja Kühlewind ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7263-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1750", "text": "Mirja Kühlewind ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7264-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1751", "text": "Nick Banks ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7265-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1752", "text": "Nick Banks ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7266-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1753", "text": "Nick Harper ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7267-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1754", "text": "Nick Harper ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7268-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1755", "text": "Patrick McManus ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7269-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1756", "text": "Patrick McManus ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7270-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1757", "text": "Roberto Peon ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7271-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1758", "text": "Roberto Peon ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7272-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1759", "text": "Ryan Hamilton ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7273-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1760", "text": "Ryan Hamilton ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7274-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1761", "text": "Subodh Iyengar ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7275-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1762", "text": "Subodh Iyengar ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7276-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1763", "text": "Tatsuhiro Tsujikawa ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7277-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1764", "text": "Tatsuhiro Tsujikawa ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7278-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1765", "text": "Ted Hardie ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7279-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1766", "text": "Ted Hardie ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7280-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1767", "text": "Tom Jones ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7281-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1768", "text": "Tom Jones ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7282-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1769", "text": "Victor Vasiliev ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7283-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1770", "text": "Victor Vasiliev ¶", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7284-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1771", "text": "Authors' Addresses Jana Iyengar ( editor ) Fastly Email: jri.ietf@gmail.com Martin Thomson ( editor ) Mozilla Email: mt@lowentropy.net", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7285-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1772", "text": "Jana Iyengar ( editor )", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7286-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1773", "text": "Fastly", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7287-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1774", "text": "Email: jri.ietf@gmail.com", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7288-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1775", "text": "Martin Thomson ( editor )", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7289-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1776", "text": "Mozilla", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
{"sent_id": "23.2-p7290-s1", "section": "23.2", "anchor": "#name-informative-references", "para_id": "23.2-p1777", "text": "Email: mt@lowentropy.net", "facet": "other", "normative": false, "modalities": [], "entities": {"frames": [], "states": [], "roles": [], "errors": []}, "event_cue": false, "score": 0}
